ARM GAS  /tmp/ccX8xcj0.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32g0xx_ll_usart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.LL_USART_DeInit,"ax",%progbits
  16              		.align	1
  17              		.global	LL_USART_DeInit
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	LL_USART_DeInit:
  25              	.LVL0:
  26              	.LFB578:
  27              		.file 1 "Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c"
   1:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @file    stm32g0xx_ll_usart.c
   4:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @brief   USART LL module driver.
   6:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   ******************************************************************************
   7:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @attention
   8:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   *
   9:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * <h2><center>&copy; Copyright (c) 2018 STMicroelectronics.
  10:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * All rights reserved.</center></h2>
  11:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   *
  12:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   *
  17:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   ******************************************************************************
  18:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   */
  19:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #if defined(USE_FULL_LL_DRIVER)
  20:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
  21:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** /* Includes ------------------------------------------------------------------*/
  22:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #include "stm32g0xx_ll_usart.h"
  23:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #include "stm32g0xx_ll_rcc.h"
  24:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #include "stm32g0xx_ll_bus.h"
  25:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #ifdef USE_FULL_ASSERT
  26:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #include "stm32_assert.h"
  27:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #else
  28:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #define assert_param(expr) ((void)0U)
  29:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #endif /* USE_FULL_ASSERT */
  30:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
  31:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** /** @addtogroup STM32G0xx_LL_Driver
ARM GAS  /tmp/ccX8xcj0.s 			page 2


  32:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @{
  33:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   */
  34:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
  35:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #if defined (USART1) || defined (USART2) || defined (USART3) || defined (USART4)
  36:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
  37:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** /** @addtogroup USART_LL
  38:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @{
  39:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   */
  40:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
  41:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** /* Private constants ---------------------------------------------------------*/
  44:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** /* Private macros ------------------------------------------------------------*/
  45:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** /** @addtogroup USART_LL_Private_Macros
  46:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @{
  47:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   */
  48:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
  49:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #define IS_LL_USART_PRESCALER(__VALUE__)  (((__VALUE__) == LL_USART_PRESCALER_DIV1) \
  50:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                            || ((__VALUE__) == LL_USART_PRESCALER_DIV2) \
  51:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                            || ((__VALUE__) == LL_USART_PRESCALER_DIV4) \
  52:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                            || ((__VALUE__) == LL_USART_PRESCALER_DIV6) \
  53:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                            || ((__VALUE__) == LL_USART_PRESCALER_DIV8) \
  54:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                            || ((__VALUE__) == LL_USART_PRESCALER_DIV10) \
  55:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                            || ((__VALUE__) == LL_USART_PRESCALER_DIV12) \
  56:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                            || ((__VALUE__) == LL_USART_PRESCALER_DIV16) \
  57:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                            || ((__VALUE__) == LL_USART_PRESCALER_DIV32) \
  58:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                            || ((__VALUE__) == LL_USART_PRESCALER_DIV64) \
  59:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                            || ((__VALUE__) == LL_USART_PRESCALER_DIV128) \
  60:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                            || ((__VALUE__) == LL_USART_PRESCALER_DIV256))
  61:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
  62:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** /* __BAUDRATE__ The maximum Baud Rate is derived from the maximum clock available
  63:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****  *              divided by the smallest oversampling used on the USART (i.e. 8)    */
  64:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #define IS_LL_USART_BAUDRATE(__BAUDRATE__) ((__BAUDRATE__) <= 8000000U)
  65:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
  66:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** /* __VALUE__ In case of oversampling by 16 and 8, BRR content must be greater than or equal to 16d.
  67:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #define IS_LL_USART_BRR_MIN(__VALUE__) ((__VALUE__) >= 16U)
  68:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
  69:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** /* __VALUE__ BRR content must be lower than or equal to 0xFFFF. */
  70:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #define IS_LL_USART_BRR_MAX(__VALUE__) ((__VALUE__) <= 0x0000FFFFU)
  71:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
  72:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #define IS_LL_USART_DIRECTION(__VALUE__) (((__VALUE__) == LL_USART_DIRECTION_NONE) \
  73:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                           || ((__VALUE__) == LL_USART_DIRECTION_RX) \
  74:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                           || ((__VALUE__) == LL_USART_DIRECTION_TX) \
  75:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                           || ((__VALUE__) == LL_USART_DIRECTION_TX_RX))
  76:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
  77:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #define IS_LL_USART_PARITY(__VALUE__) (((__VALUE__) == LL_USART_PARITY_NONE) \
  78:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                        || ((__VALUE__) == LL_USART_PARITY_EVEN) \
  79:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                        || ((__VALUE__) == LL_USART_PARITY_ODD))
  80:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
  81:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #define IS_LL_USART_DATAWIDTH(__VALUE__) (((__VALUE__) == LL_USART_DATAWIDTH_7B) \
  82:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                           || ((__VALUE__) == LL_USART_DATAWIDTH_8B) \
  83:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                           || ((__VALUE__) == LL_USART_DATAWIDTH_9B))
  84:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
  85:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #define IS_LL_USART_OVERSAMPLING(__VALUE__) (((__VALUE__) == LL_USART_OVERSAMPLING_16) \
  86:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                              || ((__VALUE__) == LL_USART_OVERSAMPLING_8))
  87:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
  88:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #define IS_LL_USART_LASTBITCLKOUTPUT(__VALUE__) (((__VALUE__) == LL_USART_LASTCLKPULSE_NO_OUTPUT) \
ARM GAS  /tmp/ccX8xcj0.s 			page 3


  89:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                                  || ((__VALUE__) == LL_USART_LASTCLKPULSE_OUTPUT))
  90:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
  91:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #define IS_LL_USART_CLOCKPHASE(__VALUE__) (((__VALUE__) == LL_USART_PHASE_1EDGE) \
  92:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                            || ((__VALUE__) == LL_USART_PHASE_2EDGE))
  93:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
  94:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #define IS_LL_USART_CLOCKPOLARITY(__VALUE__) (((__VALUE__) == LL_USART_POLARITY_LOW) \
  95:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                               || ((__VALUE__) == LL_USART_POLARITY_HIGH))
  96:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
  97:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #define IS_LL_USART_CLOCKOUTPUT(__VALUE__) (((__VALUE__) == LL_USART_CLOCK_DISABLE) \
  98:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                             || ((__VALUE__) == LL_USART_CLOCK_ENABLE))
  99:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #define IS_LL_USART_STOPBITS(__VALUE__) (((__VALUE__) == LL_USART_STOPBITS_0_5) \
 101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                          || ((__VALUE__) == LL_USART_STOPBITS_1) \
 102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                          || ((__VALUE__) == LL_USART_STOPBITS_1_5) \
 103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                          || ((__VALUE__) == LL_USART_STOPBITS_2))
 104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #define IS_LL_USART_HWCONTROL(__VALUE__) (((__VALUE__) == LL_USART_HWCONTROL_NONE) \
 106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                           || ((__VALUE__) == LL_USART_HWCONTROL_RTS) \
 107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                           || ((__VALUE__) == LL_USART_HWCONTROL_CTS) \
 108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                                           || ((__VALUE__) == LL_USART_HWCONTROL_RTS_CTS))
 109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** /**
 111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @}
 112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   */
 113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** /* Private function prototypes -----------------------------------------------*/
 115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** /* Exported functions --------------------------------------------------------*/
 117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** /** @addtogroup USART_LL_Exported_Functions
 118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @{
 119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   */
 120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** /** @addtogroup USART_LL_EF_Init
 122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @{
 123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   */
 124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** /**
 126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @brief  De-initialize USART registers (Registers restored to their default values).
 127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @param  USARTx USART Instance
 128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @retval An ErrorStatus enumeration value:
 129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   *          - SUCCESS: USART registers are de-initialized
 130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   *          - ERROR: USART registers are not de-initialized
 131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   */
 132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** ErrorStatus LL_USART_DeInit(USART_TypeDef *USARTx)
 133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** {
  28              		.loc 1 133 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   ErrorStatus status = SUCCESS;
  33              		.loc 1 134 3 view .LVU1
 135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   /* Check the parameters */
 137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   assert_param(IS_UART_INSTANCE(USARTx));
  34              		.loc 1 137 3 view .LVU2
 138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
ARM GAS  /tmp/ccX8xcj0.s 			page 4


 139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   if (USARTx == USART1)
  35              		.loc 1 139 3 view .LVU3
  36              		.loc 1 139 6 is_stmt 0 view .LVU4
  37 0000 1B4A     		ldr	r2, .L9
 133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   ErrorStatus status = SUCCESS;
  38              		.loc 1 133 1 view .LVU5
  39 0002 0300     		movs	r3, r0
  40              		.loc 1 139 6 view .LVU6
  41 0004 9042     		cmp	r0, r2
  42 0006 0BD1     		bne	.L2
 140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   {
 141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     /* Force reset of USART clock */
 142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     LL_APB2_GRP1_ForceReset(LL_APB2_GRP1_PERIPH_USART1);
  43              		.loc 1 142 5 is_stmt 1 view .LVU7
  44              	.LBB28:
  45              	.LBI28:
  46              		.file 2 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h"
   1:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @file    stm32g0xx_ll_bus.h
   4:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
   7:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   @verbatim
   8:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****                       ##### RCC Limitations #####
   9:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   ==============================================================================
  10:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****     [..]
  11:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral
  12:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write
  13:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****       from/to registers.
  14:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  15:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  17:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****     [..]
  18:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****       Workarounds:
  19:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  21:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  22:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   @endverbatim
  23:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   ******************************************************************************
  24:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @attention
  25:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *
  26:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * <h2><center>&copy; Copyright (c) 2018 STMicroelectronics. 
  27:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * All rights reserved.</center></h2>
  28:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *
  29:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  30:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * the "License"; You may not use this file except in compliance with the 
  31:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * License. You may obtain a copy of the License at:
  32:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *                        opensource.org/licenses/BSD-3-Clause
  33:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *
  34:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   ******************************************************************************
  35:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
  36:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  37:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  38:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #ifndef STM32G0xx_LL_BUS_H
  39:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define STM32G0xx_LL_BUS_H
  40:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
ARM GAS  /tmp/ccX8xcj0.s 			page 5


  41:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #ifdef __cplusplus
  42:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** extern "C" {
  43:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
  44:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  45:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  46:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #include "stm32g0xx.h"
  47:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  48:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @addtogroup STM32G0xx_LL_Driver
  49:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
  50:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
  51:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  52:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(RCC)
  53:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  54:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  55:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
  56:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
  57:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  58:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  59:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  60:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  61:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  62:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  63:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  64:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  65:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  66:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  67:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  68:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
  69:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
  70:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  71:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  72:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
  73:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
  74:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
  75:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHBENR_DMA1EN
  76:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_FLASH          RCC_AHBENR_FLASHEN
  77:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM           RCC_AHBSMENR_SRAMSMEN
  78:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(CRC)
  79:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHBENR_CRCEN
  80:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
  81:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(AES)
  82:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRYP           RCC_AHBENR_AESEN
  83:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* AES */
  84:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(RNG)
  85:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_RNG            RCC_AHBENR_RNGEN
  86:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
  87:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
  88:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @}
  89:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
  90:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  91:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  92:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
  93:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
  94:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
  95:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
  96:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(TIM2)
  97:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APBENR1_TIM2EN
ARM GAS  /tmp/ccX8xcj0.s 			page 6


  98:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* TIM2 */
  99:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(TIM3)
 100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APBENR1_TIM3EN
 101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* TIM3 */
 102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(TIM6)
 103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APBENR1_TIM6EN
 104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* TIM6 */
 105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(TIM7)
 106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APBENR1_TIM7EN
 107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* TIM7 */
 108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_RTC            RCC_APBENR1_RTCAPBEN
 109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APBENR1_WWDGEN
 110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APBENR1_SPI2EN
 111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APBENR1_USART2EN
 112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(USART3)
 113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART3         RCC_APBENR1_USART3EN
 114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(USART4)
 116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART4         RCC_APBENR1_USART4EN
 117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* USART4 */
 118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(LPUART1)
 119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPUART1        RCC_APBENR1_LPUART1EN
 120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APBENR1_I2C1EN
 122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APBENR1_I2C2EN
 123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(CEC)
 124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CEC            RCC_APBENR1_CECEN
 125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* CEC */
 126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(UCPD1)
 127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UCPD1          RCC_APBENR1_UCPD1EN
 128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(UCPD2)
 130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UCPD2          RCC_APBENR1_UCPD2EN
 131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DBGMCU         RCC_APBENR1_DBGEN
 133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APBENR1_PWREN
 134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(DAC1)
 135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APBENR1_DAC1EN
 136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(LPTIM2)
 138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPTIM2         RCC_APBENR1_LPTIM2EN
 139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(LPTIM1)
 141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPTIM1         RCC_APBENR1_LPTIM1EN
 142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @}
 145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB2_GRP1_PERIPH  APB2 GRP1 PERIPH
 148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
 149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ALL            0xFFFFFFFFU
 151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SYSCFG         RCC_APBENR2_SYSCFGEN
 152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM1           RCC_APBENR2_TIM1EN
 153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI1           RCC_APBENR2_SPI1EN
 154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART1         RCC_APBENR2_USART1EN
ARM GAS  /tmp/ccX8xcj0.s 			page 7


 155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(TIM14)
 156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM14          RCC_APBENR2_TIM14EN
 157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* TIM14 */
 158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(TIM15)
 159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM15          RCC_APBENR2_TIM15EN
 160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(TIM16)
 162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM16          RCC_APBENR2_TIM16EN
 163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(TIM17)
 165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM17          RCC_APBENR2_TIM17EN
 166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* TIM17 */
 167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(ADC)
 168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC            RCC_APBENR2_ADCEN
 169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @}
 172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_IOP_GRP1_PERIPH  IOP GRP1 PERIPH
 175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
 176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_ALL             0xFFFFFFFFU
 178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOA           RCC_IOPENR_GPIOAEN
 179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOB           RCC_IOPENR_GPIOBEN
 180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOC           RCC_IOPENR_GPIOCEN
 181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOD           RCC_IOPENR_GPIODEN
 182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(GPIOE)
 183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOE           RCC_IOPENR_GPIOEEN
 184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* GPIOE */
 185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(GPIOF)
 186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOF           RCC_IOPENR_GPIOFEN
 187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* GPIOF */
 188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @}
 190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @}
 194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
 200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
 204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_EnableClock\n
 209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       FLASHEN       LL_AHB1_GRP1_EnableClock\n
 210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_EnableClock\n
 211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       AESEN         LL_AHB1_GRP1_EnableClock\n
ARM GAS  /tmp/ccX8xcj0.s 			page 8


 212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       RNGEN         LL_AHB1_GRP1_EnableClock
 213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG  (*)
 219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note   (*) RNG & CRYP Peripherals available only on STM32G081xx
 220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->AHBENR, Periphs);
 226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBENR, Periphs);
 228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   (void)tmpreg;
 229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_IsEnabledClock\n
 234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       FLASHEN       LL_AHB1_GRP1_IsEnabledClock\n
 235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_IsEnabledClock\n
 236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       AESEN         LL_AHB1_GRP1_IsEnabledClock\n
 237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       RNGEN         LL_AHB1_GRP1_IsEnabledClock
 238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG  (*)
 244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note   (*) RNG & CRYP Peripherals available only on STM32G081xx
 245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   return ((READ_BIT(RCC->AHBENR, Periphs) == Periphs) ? 1UL : 0UL);
 250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_DisableClock\n
 255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       FLASHEN       LL_AHB1_GRP1_DisableClock\n
 256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_DisableClock\n
 257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       AESEN         LL_AHB1_GRP1_DisableClock\n
 258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       RNGEN         LL_AHB1_GRP1_DisableClock
 259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG  (*)
 265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note   (*) RNG & CRYP Peripherals available only on STM32G081xx
 266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
ARM GAS  /tmp/ccX8xcj0.s 			page 9


 269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBENR, Periphs);
 271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll AHBRSTR      DMA1RST       LL_AHB1_GRP1_ForceReset\n
 276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBRSTR      FLASHRST      LL_AHB1_GRP1_ForceReset\n
 277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBRSTR      CRCRST        LL_AHB1_GRP1_ForceReset\n
 278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBRSTR      AESRST        LL_AHB1_GRP1_ForceReset\n
 279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBRSTR      RNGRST        LL_AHB1_GRP1_ForceReset
 280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** * @param  Periphs This parameter can be a combination of the following values:
 281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG  (*)
 287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note   (*) RNG & CRYP Peripherals available only on STM32G081xx
 288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->AHBRSTR, Periphs);
 293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll AHBRSTR      DMA1RST       LL_AHB1_GRP1_ReleaseReset\n
 298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBRSTR      FLASHRST      LL_AHB1_GRP1_ReleaseReset\n
 299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBRSTR      CRCRST        LL_AHB1_GRP1_ReleaseReset\n
 300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBRSTR      AESRST        LL_AHB1_GRP1_ReleaseReset\n
 301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBRSTR      RNGRST        LL_AHB1_GRP1_ReleaseReset
 302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG  (*)
 309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note   (*) RNG & CRYP Peripherals available only on STM32G081xx
 310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBRSTR, Periphs);
 315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Enable AHB1 peripheral clocks in Sleep and Stop modes
 319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll AHBSMENR     DMA1SMEN      LL_AHB1_GRP1_EnableClockStopSleep\n
 320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     FLASHSMEN     LL_AHB1_GRP1_EnableClockStopSleep\n
 321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     SRAMSMEN      LL_AHB1_GRP1_EnableClockStopSleep\n
 322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     CRCSMEN       LL_AHB1_GRP1_EnableClockStopSleep\n
 323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     AESSMEN       LL_AHB1_GRP1_EnableClockStopSleep\n
 324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     RNGSMEN       LL_AHB1_GRP1_EnableClockStopSleep
 325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
ARM GAS  /tmp/ccX8xcj0.s 			page 10


 326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG  (*)
 332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note   (*) RNG & CRYP Peripherals available only on STM32G081xx
 333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClockStopSleep(uint32_t Periphs)
 336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->AHBSMENR, Periphs);
 339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBSMENR, Periphs);
 341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   (void)tmpreg;
 342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Disable AHB1 peripheral clocks in Sleep and Stop modes
 346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll AHBSMENR     DMA1SMEN      LL_AHB1_GRP1_DisableClockStopSleep\n
 347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     FLASHSMEN     LL_AHB1_GRP1_DisableClockStopSleep\n
 348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     SRAMSMEN      LL_AHB1_GRP1_DisableClockStopSleep\n
 349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     CRCSMEN       LL_AHB1_GRP1_DisableClockStopSleep\n
 350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     AESSMEN       LL_AHB1_GRP1_DisableClockStopSleep\n
 351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     RNGSMEN       LL_AHB1_GRP1_DisableClockStopSleep
 352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG  (*)
 359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note   (*) RNG & CRYP Peripherals available only on STM32G081xx
 360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClockStopSleep(uint32_t Periphs)
 363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBSMENR, Periphs);
 365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @}
 369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1 APB1
 372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
 373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
 377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBENR1      TIM2EN        LL_APB1_GRP1_EnableClock\n
 378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM3EN        LL_APB1_GRP1_EnableClock\n
 379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM6EN        LL_APB1_GRP1_EnableClock\n
 380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM7EN        LL_APB1_GRP1_EnableClock\n
 381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      RTCAPBEN      LL_APB1_GRP1_EnableClock\n
 382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      WWDGEN        LL_APB1_GRP1_EnableClock\n
ARM GAS  /tmp/ccX8xcj0.s 			page 11


 383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      SPI2EN        LL_APB1_GRP1_EnableClock\n
 384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART2EN      LL_APB1_GRP1_EnableClock\n
 385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART3EN      LL_APB1_GRP1_EnableClock\n
 386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART4EN      LL_APB1_GRP1_EnableClock\n
 387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPUART1EN     LL_APB1_GRP1_EnableClock\n
 388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      I2C1EN        LL_APB1_GRP1_EnableClock\n
 389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      I2C2EN        LL_APB1_GRP1_EnableClock\n
 390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      CECEN         LL_APB1_GRP1_EnableClock\n
 391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      UCPD1EN       LL_APB1_GRP1_EnableClock\n
 392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      UCPD2EN       LL_APB1_GRP1_EnableClock\n
 393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      DBGEN         LL_APB1_GRP1_EnableClock\n
 394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      PWREN         LL_APB1_GRP1_EnableClock\n
 395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      DAC1EN        LL_APB1_GRP1_EnableClock\n
 396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPTIM2EN      LL_APB1_GRP1_EnableClock\n
 397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPTIM1EN      LL_APB1_GRP1_EnableClock
 398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2    (1)
 400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6    (1)
 402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7    (1)
 403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTC
 404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3  (1)
 408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4  (1)
 409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1 (1)
 410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC     (1)
 413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD1   (1)
 414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD2   (1)
 415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DBGMCU
 416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1    (1)
 418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM2  (1)
 419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1  (1)
 420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note Peripheral marked with (1) are not available all devices
 421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
 424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->APBENR1, Periphs);
 427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APBENR1, Periphs);
 429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   (void)tmpreg;
 430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not
 434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBENR1      TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
 435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM3EN        LL_APB1_GRP1_IsEnabledClock\n
 436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM6EN        LL_APB1_GRP1_IsEnabledClock\n
 437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM7EN        LL_APB1_GRP1_IsEnabledClock\n
 438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      RTCAPBEN      LL_APB1_GRP1_IsEnabledClock\n
 439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      WWDGEN        LL_APB1_GRP1_IsEnabledClock\n
ARM GAS  /tmp/ccX8xcj0.s 			page 12


 440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
 441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART2EN      LL_APB1_GRP1_IsEnabledClock\n
 442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART3EN      LL_APB1_GRP1_IsEnabledClock\n
 443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART4EN      LL_APB1_GRP1_IsEnabledClock\n
 444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPUART1EN     LL_APB1_GRP1_IsEnabledClock\n
 445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
 446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
 447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      CECEN         LL_APB1_GRP1_IsEnabledClock\n
 448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      UCPD1EN       LL_APB1_GRP1_IsEnabledClock\n
 449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      UCPD2EN       LL_APB1_GRP1_IsEnabledClock\n
 450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      DBGEN         LL_APB1_GRP1_IsEnabledClock\n
 451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      PWREN         LL_APB1_GRP1_IsEnabledClock\n
 452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      DAC1EN        LL_APB1_GRP1_IsEnabledClock\n
 453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPTIM2EN      LL_APB1_GRP1_IsEnabledClock\n
 454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPTIM1EN      LL_APB1_GRP1_IsEnabledClock
 455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2    (1)
 457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6    (1)
 459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7    (1)
 460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTC
 461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3  (1)
 465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4  (1)
 466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1 (1)
 467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC     (1)
 470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD1   (1)
 471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD2   (1)
 472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DBGMCU
 473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1    (1)
 475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM2  (1)
 476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1  (1)
 477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note Peripheral marked with (1) are not available all devices
 478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
 481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   return ((READ_BIT(RCC->APBENR1, Periphs) == (Periphs)) ? 1UL : 0UL);
 483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock.
 487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBENR1      TIM2EN        LL_APB1_GRP1_DisableClock\n
 488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM3EN        LL_APB1_GRP1_DisableClock\n
 489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM6EN        LL_APB1_GRP1_DisableClock\n
 490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM7EN        LL_APB1_GRP1_DisableClock\n
 491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      RTCAPBEN      LL_APB1_GRP1_DisableClock\n
 492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      WWDGEN        LL_APB1_GRP1_DisableClock\n
 493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      SPI2EN        LL_APB1_GRP1_DisableClock\n
 494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART2EN      LL_APB1_GRP1_DisableClock\n
 495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART3EN      LL_APB1_GRP1_DisableClock\n
 496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART4EN      LL_APB1_GRP1_DisableClock\n
ARM GAS  /tmp/ccX8xcj0.s 			page 13


 497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPUART1EN     LL_APB1_GRP1_DisableClock\n
 498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      I2C1EN        LL_APB1_GRP1_DisableClock\n
 499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      I2C2EN        LL_APB1_GRP1_DisableClock\n
 500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      CECEN         LL_APB1_GRP1_DisableClock\n
 501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      UCPD1EN       LL_APB1_GRP1_DisableClock\n
 502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      UCPD2EN       LL_APB1_GRP1_DisableClock\n
 503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      DBGEN         LL_APB1_GRP1_DisableClock\n
 504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      PWREN         LL_APB1_GRP1_DisableClock\n
 505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      DAC1EN        LL_APB1_GRP1_DisableClock\n
 506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPTIM2EN      LL_APB1_GRP1_DisableClock\n
 507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPTIM1EN      LL_APB1_GRP1_DisableClock
 508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2    (1)
 510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6    (1)
 512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7    (1)
 513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTC
 514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3  (1)
 518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4  (1)
 519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1 (1)
 520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC     (1)
 523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD1   (1)
 524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD2   (1)
 525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DBGMCU
 526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1    (1)
 528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM2  (1)
 529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1  (1)
 530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note Peripheral marked with (1) are not available all devices
 531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
 534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   CLEAR_BIT(RCC->APBENR1, Periphs);
 536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset.
 540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBRSTR1     TIM2RST       LL_APB1_GRP1_ForceReset\n
 541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     TIM3RST       LL_APB1_GRP1_ForceReset\n
 542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     TIM6RST       LL_APB1_GRP1_ForceReset\n
 543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     TIM7RST       LL_APB1_GRP1_ForceReset\n
 544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     RTCRST        LL_APB1_GRP1_ForceReset\n
 545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     WWDGRST       LL_APB1_GRP1_ForceReset\n
 546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     SPI2RST       LL_APB1_GRP1_ForceReset\n
 547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     USART2RST     LL_APB1_GRP1_ForceReset\n
 548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     USART3RST     LL_APB1_GRP1_ForceReset\n
 549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     USART4RST     LL_APB1_GRP1_ForceReset\n
 550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     LPUART1RST    LL_APB1_GRP1_ForceReset\n
 551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     I2C1RST       LL_APB1_GRP1_ForceReset\n
 552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     I2C2RST       LL_APB1_GRP1_ForceReset\n
 553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     CECRST        LL_APB1_GRP1_ForceReset\n
ARM GAS  /tmp/ccX8xcj0.s 			page 14


 554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     UCPD1RST      LL_APB1_GRP1_ForceReset\n
 555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     UCPD2RST      LL_APB1_GRP1_ForceReset\n
 556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     DBGRST        LL_APB1_GRP1_ForceReset\n
 557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     PWRRST        LL_APB1_GRP1_ForceReset\n
 558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     DAC1RST       LL_APB1_GRP1_ForceReset\n
 559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     LPTIM2RST     LL_APB1_GRP1_ForceReset\n
 560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     LPTIM1RST     LL_APB1_GRP1_ForceReset
 561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2    (1)
 564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6    (1)
 566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7    (1)
 567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTC
 568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3  (1)
 572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4  (1)
 573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1 (1)
 574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC     (1)
 577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD1   (1)
 578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD2   (1)
 579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DBGMCU
 580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1    (1)
 582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM2  (1)
 583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1  (1)
 584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note Peripheral marked with (1) are not available all devices
 585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
 588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->APBRSTR1, Periphs);
 590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset.
 594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBRSTR1     TIM2RST       LL_APB1_GRP1_ReleaseReset\n
 595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     TIM3RST       LL_APB1_GRP1_ReleaseReset\n
 596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     TIM6RST       LL_APB1_GRP1_ReleaseReset\n
 597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     TIM7RST       LL_APB1_GRP1_ReleaseReset\n
 598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     RTCRST        LL_APB1_GRP1_ReleaseReset\n
 599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     WWDGRST       LL_APB1_GRP1_ReleaseReset\n
 600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     SPI2RST       LL_APB1_GRP1_ReleaseReset\n
 601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     USART2RST     LL_APB1_GRP1_ReleaseReset\n
 602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     USART3RST     LL_APB1_GRP1_ReleaseReset\n
 603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     USART4RST     LL_APB1_GRP1_ReleaseReset\n
 604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     LPUART1RST    LL_APB1_GRP1_ReleaseReset\n
 605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     I2C1RST       LL_APB1_GRP1_ReleaseReset\n
 606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     I2C2RST       LL_APB1_GRP1_ReleaseReset\n
 607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     CECRST        LL_APB1_GRP1_ReleaseReset\n
 608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     UCPD1RST      LL_APB1_GRP1_ReleaseReset\n
 609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     UCPD2RST      LL_APB1_GRP1_ReleaseReset\n
 610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     DBGRST        LL_APB1_GRP1_ReleaseReset\n
ARM GAS  /tmp/ccX8xcj0.s 			page 15


 611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     PWRRST        LL_APB1_GRP1_ReleaseReset\n
 612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     DAC1RST       LL_APB1_GRP1_ReleaseReset\n
 613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     LPTIM2RST     LL_APB1_GRP1_ReleaseReset\n
 614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     LPTIM1RST     LL_APB1_GRP1_ReleaseReset
 615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2    (1)
 618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6    (1)
 620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7    (1)
 621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTC
 622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3  (1)
 626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4  (1)
 627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1 (1)
 628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC     (1)
 631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD1   (1)
 632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD2   (1)
 633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DBGMCU
 634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1    (1)
 636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM2  (1)
 637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1  (1)
 638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note Peripheral marked with (1) are not available all devices
 639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
 642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   CLEAR_BIT(RCC->APBRSTR1, Periphs);
 644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Enable APB1 peripheral clocks in Sleep and Stop modes
 648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBSMENR1    TIM2SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    TIM3SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    TIM6SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    TIM7SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    RTCAPBSMEN    LL_APB1_GRP1_EnableClockStopSleep\n
 653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    WWDGSMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    SPI2SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    USART2SMEN    LL_APB1_GRP1_EnableClockStopSleep\n
 656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    USART3SMEN    LL_APB1_GRP1_EnableClockStopSleep\n
 657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    USART4SMEN    LL_APB1_GRP1_EnableClockStopSleep\n
 658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    LPUART1SMEN   LL_APB1_GRP1_EnableClockStopSleep\n
 659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    I2C1SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    I2C2SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    CECSMEN       LL_APB1_GRP1_EnableClockStopSleep\n
 662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    UCPD1SMEN     LL_APB1_GRP1_EnableClockStopSleep\n
 663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    UCPD2SMEN     LL_APB1_GRP1_EnableClockStopSleep\n
 664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    DBGSMEN       LL_APB1_GRP1_EnableClockStopSleep\n
 665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    PWRSMEN       LL_APB1_GRP1_EnableClockStopSleep\n
 666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    DAC1SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    LPTIM2SMEN    LL_APB1_GRP1_EnableClockStopSleep\n
ARM GAS  /tmp/ccX8xcj0.s 			page 16


 668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    LPTIM1SMEN    LL_APB1_GRP1_EnableClockStopSleep
 669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2    (1)
 671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6    (1)
 673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7    (1)
 674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTC
 675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3  (1)
 679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4  (1)
 680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1 (1)
 681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC     (1)
 684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD1   (1)
 685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD2   (1)
 686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DBGMCU
 687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1    (1)
 689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM2  (1)
 690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1  (1)
 691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note Peripheral marked with (1) are not available all devices
 692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClockStopSleep(uint32_t Periphs)
 695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->APBSMENR1, Periphs);
 698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APBSMENR1, Periphs);
 700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   (void)tmpreg;
 701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Disable APB1 peripheral clocks in Sleep and Stop modes
 705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBSMENR1    TIM2SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    TIM3SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    TIM6SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    TIM7SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    RTCAPBSMEN    LL_APB1_GRP1_DisableClockStopSleep\n
 710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    WWDGSMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    SPI2SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    USART2SMEN    LL_APB1_GRP1_DisableClockStopSleep\n
 713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    USART3SMEN    LL_APB1_GRP1_DisableClockStopSleep\n
 714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    USART4SMEN    LL_APB1_GRP1_DisableClockStopSleep\n
 715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    LPUART1SMEN   LL_APB1_GRP1_DisableClockStopSleep\n
 716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    I2C1SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    I2C2SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    CECSMEN       LL_APB1_GRP1_DisableClockStopSleep\n
 719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    UCPD1SMEN     LL_APB1_GRP1_DisableClockStopSleep\n
 720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    UCPD2SMEN     LL_APB1_GRP1_DisableClockStopSleep\n
 721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    DBGSMEN       LL_APB1_GRP1_DisableClockStopSleep\n
 722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    PWRSMEN       LL_APB1_GRP1_DisableClockStopSleep\n
 723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    DAC1SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    LPTIM2SMEN    LL_APB1_GRP1_DisableClockStopSleep\n
ARM GAS  /tmp/ccX8xcj0.s 			page 17


 725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    LPTIM1SMEN    LL_APB1_GRP1_DisableClockStopSleep
 726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2    (1)
 728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6    (1)
 730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7    (1)
 731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTC
 732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3  (1)
 736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4  (1)
 737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1 (1)
 738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC     (1)
 741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD1   (1)
 742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD2   (1)
 743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DBGMCU
 744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1    (1)
 746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM2  (1)
 747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1  (1)
 748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note Peripheral marked with (1) are not available all devices
 749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClockStopSleep(uint32_t Periphs)
 752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   CLEAR_BIT(RCC->APBSMENR1, Periphs);
 754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @}
 758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB2 APB2
 761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
 762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Enable APB2 peripherals clock.
 766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBENR2      SYSCFGEN      LL_APB2_GRP1_EnableClock\n
 767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM1EN        LL_APB2_GRP1_EnableClock\n
 768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      SPI1EN        LL_APB2_GRP1_EnableClock\n
 769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      USART1EN      LL_APB2_GRP1_EnableClock\n
 770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM14EN       LL_APB2_GRP1_EnableClock\n
 771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM15EN       LL_APB2_GRP1_EnableClock\n (*)
 772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM16EN       LL_APB2_GRP1_EnableClock\n
 773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM17EN       LL_APB2_GRP1_EnableClock\n
 774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      ADCEN         LL_APB2_GRP1_EnableClock
 775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM1
 778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
 780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM14
 781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM15 (*)
ARM GAS  /tmp/ccX8xcj0.s 			page 18


 782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM16
 783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM17
 784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC
 785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note (*) peripheral not available on all devices
 786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
 789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->APBENR2, Periphs);
 792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APBENR2, Periphs);
 794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   (void)tmpreg;
 795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Check if APB2 peripheral clock is enabled or not
 799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBENR2      SYSCFGEN      LL_APB2_GRP1_IsEnabledClock\n
 800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM1EN        LL_APB2_GRP1_IsEnabledClock\n
 801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      SPI1EN        LL_APB2_GRP1_IsEnabledClock\n
 802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      USART1EN      LL_APB2_GRP1_IsEnabledClock\n
 803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM14EN       LL_APB2_GRP1_IsEnabledClock\n
 804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM15EN       LL_APB2_GRP1_IsEnabledClock\n (*)
 805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM16EN       LL_APB2_GRP1_IsEnabledClock\n
 806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM17EN       LL_APB2_GRP1_IsEnabledClock\n
 807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      ADCEN         LL_APB2_GRP1_IsEnabledClock
 808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM1
 811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
 813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM14
 814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM15 (*)
 815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM16
 816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM17
 817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC
 818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note (*) peripheral not available on all devices
 819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB2_GRP1_IsEnabledClock(uint32_t Periphs)
 822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   return ((READ_BIT(RCC->APBENR2, Periphs) == (Periphs)) ? 1UL : 0UL);
 824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Disable APB2 peripherals clock.
 828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBENR2      SYSCFGEN      LL_APB2_GRP1_DisableClock\n
 829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM1EN        LL_APB2_GRP1_DisableClock\n
 830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      SPI1EN        LL_APB2_GRP1_DisableClock\n
 831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      USART1EN      LL_APB2_GRP1_DisableClock\n
 832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM14EN       LL_APB2_GRP1_DisableClock\n
 833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM15EN       LL_APB2_GRP1_DisableClock\n (*)
 834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM16EN       LL_APB2_GRP1_DisableClock\n
 835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM17EN       LL_APB2_GRP1_DisableClock\n
 836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      ADCEN         LL_APB2_GRP1_DisableClock
 837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
ARM GAS  /tmp/ccX8xcj0.s 			page 19


 839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM1
 840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
 842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM14
 843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM15 (*)
 844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM16
 845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM17
 846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC
 847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note (*) peripheral not available on all devices
 848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_DisableClock(uint32_t Periphs)
 851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   CLEAR_BIT(RCC->APBENR2, Periphs);
 853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Force APB2 peripherals reset.
 857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBRSTR2     SYSCFGRST     LL_APB2_GRP1_ForceReset\n
 858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     TIM1RST       LL_APB2_GRP1_ForceReset\n
 859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     SPI1RST       LL_APB2_GRP1_ForceReset\n
 860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     USART1RST     LL_APB2_GRP1_ForceReset\n
 861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     TIM14RST      LL_APB2_GRP1_ForceReset\n
 862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     TIM15RST      LL_APB2_GRP1_ForceReset\n (*)
 863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     TIM16RST      LL_APB2_GRP1_ForceReset\n
 864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     TIM17RST      LL_APB2_GRP1_ForceReset\n
 865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     ADCRST        LL_APB2_GRP1_ForceReset
 866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ALL
 868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM1
 870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
 872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM14
 873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM15 (*)
 874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM16
 875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM17
 876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC
 877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note (*) peripheral not available on all devices
 878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_ForceReset(uint32_t Periphs)
  47              		.loc 2 880 22 view .LVU8
  48              	.LVL1:
  49              	.LBB29:
 881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->APBRSTR2, Periphs);
  50              		.loc 2 882 3 view .LVU9
  51 0008 8022     		movs	r2, #128
  52 000a 1A4B     		ldr	r3, .L9+4
  53 000c D201     		lsls	r2, r2, #7
  54 000e 196B     		ldr	r1, [r3, #48]
  55 0010 0A43     		orrs	r2, r1
  56 0012 1A63     		str	r2, [r3, #48]
  57              	.LVL2:
  58              		.loc 2 882 3 is_stmt 0 view .LVU10
  59              	.LBE29:
ARM GAS  /tmp/ccX8xcj0.s 			page 20


  60              	.LBE28:
 143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     /* Release reset of USART clock */
 145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     LL_APB2_GRP1_ReleaseReset(LL_APB2_GRP1_PERIPH_USART1);
  61              		.loc 1 145 5 is_stmt 1 view .LVU11
  62              	.LBB30:
  63              	.LBI30:
 883:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 884:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 885:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 886:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Release APB2 peripherals reset.
 887:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBRSTR2     SYSCFGRST     LL_APB2_GRP1_ReleaseReset\n
 888:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     TIM1RST       LL_APB2_GRP1_ReleaseReset\n
 889:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     SPI1RST       LL_APB2_GRP1_ReleaseReset\n
 890:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     USART1RST     LL_APB2_GRP1_ReleaseReset\n
 891:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     TIM14RST      LL_APB2_GRP1_ReleaseReset\n
 892:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     TIM15RST      LL_APB2_GRP1_ReleaseReset\n (*)
 893:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     TIM16RST      LL_APB2_GRP1_ReleaseReset\n
 894:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     TIM17RST      LL_APB2_GRP1_ReleaseReset\n
 895:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     ADCRST        LL_APB2_GRP1_ReleaseReset
 896:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 897:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ALL
 898:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM1
 900:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
 902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM14
 903:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM15 (*)
 904:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM16
 905:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM17
 906:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC
 907:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note (*) peripheral not available on all devices
 908:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 909:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 910:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_ReleaseReset(uint32_t Periphs)
  64              		.loc 2 910 22 view .LVU12
  65              	.LBB31:
 911:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   CLEAR_BIT(RCC->APBRSTR2, Periphs);
  66              		.loc 2 912 3 view .LVU13
  67 0014 1A6B     		ldr	r2, [r3, #48]
  68 0016 1849     		ldr	r1, .L9+8
  69 0018 0A40     		ands	r2, r1
  70 001a 1A63     		str	r2, [r3, #48]
  71              	.LVL3:
  72              	.L7:
  73              		.loc 2 912 3 is_stmt 0 view .LVU14
  74              	.LBE31:
  75              	.LBE30:
 134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
  76              		.loc 1 134 15 view .LVU15
  77 001c 0020     		movs	r0, #0
  78              	.L3:
  79              	.LVL4:
 146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   }
 147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   else if (USARTx == USART2)
 148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   {
ARM GAS  /tmp/ccX8xcj0.s 			page 21


 149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     /* Force reset of USART clock */
 150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     LL_APB1_GRP1_ForceReset(LL_APB1_GRP1_PERIPH_USART2);
 151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     /* Release reset of USART clock */
 153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     LL_APB1_GRP1_ReleaseReset(LL_APB1_GRP1_PERIPH_USART2);
 154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   }
 155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #if defined(USART3)
 156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   else if (USARTx == USART3)
 157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   {
 158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     /* Force reset of USART clock */
 159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     LL_APB1_GRP1_ForceReset(LL_APB1_GRP1_PERIPH_USART3);
 160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     /* Release reset of USART clock */
 162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     LL_APB1_GRP1_ReleaseReset(LL_APB1_GRP1_PERIPH_USART3);
 163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   }
 164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #endif /* USART3 */
 165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #if defined(USART4)
 166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   else if (USARTx == USART4)
 167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   {
 168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     /* Force reset of USART clock */
 169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     LL_APB1_GRP1_ForceReset(LL_APB1_GRP1_PERIPH_USART4);
 170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     /* Release reset of USART clock */
 172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     LL_APB1_GRP1_ReleaseReset(LL_APB1_GRP1_PERIPH_USART4);
 173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   }
 174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #endif /* USART4 */
 175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   else
 176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   {
 177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     status = ERROR;
 178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   }
 179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   return (status);
  80              		.loc 1 180 3 is_stmt 1 view .LVU16
 181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** }
  81              		.loc 1 181 1 is_stmt 0 view .LVU17
  82              		@ sp needed
  83 001e 7047     		bx	lr
  84              	.LVL5:
  85              	.L2:
 147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   {
  86              		.loc 1 147 8 is_stmt 1 view .LVU18
 147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   {
  87              		.loc 1 147 11 is_stmt 0 view .LVU19
  88 0020 164A     		ldr	r2, .L9+12
  89 0022 9042     		cmp	r0, r2
  90 0024 0AD1     		bne	.L4
 150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
  91              		.loc 1 150 5 is_stmt 1 view .LVU20
  92              	.LVL6:
  93              	.LBB32:
  94              	.LBI32:
 587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
  95              		.loc 2 587 22 view .LVU21
  96              	.LBB33:
 589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
  97              		.loc 2 589 3 view .LVU22
  98 0026 8022     		movs	r2, #128
ARM GAS  /tmp/ccX8xcj0.s 			page 22


  99 0028 124B     		ldr	r3, .L9+4
 100 002a 9202     		lsls	r2, r2, #10
 101 002c D96A     		ldr	r1, [r3, #44]
 102 002e 0A43     		orrs	r2, r1
 103 0030 DA62     		str	r2, [r3, #44]
 104              	.LVL7:
 589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 105              		.loc 2 589 3 is_stmt 0 view .LVU23
 106              	.LBE33:
 107              	.LBE32:
 153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   }
 108              		.loc 1 153 5 is_stmt 1 view .LVU24
 109              	.LBB34:
 110              	.LBI34:
 641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 111              		.loc 2 641 22 view .LVU25
 112              	.LBB35:
 643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 113              		.loc 2 643 3 view .LVU26
 114 0032 DA6A     		ldr	r2, [r3, #44]
 115 0034 1249     		ldr	r1, .L9+16
 116              	.LVL8:
 117              	.L8:
 643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 118              		.loc 2 643 3 is_stmt 0 view .LVU27
 119              	.LBE35:
 120              	.LBE34:
 121              	.LBB36:
 122              	.LBB37:
 123 0036 0A40     		ands	r2, r1
 124 0038 DA62     		str	r2, [r3, #44]
 125 003a EFE7     		b	.L7
 126              	.LVL9:
 127              	.L4:
 643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 128              		.loc 2 643 3 view .LVU28
 129              	.LBE37:
 130              	.LBE36:
 156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   {
 131              		.loc 1 156 8 is_stmt 1 view .LVU29
 156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   {
 132              		.loc 1 156 11 is_stmt 0 view .LVU30
 133 003c 114A     		ldr	r2, .L9+20
 134 003e 9042     		cmp	r0, r2
 135 0040 08D1     		bne	.L5
 159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 136              		.loc 1 159 5 is_stmt 1 view .LVU31
 137              	.LVL10:
 138              	.LBB39:
 139              	.LBI39:
 587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 140              		.loc 2 587 22 view .LVU32
 141              	.LBB40:
 589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 142              		.loc 2 589 3 view .LVU33
 143 0042 8022     		movs	r2, #128
 144 0044 0B4B     		ldr	r3, .L9+4
ARM GAS  /tmp/ccX8xcj0.s 			page 23


 145 0046 D202     		lsls	r2, r2, #11
 146 0048 D96A     		ldr	r1, [r3, #44]
 147 004a 0A43     		orrs	r2, r1
 148 004c DA62     		str	r2, [r3, #44]
 149              	.LVL11:
 589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 150              		.loc 2 589 3 is_stmt 0 view .LVU34
 151              	.LBE40:
 152              	.LBE39:
 162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   }
 153              		.loc 1 162 5 is_stmt 1 view .LVU35
 154              	.LBB41:
 155              	.LBI41:
 641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 156              		.loc 2 641 22 view .LVU36
 157              	.LBB42:
 643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 158              		.loc 2 643 3 view .LVU37
 159 004e DA6A     		ldr	r2, [r3, #44]
 160 0050 0D49     		ldr	r1, .L9+24
 161 0052 F0E7     		b	.L8
 162              	.LVL12:
 163              	.L5:
 643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 164              		.loc 2 643 3 is_stmt 0 view .LVU38
 165              	.LBE42:
 166              	.LBE41:
 166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   {
 167              		.loc 1 166 8 is_stmt 1 view .LVU39
 166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   {
 168              		.loc 1 166 11 is_stmt 0 view .LVU40
 169 0054 0D4A     		ldr	r2, .L9+28
 177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   }
 170              		.loc 1 177 12 view .LVU41
 171 0056 0120     		movs	r0, #1
 172              	.LVL13:
 166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   {
 173              		.loc 1 166 11 view .LVU42
 174 0058 9342     		cmp	r3, r2
 175 005a E0D1     		bne	.L3
 169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 176              		.loc 1 169 5 is_stmt 1 view .LVU43
 177              	.LVL14:
 178              	.LBB43:
 179              	.LBI43:
 587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 180              		.loc 2 587 22 view .LVU44
 181              	.LBB44:
 589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 182              		.loc 2 589 3 view .LVU45
 183 005c 8022     		movs	r2, #128
 184 005e 054B     		ldr	r3, .L9+4
 185              	.LVL15:
 589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 186              		.loc 2 589 3 is_stmt 0 view .LVU46
 187 0060 1203     		lsls	r2, r2, #12
 188 0062 D96A     		ldr	r1, [r3, #44]
ARM GAS  /tmp/ccX8xcj0.s 			page 24


 189 0064 0A43     		orrs	r2, r1
 190 0066 DA62     		str	r2, [r3, #44]
 191              	.LVL16:
 589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 192              		.loc 2 589 3 view .LVU47
 193              	.LBE44:
 194              	.LBE43:
 172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   }
 195              		.loc 1 172 5 is_stmt 1 view .LVU48
 196              	.LBB45:
 197              	.LBI36:
 641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 198              		.loc 2 641 22 view .LVU49
 199              	.LBB38:
 643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 200              		.loc 2 643 3 view .LVU50
 201 0068 DA6A     		ldr	r2, [r3, #44]
 202 006a 0949     		ldr	r1, .L9+32
 203 006c E3E7     		b	.L8
 204              	.L10:
 205 006e C046     		.align	2
 206              	.L9:
 207 0070 00380140 		.word	1073821696
 208 0074 00100240 		.word	1073876992
 209 0078 FFBFFFFF 		.word	-16385
 210 007c 00440040 		.word	1073759232
 211 0080 FFFFFDFF 		.word	-131073
 212 0084 00480040 		.word	1073760256
 213 0088 FFFFFBFF 		.word	-262145
 214 008c 004C0040 		.word	1073761280
 215 0090 FFFFF7FF 		.word	-524289
 216              	.LBE38:
 217              	.LBE45:
 218              		.cfi_endproc
 219              	.LFE578:
 221              		.global	__aeabi_uidiv
 222              		.section	.text.LL_USART_Init,"ax",%progbits
 223              		.align	1
 224              		.global	LL_USART_Init
 225              		.syntax unified
 226              		.code	16
 227              		.thumb_func
 228              		.fpu softvfp
 230              	LL_USART_Init:
 231              	.LVL17:
 232              	.LFB579:
 182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** /**
 184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @brief  Initialize USART registers according to the specified
 185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   *         parameters in USART_InitStruct.
 186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @note   As some bits in USART configuration registers can only be written when the USART is dis
 187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   *         USART Peripheral should be in disabled state prior calling this function. Otherwise, ER
 188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @note   Baud rate value stored in USART_InitStruct BaudRate field, should be valid (different f
 189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @param  USARTx USART Instance
 190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @param  USART_InitStruct pointer to a LL_USART_InitTypeDef structure
 191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   *         that contains the configuration information for the specified USART peripheral.
 192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @retval An ErrorStatus enumeration value:
ARM GAS  /tmp/ccX8xcj0.s 			page 25


 193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   *          - SUCCESS: USART registers are initialized according to USART_InitStruct content
 194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   *          - ERROR: Problem occurred during USART Registers initialization
 195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   */
 196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** ErrorStatus LL_USART_Init(USART_TypeDef *USARTx, LL_USART_InitTypeDef *USART_InitStruct)
 197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** {
 233              		.loc 1 197 1 view -0
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 16
 236              		@ frame_needed = 0, uses_anonymous_args = 0
 198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   ErrorStatus status = ERROR;
 237              		.loc 1 198 3 view .LVU52
 199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   uint32_t periphclk = LL_RCC_PERIPH_FREQUENCY_NO;
 238              		.loc 1 199 3 view .LVU53
 200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #if !defined(RCC_CCIPR_USART3SEL)&&!defined(RCC_CCIPR_USART4SEL)||!defined(RCC_CCIPR_USART2SEL)
 201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   LL_RCC_ClocksTypeDef RCC_Clocks;
 239              		.loc 1 201 3 view .LVU54
 202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #endif /* !RCC_CCIPR_USART3SEL && !RCC_CCIPR_USART4SEL || !RCC_CCIPR_USART2SEL */
 203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   /* Check the parameters */
 205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   assert_param(IS_UART_INSTANCE(USARTx));
 240              		.loc 1 205 3 view .LVU55
 206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   assert_param(IS_LL_USART_PRESCALER(USART_InitStruct->PrescalerValue));
 241              		.loc 1 206 3 view .LVU56
 207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   assert_param(IS_LL_USART_BAUDRATE(USART_InitStruct->BaudRate));
 242              		.loc 1 207 3 view .LVU57
 208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   assert_param(IS_LL_USART_DATAWIDTH(USART_InitStruct->DataWidth));
 243              		.loc 1 208 3 view .LVU58
 209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   assert_param(IS_LL_USART_STOPBITS(USART_InitStruct->StopBits));
 244              		.loc 1 209 3 view .LVU59
 210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   assert_param(IS_LL_USART_PARITY(USART_InitStruct->Parity));
 245              		.loc 1 210 3 view .LVU60
 211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   assert_param(IS_LL_USART_DIRECTION(USART_InitStruct->TransferDirection));
 246              		.loc 1 211 3 view .LVU61
 212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   assert_param(IS_LL_USART_HWCONTROL(USART_InitStruct->HardwareFlowControl));
 247              		.loc 1 212 3 view .LVU62
 213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   assert_param(IS_LL_USART_OVERSAMPLING(USART_InitStruct->OverSampling));
 248              		.loc 1 213 3 view .LVU63
 214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   /* USART needs to be in disabled state, in order to be able to configure some bits in
 216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****      CRx registers */
 217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   if (LL_USART_IsEnabled(USARTx) == 0U)
 249              		.loc 1 217 3 view .LVU64
 250              	.LBB56:
 251              	.LBI56:
 252              		.file 3 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h"
   1:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @file    stm32g0xx_ll_usart.h
   4:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief   Header file of USART LL module.
   6:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   ******************************************************************************
   7:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @attention
   8:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *
   9:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * <h2><center>&copy; Copyright (c) 2018 STMicroelectronics.
  10:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *
  12:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * This software component is licensed by ST under BSD 3-Clause license,
ARM GAS  /tmp/ccX8xcj0.s 			page 26


  13:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *
  17:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   ******************************************************************************
  18:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
  19:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
  20:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #ifndef STM32G0xx_LL_USART_H
  22:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define STM32G0xx_LL_USART_H
  23:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
  24:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #ifdef __cplusplus
  25:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** extern "C" {
  26:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #endif
  27:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
  28:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #include "stm32g0xx.h"
  30:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
  31:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @addtogroup STM32G0xx_LL_Driver
  32:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
  33:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
  34:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
  35:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #if defined (USART1) || defined (USART2) || defined (USART3) || defined (USART4)
  36:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
  37:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL USART
  38:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
  39:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
  40:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
  41:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_Private_Variables USART Private Variables
  44:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
  45:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
  46:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /* Array used to get the USART prescaler division decimal values versus @ref USART_LL_EC_PRESCALER 
  47:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** static const uint32_t USART_PRESCALER_TAB[] =
  48:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
  49:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   1UL,
  50:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   2UL,
  51:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   4UL,
  52:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   6UL,
  53:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   8UL,
  54:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   10UL,
  55:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   12UL,
  56:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   16UL,
  57:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   32UL,
  58:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   64UL,
  59:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   128UL,
  60:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   256UL
  61:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** };
  62:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
  63:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
  64:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
  65:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
  66:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /* Private constants ---------------------------------------------------------*/
  67:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /* Private macros ------------------------------------------------------------*/
  68:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  69:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_Private_Macros USART Private Macros
ARM GAS  /tmp/ccX8xcj0.s 			page 27


  70:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
  71:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
  72:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
  73:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
  74:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
  75:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
  76:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
  77:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /* Exported types ------------------------------------------------------------*/
  78:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
  79:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_ES_INIT USART Exported Init structures
  80:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
  81:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
  82:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
  83:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
  84:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief LL USART Init Structure definition
  85:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
  86:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** typedef struct
  87:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
  88:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   uint32_t PrescalerValue;            /*!< Specifies the Prescaler to compute the communication bau
  89:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PRESCA
  90:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
  91:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  92:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
  93:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   uint32_t BaudRate;                  /*!< This field defines expected Usart communication baud rat
  94:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
  95:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
  96:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
  97:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   uint32_t DataWidth;                 /*!< Specifies the number of data bits transmitted or receive
  98:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DATAWI
  99:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   uint32_t StopBits;                  /*!< Specifies the number of stop bits transmitted.
 103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_STOPBI
 104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   uint32_t Parity;                    /*!< Specifies the parity mode.
 108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PARITY
 109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   uint32_t TransferDirection;         /*!< Specifies whether the Receive and/or Transmit mode is en
 113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_DIRECT
 114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   uint32_t HardwareFlowControl;       /*!< Specifies whether the hardware flow control mode is enab
 118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_HWCONT
 119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   uint32_t OverSampling;              /*!< Specifies whether USART oversampling mode is 16 or 8.
 123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_OVERSA
 124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            This feature can be modified afterwards using unitary fu
 126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
ARM GAS  /tmp/ccX8xcj0.s 			page 28


 127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** } LL_USART_InitTypeDef;
 128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief LL USART Clock Init Structure definition
 131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** typedef struct
 133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   uint32_t ClockOutput;               /*!< Specifies whether the USART clock is enabled or disabled
 135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_CLOCK.
 136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            @ref LL_USART_EnableSCLKOutput() or @ref LL_USART_Disabl
 139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   uint32_t ClockPolarity;             /*!< Specifies the steady state of the serial clock.
 142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_POLARI
 143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   uint32_t ClockPhase;                /*!< Specifies the clock transition on which the bit capture 
 148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_PHASE.
 149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   uint32_t LastBitClockPulse;         /*!< Specifies whether the clock pulse corresponding to the l
 154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            data bit (MSB) has to be output on the SCLK pin in synch
 155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            This parameter can be a value of @ref USART_LL_EC_LASTCL
 156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            USART HW configuration can be modified afterwards using 
 158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                            For more details, refer to description of this function.
 159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** } LL_USART_ClockInitTypeDef;
 161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #endif /* USE_FULL_LL_DRIVER */
 166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /* Exported constants --------------------------------------------------------*/
 168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Constants USART Exported Constants
 169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLEAR_FLAG Clear Flags Defines
 173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_WriteReg function
 174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ICR_PECF                       USART_ICR_PECF                /*!< Parity error fla
 177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ICR_FECF                       USART_ICR_FECF                /*!< Framing error fl
 178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ICR_NECF                       USART_ICR_NECF                /*!< Noise error dete
 179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ICR_ORECF                      USART_ICR_ORECF               /*!< Overrun error fl
 180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ICR_IDLECF                     USART_ICR_IDLECF              /*!< Idle line detect
 181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ICR_TXFECF                     USART_ICR_TXFECF              /*!< TX FIFO Empty Cl
 182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ICR_TCCF                       USART_ICR_TCCF                /*!< Transmission com
 183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ICR_TCBGTCF                    USART_ICR_TCBGTCF             /*!< Transmission com
ARM GAS  /tmp/ccX8xcj0.s 			page 29


 184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ICR_LBDCF                      USART_ICR_LBDCF               /*!< LIN break detect
 185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ICR_CTSCF                      USART_ICR_CTSCF               /*!< CTS flag */
 186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ICR_RTOCF                      USART_ICR_RTOCF               /*!< Receiver timeout
 187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ICR_EOBCF                      USART_ICR_EOBCF               /*!< End of block fla
 188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ICR_UDRCF                      USART_ICR_UDRCF               /*!< SPI Slave Underr
 189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ICR_CMCF                       USART_ICR_CMCF                /*!< Character match 
 190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ICR_WUCF                       USART_ICR_WUCF                /*!< Wakeup from Stop
 191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_GET_FLAG Get Flags Defines
 196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief    Flags defines which can be used with LL_USART_ReadReg function
 197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_PE                         USART_ISR_PE                  /*!< Parity error fla
 200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_FE                         USART_ISR_FE                  /*!< Framing error fl
 201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_NE                         USART_ISR_NE                  /*!< Noise detected f
 202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_ORE                        USART_ISR_ORE                 /*!< Overrun error fl
 203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_IDLE                       USART_ISR_IDLE                /*!< Idle line detect
 204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_RXNE_RXFNE                 USART_ISR_RXNE_RXFNE          /*!< Read data regist
 205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_TC                         USART_ISR_TC                  /*!< Transmission com
 206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_TXE_TXFNF                  USART_ISR_TXE_TXFNF           /*!< Transmit data re
 207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_LBDF                       USART_ISR_LBDF                /*!< LIN break detect
 208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_CTSIF                      USART_ISR_CTSIF               /*!< CTS interrupt fl
 209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_CTS                        USART_ISR_CTS                 /*!< CTS flag */
 210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_RTOF                       USART_ISR_RTOF                /*!< Receiver timeout
 211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_EOBF                       USART_ISR_EOBF                /*!< End of block fla
 212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_UDR                        USART_ISR_UDR                 /*!< SPI Slave underr
 213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_ABRE                       USART_ISR_ABRE                /*!< Auto baud rate e
 214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_ABRF                       USART_ISR_ABRF                /*!< Auto baud rate f
 215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_BUSY                       USART_ISR_BUSY                /*!< Busy flag */
 216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_CMF                        USART_ISR_CMF                 /*!< Character match 
 217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_SBKF                       USART_ISR_SBKF                /*!< Send break flag 
 218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_RWU                        USART_ISR_RWU                 /*!< Receiver wakeup 
 219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_WUF                        USART_ISR_WUF                 /*!< Wakeup from Stop
 220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_TEACK                      USART_ISR_TEACK               /*!< Transmit enable 
 221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_REACK                      USART_ISR_REACK               /*!< Receive enable a
 222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_TXFE                       USART_ISR_TXFE                /*!< TX FIFO empty fl
 223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_RXFF                       USART_ISR_RXFF                /*!< RX FIFO full fla
 224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_TCBGT                      USART_ISR_TCBGT               /*!< Transmission com
 225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_RXFT                       USART_ISR_RXFT                /*!< RX FIFO threshol
 226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ISR_TXFT                       USART_ISR_TXFT                /*!< TX FIFO threshol
 227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_IT IT Defines
 232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief    IT defines which can be used with LL_USART_ReadReg and  LL_USART_WriteReg functions
 233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_CR1_IDLEIE                     USART_CR1_IDLEIE              /*!< IDLE interrupt e
 236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_CR1_RXNEIE_RXFNEIE             USART_CR1_RXNEIE_RXFNEIE      /*!< Read data regist
 237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_CR1_TCIE                       USART_CR1_TCIE                /*!< Transmission com
 238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_CR1_TXEIE_TXFNFIE              USART_CR1_TXEIE_TXFNFIE       /*!< Transmit data re
 239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_CR1_PEIE                       USART_CR1_PEIE                /*!< Parity error */
 240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_CR1_CMIE                       USART_CR1_CMIE                /*!< Character match 
ARM GAS  /tmp/ccX8xcj0.s 			page 30


 241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_CR1_RTOIE                      USART_CR1_RTOIE               /*!< Receiver timeout
 242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_CR1_EOBIE                      USART_CR1_EOBIE               /*!< End of Block int
 243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_CR1_TXFEIE                     USART_CR1_TXFEIE              /*!< TX FIFO empty in
 244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_CR1_RXFFIE                     USART_CR1_RXFFIE              /*!< RX FIFO full int
 245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_CR2_LBDIE                      USART_CR2_LBDIE               /*!< LIN break detect
 246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_CR3_EIE                        USART_CR3_EIE                 /*!< Error interrupt 
 247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_CR3_CTSIE                      USART_CR3_CTSIE               /*!< CTS interrupt en
 248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_CR3_WUFIE                      USART_CR3_WUFIE               /*!< Wakeup from Stop
 249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_CR3_TXFTIE                     USART_CR3_TXFTIE              /*!< TX FIFO threshol
 250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_CR3_TCBGTIE                    USART_CR3_TCBGTIE             /*!< Transmission com
 251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_CR3_RXFTIE                     USART_CR3_RXFTIE              /*!< RX FIFO threshol
 252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_FIFOTHRESHOLD FIFO Threshold
 257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_1_8              0x00000000U /*!< FIFO reaches 1/8 of its depth */
 260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_1_4              0x00000001U /*!< FIFO reaches 1/4 of its depth */
 261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_1_2              0x00000002U /*!< FIFO reaches 1/2 of its depth */
 262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_3_4              0x00000003U /*!< FIFO reaches 3/4 of its depth */
 263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_7_8              0x00000004U /*!< FIFO reaches 7/8 of its depth */
 264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_FIFOTHRESHOLD_8_8              0x00000005U /*!< FIFO becomes empty for TX and full
 265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DIRECTION Communication Direction
 270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_DIRECTION_NONE                 0x00000000U                        /*!< Transmitter
 273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_DIRECTION_RX                   USART_CR1_RE                       /*!< Transmitter
 274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_DIRECTION_TX                   USART_CR1_TE                       /*!< Transmitter
 275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_DIRECTION_TX_RX                (USART_CR1_TE |USART_CR1_RE)       /*!< Transmitter
 276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_PARITY Parity Control
 281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_PARITY_NONE                    0x00000000U                          /*!< Parity co
 284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_PARITY_EVEN                    USART_CR1_PCE                        /*!< Parity co
 285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_PARITY_ODD                     (USART_CR1_PCE | USART_CR1_PS)       /*!< Parity co
 286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP Wakeup
 291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_WAKEUP_IDLELINE                0x00000000U           /*!<  USART wake up from Mute
 294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_WAKEUP_ADDRESSMARK             USART_CR1_WAKE        /*!<  USART wake up from Mute
 295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
ARM GAS  /tmp/ccX8xcj0.s 			page 31


 298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DATAWIDTH Datawidth
 300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_7B                   USART_CR1_M1            /*!< 7 bits word length : S
 303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_8B                   0x00000000U             /*!< 8 bits word length : S
 304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_DATAWIDTH_9B                   USART_CR1_M0            /*!< 9 bits word length : S
 305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_OVERSAMPLING Oversampling
 310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_16                0x00000000U            /*!< Oversampling by 16 */
 313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_OVERSAMPLING_8                 USART_CR1_OVER8        /*!< Oversampling by 8 */
 314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #if defined(USE_FULL_LL_DRIVER)
 319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_CLOCK Clock Signal
 320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_CLOCK_DISABLE                  0x00000000U            /*!< Clock signal not provid
 324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_CLOCK_ENABLE                   USART_CR2_CLKEN        /*!< Clock signal provided *
 325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #endif /*USE_FULL_LL_DRIVER*/
 329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_LASTCLKPULSE Last Clock Pulse
 331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_NO_OUTPUT         0x00000000U           /*!< The clock pulse of the l
 334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_LASTCLKPULSE_OUTPUT            USART_CR2_LBCL        /*!< The clock pulse of the l
 335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_PHASE Clock Phase
 340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_PHASE_1EDGE                    0x00000000U           /*!< The first clock transiti
 343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_PHASE_2EDGE                    USART_CR2_CPHA        /*!< The second clock transit
 344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_POLARITY Clock Polarity
 349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_POLARITY_LOW                   0x00000000U           /*!< Steady low value on SCLK
 352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_POLARITY_HIGH                  USART_CR2_CPOL        /*!< Steady high value on SCL
 353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
ARM GAS  /tmp/ccX8xcj0.s 			page 32


 355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_PRESCALER Clock Source Prescaler
 358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV1                 0x00000000U                                        
 361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV2                 (USART_PRESC_PRESCALER_0)                          
 362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV4                 (USART_PRESC_PRESCALER_1)                          
 363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV6                 (USART_PRESC_PRESCALER_1 | USART_PRESC_PRESCALER_0)
 364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV8                 (USART_PRESC_PRESCALER_2)                          
 365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV10                (USART_PRESC_PRESCALER_2 | USART_PRESC_PRESCALER_0)
 366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV12                (USART_PRESC_PRESCALER_2 | USART_PRESC_PRESCALER_1)
 367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV16                (USART_PRESC_PRESCALER_2 | USART_PRESC_PRESCALER_1 
 368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV32                (USART_PRESC_PRESCALER_3)                          
 369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV64                (USART_PRESC_PRESCALER_3 | USART_PRESC_PRESCALER_0)
 370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV128               (USART_PRESC_PRESCALER_3 | USART_PRESC_PRESCALER_1)
 371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_PRESCALER_DIV256               (USART_PRESC_PRESCALER_3 | USART_PRESC_PRESCALER_1 
 372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_STOPBITS Stop Bits
 377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_STOPBITS_0_5                   USART_CR2_STOP_0                           /*!< 0.5
 380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_STOPBITS_1                     0x00000000U                                /*!< 1 s
 381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_STOPBITS_1_5                   (USART_CR2_STOP_0 | USART_CR2_STOP_1)      /*!< 1.5
 382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_STOPBITS_2                     USART_CR2_STOP_1                           /*!< 2 s
 383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_TXRX TX RX Pins Swap
 388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_TXRX_STANDARD                  0x00000000U           /*!< TX/RX pins are used as d
 391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_TXRX_SWAPPED                   (USART_CR2_SWAP)      /*!< TX and RX pins functions
 392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_RXPIN_LEVEL RX Pin Active Level Inversion
 397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_RXPIN_LEVEL_STANDARD           0x00000000U           /*!< RX pin signal works usin
 400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_RXPIN_LEVEL_INVERTED           (USART_CR2_RXINV)     /*!< RX pin signal values are
 401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_TXPIN_LEVEL TX Pin Active Level Inversion
 406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_TXPIN_LEVEL_STANDARD           0x00000000U           /*!< TX pin signal works usin
 409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_TXPIN_LEVEL_INVERTED           (USART_CR2_TXINV)     /*!< TX pin signal values are
 410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
ARM GAS  /tmp/ccX8xcj0.s 			page 33


 412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_BINARY_LOGIC Binary Data Inversion
 415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_BINARY_LOGIC_POSITIVE          0x00000000U           /*!< Logical data from the da
 418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_BINARY_LOGIC_NEGATIVE          USART_CR2_DATAINV     /*!< Logical data from the da
 419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_BITORDER Bit Order
 424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_BITORDER_LSBFIRST              0x00000000U           /*!< data is transmitted/rece
 427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_BITORDER_MSBFIRST              USART_CR2_MSBFIRST    /*!< data is transmitted/rece
 428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_AUTOBAUD_DETECT_ON Autobaud Detection
 433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_STARTBIT    0x00000000U                                 /*!< Me
 436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE USART_CR2_ABRMODE_0                         /*!< Fa
 437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME    USART_CR2_ABRMODE_1                         /*!< 0x
 438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_AUTOBAUD_DETECT_ON_55_FRAME    (USART_CR2_ABRMODE_1 | USART_CR2_ABRMODE_0) /*!< 0x
 439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_ADDRESS_DETECT Address Length Detection
 444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ADDRESS_DETECT_4B              0x00000000U           /*!< 4-bit address detection 
 447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ADDRESS_DETECT_7B              USART_CR2_ADDM7       /*!< 7-bit address detection 
 448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_HWCONTROL Hardware Control
 453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_HWCONTROL_NONE                 0x00000000U                          /*!< CTS and R
 456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS                  USART_CR3_RTSE                       /*!< RTS outpu
 457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_HWCONTROL_CTS                  USART_CR3_CTSE                       /*!< CTS mode 
 458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_HWCONTROL_RTS_CTS              (USART_CR3_RTSE | USART_CR3_CTSE)    /*!< CTS and R
 459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_WAKEUP_ON Wakeup Activation
 464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_ADDRESS              0x00000000U                             /*!< Wake u
 467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_STARTBIT             USART_CR3_WUS_1                         /*!< Wake u
 468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_WAKEUP_ON_RXNE                 (USART_CR3_WUS_0 | USART_CR3_WUS_1)     /*!< Wake u
ARM GAS  /tmp/ccX8xcj0.s 			page 34


 469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_IRDA_POWER IrDA Power
 474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_IRDA_POWER_NORMAL              0x00000000U           /*!< IrDA normal power mode *
 477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_IRDA_POWER_LOW                 USART_CR3_IRLP        /*!< IrDA low power mode */
 478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_LINBREAK_DETECT LIN Break Detection Length
 483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_10B            0x00000000U           /*!< 10-bit break detection m
 486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_LINBREAK_DETECT_11B            USART_CR2_LBDL        /*!< 11-bit break detection m
 487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DE_POLARITY Driver Enable Polarity
 492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_DE_POLARITY_HIGH               0x00000000U           /*!< DE signal is active high
 495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_DE_POLARITY_LOW                USART_CR3_DEP         /*!< DE signal is active low 
 496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EC_DMA_REG_DATA DMA Register Data
 501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_DMA_REG_DATA_TRANSMIT          0x00000000U          /*!< Get address of data regis
 504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_DMA_REG_DATA_RECEIVE           0x00000001U          /*!< Get address of data regis
 505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /* Exported macro ------------------------------------------------------------*/
 514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Macros USART Exported Macros
 515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EM_WRITE_READ Common Write and read registers Macros
 519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Write a value in USART register
 524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  __REG__ Register to be written
ARM GAS  /tmp/ccX8xcj0.s 			page 35


 526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  __VALUE__ Value to be written in the register
 527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
 528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VAL
 530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Read a value in USART register
 533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  __INSTANCE__ USART Instance
 534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  __REG__ Register to be read
 535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval Register value
 536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define LL_USART_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EM_Exported_Macros_Helper Exported_Macros_Helper
 543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         expected Baud Rate in 8 bits sampling mode (32 bits value of USARTDIV is returned)
 549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  __PRESCALER__ This parameter can be one of the following values:
 551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
 552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
 553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
 554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
 555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
 556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
 557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
 558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
 559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
 560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
 561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
 562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
 563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_8 case
 565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING8(__PERIPHCLK__, __PRESCALER__, __BAUDRATE__) (((((__PERIPHCLK__)/(U
 567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                                                                + ((__BAUDRATE__)/2U
 568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Compute USARTDIV value according to Peripheral Clock and
 571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         expected Baud Rate in 16 bits sampling mode (32 bits value of USARTDIV is returned)
 572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for USART instance
 573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  __PRESCALER__ This parameter can be one of the following values:
 574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
 575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
 576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
 577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
 578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
 579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
 580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
 581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
 582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
ARM GAS  /tmp/ccX8xcj0.s 			page 36


 583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
 584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
 585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
 586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  __BAUDRATE__ Baud rate value to achieve
 587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval USARTDIV value to be used for BRR register filling in OverSampling_16 case
 588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** #define __LL_USART_DIV_SAMPLING16(__PERIPHCLK__, __PRESCALER__, __BAUDRATE__) ((((__PERIPHCLK__)/(U
 590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                                                                 + ((__BAUDRATE__)/2
 591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @}
 598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /* Exported functions --------------------------------------------------------*/
 601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_Exported_Functions USART Exported Functions
 603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /** @defgroup USART_LL_EF_Configuration Configuration functions
 607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @{
 608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  USART Enable
 612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Enable
 613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
 615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Enable(USART_TypeDef *USARTx)
 617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_UE);
 619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  USART Disable (all USART prescalers and outputs are disabled)
 623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   When USART is disabled, USART prescalers and outputs are stopped immediately,
 624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         and current operations are discarded. The configuration of the USART is kept, but all t
 625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         flags, in the USARTx_ISR are set to their default values.
 626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_Disable
 627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
 629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_Disable(USART_TypeDef *USARTx)
 631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_UE);
 633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Indicate if USART is enabled
 637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          UE            LL_USART_IsEnabled
 638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
ARM GAS  /tmp/ccX8xcj0.s 			page 37


 640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabled(USART_TypeDef *USARTx)
 253              		.loc 3 641 26 view .LVU65
 254              	.LBB57:
 642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_UE) == (USART_CR1_UE)) ? 1UL : 0UL);
 255              		.loc 3 643 3 view .LVU66
 256              	.LBE57:
 257              	.LBE56:
 197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   ErrorStatus status = ERROR;
 258              		.loc 1 197 1 is_stmt 0 view .LVU67
 259 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 260              	.LCFI0:
 261              		.cfi_def_cfa_offset 20
 262              		.cfi_offset 4, -20
 263              		.cfi_offset 5, -16
 264              		.cfi_offset 6, -12
 265              		.cfi_offset 7, -8
 266              		.cfi_offset 14, -4
 198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   uint32_t periphclk = LL_RCC_PERIPH_FREQUENCY_NO;
 267              		.loc 1 198 15 view .LVU68
 268 0002 0126     		movs	r6, #1
 269              	.LBB59:
 270              	.LBB58:
 271              		.loc 3 643 12 view .LVU69
 272 0004 0368     		ldr	r3, [r0]
 273              	.LVL18:
 274              		.loc 3 643 12 view .LVU70
 275              	.LBE58:
 276              	.LBE59:
 197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   ErrorStatus status = ERROR;
 277              		.loc 1 197 1 view .LVU71
 278 0006 0400     		movs	r4, r0
 279 0008 0D00     		movs	r5, r1
 280 000a 85B0     		sub	sp, sp, #20
 281              	.LCFI1:
 282              		.cfi_def_cfa_offset 40
 283              		.loc 1 217 6 view .LVU72
 284 000c 3342     		tst	r3, r6
 285 000e 54D1     		bne	.L12
 218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   {
 219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     /*---------------------------- USART CR1 Configuration ---------------------
 220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****      * Configure USARTx CR1 (USART Word Length, Parity, Mode and Oversampling bits) with parameters
 221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****      * - DataWidth:          USART_CR1_M bits according to USART_InitStruct->DataWidth value
 222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****      * - Parity:             USART_CR1_PCE, USART_CR1_PS bits according to USART_InitStruct->Parity
 223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****      * - TransferDirection:  USART_CR1_TE, USART_CR1_RE bits according to USART_InitStruct->Transfe
 224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****      * - Oversampling:       USART_CR1_OVER8 bit according to USART_InitStruct->OverSampling value.
 225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****      */
 226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     MODIFY_REG(USARTx->CR1,
 286              		.loc 1 226 5 is_stmt 1 view .LVU73
 287 0010 8B68     		ldr	r3, [r1, #8]
 288 0012 0969     		ldr	r1, [r1, #16]
 289              	.LVL19:
 290              		.loc 1 226 5 is_stmt 0 view .LVU74
 291 0014 0268     		ldr	r2, [r0]
 292 0016 0B43     		orrs	r3, r1
 293 0018 6969     		ldr	r1, [r5, #20]
ARM GAS  /tmp/ccX8xcj0.s 			page 38


 294 001a 0B43     		orrs	r3, r1
 295 001c E969     		ldr	r1, [r5, #28]
 296 001e 0B43     		orrs	r3, r1
 297 0020 2A49     		ldr	r1, .L31
 298 0022 0A40     		ands	r2, r1
 299 0024 1343     		orrs	r3, r2
 300 0026 0360     		str	r3, [r0]
 227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                (USART_CR1_M | USART_CR1_PCE | USART_CR1_PS |
 228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                 USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
 229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                (USART_InitStruct->DataWidth | USART_InitStruct->Parity |
 230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                 USART_InitStruct->TransferDirection | USART_InitStruct->OverSampling));
 231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     /*---------------------------- USART CR2 Configuration ---------------------
 233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****      * Configure USARTx CR2 (Stop bits) with parameters:
 234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****      * - Stop Bits:          USART_CR2_STOP bits according to USART_InitStruct->StopBits value.
 235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****      * - CLKEN, CPOL, CPHA and LBCL bits are to be configured using LL_USART_ClockInit().
 236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****      */
 237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     LL_USART_SetStopBitsLength(USARTx, USART_InitStruct->StopBits);
 301              		.loc 1 237 5 is_stmt 1 view .LVU75
 302              	.LVL20:
 303              	.LBB60:
 304              	.LBI60:
 644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  FIFO Mode Enable
 648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          FIFOEN        LL_USART_EnableFIFO
 651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
 653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableFIFO(USART_TypeDef *USARTx)
 655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_FIFOEN);
 657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  FIFO Mode Disable
 661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          FIFOEN        LL_USART_DisableFIFO
 664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
 666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableFIFO(USART_TypeDef *USARTx)
 668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_FIFOEN);
 670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Indicate if FIFO Mode is enabled
 674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          FIFOEN        LL_USART_IsEnabledFIFO
 677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
ARM GAS  /tmp/ccX8xcj0.s 			page 39


 679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledFIFO(USART_TypeDef *USARTx)
 681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_FIFOEN) == (USART_CR1_FIFOEN)) ? 1UL : 0UL);
 683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Configure TX FIFO Threshold
 687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR3          TXFTCFG       LL_USART_SetTXFIFOThreshold
 690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  Threshold This parameter can be one of the following values:
 692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
 699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXFIFOThreshold(USART_TypeDef *USARTx, uint32_t Threshold)
 701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_TXFTCFG, Threshold << USART_CR3_TXFTCFG_Pos);
 703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Return TX FIFO Threshold Configuration
 707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR3          TXFTCFG       LL_USART_GetTXFIFOThreshold
 710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXFIFOThreshold(USART_TypeDef *USARTx)
 720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
 722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Configure RX FIFO Threshold
 726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR3          RXFTCFG       LL_USART_SetRXFIFOThreshold
 729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  Threshold This parameter can be one of the following values:
 731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
ARM GAS  /tmp/ccX8xcj0.s 			page 40


 736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
 738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetRXFIFOThreshold(USART_TypeDef *USARTx, uint32_t Threshold)
 740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_RXFTCFG, Threshold << USART_CR3_RXFTCFG_Pos);
 742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Return RX FIFO Threshold Configuration
 746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR3          RXFTCFG       LL_USART_GetRXFIFOThreshold
 749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetRXFIFOThreshold(USART_TypeDef *USARTx)
 759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Configure TX and RX FIFOs Threshold
 765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
 766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
 767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR3          TXFTCFG       LL_USART_ConfigFIFOsThreshold\n
 768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         CR3          RXFTCFG       LL_USART_ConfigFIFOsThreshold
 769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  TXThreshold This parameter can be one of the following values:
 771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  RXThreshold This parameter can be one of the following values:
 778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_8
 779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_4
 780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_1_2
 781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_3_4
 782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_7_8
 783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_FIFOTHRESHOLD_8_8
 784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
 785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigFIFOsThreshold(USART_TypeDef *USARTx, uint32_t TXThreshold, uin
 787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_TXFTCFG | USART_CR3_RXFTCFG, (TXThreshold << USART_CR3_TXFTCFG_
 789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  USART enabled in STOP Mode.
ARM GAS  /tmp/ccX8xcj0.s 			page 41


 793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   When this function is enabled, USART is able to wake up the MCU from Stop mode, provide
 794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         USART clock selection is HSI or LSE in RCC.
 795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_EnableInStopMode
 798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
 800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableInStopMode(USART_TypeDef *USARTx)
 802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_UESM);
 804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  USART disabled in STOP Mode.
 808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   When this function is disabled, USART is not able to wake up the MCU from Stop mode
 809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_DisableInStopMode
 812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
 814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableInStopMode(USART_TypeDef *USARTx)
 816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_UESM);
 818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Indicate if USART is enabled in STOP Mode (able to wake up MCU from Stop mode or not)
 822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
 823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
 824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          UESM          LL_USART_IsEnabledInStopMode
 825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
 827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledInStopMode(USART_TypeDef *USARTx)
 829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_UESM) == (USART_CR1_UESM)) ? 1UL : 0UL);
 831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Receiver Enable (Receiver is enabled and begins searching for a start bit)
 835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_EnableDirectionRx
 836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
 838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionRx(USART_TypeDef *USARTx)
 840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_RE);
 842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Receiver Disable
 846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_DisableDirectionRx
 847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
 849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
ARM GAS  /tmp/ccX8xcj0.s 			page 42


 850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionRx(USART_TypeDef *USARTx)
 851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_RE);
 853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Transmitter Enable
 857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_EnableDirectionTx
 858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
 860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableDirectionTx(USART_TypeDef *USARTx)
 862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_TE);
 864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Transmitter Disable
 868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          TE            LL_USART_DisableDirectionTx
 869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
 871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableDirectionTx(USART_TypeDef *USARTx)
 873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_TE);
 875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Configure simultaneously enabled/disabled states
 879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         of Transmitter and Receiver
 880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_SetTransferDirection\n
 881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         CR1          TE            LL_USART_SetTransferDirection
 882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 883:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  TransferDirection This parameter can be one of the following values:
 884:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 885:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 886:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 887:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 888:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
 889:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 890:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferDirection(USART_TypeDef *USARTx, uint32_t TransferDirectio
 891:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 892:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_RE | USART_CR1_TE, TransferDirection);
 893:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 894:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 895:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 896:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Return enabled/disabled states of Transmitter and Receiver
 897:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          RE            LL_USART_GetTransferDirection\n
 898:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         CR1          TE            LL_USART_GetTransferDirection
 899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 900:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_NONE
 902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_RX
 903:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX
 904:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_DIRECTION_TX_RX
 905:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 906:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferDirection(USART_TypeDef *USARTx)
ARM GAS  /tmp/ccX8xcj0.s 			page 43


 907:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 908:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_RE | USART_CR1_TE));
 909:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 910:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 911:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Configure Parity (enabled/disabled and parity mode if enabled).
 913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   This function selects if hardware parity control (generation and detection) is enabled 
 914:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         When the parity control is enabled (Odd or Even), computed parity bit is inserted at th
 915:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         (9th or 8th bit depending on data width) and parity is checked on the received data.
 916:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_SetParity\n
 917:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         CR1          PCE           LL_USART_SetParity
 918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 919:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
 920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 921:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 923:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
 924:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 925:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetParity(USART_TypeDef *USARTx, uint32_t Parity)
 926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 927:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE, Parity);
 928:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 929:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 931:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Return Parity configuration (enabled/disabled and parity mode if enabled)
 932:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_GetParity\n
 933:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         CR1          PCE           LL_USART_GetParity
 934:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 935:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 936:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
 937:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
 938:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
 939:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 940:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetParity(USART_TypeDef *USARTx)
 941:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 942:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE));
 943:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 945:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 946:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Set Receiver Wake Up method from Mute mode.
 947:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_SetWakeUpMethod
 948:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 949:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  Method This parameter can be one of the following values:
 950:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 951:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 952:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
 953:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 954:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWakeUpMethod(USART_TypeDef *USARTx, uint32_t Method)
 955:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 956:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_WAKE, Method);
 957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 958:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 959:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Return Receiver Wake Up method from Mute mode
 961:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          WAKE          LL_USART_GetWakeUpMethod
 962:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 963:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
ARM GAS  /tmp/ccX8xcj0.s 			page 44


 964:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_IDLELINE
 965:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ADDRESSMARK
 966:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 967:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWakeUpMethod(USART_TypeDef *USARTx)
 968:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 969:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_WAKE));
 970:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 971:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 972:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 973:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Set Word length (i.e. nb of data bits, excluding start and stop bits)
 974:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          M0            LL_USART_SetDataWidth\n
 975:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         CR1          M1            LL_USART_SetDataWidth
 976:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 977:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
 978:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B
 979:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 980:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 981:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
 982:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 983:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetDataWidth(USART_TypeDef *USARTx, uint32_t DataWidth)
 984:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 985:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_M, DataWidth);
 986:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 987:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
 988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
 989:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Return Word length (i.e. nb of data bits, excluding start and stop bits)
 990:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          M0            LL_USART_GetDataWidth\n
 991:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         CR1          M1            LL_USART_GetDataWidth
 992:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
 993:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
 994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B
 995:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
 996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
 997:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
 998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetDataWidth(USART_TypeDef *USARTx)
 999:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1000:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_M));
1001:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1003:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1004:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Allow switch between Mute Mode and Active mode
1005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_EnableMuteMode
1006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1007:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1008:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableMuteMode(USART_TypeDef *USARTx)
1010:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1011:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   SET_BIT(USARTx->CR1, USART_CR1_MME);
1012:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1013:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1014:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1015:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Prevent Mute Mode use. Set Receiver in active mode permanently.
1016:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_DisableMuteMode
1017:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1018:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1019:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1020:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableMuteMode(USART_TypeDef *USARTx)
ARM GAS  /tmp/ccX8xcj0.s 			page 45


1021:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1022:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR1, USART_CR1_MME);
1023:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1024:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1025:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1026:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Indicate if switch between Mute Mode and Active mode is allowed
1027:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          MME           LL_USART_IsEnabledMuteMode
1028:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1029:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1030:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1031:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledMuteMode(USART_TypeDef *USARTx)
1032:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1033:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR1, USART_CR1_MME) == (USART_CR1_MME)) ? 1UL : 0UL);
1034:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1036:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Set Oversampling to 8-bit or 16-bit mode
1038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_SetOverSampling
1039:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1040:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1041:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1042:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1043:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1044:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1045:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetOverSampling(USART_TypeDef *USARTx, uint32_t OverSampling)
1046:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1047:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_OVER8, OverSampling);
1048:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1049:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1050:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1051:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Return Oversampling mode
1052:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          OVER8         LL_USART_GetOverSampling
1053:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1054:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1055:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1056:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1057:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1058:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetOverSampling(USART_TypeDef *USARTx)
1059:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1060:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR1, USART_CR1_OVER8));
1061:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1062:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1063:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1064:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Configure if Clock pulse of the last data bit is output to the SCLK pin or not
1065:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1066:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1067:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_SetLastClkPulseOutput
1068:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1069:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  LastBitClockPulse This parameter can be one of the following values:
1070:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
1071:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
1072:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1073:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1074:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetLastClkPulseOutput(USART_TypeDef *USARTx, uint32_t LastBitClockPul
1075:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1076:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_LBCL, LastBitClockPulse);
1077:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
ARM GAS  /tmp/ccX8xcj0.s 			page 46


1078:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1079:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1080:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Retrieve Clock pulse of the last data bit output configuration
1081:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         (Last bit Clock pulse output to the SCLK pin or not)
1082:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1083:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1084:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          LBCL          LL_USART_GetLastClkPulseOutput
1085:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1087:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
1088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
1089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1090:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetLastClkPulseOutput(USART_TypeDef *USARTx)
1091:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1092:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_LBCL));
1093:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1094:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1095:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1096:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Select the phase of the clock output on the SCLK pin in synchronous mode
1097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1098:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1099:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_SetClockPhase
1100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  ClockPhase This parameter can be one of the following values:
1102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
1103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
1104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPhase(USART_TypeDef *USARTx, uint32_t ClockPhase)
1107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA, ClockPhase);
1109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Return phase of the clock output on the SCLK pin in synchronous mode
1113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_GetClockPhase
1116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
1119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
1120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPhase(USART_TypeDef *USARTx)
1122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPHA));
1124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Select the polarity of the clock output on the SCLK pin in synchronous mode
1128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_SetClockPolarity
1131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  ClockPolarity This parameter can be one of the following values:
1133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
1134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
ARM GAS  /tmp/ccX8xcj0.s 			page 47


1135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetClockPolarity(USART_TypeDef *USARTx, uint32_t ClockPolarity)
1138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPOL, ClockPolarity);
1140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Return polarity of the clock output on the SCLK pin in synchronous mode
1144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          CPOL          LL_USART_GetClockPolarity
1147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
1150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
1151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetClockPolarity(USART_TypeDef *USARTx)
1153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_CPOL));
1155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Configure Clock signal format (Phase Polarity and choice about output of last bit clock
1159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         - Clock Phase configuration using @ref LL_USART_SetClockPhase() function
1163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         - Clock Polarity configuration using @ref LL_USART_SetClockPolarity() function
1164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         - Output of Last bit Clock pulse configuration using @ref LL_USART_SetLastClkPulseOutpu
1165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          CPHA          LL_USART_ConfigClock\n
1166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         CR2          CPOL          LL_USART_ConfigClock\n
1167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         CR2          LBCL          LL_USART_ConfigClock
1168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  Phase This parameter can be one of the following values:
1170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_1EDGE
1171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PHASE_2EDGE
1172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  Polarity This parameter can be one of the following values:
1173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_LOW
1174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_POLARITY_HIGH
1175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  LBCPOutput This parameter can be one of the following values:
1176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_NO_OUTPUT
1177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_LASTCLKPULSE_OUTPUT
1178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigClock(USART_TypeDef *USARTx, uint32_t Phase, uint32_t Polarity,
1181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_LBCL, Phase | Polarity | LBCP
1183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Configure Clock source prescaler for baudrate generator and oversampling
1187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
1188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
1189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll PRESC        PRESCALER     LL_USART_SetPrescaler
1190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  PrescalerValue This parameter can be one of the following values:
ARM GAS  /tmp/ccX8xcj0.s 			page 48


1192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
1193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
1194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
1195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
1196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
1197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
1198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
1199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
1200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
1201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
1202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
1203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
1204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetPrescaler(USART_TypeDef *USARTx, uint32_t PrescalerValue)
1207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   MODIFY_REG(USARTx->PRESC, USART_PRESC_PRESCALER, (uint16_t)PrescalerValue);
1209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Retrieve the Clock source prescaler for baudrate generator and oversampling
1213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_FIFO_INSTANCE(USARTx) can be used to check whether or not
1214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         FIFO mode feature is supported by the USARTx instance.
1215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll PRESC        PRESCALER     LL_USART_GetPrescaler
1216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
1219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
1220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
1221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
1222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
1223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
1224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
1225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
1226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
1227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
1228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
1229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
1230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetPrescaler(USART_TypeDef *USARTx)
1232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->PRESC, USART_PRESC_PRESCALER));
1234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Enable Clock output on SCLK pin
1238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_EnableSCLKOutput
1241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableSCLKOutput(USART_TypeDef *USARTx)
1245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_CLKEN);
1247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
ARM GAS  /tmp/ccX8xcj0.s 			page 49


1249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Disable Clock output on SCLK pin
1251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_DisableSCLKOutput
1254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableSCLKOutput(USART_TypeDef *USARTx)
1258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_CLKEN);
1260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Indicate if Clock output on SCLK pin is enabled
1264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_INSTANCE(USARTx) can be used to check whether or not
1265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Synchronous mode is supported by the USARTx instance.
1266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          CLKEN         LL_USART_IsEnabledSCLKOutput
1267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledSCLKOutput(USART_TypeDef *USARTx)
1271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_CLKEN) == (USART_CR2_CLKEN)) ? 1UL : 0UL);
1273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Set the length of the stop bits
1277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_SetStopBitsLength
1278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
1280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
1281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
1283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetStopBitsLength(USART_TypeDef *USARTx, uint32_t StopBits)
 305              		.loc 3 1286 22 view .LVU76
 306              	.LBB61:
1287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
 307              		.loc 3 1288 3 view .LVU77
 308 0028 4368     		ldr	r3, [r0, #4]
 309 002a 294A     		ldr	r2, .L31+4
 310 002c 1340     		ands	r3, r2
 311 002e EA68     		ldr	r2, [r5, #12]
 312 0030 1343     		orrs	r3, r2
 313 0032 4360     		str	r3, [r0, #4]
 314              	.LVL21:
 315              		.loc 3 1288 3 is_stmt 0 view .LVU78
 316              	.LBE61:
 317              	.LBE60:
 238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     /*---------------------------- USART CR3 Configuration ---------------------
 240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****      * Configure USARTx CR3 (Hardware Flow Control) with parameters:
 241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****      * - HardwareFlowControl: USART_CR3_RTSE, USART_CR3_CTSE bits according to USART_InitStruct->Ha
ARM GAS  /tmp/ccX8xcj0.s 			page 50


 242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****      */
 243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     LL_USART_SetHWFlowCtrl(USARTx, USART_InitStruct->HardwareFlowControl);
 318              		.loc 1 243 5 is_stmt 1 view .LVU79
 319              	.LBB62:
 320              	.LBI62:
1289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Retrieve the length of the stop bits
1293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          STOP          LL_USART_GetStopBitsLength
1294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
1297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
1299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetStopBitsLength(USART_TypeDef *USARTx)
1302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_STOP));
1304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Configure Character frame format (Datawidth, Parity control, Stop Bits)
1308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Call of this function is equivalent to following function call sequence :
1309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         - Data Width configuration using @ref LL_USART_SetDataWidth() function
1310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         - Parity Control and mode configuration using @ref LL_USART_SetParity() function
1311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         - Stop bits configuration using @ref LL_USART_SetStopBitsLength() function
1312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR1          PS            LL_USART_ConfigCharacter\n
1313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         CR1          PCE           LL_USART_ConfigCharacter\n
1314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         CR1          M0            LL_USART_ConfigCharacter\n
1315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         CR1          M1            LL_USART_ConfigCharacter\n
1316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         CR2          STOP          LL_USART_ConfigCharacter
1317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  DataWidth This parameter can be one of the following values:
1319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_7B
1320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_8B
1321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_DATAWIDTH_9B
1322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  Parity This parameter can be one of the following values:
1323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_NONE
1324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_EVEN
1325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PARITY_ODD
1326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  StopBits This parameter can be one of the following values:
1327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_0_5
1328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1
1329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_1_5
1330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_STOPBITS_2
1331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigCharacter(USART_TypeDef *USARTx, uint32_t DataWidth, uint32_t P
1334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                               uint32_t StopBits)
1335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR1, USART_CR1_PS | USART_CR1_PCE | USART_CR1_M, Parity | DataWidth);
1337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_STOP, StopBits);
1338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
ARM GAS  /tmp/ccX8xcj0.s 			page 51


1341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Configure TX/RX pins swapping setting.
1342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          SWAP          LL_USART_SetTXRXSwap
1343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  SwapConfig This parameter can be one of the following values:
1345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_STANDARD
1346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_SWAPPED
1347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXRXSwap(USART_TypeDef *USARTx, uint32_t SwapConfig)
1350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_SWAP, SwapConfig);
1352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Retrieve TX/RX pins swapping configuration.
1356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          SWAP          LL_USART_GetTXRXSwap
1357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_STANDARD
1360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXRX_SWAPPED
1361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXRXSwap(USART_TypeDef *USARTx)
1363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_SWAP));
1365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Configure RX pin active level logic
1369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          RXINV         LL_USART_SetRXPinLevel
1370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
1372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_STANDARD
1373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_INVERTED
1374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetRXPinLevel(USART_TypeDef *USARTx, uint32_t PinInvMethod)
1377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_RXINV, PinInvMethod);
1379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Retrieve RX pin active level logic configuration
1383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          RXINV         LL_USART_GetRXPinLevel
1384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_STANDARD
1387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_RXPIN_LEVEL_INVERTED
1388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetRXPinLevel(USART_TypeDef *USARTx)
1390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_RXINV));
1392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Configure TX pin active level logic
1396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          TXINV         LL_USART_SetTXPinLevel
1397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
ARM GAS  /tmp/ccX8xcj0.s 			page 52


1398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
1399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_STANDARD
1400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_INVERTED
1401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTXPinLevel(USART_TypeDef *USARTx, uint32_t PinInvMethod)
1404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_TXINV, PinInvMethod);
1406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Retrieve TX pin active level logic configuration
1410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          TXINV         LL_USART_GetTXPinLevel
1411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_STANDARD
1414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_TXPIN_LEVEL_INVERTED
1415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTXPinLevel(USART_TypeDef *USARTx)
1417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_TXINV));
1419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Configure Binary data logic.
1423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Allow to define how Logical data from the data register are send/received :
1424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         either in positive/direct logic (1=H, 0=L) or in negative/inverse logic (1=L, 0=H)
1425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          DATAINV       LL_USART_SetBinaryDataLogic
1426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  DataLogic This parameter can be one of the following values:
1428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_POSITIVE
1429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_NEGATIVE
1430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBinaryDataLogic(USART_TypeDef *USARTx, uint32_t DataLogic)
1433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_DATAINV, DataLogic);
1435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Retrieve Binary data configuration
1439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          DATAINV       LL_USART_GetBinaryDataLogic
1440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_POSITIVE
1443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_BINARY_LOGIC_NEGATIVE
1444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetBinaryDataLogic(USART_TypeDef *USARTx)
1446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_DATAINV));
1448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Configure transfer bit order (either Less or Most Significant Bit First)
1452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
1453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
1454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          MSBFIRST      LL_USART_SetTransferBitOrder
ARM GAS  /tmp/ccX8xcj0.s 			page 53


1455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  BitOrder This parameter can be one of the following values:
1457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_LSBFIRST
1458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_MSBFIRST
1459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetTransferBitOrder(USART_TypeDef *USARTx, uint32_t BitOrder)
1462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_MSBFIRST, BitOrder);
1464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Return transfer bit order (either Less or Most Significant Bit First)
1468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
1469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
1470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          MSBFIRST      LL_USART_GetTransferBitOrder
1471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_LSBFIRST
1474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_BITORDER_MSBFIRST
1475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetTransferBitOrder(USART_TypeDef *USARTx)
1477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_MSBFIRST));
1479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Enable Auto Baud-Rate Detection
1483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
1484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_EnableAutoBaudRate
1486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableAutoBaudRate(USART_TypeDef *USARTx)
1490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_ABREN);
1492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Disable Auto Baud-Rate Detection
1496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
1497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_DisableAutoBaudRate
1499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableAutoBaudRate(USART_TypeDef *USARTx)
1503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_ABREN);
1505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Indicate if Auto Baud-Rate Detection mechanism is enabled
1509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
1510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          ABREN         LL_USART_IsEnabledAutoBaud
ARM GAS  /tmp/ccX8xcj0.s 			page 54


1512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledAutoBaud(USART_TypeDef *USARTx)
1516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_ABREN) == (USART_CR2_ABREN)) ? 1UL : 0UL);
1518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Set Auto Baud-Rate mode bits
1522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
1523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          ABRMODE       LL_USART_SetAutoBaudRateMode
1525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  AutoBaudRateMode This parameter can be one of the following values:
1527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_STARTBIT
1528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE
1529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME
1530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_55_FRAME
1531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetAutoBaudRateMode(USART_TypeDef *USARTx, uint32_t AutoBaudRateMode)
1534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ABRMODE, AutoBaudRateMode);
1536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Return Auto Baud-Rate mode
1540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(USARTx) can be used to check whethe
1541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Auto Baud Rate detection feature is supported by the USARTx instance.
1542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          ABRMODE       LL_USART_GetAutoBaudRateMode
1543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_STARTBIT
1546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_FALLINGEDGE
1547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_7F_FRAME
1548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_AUTOBAUD_DETECT_ON_55_FRAME
1549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetAutoBaudRateMode(USART_TypeDef *USARTx)
1551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ABRMODE));
1553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Enable Receiver Timeout
1557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_EnableRxTimeout
1558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRxTimeout(USART_TypeDef *USARTx)
1562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   SET_BIT(USARTx->CR2, USART_CR2_RTOEN);
1564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Disable Receiver Timeout
1568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_DisableRxTimeout
ARM GAS  /tmp/ccX8xcj0.s 			page 55


1569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRxTimeout(USART_TypeDef *USARTx)
1573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR2, USART_CR2_RTOEN);
1575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Indicate if Receiver Timeout feature is enabled
1579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          RTOEN         LL_USART_IsEnabledRxTimeout
1580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledRxTimeout(USART_TypeDef *USARTx)
1584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR2, USART_CR2_RTOEN) == (USART_CR2_RTOEN)) ? 1UL : 0UL);
1586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Set Address of the USART node.
1590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   This is used in multiprocessor communication during Mute mode or Stop mode,
1591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         for wake up with address mark detection.
1592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   4bits address node is used when 4-bit Address Detection is selected in ADDM7.
1593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         (b7-b4 should be set to 0)
1594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         8bits address node is used when 7-bit Address Detection is selected in ADDM7.
1595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         (This is used in multiprocessor communication during Mute mode or Stop mode,
1596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         for wake up with 7-bit address mark detection.
1597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         The MSB of the character sent by the transmitter should be equal to 1.
1598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         It may also be used for character detection during normal reception,
1599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Mute mode inactive (for example, end of block detection in ModBus protocol).
1600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         In this case, the whole received character (8-bit) is compared to the ADD[7:0]
1601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         value and CMF flag is set on match)
1602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_ConfigNodeAddress\n
1603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         CR2          ADDM7         LL_USART_ConfigNodeAddress
1604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  AddressLen This parameter can be one of the following values:
1606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_4B
1607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_7B
1608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  NodeAddress 4 or 7 bit Address of the USART node.
1609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_ConfigNodeAddress(USART_TypeDef *USARTx, uint32_t AddressLen, uint32_
1612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR2, USART_CR2_ADD | USART_CR2_ADDM7,
1614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****              (uint32_t)(AddressLen | (NodeAddress << USART_CR2_ADD_Pos)));
1615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Return 8 bit Address of the USART node as set in ADD field of CR2.
1619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   If 4-bit Address Detection is selected in ADDM7,
1620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         only 4bits (b3-b0) of returned value are relevant (b31-b4 are not relevant)
1621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         If 7-bit Address Detection is selected in ADDM7,
1622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         only 8bits (b7-b0) of returned value are relevant (b31-b8 are not relevant)
1623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          ADD           LL_USART_GetNodeAddress
1624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval Address of the USART node (Value between Min_Data=0 and Max_Data=255)
ARM GAS  /tmp/ccX8xcj0.s 			page 56


1626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddress(USART_TypeDef *USARTx)
1628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADD) >> USART_CR2_ADD_Pos);
1630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Return Length of Node Address used in Address Detection mode (7-bit or 4-bit)
1634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR2          ADDM7         LL_USART_GetNodeAddressLen
1635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_4B
1638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_ADDRESS_DETECT_7B
1639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetNodeAddressLen(USART_TypeDef *USARTx)
1641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR2, USART_CR2_ADDM7));
1643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Enable RTS HW Flow Control
1647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_EnableRTSHWFlowCtrl
1650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableRTSHWFlowCtrl(USART_TypeDef *USARTx)
1654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_RTSE);
1656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Disable RTS HW Flow Control
1660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_DisableRTSHWFlowCtrl
1663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableRTSHWFlowCtrl(USART_TypeDef *USARTx)
1667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_RTSE);
1669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Enable CTS HW Flow Control
1673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_EnableCTSHWFlowCtrl
1676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableCTSHWFlowCtrl(USART_TypeDef *USARTx)
1680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_CTSE);
1682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
ARM GAS  /tmp/ccX8xcj0.s 			page 57


1683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Disable CTS HW Flow Control
1686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR3          CTSE          LL_USART_DisableCTSHWFlowCtrl
1689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableCTSHWFlowCtrl(USART_TypeDef *USARTx)
1693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_CTSE);
1695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Configure HW Flow Control mode (both CTS and RTS)
1699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_SetHWFlowCtrl\n
1702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_SetHWFlowCtrl
1703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  HardwareFlowControl This parameter can be one of the following values:
1705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
1706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
1707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
1708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
1709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetHWFlowCtrl(USART_TypeDef *USARTx, uint32_t HardwareFlowControl)
 321              		.loc 3 1711 22 view .LVU80
 322              	.LBB63:
1712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE, HardwareFlowControl);
 323              		.loc 3 1713 3 view .LVU81
 324 0034 8368     		ldr	r3, [r0, #8]
 325 0036 274A     		ldr	r2, .L31+8
 326 0038 1340     		ands	r3, r2
 327 003a AA69     		ldr	r2, [r5, #24]
 328 003c 1343     		orrs	r3, r2
 329 003e 8360     		str	r3, [r0, #8]
 330              	.LVL22:
 331              		.loc 3 1713 3 is_stmt 0 view .LVU82
 332              	.LBE63:
 333              	.LBE62:
 244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     /*---------------------------- USART BRR Configuration ---------------------
 246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****      * Retrieve Clock frequency used for USART Peripheral
 247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****      */
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     if (USARTx == USART1)
 334              		.loc 1 248 5 is_stmt 1 view .LVU83
 335              		.loc 1 248 8 is_stmt 0 view .LVU84
 336 0040 254B     		ldr	r3, .L31+12
 249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     {
 250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       periphclk = LL_RCC_GetUSARTClockFreq(LL_RCC_USART1_CLKSOURCE);
 337              		.loc 1 250 19 view .LVU85
 338 0042 0320     		movs	r0, #3
 339              	.LVL23:
ARM GAS  /tmp/ccX8xcj0.s 			page 58


 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     {
 340              		.loc 1 248 8 view .LVU86
 341 0044 9C42     		cmp	r4, r3
 342 0046 03D0     		beq	.L29
 251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     }
 252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     else if (USARTx == USART2)
 343              		.loc 1 252 10 is_stmt 1 view .LVU87
 344              		.loc 1 252 13 is_stmt 0 view .LVU88
 345 0048 244B     		ldr	r3, .L31+16
 346 004a 9C42     		cmp	r4, r3
 347 004c 22D1     		bne	.L15
 253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     {
 254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #if defined(RCC_CCIPR_USART2SEL)
 255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       periphclk = LL_RCC_GetUSARTClockFreq(LL_RCC_USART2_CLKSOURCE);
 348              		.loc 1 255 7 is_stmt 1 view .LVU89
 349              		.loc 1 255 19 is_stmt 0 view .LVU90
 350 004e 0C20     		movs	r0, #12
 351              	.L29:
 352 0050 FFF7FEFF 		bl	LL_RCC_GetUSARTClockFreq
 353              	.LVL24:
 354              	.L14:
 256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #else
 257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       /* USART2 clock is PCLK */
 258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       LL_RCC_GetSystemClocksFreq(&RCC_Clocks);
 259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       periphclk = RCC_Clocks.PCLK1_Frequency;
 260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #endif /* RCC_CCIPR_USART2SEL */
 261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     }
 262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #if defined(USART3)
 263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     else if (USARTx == USART3)
 264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     {
 265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #if defined(RCC_CCIPR_USART3SEL)
 266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       periphclk = LL_RCC_GetUSARTClockFreq(LL_RCC_USART3_CLKSOURCE);
 267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #else
 268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       /* USART3 clock is PCLK */
 269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       LL_RCC_GetSystemClocksFreq(&RCC_Clocks);
 270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       periphclk = RCC_Clocks.PCLK1_Frequency;
 271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #endif /* RCC_CCIPR_USART3SEL */
 272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     }
 273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #endif /* USART3 */
 274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #if defined(USART4)
 275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     else if (USARTx == USART4)
 276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     {
 277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #if defined(RCC_CCIPR_USART4SEL)
 278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       periphclk = LL_RCC_GetUSARTClockFreq(LL_RCC_USART4_CLKSOURCE);
 279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #else
 280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       /* USART4 clock is PCLK1 */
 281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       LL_RCC_GetSystemClocksFreq(&RCC_Clocks);
 282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       periphclk = RCC_Clocks.PCLK1_Frequency;
 283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #endif /* RCC_CCIPR_USART4SEL */
 284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     }
 285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #endif /* USART4 */
 286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     else
 287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     {
 288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       /* Nothing to do, as error code is already assigned to ERROR value */
 289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     }
 355              		.loc 1 289 5 is_stmt 1 view .LVU91
 290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
ARM GAS  /tmp/ccX8xcj0.s 			page 59


 291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     /* Configure the USART Baud Rate :
 292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****        - prescaler value is required
 293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****        - valid baud rate value (different from 0) is required
 294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****        - Peripheral clock as returned by RCC service, should be valid (different from 0).
 295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     */
 296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     if ((periphclk != LL_RCC_PERIPH_FREQUENCY_NO)
 356              		.loc 1 296 5 view .LVU92
 357              		.loc 1 296 8 is_stmt 0 view .LVU93
 358 0054 0028     		cmp	r0, #0
 359 0056 28D0     		beq	.L19
 297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****         && (USART_InitStruct->BaudRate != 0U))
 360              		.loc 1 297 29 view .LVU94
 361 0058 6F68     		ldr	r7, [r5, #4]
 362              		.loc 1 297 9 view .LVU95
 363 005a 002F     		cmp	r7, #0
 364 005c 25D0     		beq	.L19
 365 005e 2B68     		ldr	r3, [r5]
 298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     {
 299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       status = SUCCESS;
 366              		.loc 1 299 7 is_stmt 1 view .LVU96
 367              	.LVL25:
 300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       LL_USART_SetBaudRate(USARTx,
 368              		.loc 1 300 7 view .LVU97
 369              	.LBB64:
 370              	.LBI64:
1714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Return HW Flow Control configuration (both CTS and RTS)
1718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_HWFLOW_INSTANCE(USARTx) can be used to check whether or not
1719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Hardware Flow control feature is supported by the USARTx instance.
1720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR3          RTSE          LL_USART_GetHWFlowCtrl\n
1721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         CR3          CTSE          LL_USART_GetHWFlowCtrl
1722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_NONE
1725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS
1726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_CTS
1727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_HWCONTROL_RTS_CTS
1728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetHWFlowCtrl(USART_TypeDef *USARTx)
1730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE));
1732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Enable One bit sampling method
1736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_EnableOneBitSamp
1737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOneBitSamp(USART_TypeDef *USARTx)
1741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_ONEBIT);
1743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
ARM GAS  /tmp/ccX8xcj0.s 			page 60


1746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Disable One bit sampling method
1747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_DisableOneBitSamp
1748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOneBitSamp(USART_TypeDef *USARTx)
1752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_ONEBIT);
1754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Indicate if One bit sampling method is enabled
1758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR3          ONEBIT        LL_USART_IsEnabledOneBitSamp
1759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOneBitSamp(USART_TypeDef *USARTx)
1763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_ONEBIT) == (USART_CR3_ONEBIT)) ? 1UL : 0UL);
1765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Enable Overrun detection
1769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_EnableOverrunDetect
1770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_EnableOverrunDetect(USART_TypeDef *USARTx)
1774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   CLEAR_BIT(USARTx->CR3, USART_CR3_OVRDIS);
1776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Disable Overrun detection
1780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_DisableOverrunDetect
1781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_DisableOverrunDetect(USART_TypeDef *USARTx)
1785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   SET_BIT(USARTx->CR3, USART_CR3_OVRDIS);
1787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Indicate if Overrun detection is enabled
1791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR3          OVRDIS        LL_USART_IsEnabledOverrunDetect
1792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval State of bit (1 or 0).
1794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_IsEnabledOverrunDetect(USART_TypeDef *USARTx)
1796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return ((READ_BIT(USARTx->CR3, USART_CR3_OVRDIS) != USART_CR3_OVRDIS) ? 1UL : 0UL);
1798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Select event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
ARM GAS  /tmp/ccX8xcj0.s 			page 61


1803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
1804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR3          WUS           LL_USART_SetWKUPType
1805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  Type This parameter can be one of the following values:
1807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_ADDRESS
1808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_STARTBIT
1809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_RXNE
1810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetWKUPType(USART_TypeDef *USARTx, uint32_t Type)
1813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   MODIFY_REG(USARTx->CR3, USART_CR3_WUS, Type);
1815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Return event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Macro @ref IS_UART_WAKEUP_FROMSTOP_INSTANCE(USARTx) can be used to check whether or not
1820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         Wake-up from Stop mode feature is supported by the USARTx instance.
1821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll CR3          WUS           LL_USART_GetWKUPType
1822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval Returned value can be one of the following values:
1824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_ADDRESS
1825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_STARTBIT
1826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_WAKEUP_ON_RXNE
1827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE uint32_t LL_USART_GetWKUPType(USART_TypeDef *USARTx)
1829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   return (uint32_t)(READ_BIT(USARTx->CR3, USART_CR3_WUS));
1831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
1832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** /**
1834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @brief  Configure USART BRR register for achieving expected Baud Rate value.
1835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Compute and set USARTDIV value in BRR Register (full BRR content)
1836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         according to used Peripheral Clock, Oversampling mode, and expected Baud Rate values
1837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   Peripheral clock and Baud rate values provided as function parameters should be valid
1838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         (Baud rate value != 0)
1839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @note   In case of oversampling by 16 and 8, BRR content must be greater than or equal to 16d.
1840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @rmtoll BRR          BRR           LL_USART_SetBaudRate
1841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  USARTx USART Instance
1842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  PeriphClk Peripheral Clock
1843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  PrescalerValue This parameter can be one of the following values:
1844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV1
1845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV2
1846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV4
1847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV6
1848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV8
1849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV10
1850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV12
1851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV16
1852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV32
1853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV64
1854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV128
1855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_PRESCALER_DIV256
1856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  OverSampling This parameter can be one of the following values:
1857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_16
1858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   *         @arg @ref LL_USART_OVERSAMPLING_8
1859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @param  BaudRate Baud Rate
ARM GAS  /tmp/ccX8xcj0.s 			page 62


1860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   * @retval None
1861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   */
1862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** __STATIC_INLINE void LL_USART_SetBaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t Presc
 371              		.loc 3 1862 22 view .LVU98
 372              	.LBB65:
1863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                           uint32_t OverSampling,
1864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****                                           uint32_t BaudRate)
1865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
1866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   uint32_t usartdiv;
 373              		.loc 3 1866 3 view .LVU99
1867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   register uint32_t brrtemp;
 374              		.loc 3 1867 3 view .LVU100
1868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** 
1869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   if (PrescalerValue > LL_USART_PRESCALER_DIV256)
 375              		.loc 3 1869 3 view .LVU101
 376              	.LBE65:
 377              	.LBE64:
 299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       LL_USART_SetBaudRate(USARTx,
 378              		.loc 1 299 14 is_stmt 0 view .LVU102
 379 0060 0026     		movs	r6, #0
 380              	.LBB68:
 381              	.LBB66:
 382              		.loc 3 1869 6 view .LVU103
 383 0062 0B2B     		cmp	r3, #11
 384 0064 22D8     		bhi	.L18
1870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   {
1871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****     /* Do not overstep the size of USART_PRESCALER_TAB */
1872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   }
1873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   else if (OverSampling == LL_USART_OVERSAMPLING_8)
 385              		.loc 3 1873 8 is_stmt 1 view .LVU104
 386 0066 1E4A     		ldr	r2, .L31+20
 387 0068 9B00     		lsls	r3, r3, #2
 388              	.LVL26:
 389              		.loc 3 1873 8 is_stmt 0 view .LVU105
 390 006a 9958     		ldr	r1, [r3, r2]
 391 006c FFF7FEFF 		bl	__aeabi_uidiv
 392              	.LVL27:
 393              		.loc 3 1873 11 view .LVU106
 394 0070 8022     		movs	r2, #128
 395 0072 E969     		ldr	r1, [r5, #28]
 396              	.LVL28:
 397              		.loc 3 1873 11 view .LVU107
 398 0074 7B08     		lsrs	r3, r7, #1
 399 0076 1202     		lsls	r2, r2, #8
 400 0078 9142     		cmp	r1, r2
 401 007a 21D1     		bne	.L20
1874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   {
1875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****     usartdiv = (uint16_t)(__LL_USART_DIV_SAMPLING8(PeriphClk, (uint8_t)PrescalerValue, BaudRate));
 402              		.loc 3 1875 5 is_stmt 1 view .LVU108
 403              		.loc 3 1875 27 is_stmt 0 view .LVU109
 404 007c 4000     		lsls	r0, r0, #1
 405 007e C018     		adds	r0, r0, r3
 406 0080 3900     		movs	r1, r7
 407              	.LVL29:
 408              		.loc 3 1875 27 view .LVU110
 409 0082 FFF7FEFF 		bl	__aeabi_uidiv
 410              	.LVL30:
ARM GAS  /tmp/ccX8xcj0.s 			page 63


1876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****     brrtemp = usartdiv & 0xFFF0U;
 411              		.loc 3 1876 5 is_stmt 1 view .LVU111
 412              		.loc 3 1876 13 is_stmt 0 view .LVU112
 413 0086 174B     		ldr	r3, .L31+24
 414 0088 0340     		ands	r3, r0
 415              	.LVL31:
1877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****     brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 416              		.loc 3 1877 5 is_stmt 1 view .LVU113
 417              		.loc 3 1877 16 is_stmt 0 view .LVU114
 418 008a 0007     		lsls	r0, r0, #28
 419              	.LVL32:
 420              		.loc 3 1877 16 view .LVU115
 421 008c 400F     		lsrs	r0, r0, #29
 422              		.loc 3 1877 13 view .LVU116
 423 008e 1843     		orrs	r0, r3
 424              	.LVL33:
1878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****     USARTx->BRR = brrtemp;
 425              		.loc 3 1878 5 is_stmt 1 view .LVU117
 426              	.L30:
1879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   }
1880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   else
1881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****   {
1882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h ****     USARTx->BRR = (uint16_t)(__LL_USART_DIV_SAMPLING16(PeriphClk, (uint8_t)PrescalerValue, BaudRate
 427              		.loc 3 1882 17 is_stmt 0 view .LVU118
 428 0090 E060     		str	r0, [r4, #12]
 429 0092 0BE0     		b	.L18
 430              	.LVL34:
 431              	.L15:
 432              		.loc 3 1882 17 view .LVU119
 433              	.LBE66:
 434              	.LBE68:
 263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     {
 435              		.loc 1 263 10 is_stmt 1 view .LVU120
 263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     {
 436              		.loc 1 263 13 is_stmt 0 view .LVU121
 437 0094 144B     		ldr	r3, .L31+28
 438 0096 9C42     		cmp	r4, r3
 439 0098 04D1     		bne	.L16
 440              	.L17:
 269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       periphclk = RCC_Clocks.PCLK1_Frequency;
 441              		.loc 1 269 7 is_stmt 1 view .LVU122
 442 009a 01A8     		add	r0, sp, #4
 443 009c FFF7FEFF 		bl	LL_RCC_GetSystemClocksFreq
 444              	.LVL35:
 270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #endif /* RCC_CCIPR_USART3SEL */
 445              		.loc 1 270 7 view .LVU123
 270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #endif /* RCC_CCIPR_USART3SEL */
 446              		.loc 1 270 17 is_stmt 0 view .LVU124
 447 00a0 0398     		ldr	r0, [sp, #12]
 448              	.LVL36:
 270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** #endif /* RCC_CCIPR_USART3SEL */
 449              		.loc 1 270 17 view .LVU125
 450 00a2 D7E7     		b	.L14
 451              	.LVL37:
 452              	.L16:
 275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     {
 453              		.loc 1 275 10 is_stmt 1 view .LVU126
ARM GAS  /tmp/ccX8xcj0.s 			page 64


 275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     {
 454              		.loc 1 275 13 is_stmt 0 view .LVU127
 455 00a4 114B     		ldr	r3, .L31+32
 456 00a6 9C42     		cmp	r4, r3
 457 00a8 F7D0     		beq	.L17
 458              	.LVL38:
 459              	.L19:
 198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   uint32_t periphclk = LL_RCC_PERIPH_FREQUENCY_NO;
 460              		.loc 1 198 15 view .LVU128
 461 00aa 0126     		movs	r6, #1
 462              	.LVL39:
 463              	.L18:
 301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                            periphclk,
 302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                            USART_InitStruct->PrescalerValue,
 303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                            USART_InitStruct->OverSampling,
 304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                            USART_InitStruct->BaudRate);
 305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       /* Check BRR is greater than or equal to 16d */
 307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       assert_param(IS_LL_USART_BRR_MIN(USARTx->BRR));
 464              		.loc 1 307 7 is_stmt 1 view .LVU129
 308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       /* Check BRR is lower than or equal to 0xFFFF */
 310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       assert_param(IS_LL_USART_BRR_MAX(USARTx->BRR));
 465              		.loc 1 310 7 view .LVU130
 311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     }
 312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     /*---------------------------- USART PRESC Configuration -----------------------
 314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****      * Configure USARTx PRESC (Prescaler) with parameters:
 315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****      * - PrescalerValue: USART_PRESC_PRESCALER bits according to USART_InitStruct->PrescalerValue v
 316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****      */
 317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     LL_USART_SetPrescaler(USARTx, USART_InitStruct->PrescalerValue);
 466              		.loc 1 317 5 view .LVU131
 467              	.LBB69:
 468              	.LBI69:
1206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 469              		.loc 3 1206 22 view .LVU132
 470              	.LBB70:
1208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 471              		.loc 3 1208 3 view .LVU133
 472 00ac 0F21     		movs	r1, #15
 473 00ae E26A     		ldr	r2, [r4, #44]
 474 00b0 2B68     		ldr	r3, [r5]
 475 00b2 8A43     		bics	r2, r1
 476 00b4 9BB2     		uxth	r3, r3
 477 00b6 1343     		orrs	r3, r2
 478 00b8 E362     		str	r3, [r4, #44]
 479              	.LVL40:
 480              	.L12:
1208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 481              		.loc 3 1208 3 is_stmt 0 view .LVU134
 482              	.LBE70:
 483              	.LBE69:
 318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   }
 319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   /* Endif (=> USART not in Disabled state => return ERROR) */
 320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   return (status);
 484              		.loc 1 321 3 is_stmt 1 view .LVU135
ARM GAS  /tmp/ccX8xcj0.s 			page 65


 322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** }
 485              		.loc 1 322 1 is_stmt 0 view .LVU136
 486 00ba 3000     		movs	r0, r6
 487 00bc 05B0     		add	sp, sp, #20
 488              		@ sp needed
 489              	.LVL41:
 490              	.LVL42:
 491              	.LVL43:
 492              		.loc 1 322 1 view .LVU137
 493 00be F0BD     		pop	{r4, r5, r6, r7, pc}
 494              	.LVL44:
 495              	.L20:
 496              	.LBB71:
 497              	.LBB67:
 498              		.loc 3 1882 5 is_stmt 1 view .LVU138
 499              		.loc 3 1882 30 is_stmt 0 view .LVU139
 500 00c0 3900     		movs	r1, r7
 501              	.LVL45:
 502              		.loc 3 1882 30 view .LVU140
 503 00c2 1818     		adds	r0, r3, r0
 504 00c4 FFF7FEFF 		bl	__aeabi_uidiv
 505              	.LVL46:
 506 00c8 80B2     		uxth	r0, r0
 507 00ca E1E7     		b	.L30
 508              	.L32:
 509              		.align	2
 510              	.L31:
 511 00cc F369FFEF 		.word	-268473869
 512 00d0 FFCFFFFF 		.word	-12289
 513 00d4 FFFCFFFF 		.word	-769
 514 00d8 00380140 		.word	1073821696
 515 00dc 00440040 		.word	1073759232
 516 00e0 00000000 		.word	.LANCHOR0
 517 00e4 F0FF0000 		.word	65520
 518 00e8 00480040 		.word	1073760256
 519 00ec 004C0040 		.word	1073761280
 520              	.LBE67:
 521              	.LBE71:
 522              		.cfi_endproc
 523              	.LFE579:
 525              		.section	.text.LL_USART_StructInit,"ax",%progbits
 526              		.align	1
 527              		.global	LL_USART_StructInit
 528              		.syntax unified
 529              		.code	16
 530              		.thumb_func
 531              		.fpu softvfp
 533              	LL_USART_StructInit:
 534              	.LVL47:
 535              	.LFB580:
 323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** /**
 325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @brief Set each @ref LL_USART_InitTypeDef field to default value.
 326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @param USART_InitStruct pointer to a @ref LL_USART_InitTypeDef structure
 327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   *                         whose fields will be set to default values.
 328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @retval None
 329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   */
ARM GAS  /tmp/ccX8xcj0.s 			page 66


 330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** void LL_USART_StructInit(LL_USART_InitTypeDef *USART_InitStruct)
 332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** {
 536              		.loc 1 332 1 is_stmt 1 view -0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 0
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540              		@ link register save eliminated.
 333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   /* Set USART_InitStruct fields to default values */
 334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_InitStruct->PrescalerValue      = LL_USART_PRESCALER_DIV1;
 541              		.loc 1 334 3 view .LVU142
 335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_InitStruct->BaudRate            = 9600U;
 542              		.loc 1 335 41 is_stmt 0 view .LVU143
 543 0000 9622     		movs	r2, #150
 544 0002 9201     		lsls	r2, r2, #6
 334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_InitStruct->BaudRate            = 9600U;
 545              		.loc 1 334 41 view .LVU144
 546 0004 0023     		movs	r3, #0
 547              		.loc 1 335 41 view .LVU145
 548 0006 4260     		str	r2, [r0, #4]
 336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_InitStruct->DataWidth           = LL_USART_DATAWIDTH_8B;
 337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_InitStruct->StopBits            = LL_USART_STOPBITS_1;
 338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_InitStruct->Parity              = LL_USART_PARITY_NONE ;
 339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_InitStruct->TransferDirection   = LL_USART_DIRECTION_TX_RX;
 549              		.loc 1 339 41 view .LVU146
 550 0008 0C22     		movs	r2, #12
 340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_InitStruct->HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_InitStruct->OverSampling        = LL_USART_OVERSAMPLING_16;
 342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** }
 551              		.loc 1 342 1 view .LVU147
 552              		@ sp needed
 334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_InitStruct->BaudRate            = 9600U;
 553              		.loc 1 334 41 view .LVU148
 554 000a 0360     		str	r3, [r0]
 335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_InitStruct->DataWidth           = LL_USART_DATAWIDTH_8B;
 555              		.loc 1 335 3 is_stmt 1 view .LVU149
 336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_InitStruct->StopBits            = LL_USART_STOPBITS_1;
 556              		.loc 1 336 3 view .LVU150
 336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_InitStruct->StopBits            = LL_USART_STOPBITS_1;
 557              		.loc 1 336 41 is_stmt 0 view .LVU151
 558 000c 8360     		str	r3, [r0, #8]
 337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_InitStruct->Parity              = LL_USART_PARITY_NONE ;
 559              		.loc 1 337 3 is_stmt 1 view .LVU152
 337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_InitStruct->Parity              = LL_USART_PARITY_NONE ;
 560              		.loc 1 337 41 is_stmt 0 view .LVU153
 561 000e C360     		str	r3, [r0, #12]
 338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_InitStruct->TransferDirection   = LL_USART_DIRECTION_TX_RX;
 562              		.loc 1 338 3 is_stmt 1 view .LVU154
 338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_InitStruct->TransferDirection   = LL_USART_DIRECTION_TX_RX;
 563              		.loc 1 338 41 is_stmt 0 view .LVU155
 564 0010 0361     		str	r3, [r0, #16]
 339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_InitStruct->HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 565              		.loc 1 339 3 is_stmt 1 view .LVU156
 339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_InitStruct->HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 566              		.loc 1 339 41 is_stmt 0 view .LVU157
 567 0012 4261     		str	r2, [r0, #20]
 340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_InitStruct->OverSampling        = LL_USART_OVERSAMPLING_16;
ARM GAS  /tmp/ccX8xcj0.s 			page 67


 568              		.loc 1 340 3 is_stmt 1 view .LVU158
 340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_InitStruct->OverSampling        = LL_USART_OVERSAMPLING_16;
 569              		.loc 1 340 41 is_stmt 0 view .LVU159
 570 0014 8361     		str	r3, [r0, #24]
 341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** }
 571              		.loc 1 341 3 is_stmt 1 view .LVU160
 341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** }
 572              		.loc 1 341 41 is_stmt 0 view .LVU161
 573 0016 C361     		str	r3, [r0, #28]
 574              		.loc 1 342 1 view .LVU162
 575 0018 7047     		bx	lr
 576              		.cfi_endproc
 577              	.LFE580:
 579              		.section	.text.LL_USART_ClockInit,"ax",%progbits
 580              		.align	1
 581              		.global	LL_USART_ClockInit
 582              		.syntax unified
 583              		.code	16
 584              		.thumb_func
 585              		.fpu softvfp
 587              	LL_USART_ClockInit:
 588              	.LVL48:
 589              	.LFB581:
 343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** /**
 345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @brief  Initialize USART Clock related settings according to the
 346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   *         specified parameters in the USART_ClockInitStruct.
 347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @note   As some bits in USART configuration registers can only be written when the USART is dis
 348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   *         USART Peripheral should be in disabled state prior calling this function. Otherwise, ER
 349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @param  USARTx USART Instance
 350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @param  USART_ClockInitStruct pointer to a @ref LL_USART_ClockInitTypeDef structure
 351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   *         that contains the Clock configuration information for the specified USART peripheral.
 352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @retval An ErrorStatus enumeration value:
 353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   *          - SUCCESS: USART registers related to Clock settings are initialized according to USAR
 354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   *          - ERROR: Problem occurred during USART Registers initialization
 355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   */
 356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** ErrorStatus LL_USART_ClockInit(USART_TypeDef *USARTx, LL_USART_ClockInitTypeDef *USART_ClockInitStr
 357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** {
 590              		.loc 1 357 1 is_stmt 1 view -0
 591              		.cfi_startproc
 592              		@ args = 0, pretend = 0, frame = 0
 593              		@ frame_needed = 0, uses_anonymous_args = 0
 358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   ErrorStatus status = SUCCESS;
 594              		.loc 1 358 3 view .LVU164
 359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   /* Check USART Instance and Clock signal output parameters */
 361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   assert_param(IS_UART_INSTANCE(USARTx));
 595              		.loc 1 361 3 view .LVU165
 362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   assert_param(IS_LL_USART_CLOCKOUTPUT(USART_ClockInitStruct->ClockOutput));
 596              		.loc 1 362 3 view .LVU166
 363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   /* USART needs to be in disabled state, in order to be able to configure some bits in
 365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****      CRx registers */
 366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   if (LL_USART_IsEnabled(USARTx) == 0U)
 597              		.loc 1 366 3 view .LVU167
 598              	.LBB72:
 599              	.LBI72:
ARM GAS  /tmp/ccX8xcj0.s 			page 68


 641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 600              		.loc 3 641 26 view .LVU168
 601              	.LBB73:
 643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 602              		.loc 3 643 3 view .LVU169
 643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 603              		.loc 3 643 12 is_stmt 0 view .LVU170
 604 0000 0268     		ldr	r2, [r0]
 605              	.LVL49:
 643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 606              		.loc 3 643 12 view .LVU171
 607              	.LBE73:
 608              	.LBE72:
 357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   ErrorStatus status = SUCCESS;
 609              		.loc 1 357 1 view .LVU172
 610 0002 0300     		movs	r3, r0
 611 0004 30B5     		push	{r4, r5, lr}
 612              	.LCFI2:
 613              		.cfi_def_cfa_offset 12
 614              		.cfi_offset 4, -12
 615              		.cfi_offset 5, -8
 616              		.cfi_offset 14, -4
 617              	.LBB75:
 618              	.LBB74:
 643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 619              		.loc 3 643 12 view .LVU173
 620 0006 0120     		movs	r0, #1
 621              	.LVL50:
 643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 622              		.loc 3 643 12 view .LVU174
 623 0008 1400     		movs	r4, r2
 624 000a 0440     		ands	r4, r0
 625              	.LBE74:
 626              	.LBE75:
 627              		.loc 1 366 6 view .LVU175
 628 000c 0242     		tst	r2, r0
 629 000e 06D1     		bne	.L35
 367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   {
 368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     /*---------------------------- USART CR2 Configuration -----------------------*/
 369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     /* If Clock signal has to be output */
 370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     if (USART_ClockInitStruct->ClockOutput == LL_USART_CLOCK_DISABLE)
 630              		.loc 1 370 5 is_stmt 1 view .LVU176
 631              		.loc 1 370 8 is_stmt 0 view .LVU177
 632 0010 0868     		ldr	r0, [r1]
 633 0012 0028     		cmp	r0, #0
 634 0014 04D1     		bne	.L36
 371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     {
 372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       /* Deactivate Clock signal delivery :
 373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****        * - Disable Clock Output:        USART_CR2_CLKEN cleared
 374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****        */
 375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       LL_USART_DisableSCLKOutput(USARTx);
 635              		.loc 1 375 7 is_stmt 1 view .LVU178
 636              	.LVL51:
 637              	.LBB76:
 638              	.LBI76:
1257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** {
 639              		.loc 3 1257 22 view .LVU179
ARM GAS  /tmp/ccX8xcj0.s 			page 69


 640              	.LBB77:
1259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 641              		.loc 3 1259 3 view .LVU180
 642 0016 5A68     		ldr	r2, [r3, #4]
 643 0018 0949     		ldr	r1, .L38
 644              	.LVL52:
1259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 645              		.loc 3 1259 3 is_stmt 0 view .LVU181
 646 001a 0A40     		ands	r2, r1
 647 001c 5A60     		str	r2, [r3, #4]
 648              	.LVL53:
 649              	.L35:
1259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h **** }
 650              		.loc 3 1259 3 view .LVU182
 651              	.LBE77:
 652              	.LBE76:
 376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     }
 377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     else
 378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     {
 379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       /* Ensure USART instance is USART capable */
 380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       assert_param(IS_USART_INSTANCE(USARTx));
 381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       /* Check clock related parameters */
 383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       assert_param(IS_LL_USART_CLOCKPOLARITY(USART_ClockInitStruct->ClockPolarity));
 384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       assert_param(IS_LL_USART_CLOCKPHASE(USART_ClockInitStruct->ClockPhase));
 385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       assert_param(IS_LL_USART_LASTBITCLKOUTPUT(USART_ClockInitStruct->LastBitClockPulse));
 386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       /*---------------------------- USART CR2 Configuration -----------------------
 388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****        * Configure USARTx CR2 (Clock signal related bits) with parameters:
 389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****        * - Enable Clock Output:         USART_CR2_CLKEN set
 390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****        * - Clock Polarity:              USART_CR2_CPOL bit according to USART_ClockInitStruct->Cloc
 391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****        * - Clock Phase:                 USART_CR2_CPHA bit according to USART_ClockInitStruct->Cloc
 392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****        * - Last Bit Clock Pulse Output: USART_CR2_LBCL bit according to USART_ClockInitStruct->Last
 393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****        */
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       MODIFY_REG(USARTx->CR2,
 395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                  USART_CR2_CLKEN | USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_LBCL,
 396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                  USART_CR2_CLKEN | USART_ClockInitStruct->ClockPolarity |
 397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                  USART_ClockInitStruct->ClockPhase | USART_ClockInitStruct->LastBitClockPulse);
 398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     }
 399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   }
 400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   /* Else (USART not in Disabled state => return ERROR */
 401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   else
 402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   {
 403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****     status = ERROR;
 404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   }
 405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   return (status);
 653              		.loc 1 406 3 is_stmt 1 view .LVU183
 407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** }
 654              		.loc 1 407 1 is_stmt 0 view .LVU184
 655              		@ sp needed
 656 001e 30BD     		pop	{r4, r5, pc}
 657              	.LVL54:
 658              	.L36:
 380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 659              		.loc 1 380 7 is_stmt 1 view .LVU185
 383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       assert_param(IS_LL_USART_CLOCKPHASE(USART_ClockInitStruct->ClockPhase));
ARM GAS  /tmp/ccX8xcj0.s 			page 70


 660              		.loc 1 383 7 view .LVU186
 384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****       assert_param(IS_LL_USART_LASTBITCLKOUTPUT(USART_ClockInitStruct->LastBitClockPulse));
 661              		.loc 1 384 7 view .LVU187
 385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 662              		.loc 1 385 7 view .LVU188
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                  USART_CR2_CLKEN | USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_LBCL,
 663              		.loc 1 394 7 view .LVU189
 664 0020 8D68     		ldr	r5, [r1, #8]
 665 0022 4A68     		ldr	r2, [r1, #4]
 666 0024 5868     		ldr	r0, [r3, #4]
 667 0026 2A43     		orrs	r2, r5
 668 0028 064D     		ldr	r5, .L38+4
 669 002a C968     		ldr	r1, [r1, #12]
 670              	.LVL55:
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                  USART_CR2_CLKEN | USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_LBCL,
 671              		.loc 1 394 7 is_stmt 0 view .LVU190
 672 002c 2840     		ands	r0, r5
 673 002e 0243     		orrs	r2, r0
 674 0030 0A43     		orrs	r2, r1
 675 0032 8021     		movs	r1, #128
 676 0034 0901     		lsls	r1, r1, #4
 677 0036 0A43     		orrs	r2, r1
 358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 678              		.loc 1 358 15 view .LVU191
 679 0038 2000     		movs	r0, r4
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****                  USART_CR2_CLKEN | USART_CR2_CPHA | USART_CR2_CPOL | USART_CR2_LBCL,
 680              		.loc 1 394 7 view .LVU192
 681 003a 5A60     		str	r2, [r3, #4]
 682 003c EFE7     		b	.L35
 683              	.L39:
 684 003e C046     		.align	2
 685              	.L38:
 686 0040 FFF7FFFF 		.word	-2049
 687 0044 FFF0FFFF 		.word	-3841
 688              		.cfi_endproc
 689              	.LFE581:
 691              		.section	.text.LL_USART_ClockStructInit,"ax",%progbits
 692              		.align	1
 693              		.global	LL_USART_ClockStructInit
 694              		.syntax unified
 695              		.code	16
 696              		.thumb_func
 697              		.fpu softvfp
 699              	LL_USART_ClockStructInit:
 700              	.LVL56:
 701              	.LFB582:
 408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** 
 409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** /**
 410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @brief Set each field of a @ref LL_USART_ClockInitTypeDef type structure to default value.
 411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @param USART_ClockInitStruct pointer to a @ref LL_USART_ClockInitTypeDef structure
 412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   *                              whose fields will be set to default values.
 413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   * @retval None
 414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   */
 415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** void LL_USART_ClockStructInit(LL_USART_ClockInitTypeDef *USART_ClockInitStruct)
 416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** {
 702              		.loc 1 416 1 is_stmt 1 view -0
 703              		.cfi_startproc
ARM GAS  /tmp/ccX8xcj0.s 			page 71


 704              		@ args = 0, pretend = 0, frame = 0
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706              		@ link register save eliminated.
 417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   /* Set LL_USART_ClockInitStruct fields with default values */
 418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_ClockInitStruct->ClockOutput       = LL_USART_CLOCK_DISABLE;
 707              		.loc 1 418 3 view .LVU194
 708              		.loc 1 418 44 is_stmt 0 view .LVU195
 709 0000 0023     		movs	r3, #0
 419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_ClockInitStruct->ClockPolarity     = LL_USART_POLARITY_LOW;            /* Not relevant when
 420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_ClockInitStruct->ClockPhase        = LL_USART_PHASE_1EDGE;             /* Not relevant when
 421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_ClockInitStruct->LastBitClockPulse = LL_USART_LASTCLKPULSE_NO_OUTPUT;  /* Not relevant when
 422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** }
 710              		.loc 1 422 1 view .LVU196
 711              		@ sp needed
 418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_ClockInitStruct->ClockPolarity     = LL_USART_POLARITY_LOW;            /* Not relevant when
 712              		.loc 1 418 44 view .LVU197
 713 0002 0360     		str	r3, [r0]
 419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_ClockInitStruct->ClockPolarity     = LL_USART_POLARITY_LOW;            /* Not relevant when
 714              		.loc 1 419 3 is_stmt 1 view .LVU198
 419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_ClockInitStruct->ClockPolarity     = LL_USART_POLARITY_LOW;            /* Not relevant when
 715              		.loc 1 419 44 is_stmt 0 view .LVU199
 716 0004 4360     		str	r3, [r0, #4]
 420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_ClockInitStruct->LastBitClockPulse = LL_USART_LASTCLKPULSE_NO_OUTPUT;  /* Not relevant when
 717              		.loc 1 420 3 is_stmt 1 view .LVU200
 420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c ****   USART_ClockInitStruct->LastBitClockPulse = LL_USART_LASTCLKPULSE_NO_OUTPUT;  /* Not relevant when
 718              		.loc 1 420 44 is_stmt 0 view .LVU201
 719 0006 8360     		str	r3, [r0, #8]
 421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** }
 720              		.loc 1 421 3 is_stmt 1 view .LVU202
 421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_ll_usart.c **** }
 721              		.loc 1 421 44 is_stmt 0 view .LVU203
 722 0008 C360     		str	r3, [r0, #12]
 723              		.loc 1 422 1 view .LVU204
 724 000a 7047     		bx	lr
 725              		.cfi_endproc
 726              	.LFE582:
 728              		.section	.rodata.USART_PRESCALER_TAB,"a"
 729              		.align	2
 730              		.set	.LANCHOR0,. + 0
 733              	USART_PRESCALER_TAB:
 734 0000 01000000 		.word	1
 735 0004 02000000 		.word	2
 736 0008 04000000 		.word	4
 737 000c 06000000 		.word	6
 738 0010 08000000 		.word	8
 739 0014 0A000000 		.word	10
 740 0018 0C000000 		.word	12
 741 001c 10000000 		.word	16
 742 0020 20000000 		.word	32
 743 0024 40000000 		.word	64
 744 0028 80000000 		.word	128
 745 002c 00010000 		.word	256
 746              		.text
 747              	.Letext0:
 748              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 749              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 750              		.file 6 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g071xx.h"
ARM GAS  /tmp/ccX8xcj0.s 			page 72


 751              		.file 7 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g0xx.h"
 752              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 753              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_rcc.h"
 754              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash.h"
 755              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
ARM GAS  /tmp/ccX8xcj0.s 			page 73


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32g0xx_ll_usart.c
     /tmp/ccX8xcj0.s:16     .text.LL_USART_DeInit:0000000000000000 $t
     /tmp/ccX8xcj0.s:24     .text.LL_USART_DeInit:0000000000000000 LL_USART_DeInit
     /tmp/ccX8xcj0.s:207    .text.LL_USART_DeInit:0000000000000070 $d
     /tmp/ccX8xcj0.s:223    .text.LL_USART_Init:0000000000000000 $t
     /tmp/ccX8xcj0.s:230    .text.LL_USART_Init:0000000000000000 LL_USART_Init
     /tmp/ccX8xcj0.s:511    .text.LL_USART_Init:00000000000000cc $d
     /tmp/ccX8xcj0.s:526    .text.LL_USART_StructInit:0000000000000000 $t
     /tmp/ccX8xcj0.s:533    .text.LL_USART_StructInit:0000000000000000 LL_USART_StructInit
     /tmp/ccX8xcj0.s:580    .text.LL_USART_ClockInit:0000000000000000 $t
     /tmp/ccX8xcj0.s:587    .text.LL_USART_ClockInit:0000000000000000 LL_USART_ClockInit
     /tmp/ccX8xcj0.s:686    .text.LL_USART_ClockInit:0000000000000040 $d
     /tmp/ccX8xcj0.s:692    .text.LL_USART_ClockStructInit:0000000000000000 $t
     /tmp/ccX8xcj0.s:699    .text.LL_USART_ClockStructInit:0000000000000000 LL_USART_ClockStructInit
     /tmp/ccX8xcj0.s:729    .rodata.USART_PRESCALER_TAB:0000000000000000 $d
     /tmp/ccX8xcj0.s:733    .rodata.USART_PRESCALER_TAB:0000000000000000 USART_PRESCALER_TAB

UNDEFINED SYMBOLS
__aeabi_uidiv
LL_RCC_GetUSARTClockFreq
LL_RCC_GetSystemClocksFreq
