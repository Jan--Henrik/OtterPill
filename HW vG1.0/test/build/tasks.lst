ARM GAS  /tmp/cc4h6SWf.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"tasks.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	prvResetNextTaskUnblockTime:
  24              	.LFB34:
  25              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FreeRTOS Kernel V10.0.1
   3:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Copyright (C) 2017 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include <string.h>
  31:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
ARM GAS  /tmp/cc4h6SWf.s 			page 2


  34:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task.h is included from an application file. */
  35:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  37:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* FreeRTOS includes. */
  38:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "FreeRTOS.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "task.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "timers.h"
  41:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #include "stack_macros.h"
  42:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  43:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  44:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  45:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** header files above, but not in this file, in order to generate the correct
  46:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** privileged Vs unprivileged linkage and placement. */
  47:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  48:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  49:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** functions but without including stdio.h here. */
  51:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#include <stdio.h>
  57:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
  64:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
  73:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
  76:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
  79:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
  80:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
  81:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
  82:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
  83:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
  84:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** settings allow a task to be created using either statically or dynamically
  85:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
  86:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
  87:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
  88:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** made to free the RAM that was allocated statically.
  89:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
  90:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
ARM GAS  /tmp/cc4h6SWf.s 			page 3


  91:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
  92:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** a statically allocated stack and a dynamically allocated TCB.
  93:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** !!!NOTE!!! If the definition of tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is
  94:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** changed then the definition of StaticTask_t must also be updated. */
  95:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE	( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( c
  96:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  97:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  98:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  99:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
 101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
 102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
 103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
 104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
 105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
 107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
 113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
 115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * global, rather than file scope.
 121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define static
 124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	microcontroller architecture. */
 137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	state task. */
 140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc4h6SWf.s 			page 4


 148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
 157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			--uxTopPriority;																			\
 159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																										\
 161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	being used. */
 172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	architecture being used. */
 180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																								\
 188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{																									\
 203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{																								\
ARM GAS  /tmp/cc4h6SWf.s 			page 5


 205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}																								\
 207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** count overflows. */
 215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {																									\
 217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxTemp;																					\
 218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 																									\
 222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xNumOfOverflows++;																				\
 226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** to its original value when it is released. */
 258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #else
 261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
ARM GAS  /tmp/cc4h6SWf.s 			page 6


 262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * (the task's run time environment, including register values)
 268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef struct tskTaskControlBlock
 270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
ARM GAS  /tmp/cc4h6SWf.s 			page 7


 319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		struct	_reent xNewLib_reent;
 322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* See the comments above the definition of
 330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated for
 332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint8_t ucDelayAborted;
 337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** } tskTCB;
 340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** typedef tskTCB TCB_t;
 344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** which static variables must be declared volatile. */
 347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ] = {0};	/*< Prioritised read
 352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1 = {0};								/*< Delayed tasks. */
 353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2 = {0};								/*< Delayed tasks (two lists are used
 354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList = NULL;					/*< Points to the delayed ta
 355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList = NULL;			/*< Points to the dela
 356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList = {0};								/*< Tasks that have been readied whil
 357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination = {0};					/*< Tasks that have been deleted
 361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList = {0};						/*< Tasks that are currently suspende
 368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Other file private variables. --------------------------------*/
 372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
ARM GAS  /tmp/cc4h6SWf.s 			page 8


 376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** accessed from a critical section. */
 391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*lint -restore */
 401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationTickHook( void );
 411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* File private functions. --------------------------------*/
 418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /**
 420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * is in any other state.
 423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * automatically upon the creation of the first task.
ARM GAS  /tmp/cc4h6SWf.s 			page 9


 433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * creation of the first user task.
 440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * including the stack pointed to by the TCB.
 452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * and its TCB deleted.
 466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * either the current or the overflow delayed task list.
 472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * a suspended list, etc.).
 479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * NORMAL APPLICATION CODE.
 482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
ARM GAS  /tmp/cc4h6SWf.s 			page 10


 490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
 514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * set to a value other than 1.
 518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * will exit the Blocked state.
 528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/*
 534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 * human readable tables of task information.
 536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	 */
 537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
 538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * dynamically to fill in the structure's members.
 544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
ARM GAS  /tmp/cc4h6SWf.s 			page 11


 547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * under the control of the scheduler.
 557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
 561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * called by the function.
 564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
 565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif
 570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure. */
 594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
 595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function - use them. */
ARM GAS  /tmp/cc4h6SWf.s 			page 12


 604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 Unusual cast is ok as the structures are desig
 605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = NULL;
 621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Store the stack location in the TCB. */
 647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pcName,
 659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
 660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pvParameters,
ARM GAS  /tmp/cc4h6SWf.s 			page 13


 661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->xRegions );
 664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Store the stack location in the TCB. */
 694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task had a statically allocated stack in case it is
 700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
 704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pcName,
 707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->xRegions );
 712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc4h6SWf.s 			page 14


 718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							void * const pvParameters,
 730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							UBaseType_t uxPriority,
 731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the TCB then the stack. */
 739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allocation is being used. */
 744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				be deleted later if required. */
 751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxNewTCB );
 757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB = NULL;
 758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxStack;
 764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) 
 767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxStack != NULL )
 769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the TCB. */
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the cas
 772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB != NULL )
 774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc4h6SWf.s 			page 15


 775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Store the stack location in the TCB. */
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
 779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it again. */
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vPortFree( pxStack );
 783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
 786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB = NULL;
 788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxNewTCB != NULL )
 793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated f
 795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		BaseType_t xRunPrivileged;
ARM GAS  /tmp/cc4h6SWf.s 			page 16


 832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	by the port. */
 855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			debugging. */
 867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		performed. */
 880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the task name in the TCB. */
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc4h6SWf.s 			page 17


 889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		string is not accessible (extremely unlikely). */
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pcName[ x ] == 0x00 )
 893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			break;
 895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
 897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	remove the privilege bit if one is present. */
 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
 913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Event lists are always in priority order. */
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cc4h6SWf.s 			page 18


 946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
 959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xRegions;
 962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
 991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
 993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
 995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
 996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
 997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the top of stack variable is updated. */
 998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
1001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
ARM GAS  /tmp/cc4h6SWf.s 			page 19


1003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
1005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( ( void * ) pxCreatedTask != NULL )
1009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
1013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	updated. */
1025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
1026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxCurrentNumberOfTasks++;
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
1029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the suspended state - make this the current task. */
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
1033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
1035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				initialisation required.  We will not recover if this call
1038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				fails, but we will report the failure. */
1039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvInitialiseTaskLists();
1040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			current task if it is the highest priority task to be created
1050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			so far. */
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
1052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
1054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
1056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/cc4h6SWf.s 			page 20


1060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxTaskNumber++;
1069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
1083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then it should run now. */
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
1098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
1102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being deleted. */
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
1115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready list. */
ARM GAS  /tmp/cc4h6SWf.s 			page 21


1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			not return. */
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxTaskNumber++;
1141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task itself, as a context switch to another task is required.
1146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the termination list and free up any memory allocated by
1148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				after which it is not possible to yield away from this task -
1159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				required. */
1161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that has just been deleted. */
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
ARM GAS  /tmp/cc4h6SWf.s 			page 22


1174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been deleted. */
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
1201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
1208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			block. */
1211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick count has overflowed since this function was
1219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/cc4h6SWf.s 			page 23


1231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				tick time is less than the wake time. */
1237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
1240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
ARM GAS  /tmp/cc4h6SWf.s 			page 24


1288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
1291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY();
1293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task that is removed from the event list while the
1295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is resumed.
1298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				executing task. */
1301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
1315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eTaskState eReturn;
1330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	List_t *pxStateList;
1331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
1334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eRunning;
1339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
ARM GAS  /tmp/cc4h6SWf.s 			page 25


1345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
1349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				lists. */
1352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eBlocked;
1353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list.  Is it genuinely suspended or is it block
1360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					indefinitely? */
1361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eSuspended;
1364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						eReturn = eBlocked;
1368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					all. */
1378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					eReturn = eDeleted;
1379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				Ready (including pending ready) state. */
1386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eReady;
1387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
1391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
ARM GAS  /tmp/cc4h6SWf.s 			page 26


1402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the that
1406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			called uxTaskPriorityGet() that is being queried. */
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being queried. */
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
ARM GAS  /tmp/cc4h6SWf.s 			page 27


1459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Ensure the new priority is valid. */
1469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is being changed. */
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
1491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The priority change may have readied a task of higher
1499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority than the calling task. */
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of a task other than the currently
1505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						running task is being raised.  Is the priority being
1506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						raised above that of the running task? */
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xYieldRequired = pdTRUE;
1510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
1512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
1513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
1515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/cc4h6SWf.s 			page 28


1516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The priority of the running task is being raised,
1519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but the running task must already be the highest
1520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority task able to run so no yield is required. */
1521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of the running task down means
1526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					there may now be another task of higher priority that
1527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is ready to execute. */
1528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xYieldRequired = pdTRUE;
1529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of any other task down does not
1533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					require a yield as the running task must be above the
1534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new priority of the task being modified. */
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				before its uxPriority member is changed so the
1539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only change the priority being used if the task is not
1545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					currently using an inherited priority. */
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority gets set whatever. */
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
1559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
1563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				being used for anything else. */
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/cc4h6SWf.s 			page 29


1573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing more than change its priority variable. However, if
1577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				in the list appropriate to its new priority. */
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
1587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
1588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
1589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				optimised task selection is not being used. */
1613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
1629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/cc4h6SWf.s 			page 30


1630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			being suspended. */
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			suspended list. */
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
1662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					now suspended, so no notification was received. */
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
1666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
1669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
1671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task that is now in the Suspended state. */
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc4h6SWf.s 			page 31


1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The current task has just been suspended. */
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
1694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be adjusted to point to a different task. */
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
1701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be set to point to it no matter what its relative priority
1705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is. */
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = NULL;
1707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vTaskSwitchContext();
1711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		section. */
1732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTask );
1735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
1738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
1741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				state, or because is is blocked with no timeout? */
ARM GAS  /tmp/cc4h6SWf.s 			page 32


1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
1745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
1747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
1764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		currently executing task. */
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
1783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended because this is inside a critical section. */
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						but will leave the lists in the correct state for the
1798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						next yield. */
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/cc4h6SWf.s 			page 33


1801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
1812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
1832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check the ready lists can be accessed. */
ARM GAS  /tmp/cc4h6SWf.s 			page 34


1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					suspended list to the ready list directly. */
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldRequired = pdTRUE;
1865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
1867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
1868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
1870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
1875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
1876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unsuspended. */
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
1881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
1883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
1884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
1886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xYieldRequired;
1890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskStartScheduler( void )
1896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
1898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		address of the RAM then create the idle task. */
1908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
1911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												ulIdleTaskStackSize,
1912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskStackBuffer,
ARM GAS  /tmp/cc4h6SWf.s 			page 35


1915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
1920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
1924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else
1927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
1930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configIDLE_TASK_NAME,
1931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
1932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( void * ) NULL,
1933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xReturn == pdPASS )
1941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
1949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( xReturn == pdPASS )
1952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
1953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
1954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
1955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the only macro called by the function. */
1956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
1957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			freertos_tasks_c_additions_init();
1959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
1961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		starts to run. */
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
1968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
1970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
ARM GAS  /tmp/cc4h6SWf.s 			page 36


1972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to the task that will run first. */
1973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
1980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
1984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
1985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
1986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		FreeRTOSConfig.h file. */
1987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
1989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portable interface. */
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
1992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
1994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function will not return. */
1995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
1996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
1997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
1998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
1999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		or the timer task. */
2006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) xIdleTaskHandle;
2012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskEndScheduler( void )
2016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
2022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSuspendAll( void )
2027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
ARM GAS  /tmp/cc4h6SWf.s 			page 37


2029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	http://goo.gl/wu4acr */
2032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	++uxSchedulerSuspended;
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TickType_t xReturn;
2041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		running. */
2047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
2055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
2060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			processed. */
2079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			idle priority.  This path can only be reached if
2085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
ARM GAS  /tmp/cc4h6SWf.s 			page 38


2086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
2114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		--uxSchedulerSuspended;
2116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				appropriate ready list. */
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					task then a yield must be performed. */
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
ARM GAS  /tmp/cc4h6SWf.s 			page 39


2143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					which may have prevented the next unblock time from being
2146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					important for low power tickless implementations, where
2148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
2150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				time. */
2157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						do
2163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								xYieldPending = pdTRUE;
2167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							else
2169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
2172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							--uxPendedCounts;
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
2174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						uxPendedTicks = 0;
2176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/cc4h6SWf.s 			page 40


2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
2204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xAlreadyYielded;
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
2212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTicks = xTickCount;
2217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xTicks;
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
2227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
2243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = xTickCount;
2248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
2252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
ARM GAS  /tmp/cc4h6SWf.s 			page 41


2257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t. */
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
2266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queried. */
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
2271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t x;
2281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cNextChar;
2282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
2288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Check each character in the name looking for a match or
2294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mismatch. */
2295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Characters didn't match. */
2302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else if( cNextChar == 0x00 )
2305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Both strings terminated, a match must have been
2307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						found. */
2308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxReturn = pxNextTCB;
2309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
ARM GAS  /tmp/cc4h6SWf.s 			page 42


2314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxReturn != NULL )
2318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The handle has been found. */
2320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxReturn;
2331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t* pxTCB;
2342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the ready lists. */
2349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
2350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxQueue--;
2352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Found the handle. */
2357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Search the delayed lists. */
2363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
ARM GAS  /tmp/cc4h6SWf.s 			page 43


2371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the suspended list. */
2378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Search the deleted list. */
2388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
2392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( TaskHandle_t ) pxTCB;
2396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Ready state. */
2414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				do
2415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxQueue--;
2417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				task in the Blocked state. */
2423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc4h6SWf.s 			page 44


2428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					each task in the Suspended state. */
2438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
2449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
2451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pulTotalRunTime = 0;
2458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
2470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle;
2483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc4h6SWf.s 			page 45


2485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 1. */
2492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		each stepped tick. */
2499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
2501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB = ( TCB_t * ) xTask;
2512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
2515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			it is actually in the Blocked state. */
2520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
2523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				scheduler is suspended. */
2527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
2533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
2534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/cc4h6SWf.s 			page 46


2542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
2546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch if preemption is turned off. */
2552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					performed if the unblocked task has a priority that is
2556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					equal to or higher than the currently executing task. */
2557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						is unsuspended. */
2561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
2573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	tasks to be unblocked. */
2592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		block. */
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
2598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc4h6SWf.s 			page 47


2599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		delayed lists if it wraps to 0. */
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = xConstTickCount;
2602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
2604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		look any further down the list. */
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( ;; )
2619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					to the maximum possible value so it is extremely
2624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					unlikely that the
2625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					next time through. */
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
2629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					at which the task at the head of the delayed list must
2635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be removed from the Blocked state. */
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						item value is the time at which the task at the head
2643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						state -	so record the item value in
2645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime. */
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
2648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
ARM GAS  /tmp/cc4h6SWf.s 			page 48


2656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it from the event list. */
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
2664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					list. */
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					context switch if preemption is turned off. */
2674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
2676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Preemption is on, but a context switch should
2677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						only be performed if the unblocked task has a
2678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						priority that is equal to or higher than the
2679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						currently executing task. */
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
2685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
2686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
2688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
2689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
ARM GAS  /tmp/cc4h6SWf.s 			page 49


2713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
2715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vApplicationTickHook();
2717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
2719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
2720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
2722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		++uxPendedTicks;
2728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler is locked. */
2731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationTickHook();
2734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
2736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xYieldPending != pdFALSE )
2741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xSwitchRequired = pdTRUE;
2743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xSwitchRequired;
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		getting set. */
2763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
ARM GAS  /tmp/cc4h6SWf.s 			page 50


2770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/cc4h6SWf.s 			page 51


2827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
2835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
2840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSwitchContext( void )
2846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		switch. */
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
2852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
2854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdFALSE;
2856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#else
2863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
2865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Add the amount of time the task has been running to the
2867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				accumulated time so far.  The time the task started running was
2868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				protection here so count values are only valid until the timer
2870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				against suspect run time stat counter implementations - which
2872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				are provided by the application, not the kernel. */
2873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
2878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
2879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
2881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
ARM GAS  /tmp/cc4h6SWf.s 			page 52


2884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Check for stack overflow, if configured. */
2886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskCHECK_FOR_STACK_OVERFLOW();
2887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		optimised asm code. */
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
2891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			structure specific to this task. */
2897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
2907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
2924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event groups implementation. */
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
2928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	task that is not in the Blocked state. */
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
2933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
2936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
2937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the task level). */
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc4h6SWf.s 			page 53


2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
2943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TIMERS == 1 )
2946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
2948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
2949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( pxEventList );
2950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This function should not be called by application code hence the
2952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
2954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should be called with the scheduler suspended. */
2955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
2959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		can be used in place of vListInsert. */
2961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
2964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
2965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
2966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
2967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
2968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
2969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
2970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
2972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
2973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
2974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TIMERS */
2976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
2980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
2981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
2982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
2984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	called from a critical section within an ISR. */
2985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
2987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
2988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the delayed list, and add it to the ready list.
2989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
2991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
2992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
2993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
2994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
2995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxEventList is not empty. */
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
ARM GAS  /tmp/cc4h6SWf.s 			page 54


2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
2999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
3004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pending until the scheduler is resumed. */
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
3010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		it should force a context switch now. */
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
3018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
3026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
3038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvResetNextTaskUnblockTime();
3039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
3041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the event flags implementation. */
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
3053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Store the new item value in the event list. */
ARM GAS  /tmp/cc4h6SWf.s 			page 55


3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
3056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	event flags. */
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
3062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	lists. */
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
3068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
3070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		a context switch is required.  This function is called with the
3073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
3076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
3087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
3106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
3108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
ARM GAS  /tmp/cc4h6SWf.s 			page 56


3112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != pdFALSE )
3115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				but has the same result. */
3118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				specified is the maximum block time then the task should block
3129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				indefinitely, and therefore never time out. */
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
3131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The tick count is greater than the time at which
3138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			was called. */
3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
3145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
3150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait = 0;
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
3155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
3158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return xReturn;
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** void vTaskMissedYield( void )
3164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc4h6SWf.s 			page 57


3169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = 0U;
3184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
3199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*
3208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * -----------------------------------------------------------
3209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The Idle task.
3210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * ----------------------------------------------------------
3211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  *
3217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c ****  */
3218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
3221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) pvParameters;
3222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc4h6SWf.s 			page 58


3226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	any. */
3229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	portTASK_CALLS_SECURE_FUNCTIONS();
3230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( ;; )
3232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			see if any other task has become available.  If we are using
3241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			will automatically get the processor anyway. */
3243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskYIELD();
3244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			to run then the idle task should yield before the end of the
3252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			timeslice.
3253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			A critical region is not required here as we are just reading from
3255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				taskYIELD();
3261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			allows the application designer to add background functionality
3275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			without the overhead of a separate task.
3276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vApplicationIdleHook();
3279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
ARM GAS  /tmp/cc4h6SWf.s 			page 59


3283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		user defined low power mode	implementations require
3285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			test of the expected idle time is performed without the
3293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			valid. */
3295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
3300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					time can be sampled again, and this time its value can
3303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					be used. */
3304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if the application does not want
3309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) xTaskResumeAll();
3324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
ARM GAS  /tmp/cc4h6SWf.s 			page 60


3340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupts. */
3359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return eReturn;
3370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvReturn = NULL;
3396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  /tmp/cc4h6SWf.s 			page 61


3397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pvReturn = NULL;
3406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pvReturn;
3409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the calling task. */
3422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void )
3431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
3433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
ARM GAS  /tmp/cc4h6SWf.s 			page 62


3454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	using list2. */
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
3464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		TCB_t *pxTCB;
3470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent vTaskSuspendAll()
3472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		being called too often in the idle task. */
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
3476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
3480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
3481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
3483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvDeleteTCB( pxTCB );
3485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
3489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
ARM GAS  /tmp/cc4h6SWf.s 			page 63


3511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		state is just set to whatever is passed in. */
3529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( eState != eInvalid )
3530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
3532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
3534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
3538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( eState == eSuspended )
3545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						vTaskSuspendAll();
3547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
3548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
3550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
3551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
3552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
3553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						( void ) xTaskResumeAll();
3554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
3562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/cc4h6SWf.s 			page 64


3568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#else
3573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#endif
3577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
3593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
3597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			do
3603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
3605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxTask++;
3607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxTask;
3615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
3621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulCount = 0U;
ARM GAS  /tmp/cc4h6SWf.s 			page 65


3625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulCount++;
3630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ( uint16_t ) ulCount;
3635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#else
3655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
3659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		want to allocate and clean RAM statically. */
3675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
ARM GAS  /tmp/cc4h6SWf.s 			page 66


3682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the stack and TCB. */
3689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
3691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 Macro has been consolidated 
3693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			check what was statically allocated before trying to free the
3696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			memory. */
3697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				must be freed. */
3701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				only memory that must be freed. */
3708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				nothing needs to be freed. */
3714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
  26              		.loc 1 3725 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
3726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
  31              		.loc 1 3726 1 view .LVU1
3727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
  32              		.loc 1 3728 2 view .LVU2
  33              		.loc 1 3728 6 is_stmt 0 view .LVU3
  34 0000 074A     		ldr	r2, .L5
  35 0002 1368     		ldr	r3, [r2]
ARM GAS  /tmp/cc4h6SWf.s 			page 67


  36 0004 1968     		ldr	r1, [r3]
  37 0006 074B     		ldr	r3, .L5+4
  38              		.loc 1 3728 45 view .LVU4
  39 0008 0029     		cmp	r1, #0
  40 000a 03D1     		bne	.L2
3729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		there is an item in the delayed list. */
3734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
  41              		.loc 1 3734 3 is_stmt 1 view .LVU5
  42              		.loc 1 3734 24 is_stmt 0 view .LVU6
  43 000c 0122     		movs	r2, #1
  44 000e 5242     		rsbs	r2, r2, #0
  45              	.L4:
3735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
3737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from the Blocked state. */
3742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
3744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
  46              		.loc 1 3745 1 view .LVU7
  47              		@ sp needed
  48              	.LBB7:
  49              	.LBB8:
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
  50              		.loc 1 3743 24 view .LVU8
  51 0010 1A60     		str	r2, [r3]
  52              	.LBE8:
  53              	.LBE7:
  54              		.loc 1 3745 1 view .LVU9
  55 0012 7047     		bx	lr
  56              	.L2:
  57              	.LBB10:
  58              	.LBI7:
3724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
  59              		.loc 1 3724 13 is_stmt 1 view .LVU10
  60              	.LBB9:
3742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
  61              		.loc 1 3742 3 view .LVU11
3742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
  62              		.loc 1 3742 27 is_stmt 0 view .LVU12
  63 0014 1268     		ldr	r2, [r2]
  64              	.LVL0:
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
  65              		.loc 1 3743 3 is_stmt 1 view .LVU13
3742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
  66              		.loc 1 3742 13 is_stmt 0 view .LVU14
  67 0016 D268     		ldr	r2, [r2, #12]
  68              	.LVL1:
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cc4h6SWf.s 			page 68


  69              		.loc 1 3743 26 view .LVU15
  70 0018 D268     		ldr	r2, [r2, #12]
  71              	.LVL2:
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
  72              		.loc 1 3743 26 view .LVU16
  73 001a 5268     		ldr	r2, [r2, #4]
  74              	.LVL3:
3743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
  75              		.loc 1 3743 26 view .LVU17
  76 001c F8E7     		b	.L4
  77              	.L6:
  78 001e C046     		.align	2
  79              	.L5:
  80 0020 00000000 		.word	.LANCHOR0
  81 0024 00000000 		.word	.LANCHOR1
  82              	.LBE9:
  83              	.LBE10:
  84              		.cfi_endproc
  85              	.LFE34:
  87              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
  88              		.align	1
  89              		.syntax unified
  90              		.code	16
  91              		.thumb_func
  92              		.fpu softvfp
  94              	prvAddCurrentTaskToDelayedList:
  95              	.LVL4:
  96              	.LFB48:
3746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
3753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* A critical section is not required as this is not called from
3755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		individual execution thread. */
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xReturn = pxCurrentTCB;
3758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
3770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc4h6SWf.s 			page 69


3775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
3802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
3809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				not being used for anything else. */
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
3814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
3816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				to be moved into a new list. */
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
3825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
3829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/cc4h6SWf.s 			page 70


3832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
3838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Just inherit the priority. */
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
3843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
3846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Inheritance occurred. */
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
3853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
3855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
3856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					current priority of the mutex holder is not lower than the
3857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex.
3858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
3859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority, but inheritance would have occurred if that had
3860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					not been the case. */
3861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
3862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
3878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/cc4h6SWf.s 			page 71


3889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			be the running state task. */
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
3896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task? */
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
3903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
3905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					holding task then it must be the running state task.  Remove
3908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the holding task from the ready list. */
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
3914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
3915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
3917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
3919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					new	ready list. */
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
3924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					any other purpose if this task is running, and it must be
3925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					running to give back the mutex. */
3926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This is only actually required in the corner case whereby
3931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					in an order different to that in which they were taken.
3933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					If a context switch did not occur when the first mutex was
3934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
3935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					switch should occur when the last mutex is returned whether
3936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a task is waiting on it or not. */
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
3938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
3940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
3943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/cc4h6SWf.s 			page 72


3946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
3950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
3953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
3956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
3958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
3966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
3967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
3969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
3970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
3971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			one mutex. */
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
3975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
3976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			holding task's base priority and the priority of the highest
3977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
3979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
3981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
3983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
3985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
3986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
3987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Does the priority need to change? */
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
3989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
3990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
3991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
3992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
3993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
3995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
3996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task has timed out because it already holds the
3997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
3998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					its own priority. */
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
4000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					priority to facilitate determining the subject task's
ARM GAS  /tmp/cc4h6SWf.s 			page 73


4003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					state. */
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
4007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					being used for anything else. */
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
4011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
4013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4018:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4019:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					then the task that holds the mutex could be in either the
4021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					from its current state list if it is in the Ready state as
4023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the task's priority is going to change and there is one
4024:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					Ready list per priority. */
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
4026:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
4028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4029:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
4030:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4031:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						else
4032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4035:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
4037:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4038:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4039:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4040:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4041:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4042:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4044:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4045:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4046:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4049:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4050:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4054:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4056:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4058:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
ARM GAS  /tmp/cc4h6SWf.s 			page 74


4060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4062:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4063:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskEnterCritical( void )
4065:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4070:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4071:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4072:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4073:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4074:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			critical section. */
4078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4079:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4087:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4091:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4092:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4094:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskExitCritical( void )
4095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4098:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4103:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portENABLE_INTERRUPTS();
4105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4109:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4112:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4116:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
ARM GAS  /tmp/cc4h6SWf.s 			page 75


4117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4118:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4120:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4121:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4122:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4124:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	size_t x;
4130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4131:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Start by copying the entire string. */
4132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		printed out. */
4136:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4137:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4139:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4141:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Terminate. */
4142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pcBuffer[ x ] = 0x00;
4143:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Return the new end of string. */
4145:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return &( pcBuffer[ x ] );
4146:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4151:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4152:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4155:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4156:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	char cStatus;
4158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4163:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4167:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4168:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays task names, states and stack usage.
4169:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4171:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
ARM GAS  /tmp/cc4h6SWf.s 			page 76


4174:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4176:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * snprintf() implementation!).
4177:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4178:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4180:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskList().
4181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4182:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4185:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4186:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4189:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4192:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4193:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4194:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4195:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4196:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4197:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4198:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4199:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4201:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4202:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4204:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4207:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4208:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4209:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4212:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4213:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4215:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4217:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					default:			/* Should not get here, but it is included
4222:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										to prevent static checking errors. */
4223:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										cStatus = 0x00;
4224:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 										break;
4225:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4226:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4227:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4228:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				can be printed in tabular form more easily. */
4229:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4230:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc4h6SWf.s 			page 77


4231:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Write the rest of the string. */
4232:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4233:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
4234:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4235:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4236:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4237:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4238:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4239:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4240:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4241:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4242:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4243:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4244:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4245:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4246:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4247:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
4248:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4249:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4250:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4251:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4252:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4253:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4254:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4255:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4257:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4261:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		#endif
4262:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4263:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/*
4264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4266:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4267:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4268:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4273:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * in both absolute and percentage terms.
4274:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4275:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4276:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4277:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4278:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4279:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4280:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4281:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * a full snprintf() implementation!).
4282:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 *
4283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4285:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4286:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		 */
4287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc4h6SWf.s 			page 78


4288:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4291:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		function is executing. */
4293:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4294:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4295:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4296:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4297:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4298:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4299:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4300:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4302:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4304:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4305:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* For percentage calculations. */
4306:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulTotalTime /= 100UL;
4307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4308:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Avoid divide by zero errors. */
4309:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulTotalTime > 0 )
4310:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4311:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4313:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4315:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4316:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4317:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4318:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4319:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* Write the task name to the string, padding with
4320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					spaces so it can be printed in tabular form more
4321:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					easily. */
4322:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4323:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4324:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4325:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4326:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4327:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4328:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4329:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4330:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4331:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4332:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4333:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4334:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4335:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4336:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4337:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4338:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4339:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4340:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* If the percentage is zero here then the task has
4341:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						consumed less than 1% of the total run time. */
4342:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4343:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4344:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
ARM GAS  /tmp/cc4h6SWf.s 			page 79


4345:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4346:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#else
4347:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
4348:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4349:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4350:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4351:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
4352:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						#endif
4353:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4354:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4355:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
4356:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4357:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4358:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4359:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4360:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4361:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4362:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4363:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4364:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4365:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4366:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4367:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4368:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4369:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4370:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4371:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4372:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4373:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4374:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4375:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4376:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
4379:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4381:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4382:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4383:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	queues and semaphores. */
4384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4385:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return uxReturn;
4387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
4388:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4389:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4390:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4391:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4392:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
4393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4394:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4395:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4397:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return pxCurrentTCB;
ARM GAS  /tmp/cc4h6SWf.s 			page 80


4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4404:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4405:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4406:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4409:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
4412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4414:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4415:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4417:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4418:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4420:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4425:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4426:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4427:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4428:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4429:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4431:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4432:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4433:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4435:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4437:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4438:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ulReturn != 0UL )
4450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4454:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4455:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4456:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
4458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
ARM GAS  /tmp/cc4h6SWf.s 			page 81


4459:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4460:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4468:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return ulReturn;
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4471:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4472:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4474:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4476:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4483:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4485:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4486:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4487:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				clear the value to zero. */
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4490:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4491:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4493:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4495:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4498:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4499:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4501:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
4504:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4505:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4506:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4508:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4510:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4511:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4513:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4514:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
ARM GAS  /tmp/cc4h6SWf.s 			page 82


4516:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4518:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4520:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulNotificationValue != NULL )
4522:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Output the current notification value, which may or may not
4524:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				have changed. */
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4526:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4527:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4528:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4529:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4530:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4531:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			unblocked because of a timeout. */
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4533:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4534:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was not received. */
4535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
4536:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4537:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4538:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4539:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* A notification was already pending or a notification was
4540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				received while the task was waiting. */
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
4543:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4544:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4551:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4553:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4554:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4555:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4557:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4562:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4565:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4567:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4569:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4571:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc4h6SWf.s 			page 83


4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4574:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4576:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4578:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4581:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4582:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4583:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4588:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4589:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4590:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4591:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4596:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4598:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4600:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction:
4604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4606:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4607:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY();
4610:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4611:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4612:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4614:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4621:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4622:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4623:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4624:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					because it will automatically get reset to a new value when
4628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4629:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					tickless idling is used it might be more important to enter
ARM GAS  /tmp/cc4h6SWf.s 			page 84


4630:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4631:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					earliest possible time. */
4633:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4635:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				#endif
4636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4640:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4642:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4643:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4645:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4649:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4652:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4658:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4660:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4662:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4663:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4669:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4671:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4673:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4674:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4677:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4679:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4681:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4683:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4685:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4686:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
ARM GAS  /tmp/cc4h6SWf.s 			page 85


4687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4691:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4695:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4697:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4698:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			switch( eAction )
4703:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4704:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4707:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4708:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4711:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4712:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4713:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4714:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4715:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4720:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4721:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4722:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4723:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4726:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				case eNoAction :
4729:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4730:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					updated. */
4731:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
4732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4735:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4736:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4739:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
ARM GAS  /tmp/cc4h6SWf.s 			page 86


4744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4747:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4748:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4749:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4750:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4753:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4754:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4756:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4758:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4761:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4762:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4764:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4765:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter to an ISR
4767:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						safe FreeRTOS function. */
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
4769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4770:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4774:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4775:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4778:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4781:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4785:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4787:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
4794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4795:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4800:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
ARM GAS  /tmp/cc4h6SWf.s 			page 87


4801:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4805:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4806:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4807:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4809:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4810:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4814:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4816:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4820:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
4821:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			semaphore. */
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4823:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4825:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4830:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4834:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4838:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4839:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4840:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4841:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4843:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4844:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4850:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					else
4854:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
4855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter in an ISR
4857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						safe FreeRTOS function. */
ARM GAS  /tmp/cc4h6SWf.s 			page 88


4858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
4859:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
4860:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4864:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4865:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4866:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4869:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4870:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4873:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4874:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4876:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
4879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4880:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4881:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4882:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
4884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
4886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
4888:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
4891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
4895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
4898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		return xReturn;
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4903:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
  97              		.loc 1 4907 1 is_stmt 1 view -0
  98              		.cfi_startproc
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
4908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
 101              		.loc 1 4908 1 view .LVU19
4909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
ARM GAS  /tmp/cc4h6SWf.s 			page 89


 102              		.loc 1 4909 1 view .LVU20
4907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
 103              		.loc 1 4907 1 is_stmt 0 view .LVU21
 104 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 105              	.LCFI0:
 106              		.cfi_def_cfa_offset 24
 107              		.cfi_offset 3, -24
 108              		.cfi_offset 4, -20
 109              		.cfi_offset 5, -16
 110              		.cfi_offset 6, -12
 111              		.cfi_offset 7, -8
 112              		.cfi_offset 14, -4
4907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
 113              		.loc 1 4907 1 view .LVU22
 114 0002 0400     		movs	r4, r0
 115              		.loc 1 4909 18 view .LVU23
 116 0004 144B     		ldr	r3, .L14
4910:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4911:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4912:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4913:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
4914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		when the task leaves the Blocked state. */
4916:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
4917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif
4919:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
4921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	as the same list item is used for both lists. */
4922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 117              		.loc 1 4922 35 view .LVU24
 118 0006 154D     		ldr	r5, .L14+4
4909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 119              		.loc 1 4909 18 view .LVU25
 120 0008 1E68     		ldr	r6, [r3]
 121              	.LVL5:
 122              		.loc 1 4922 2 is_stmt 1 view .LVU26
 123              		.loc 1 4922 35 is_stmt 0 view .LVU27
 124 000a 2868     		ldr	r0, [r5]
 125              	.LVL6:
4907:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
 126              		.loc 1 4907 1 view .LVU28
 127 000c 0F00     		movs	r7, r1
 128              		.loc 1 4922 6 view .LVU29
 129 000e 0430     		adds	r0, r0, #4
 130 0010 FFF7FEFF 		bl	uxListRemove
 131              	.LVL7:
4923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4924:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
4925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		check, and the port reset macro can be called directly. */
4926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
4927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4928:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	else
4929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 132              		.loc 1 4930 27 is_stmt 1 view .LVU30
4931:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cc4h6SWf.s 			page 90


4932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
4934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4935:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 133              		.loc 1 4935 3 view .LVU31
 134              		.loc 1 4935 5 is_stmt 0 view .LVU32
 135 0014 631C     		adds	r3, r4, #1
 136 0016 07D1     		bne	.L8
 137              		.loc 1 4935 41 discriminator 1 view .LVU33
 138 0018 002F     		cmp	r7, #0
 139 001a 05D0     		beq	.L8
 140              	.LBB13:
 141              	.LBI13:
4906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 142              		.loc 1 4906 13 is_stmt 1 view .LVU34
 143              	.LVL8:
 144              	.LBB14:
4936:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
4938:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
4939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			indefinitely. */
4940:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 145              		.loc 1 4940 4 view .LVU35
 146              		.loc 1 4940 56 is_stmt 0 view .LVU36
 147 001c 2968     		ldr	r1, [r5]
 148              		.loc 1 4940 4 view .LVU37
 149 001e 1048     		ldr	r0, .L14+8
 150 0020 0431     		adds	r1, r1, #4
 151 0022 FFF7FEFF 		bl	vListInsertEnd
 152              	.LVL9:
4941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4943:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4944:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
4945:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
4946:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			kernel will manage it correctly. */
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
4948:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4949:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
4950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
4951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
4953:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
4955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				list. */
4956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4957:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4958:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
4959:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
4960:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
4961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				is used. */
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
4965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
4966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				needs to be updated too. */
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
ARM GAS  /tmp/cc4h6SWf.s 			page 91


4968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
4970:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4971:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				else
4972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
4973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
 153              		.loc 1 4973 30 is_stmt 1 view .LVU38
 154              	.L7:
 155              		.loc 1 4973 30 is_stmt 0 view .LVU39
 156              	.LBE14:
 157              	.LBE13:
4974:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
4975:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
4976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
4978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#else /* INCLUDE_vTaskSuspend */
4979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
4980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Calculate the time at which the task should be woken if the event
4981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		does not occur.  This may overflow but this doesn't matter, the kernel
4982:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		will manage it correctly. */
4983:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTimeToWake = xConstTickCount + xTicksToWait;
4984:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4985:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* The list item will be inserted in wake time order. */
4986:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
4987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( xTimeToWake < xConstTickCount )
4989:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4990:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* Wake time has overflowed.  Place this item in the overflow list. */
4991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4992:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
4993:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		else
4994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
4995:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* The wake time has not overflowed, so the current block list is used. */
4996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
4997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
4998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			/* If the task entering the blocked state was placed at the head of the
4999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			list of blocked tasks then xNextTaskUnblockTime needs to be updated
5000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			too. */
5001:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xNextTaskUnblockTime )
5002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xNextTaskUnblockTime = xTimeToWake;
5004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			else
5006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
5007:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
5008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
5009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
5010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
5011:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
5012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		( void ) xCanBlockIndefinitely;
5013:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
5014:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
5015:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 158              		.loc 1 5015 1 view .LVU40
 159              		@ sp needed
 160              	.LVL10:
 161              	.LVL11:
ARM GAS  /tmp/cc4h6SWf.s 			page 92


 162              		.loc 1 5015 1 view .LVU41
 163 0026 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 164              	.LVL12:
 165              	.L8:
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 166              		.loc 1 4947 4 is_stmt 1 view .LVU42
4950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 167              		.loc 1 4950 4 is_stmt 0 view .LVU43
 168 0028 2B68     		ldr	r3, [r5]
4947:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 169              		.loc 1 4947 16 view .LVU44
 170 002a 3419     		adds	r4, r6, r4
 171              	.LVL13:
4950:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 172              		.loc 1 4950 4 is_stmt 1 view .LVU45
 173 002c 5C60     		str	r4, [r3, #4]
4952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 174              		.loc 1 4952 4 view .LVU46
4952:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 175              		.loc 1 4952 6 is_stmt 0 view .LVU47
 176 002e A642     		cmp	r6, r4
 177 0030 06D9     		bls	.L10
4956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 178              		.loc 1 4956 5 is_stmt 1 view .LVU48
 179 0032 0C4B     		ldr	r3, .L14+12
 180 0034 1868     		ldr	r0, [r3]
4956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 181              		.loc 1 4956 60 is_stmt 0 view .LVU49
 182 0036 2968     		ldr	r1, [r5]
4956:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 183              		.loc 1 4956 5 view .LVU50
 184 0038 0431     		adds	r1, r1, #4
 185 003a FFF7FEFF 		bl	vListInsert
 186              	.LVL14:
 187 003e F2E7     		b	.L7
 188              	.L10:
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 189              		.loc 1 4962 5 is_stmt 1 view .LVU51
 190 0040 094B     		ldr	r3, .L14+16
 191 0042 1868     		ldr	r0, [r3]
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 192              		.loc 1 4962 52 is_stmt 0 view .LVU52
 193 0044 2968     		ldr	r1, [r5]
4962:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 194              		.loc 1 4962 5 view .LVU53
 195 0046 0431     		adds	r1, r1, #4
 196 0048 FFF7FEFF 		bl	vListInsert
 197              	.LVL15:
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 198              		.loc 1 4967 5 is_stmt 1 view .LVU54
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 199              		.loc 1 4967 21 is_stmt 0 view .LVU55
 200 004c 074B     		ldr	r3, .L14+20
 201 004e 1A68     		ldr	r2, [r3]
4967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 202              		.loc 1 4967 7 view .LVU56
 203 0050 A242     		cmp	r2, r4
ARM GAS  /tmp/cc4h6SWf.s 			page 93


 204 0052 E8D9     		bls	.L7
4969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 205              		.loc 1 4969 6 is_stmt 1 view .LVU57
4969:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 206              		.loc 1 4969 27 is_stmt 0 view .LVU58
 207 0054 1C60     		str	r4, [r3]
4973:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 208              		.loc 1 4973 30 is_stmt 1 view .LVU59
 209              		.loc 1 5015 1 is_stmt 0 view .LVU60
 210 0056 E6E7     		b	.L7
 211              	.L15:
 212              		.align	2
 213              	.L14:
 214 0058 00000000 		.word	.LANCHOR2
 215 005c 00000000 		.word	.LANCHOR3
 216 0060 00000000 		.word	.LANCHOR4
 217 0064 00000000 		.word	.LANCHOR5
 218 0068 00000000 		.word	.LANCHOR0
 219 006c 00000000 		.word	.LANCHOR1
 220              		.cfi_endproc
 221              	.LFE48:
 223              		.section	.text.prvIdleTask,"ax",%progbits
 224              		.align	1
 225              		.syntax unified
 226              		.code	16
 227              		.thumb_func
 228              		.fpu softvfp
 230              	prvIdleTask:
 231              	.LVL16:
 232              	.LFB30:
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 233              		.loc 1 3219 1 is_stmt 1 view -0
 234              		.cfi_startproc
 235              		@ Volatile: function does not return.
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
3219:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
 238              		.loc 1 3219 1 is_stmt 0 view .LVU62
 239 0000 70B5     		push	{r4, r5, r6, lr}
 240              	.LCFI1:
 241              		.cfi_def_cfa_offset 16
 242              		.cfi_offset 4, -16
 243              		.cfi_offset 5, -12
 244              		.cfi_offset 6, -8
 245              		.cfi_offset 14, -4
 246              	.LVL17:
 247              	.L17:
 248              	.LBB20:
 249              	.LBB21:
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 250              		.loc 1 3473 8 is_stmt 1 view .LVU63
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 251              		.loc 1 3473 39 is_stmt 0 view .LVU64
 252 0002 114C     		ldr	r4, .L22
 253 0004 2368     		ldr	r3, [r4]
3473:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 254              		.loc 1 3473 8 view .LVU65
ARM GAS  /tmp/cc4h6SWf.s 			page 94


 255 0006 002B     		cmp	r3, #0
 256 0008 06D1     		bne	.L18
 257              	.LBE21:
 258              	.LBE20:
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 259              		.loc 1 3258 4 is_stmt 1 view .LVU66
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 260              		.loc 1 3258 8 is_stmt 0 view .LVU67
 261 000a 104B     		ldr	r3, .L22+4
 262 000c 1B68     		ldr	r3, [r3]
3258:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 263              		.loc 1 3258 6 view .LVU68
 264 000e 012B     		cmp	r3, #1
 265 0010 F7D9     		bls	.L17
3260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 266              		.loc 1 3260 5 is_stmt 1 view .LVU69
 267 0012 FFF7FEFF 		bl	vPortYield
 268              	.LVL18:
 269 0016 F4E7     		b	.L17
 270              	.L18:
 271              	.LBB25:
 272              	.LBB24:
3475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 273              		.loc 1 3475 4 view .LVU70
 274 0018 FFF7FEFF 		bl	vPortEnterCritical
 275              	.LVL19:
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 276              		.loc 1 3477 5 view .LVU71
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 277              		.loc 1 3477 25 is_stmt 0 view .LVU72
 278 001c 0C4B     		ldr	r3, .L22+8
3477:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 279              		.loc 1 3477 11 view .LVU73
 280 001e DB68     		ldr	r3, [r3, #12]
 281 0020 DD68     		ldr	r5, [r3, #12]
 282              	.LVL20:
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 283              		.loc 1 3478 5 is_stmt 1 view .LVU74
3478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 284              		.loc 1 3478 14 is_stmt 0 view .LVU75
 285 0022 281D     		adds	r0, r5, #4
 286 0024 FFF7FEFF 		bl	uxListRemove
 287              	.LVL21:
3479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 288              		.loc 1 3479 5 is_stmt 1 view .LVU76
 289 0028 0A4A     		ldr	r2, .L22+12
 290 002a 1368     		ldr	r3, [r2]
 291 002c 013B     		subs	r3, r3, #1
 292 002e 1360     		str	r3, [r2]
3480:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 293              		.loc 1 3480 5 view .LVU77
 294 0030 2368     		ldr	r3, [r4]
 295 0032 013B     		subs	r3, r3, #1
 296 0034 2360     		str	r3, [r4]
3482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 297              		.loc 1 3482 4 view .LVU78
 298 0036 FFF7FEFF 		bl	vPortExitCritical
ARM GAS  /tmp/cc4h6SWf.s 			page 95


 299              	.LVL22:
3484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 300              		.loc 1 3484 4 view .LVU79
 301              	.LBB22:
 302              	.LBI22:
3670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 303              		.loc 1 3670 14 view .LVU80
 304              	.LBB23:
3675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 305              		.loc 1 3675 3 view .LVU81
3689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
 306              		.loc 1 3689 4 view .LVU82
 307 003a 286B     		ldr	r0, [r5, #48]
 308 003c FFF7FEFF 		bl	vPortFree
 309              	.LVL23:
3690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 310              		.loc 1 3690 4 view .LVU83
 311 0040 2800     		movs	r0, r5
 312 0042 FFF7FEFF 		bl	vPortFree
 313              	.LVL24:
3719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 314              		.loc 1 3719 2 is_stmt 0 view .LVU84
 315 0046 DCE7     		b	.L17
 316              	.L23:
 317              		.align	2
 318              	.L22:
 319 0048 00000000 		.word	.LANCHOR8
 320 004c 00000000 		.word	pxReadyTasksLists
 321 0050 00000000 		.word	.LANCHOR6
 322 0054 00000000 		.word	.LANCHOR7
 323              	.LBE23:
 324              	.LBE22:
 325              	.LBE24:
 326              	.LBE25:
 327              		.cfi_endproc
 328              	.LFE30:
 330              		.section	.text.xTaskCreate,"ax",%progbits
 331              		.align	1
 332              		.global	xTaskCreate
 333              		.syntax unified
 334              		.code	16
 335              		.thumb_func
 336              		.fpu softvfp
 338              	xTaskCreate:
 339              	.LVL25:
 340              	.LFB0:
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 341              		.loc 1 732 2 is_stmt 1 view -0
 342              		.cfi_startproc
 343              		@ args = 8, pretend = 0, frame = 16
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 733:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 345              		.loc 1 733 2 view .LVU86
 734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 346              		.loc 1 734 2 view .LVU87
 347              	.LBB33:
 763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc4h6SWf.s 			page 96


 348              		.loc 1 763 3 view .LVU88
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 349              		.loc 1 766 4 view .LVU89
 350              	.LBE33:
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 351              		.loc 1 732 2 is_stmt 0 view .LVU90
 352 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 353              	.LCFI2:
 354              		.cfi_def_cfa_offset 20
 355              		.cfi_offset 4, -20
 356              		.cfi_offset 5, -16
 357              		.cfi_offset 6, -12
 358              		.cfi_offset 7, -8
 359              		.cfi_offset 14, -4
 360 0002 85B0     		sub	sp, sp, #20
 361              	.LCFI3:
 362              		.cfi_def_cfa_offset 40
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 363              		.loc 1 732 2 view .LVU91
 364 0004 0293     		str	r3, [sp, #8]
 365              	.LBB34:
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 366              		.loc 1 766 32 view .LVU92
 367 0006 9300     		lsls	r3, r2, #2
 368              	.LVL26:
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 369              		.loc 1 766 32 view .LVU93
 370              	.LBE34:
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 371              		.loc 1 732 2 view .LVU94
 372 0008 0190     		str	r0, [sp, #4]
 373              	.LBB35:
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 374              		.loc 1 766 32 view .LVU95
 375 000a 1800     		movs	r0, r3
 376              	.LVL27:
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 377              		.loc 1 766 32 view .LVU96
 378              	.LBE35:
 732:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 379              		.loc 1 732 2 view .LVU97
 380 000c 0C00     		movs	r4, r1
 381              	.LBB36:
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 382              		.loc 1 766 32 view .LVU98
 383 000e 0093     		str	r3, [sp]
 384 0010 FFF7FEFF 		bl	pvPortMalloc
 385              	.LVL28:
 766:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 386              		.loc 1 766 32 view .LVU99
 387 0014 051E     		subs	r5, r0, #0
 388              	.LVL29:
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 389              		.loc 1 768 4 is_stmt 1 view .LVU100
 768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 390              		.loc 1 768 6 is_stmt 0 view .LVU101
 391 0016 00D1     		bne	.LCB306
ARM GAS  /tmp/cc4h6SWf.s 			page 97


 392 0018 98E0     		b	.L36	@long jump
 393              	.LCB306:
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 394              		.loc 1 771 5 is_stmt 1 view .LVU102
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 395              		.loc 1 771 28 is_stmt 0 view .LVU103
 396 001a 5420     		movs	r0, #84
 397              	.LVL30:
 771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 398              		.loc 1 771 28 view .LVU104
 399 001c FFF7FEFF 		bl	pvPortMalloc
 400              	.LVL31:
 401 0020 061E     		subs	r6, r0, #0
 402              	.LVL32:
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 403              		.loc 1 773 5 is_stmt 1 view .LVU105
 773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 404              		.loc 1 773 7 is_stmt 0 view .LVU106
 405 0022 00D1     		bne	.LCB315
 406 0024 8FE0     		b	.L26	@long jump
 407              	.LCB315:
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 408              		.loc 1 776 6 is_stmt 1 view .LVU107
 409              	.LBE36:
 410              	.LBB37:
 411              	.LBB38:
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 412              		.loc 1 887 29 is_stmt 0 view .LVU108
 413 0026 0200     		movs	r2, r0
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 414              		.loc 1 885 9 view .LVU109
 415 0028 0023     		movs	r3, #0
 416              	.LBE38:
 417              	.LBE37:
 418              	.LBB40:
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 419              		.loc 1 776 24 view .LVU110
 420 002a 0563     		str	r5, [r0, #48]
 776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 421              		.loc 1 776 24 view .LVU111
 422              	.LBE40:
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 423              		.loc 1 792 3 is_stmt 1 view .LVU112
 802:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 424              		.loc 1 802 4 view .LVU113
 425              	.LVL33:
 426              	.LBB41:
 427              	.LBI37:
 817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 428              		.loc 1 817 13 view .LVU114
 429              	.LBB39:
 826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 430              		.loc 1 826 1 view .LVU115
 827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 431              		.loc 1 827 1 view .LVU116
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 432              		.loc 1 857 3 view .LVU117
ARM GAS  /tmp/cc4h6SWf.s 			page 98


 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 433              		.loc 1 858 3 view .LVU118
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 434              		.loc 1 861 3 view .LVU119
 861:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 435              		.loc 1 861 124 view .LVU120
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 436              		.loc 1 885 2 view .LVU121
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 437              		.loc 1 885 30 view .LVU122
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 438              		.loc 1 887 29 is_stmt 0 view .LVU123
 439 002c 3432     		adds	r2, r2, #52
 440              	.LVL34:
 441              	.L27:
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 442              		.loc 1 887 3 is_stmt 1 view .LVU124
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 443              		.loc 1 887 37 is_stmt 0 view .LVU125
 444 002e E15C     		ldrb	r1, [r4, r3]
 887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 445              		.loc 1 887 29 view .LVU126
 446 0030 D154     		strb	r1, [r2, r3]
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 447              		.loc 1 892 3 is_stmt 1 view .LVU127
 892:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 448              		.loc 1 892 5 is_stmt 0 view .LVU128
 449 0032 E15C     		ldrb	r1, [r4, r3]
 450 0034 0029     		cmp	r1, #0
 451 0036 02D0     		beq	.L28
 898:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 452              		.loc 1 898 28 is_stmt 1 view .LVU129
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 453              		.loc 1 885 75 view .LVU130
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 454              		.loc 1 885 76 is_stmt 0 view .LVU131
 455 0038 0133     		adds	r3, r3, #1
 456              	.LVL35:
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 457              		.loc 1 885 30 is_stmt 1 view .LVU132
 885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 458              		.loc 1 885 2 is_stmt 0 view .LVU133
 459 003a 102B     		cmp	r3, #16
 460 003c F7D1     		bne	.L27
 461              	.L28:
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 462              		.loc 1 904 2 is_stmt 1 view .LVU134
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 463              		.loc 1 904 54 is_stmt 0 view .LVU135
 464 003e 3300     		movs	r3, r6
 465              	.LVL36:
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 466              		.loc 1 904 54 view .LVU136
 467 0040 0027     		movs	r7, #0
 468 0042 0A9C     		ldr	r4, [sp, #40]
 469              	.LVL37:
 904:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc4h6SWf.s 			page 99


 470              		.loc 1 904 54 view .LVU137
 471 0044 4333     		adds	r3, r3, #67
 472 0046 1F70     		strb	r7, [r3]
 908:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 473              		.loc 1 908 2 is_stmt 1 view .LVU138
 474 0048 062C     		cmp	r4, #6
 475 004a 00D9     		bls	.L29
 476 004c 0624     		movs	r4, #6
 477              	.L29:
 478              	.LVL38:
 914:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 479              		.loc 1 914 27 view .LVU139
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 480              		.loc 1 917 2 view .LVU140
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 481              		.loc 1 925 2 is_stmt 0 view .LVU141
 482 004e 331D     		adds	r3, r6, #4
 483 0050 1800     		movs	r0, r3
 484              	.LVL39:
 917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 485              		.loc 1 917 23 view .LVU142
 486 0052 F462     		str	r4, [r6, #44]
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 487              		.loc 1 920 3 is_stmt 1 view .LVU143
 920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 488              		.loc 1 920 28 is_stmt 0 view .LVU144
 489 0054 7464     		str	r4, [r6, #68]
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 490              		.loc 1 921 3 is_stmt 1 view .LVU145
 921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 491              		.loc 1 921 27 is_stmt 0 view .LVU146
 492 0056 B764     		str	r7, [r6, #72]
 925:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 493              		.loc 1 925 2 is_stmt 1 view .LVU147
 494 0058 0393     		str	r3, [sp, #12]
 495 005a FFF7FEFF 		bl	vListInitialiseItem
 496              	.LVL40:
 926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 497              		.loc 1 926 2 view .LVU148
 498 005e 3000     		movs	r0, r6
 499 0060 1830     		adds	r0, r0, #24
 500 0062 FFF7FEFF 		bl	vListInitialiseItem
 501              	.LVL41:
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 502              		.loc 1 930 2 view .LVU149
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 503              		.loc 1 933 2 is_stmt 0 view .LVU150
 504 0066 0723     		movs	r3, #7
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 505              		.loc 1 977 27 view .LVU151
 506 0068 3200     		movs	r2, r6
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 507              		.loc 1 857 36 view .LVU152
 508 006a 0098     		ldr	r0, [sp]
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 509              		.loc 1 933 2 view .LVU153
 510 006c 1C1B     		subs	r4, r3, r4
ARM GAS  /tmp/cc4h6SWf.s 			page 100


 511              	.LVL42:
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 512              		.loc 1 857 36 view .LVU154
 513 006e 0438     		subs	r0, r0, #4
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 514              		.loc 1 977 27 view .LVU155
 515 0070 5032     		adds	r2, r2, #80
 857:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 516              		.loc 1 857 16 view .LVU156
 517 0072 2818     		adds	r0, r5, r0
 930:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 518              		.loc 1 930 2 view .LVU157
 519 0074 3661     		str	r6, [r6, #16]
 933:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 520              		.loc 1 933 2 is_stmt 1 view .LVU158
 521 0076 B461     		str	r4, [r6, #24]
 934:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 522              		.loc 1 934 2 view .LVU159
 523 0078 7662     		str	r6, [r6, #36]
 961:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 524              		.loc 1 961 3 view .LVU160
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 525              		.loc 1 976 3 view .LVU161
 976:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 526              		.loc 1 976 29 is_stmt 0 view .LVU162
 527 007a F764     		str	r7, [r6, #76]
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 528              		.loc 1 977 3 is_stmt 1 view .LVU163
 858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 529              		.loc 1 858 81 is_stmt 0 view .LVU164
 530 007c 9843     		bics	r0, r3
 977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 531              		.loc 1 977 27 view .LVU165
 532 007e 1770     		strb	r7, [r2]
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 533              		.loc 1 1004 3 is_stmt 1 view .LVU166
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 534              		.loc 1 1004 28 is_stmt 0 view .LVU167
 535 0080 0199     		ldr	r1, [sp, #4]
 536 0082 029A     		ldr	r2, [sp, #8]
 537 0084 FFF7FEFF 		bl	pxPortInitialiseStack
 538              	.LVL43:
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 539              		.loc 1 1008 4 view .LVU168
 540 0088 0B9B     		ldr	r3, [sp, #44]
1004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 541              		.loc 1 1004 26 view .LVU169
 542 008a 3060     		str	r0, [r6]
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 543              		.loc 1 1008 2 is_stmt 1 view .LVU170
1008:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 544              		.loc 1 1008 4 is_stmt 0 view .LVU171
 545 008c 002B     		cmp	r3, #0
 546 008e 00D0     		beq	.L30
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 547              		.loc 1 1012 3 is_stmt 1 view .LVU172
1012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cc4h6SWf.s 			page 101


 548              		.loc 1 1012 18 is_stmt 0 view .LVU173
 549 0090 1E60     		str	r6, [r3]
 550              	.L30:
1016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 551              		.loc 1 1016 27 is_stmt 1 view .LVU174
 552              	.LVL44:
1016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 553              		.loc 1 1016 27 is_stmt 0 view .LVU175
 554              	.LBE39:
 555              	.LBE41:
 803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 556              		.loc 1 803 4 is_stmt 1 view .LVU176
 557              	.LBB42:
 558              	.LBI42:
1021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 559              		.loc 1 1021 13 view .LVU177
 560              	.LBB43:
1025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 561              		.loc 1 1025 2 view .LVU178
 562 0092 FFF7FEFF 		bl	vPortEnterCritical
 563              	.LVL45:
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 564              		.loc 1 1027 3 view .LVU179
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 565              		.loc 1 1027 25 is_stmt 0 view .LVU180
 566 0096 344B     		ldr	r3, .L47
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 567              		.loc 1 1028 20 view .LVU181
 568 0098 344C     		ldr	r4, .L47+4
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 569              		.loc 1 1027 25 view .LVU182
 570 009a 1A68     		ldr	r2, [r3]
 571 009c 344D     		ldr	r5, .L47+8
 572              	.LVL46:
1027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 573              		.loc 1 1027 25 view .LVU183
 574 009e 0132     		adds	r2, r2, #1
 575 00a0 1A60     		str	r2, [r3]
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 576              		.loc 1 1028 3 is_stmt 1 view .LVU184
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 577              		.loc 1 1028 20 is_stmt 0 view .LVU185
 578 00a2 2268     		ldr	r2, [r4]
1028:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 579              		.loc 1 1028 5 view .LVU186
 580 00a4 002A     		cmp	r2, #0
 581 00a6 54D1     		bne	.L31
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 582              		.loc 1 1032 4 is_stmt 1 view .LVU187
1032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 583              		.loc 1 1032 17 is_stmt 0 view .LVU188
 584 00a8 2660     		str	r6, [r4]
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 585              		.loc 1 1034 4 is_stmt 1 view .LVU189
1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 586              		.loc 1 1034 31 is_stmt 0 view .LVU190
 587 00aa 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/cc4h6SWf.s 			page 102


1034:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 588              		.loc 1 1034 6 view .LVU191
 589 00ac 012B     		cmp	r3, #1
 590 00ae 29D1     		bne	.L33
 591              	.LVL47:
 592              	.LBB44:
 593              	.LBB45:
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 594              		.loc 1 3436 3 is_stmt 1 view .LVU192
 595 00b0 3048     		ldr	r0, .L47+12
 596 00b2 FFF7FEFF 		bl	vListInitialise
 597              	.LVL48:
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 598              		.loc 1 3434 91 view .LVU193
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 599              		.loc 1 3434 40 view .LVU194
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 600              		.loc 1 3436 3 view .LVU195
 601 00b6 3048     		ldr	r0, .L47+16
 602 00b8 FFF7FEFF 		bl	vListInitialise
 603              	.LVL49:
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 604              		.loc 1 3434 91 view .LVU196
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 605              		.loc 1 3434 40 view .LVU197
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 606              		.loc 1 3436 3 view .LVU198
 607 00bc 2F48     		ldr	r0, .L47+20
 608 00be FFF7FEFF 		bl	vListInitialise
 609              	.LVL50:
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 610              		.loc 1 3434 91 view .LVU199
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 611              		.loc 1 3434 40 view .LVU200
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 612              		.loc 1 3436 3 view .LVU201
 613 00c2 2F48     		ldr	r0, .L47+24
 614 00c4 FFF7FEFF 		bl	vListInitialise
 615              	.LVL51:
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 616              		.loc 1 3434 91 view .LVU202
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 617              		.loc 1 3434 40 view .LVU203
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 618              		.loc 1 3436 3 view .LVU204
 619 00c8 2E48     		ldr	r0, .L47+28
 620 00ca FFF7FEFF 		bl	vListInitialise
 621              	.LVL52:
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 622              		.loc 1 3434 91 view .LVU205
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 623              		.loc 1 3434 40 view .LVU206
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 624              		.loc 1 3436 3 view .LVU207
 625 00ce 2E48     		ldr	r0, .L47+32
 626 00d0 FFF7FEFF 		bl	vListInitialise
 627              	.LVL53:
ARM GAS  /tmp/cc4h6SWf.s 			page 103


3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 628              		.loc 1 3434 91 view .LVU208
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 629              		.loc 1 3434 40 view .LVU209
3436:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 630              		.loc 1 3436 3 view .LVU210
 631 00d4 2D48     		ldr	r0, .L47+36
 632 00d6 FFF7FEFF 		bl	vListInitialise
 633              	.LVL54:
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 634              		.loc 1 3434 91 view .LVU211
3434:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 635              		.loc 1 3434 40 view .LVU212
3439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 636              		.loc 1 3439 2 view .LVU213
 637 00da 2D4F     		ldr	r7, .L47+40
 638 00dc 3800     		movs	r0, r7
 639 00de FFF7FEFF 		bl	vListInitialise
 640              	.LVL55:
3440:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 641              		.loc 1 3440 2 view .LVU214
 642 00e2 2C48     		ldr	r0, .L47+44
 643 00e4 FFF7FEFF 		bl	vListInitialise
 644              	.LVL56:
3441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 645              		.loc 1 3441 2 view .LVU215
 646 00e8 2B48     		ldr	r0, .L47+48
 647 00ea FFF7FEFF 		bl	vListInitialise
 648              	.LVL57:
3445:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 649              		.loc 1 3445 3 view .LVU216
 650 00ee 2B48     		ldr	r0, .L47+52
 651 00f0 FFF7FEFF 		bl	vListInitialise
 652              	.LVL58:
3451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 653              		.loc 1 3451 3 view .LVU217
 654 00f4 2A48     		ldr	r0, .L47+56
 655 00f6 FFF7FEFF 		bl	vListInitialise
 656              	.LVL59:
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 657              		.loc 1 3457 2 view .LVU218
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 658              		.loc 1 3457 20 is_stmt 0 view .LVU219
 659 00fa 2A4B     		ldr	r3, .L47+60
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 660              		.loc 1 3458 28 view .LVU220
 661 00fc 254A     		ldr	r2, .L47+44
3457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 662              		.loc 1 3457 20 view .LVU221
 663 00fe 1F60     		str	r7, [r3]
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 664              		.loc 1 3458 2 is_stmt 1 view .LVU222
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 665              		.loc 1 3458 28 is_stmt 0 view .LVU223
 666 0100 294B     		ldr	r3, .L47+64
 667 0102 1A60     		str	r2, [r3]
 668              	.LVL60:
ARM GAS  /tmp/cc4h6SWf.s 			page 104


 669              	.L33:
3458:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 670              		.loc 1 3458 28 view .LVU224
 671              	.LBE45:
 672              	.LBE44:
1064:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 673              		.loc 1 1064 29 is_stmt 1 view .LVU225
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 674              		.loc 1 1068 3 view .LVU226
1068:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 675              		.loc 1 1068 15 is_stmt 0 view .LVU227
 676 0104 294A     		ldr	r2, .L47+68
 677 0106 1368     		ldr	r3, [r2]
 678 0108 0133     		adds	r3, r3, #1
 679 010a 1360     		str	r3, [r2]
1076:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 680              		.loc 1 1076 31 is_stmt 1 view .LVU228
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 681              		.loc 1 1078 3 view .LVU229
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 682              		.loc 1 1078 3 view .LVU230
 683 010c 284A     		ldr	r2, .L47+72
 684 010e F36A     		ldr	r3, [r6, #44]
 685 0110 1168     		ldr	r1, [r2]
 686 0112 8B42     		cmp	r3, r1
 687 0114 00D9     		bls	.L35
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 688              		.loc 1 1078 3 view .LVU231
 689 0116 1360     		str	r3, [r2]
 690              	.L35:
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 691              		.loc 1 1078 3 view .LVU232
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 692              		.loc 1 1078 3 view .LVU233
 693 0118 1420     		movs	r0, #20
 694 011a 5843     		muls	r0, r3
 695 011c 154B     		ldr	r3, .L47+12
 696 011e 311D     		adds	r1, r6, #4
 697 0120 1818     		adds	r0, r3, r0
 698 0122 FFF7FEFF 		bl	vListInsertEnd
 699              	.LVL61:
1078:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 700              		.loc 1 1078 36 view .LVU234
1080:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 701              		.loc 1 1080 3 view .LVU235
1082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 702              		.loc 1 1082 2 view .LVU236
 703 0126 FFF7FEFF 		bl	vPortExitCritical
 704              	.LVL62:
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 705              		.loc 1 1084 2 view .LVU237
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 706              		.loc 1 1084 24 is_stmt 0 view .LVU238
 707 012a 2B68     		ldr	r3, [r5]
 708              	.LBE43:
 709              	.LBE42:
 804:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc4h6SWf.s 			page 105


 710              		.loc 1 804 12 view .LVU239
 711 012c 0125     		movs	r5, #1
 712              	.LBB48:
 713              	.LBB46:
1084:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 714              		.loc 1 1084 4 view .LVU240
 715 012e 002B     		cmp	r3, #0
 716 0130 06D0     		beq	.L24
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 717              		.loc 1 1088 3 is_stmt 1 view .LVU241
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 718              		.loc 1 1088 19 is_stmt 0 view .LVU242
 719 0132 2368     		ldr	r3, [r4]
1088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 720              		.loc 1 1088 5 view .LVU243
 721 0134 DA6A     		ldr	r2, [r3, #44]
 722 0136 F36A     		ldr	r3, [r6, #44]
 723 0138 9A42     		cmp	r2, r3
 724 013a 01D2     		bcs	.L24
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 725              		.loc 1 1090 4 is_stmt 1 view .LVU244
 726 013c FFF7FEFF 		bl	vPortYield
 727              	.LVL63:
 728              	.L24:
1090:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 729              		.loc 1 1090 4 is_stmt 0 view .LVU245
 730              	.LBE46:
 731              	.LBE48:
 812:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 732              		.loc 1 812 2 view .LVU246
 733 0140 2800     		movs	r0, r5
 734 0142 05B0     		add	sp, sp, #20
 735              		@ sp needed
 736 0144 F0BD     		pop	{r4, r5, r6, r7, pc}
 737              	.LVL64:
 738              	.L26:
 739              	.LBB49:
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 740              		.loc 1 782 6 is_stmt 1 view .LVU247
 741 0146 2800     		movs	r0, r5
 742              	.LVL65:
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 743              		.loc 1 782 6 is_stmt 0 view .LVU248
 744 0148 FFF7FEFF 		bl	vPortFree
 745              	.LVL66:
 782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 746              		.loc 1 782 6 view .LVU249
 747              	.LBE49:
 792:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 748              		.loc 1 792 3 is_stmt 1 view .LVU250
 749              	.L36:
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 750              		.loc 1 808 12 is_stmt 0 view .LVU251
 751 014c 0125     		movs	r5, #1
 752              	.LVL67:
 808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 753              		.loc 1 808 12 view .LVU252
ARM GAS  /tmp/cc4h6SWf.s 			page 106


 754 014e 6D42     		rsbs	r5, r5, #0
 755 0150 F6E7     		b	.L24
 756              	.LVL68:
 757              	.L31:
 758              	.LBB50:
 759              	.LBB47:
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 760              		.loc 1 1051 4 is_stmt 1 view .LVU253
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 761              		.loc 1 1051 26 is_stmt 0 view .LVU254
 762 0152 2B68     		ldr	r3, [r5]
1051:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 763              		.loc 1 1051 6 view .LVU255
 764 0154 002B     		cmp	r3, #0
 765 0156 D5D1     		bne	.L33
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 766              		.loc 1 1053 5 is_stmt 1 view .LVU256
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 767              		.loc 1 1053 21 is_stmt 0 view .LVU257
 768 0158 2368     		ldr	r3, [r4]
1053:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 769              		.loc 1 1053 7 view .LVU258
 770 015a F26A     		ldr	r2, [r6, #44]
 771 015c DB6A     		ldr	r3, [r3, #44]
 772 015e 9342     		cmp	r3, r2
 773 0160 D0D8     		bhi	.L33
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 774              		.loc 1 1055 6 is_stmt 1 view .LVU259
1055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 775              		.loc 1 1055 19 is_stmt 0 view .LVU260
 776 0162 2660     		str	r6, [r4]
 777 0164 CEE7     		b	.L33
 778              	.L48:
 779 0166 C046     		.align	2
 780              	.L47:
 781 0168 00000000 		.word	.LANCHOR7
 782 016c 00000000 		.word	.LANCHOR3
 783 0170 00000000 		.word	.LANCHOR12
 784 0174 00000000 		.word	pxReadyTasksLists
 785 0178 14000000 		.word	pxReadyTasksLists+20
 786 017c 28000000 		.word	pxReadyTasksLists+40
 787 0180 3C000000 		.word	pxReadyTasksLists+60
 788 0184 50000000 		.word	pxReadyTasksLists+80
 789 0188 64000000 		.word	pxReadyTasksLists+100
 790 018c 78000000 		.word	pxReadyTasksLists+120
 791 0190 00000000 		.word	.LANCHOR9
 792 0194 00000000 		.word	.LANCHOR10
 793 0198 00000000 		.word	.LANCHOR11
 794 019c 00000000 		.word	.LANCHOR6
 795 01a0 00000000 		.word	.LANCHOR4
 796 01a4 00000000 		.word	.LANCHOR0
 797 01a8 00000000 		.word	.LANCHOR5
 798 01ac 00000000 		.word	.LANCHOR13
 799 01b0 00000000 		.word	.LANCHOR14
 800              	.LBE47:
 801              	.LBE50:
 802              		.cfi_endproc
ARM GAS  /tmp/cc4h6SWf.s 			page 107


 803              	.LFE0:
 805              		.section	.text.vTaskDelete,"ax",%progbits
 806              		.align	1
 807              		.global	vTaskDelete
 808              		.syntax unified
 809              		.code	16
 810              		.thumb_func
 811              		.fpu softvfp
 813              	vTaskDelete:
 814              	.LVL69:
 815              	.LFB3:
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 816              		.loc 1 1107 2 is_stmt 1 view -0
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 0
 819              		@ frame_needed = 0, uses_anonymous_args = 0
1108:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 820              		.loc 1 1108 2 view .LVU262
1110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 821              		.loc 1 1110 3 view .LVU263
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 822              		.loc 1 1107 2 is_stmt 0 view .LVU264
 823 0000 70B5     		push	{r4, r5, r6, lr}
 824              	.LCFI4:
 825              		.cfi_def_cfa_offset 16
 826              		.cfi_offset 4, -16
 827              		.cfi_offset 5, -12
 828              		.cfi_offset 6, -8
 829              		.cfi_offset 14, -4
1107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 830              		.loc 1 1107 2 view .LVU265
 831 0002 0400     		movs	r4, r0
1110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 832              		.loc 1 1110 3 view .LVU266
 833 0004 FFF7FEFF 		bl	vPortEnterCritical
 834              	.LVL70:
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 835              		.loc 1 1114 4 is_stmt 1 view .LVU267
 836 0008 1E4D     		ldr	r5, .L63
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 837              		.loc 1 1114 12 is_stmt 0 view .LVU268
 838 000a 002C     		cmp	r4, #0
 839 000c 00D1     		bne	.L50
1114:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 840              		.loc 1 1114 12 discriminator 1 view .LVU269
 841 000e 2C68     		ldr	r4, [r5]
 842              	.LVL71:
 843              	.L50:
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 844              		.loc 1 1117 4 is_stmt 1 discriminator 4 view .LVU270
1117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 845              		.loc 1 1117 8 is_stmt 0 discriminator 4 view .LVU271
 846 0010 261D     		adds	r6, r4, #4
 847 0012 3000     		movs	r0, r6
 848 0014 FFF7FEFF 		bl	uxListRemove
 849              	.LVL72:
1123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cc4h6SWf.s 			page 108


 850              		.loc 1 1123 29 is_stmt 1 discriminator 4 view .LVU272
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 851              		.loc 1 1127 4 discriminator 4 view .LVU273
1127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 852              		.loc 1 1127 6 is_stmt 0 discriminator 4 view .LVU274
 853 0018 A36A     		ldr	r3, [r4, #40]
 854 001a 002B     		cmp	r3, #0
 855 001c 03D0     		beq	.L51
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 856              		.loc 1 1129 5 is_stmt 1 view .LVU275
1129:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 857              		.loc 1 1129 14 is_stmt 0 view .LVU276
 858 001e 2000     		movs	r0, r4
 859 0020 1830     		adds	r0, r0, #24
 860 0022 FFF7FEFF 		bl	uxListRemove
 861              	.LVL73:
 862              	.L51:
1133:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 863              		.loc 1 1133 29 is_stmt 1 view .LVU277
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 864              		.loc 1 1140 4 view .LVU278
1140:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 865              		.loc 1 1140 16 is_stmt 0 view .LVU279
 866 0026 184A     		ldr	r2, .L63+4
 867 0028 1368     		ldr	r3, [r2]
 868 002a 0133     		adds	r3, r3, #1
 869 002c 1360     		str	r3, [r2]
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 870              		.loc 1 1142 4 is_stmt 1 view .LVU280
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 871              		.loc 1 1142 14 is_stmt 0 view .LVU281
 872 002e 2B68     		ldr	r3, [r5]
1142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 873              		.loc 1 1142 6 view .LVU282
 874 0030 A342     		cmp	r3, r4
 875 0032 16D1     		bne	.L52
1149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 876              		.loc 1 1149 5 is_stmt 1 view .LVU283
 877 0034 3100     		movs	r1, r6
 878 0036 1548     		ldr	r0, .L63+8
 879 0038 FFF7FEFF 		bl	vListInsertEnd
 880              	.LVL74:
1154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 881              		.loc 1 1154 5 view .LVU284
 882 003c 144A     		ldr	r2, .L63+12
 883 003e 1368     		ldr	r3, [r2]
 884 0040 0133     		adds	r3, r3, #1
 885 0042 1360     		str	r3, [r2]
1161:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 886              		.loc 1 1161 54 view .LVU285
 887              	.L53:
1173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 888              		.loc 1 1173 29 view .LVU286
1175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 889              		.loc 1 1175 3 view .LVU287
 890 0044 FFF7FEFF 		bl	vPortExitCritical
 891              	.LVL75:
ARM GAS  /tmp/cc4h6SWf.s 			page 109


1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 892              		.loc 1 1179 3 view .LVU288
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 893              		.loc 1 1179 25 is_stmt 0 view .LVU289
 894 0048 124B     		ldr	r3, .L63+16
 895 004a 1B68     		ldr	r3, [r3]
1179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 896              		.loc 1 1179 5 view .LVU290
 897 004c 002B     		cmp	r3, #0
 898 004e 17D0     		beq	.L49
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 899              		.loc 1 1181 4 is_stmt 1 view .LVU291
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 900              		.loc 1 1181 14 is_stmt 0 view .LVU292
 901 0050 2B68     		ldr	r3, [r5]
1181:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 902              		.loc 1 1181 6 view .LVU293
 903 0052 A342     		cmp	r3, r4
 904 0054 14D1     		bne	.L49
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 905              		.loc 1 1183 5 is_stmt 1 view .LVU294
 906 0056 104B     		ldr	r3, .L63+20
 907 0058 1B68     		ldr	r3, [r3]
 908 005a 002B     		cmp	r3, #0
 909 005c 0ED0     		beq	.L55
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 910              		.loc 1 1183 5 discriminator 1 view .LVU295
 911              		.syntax divided
 912              	@ 1183 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 913 005e 72B6     		 cpsid i 
 914              	@ 0 "" 2
 915              		.thumb
 916              		.syntax unified
 917              	.L56:
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 918              		.loc 1 1183 5 discriminator 1 view .LVU296
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 919              		.loc 1 1183 5 discriminator 1 view .LVU297
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 920              		.loc 1 1183 5 discriminator 1 view .LVU298
 921 0060 FEE7     		b	.L56
 922              	.L52:
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 923              		.loc 1 1165 5 view .LVU299
 924 0062 0E4A     		ldr	r2, .L63+24
 925              	.LBB53:
 926              	.LBB54:
3689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
 927              		.loc 1 3689 4 is_stmt 0 view .LVU300
 928 0064 206B     		ldr	r0, [r4, #48]
 929              	.LBE54:
 930              	.LBE53:
1165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 931              		.loc 1 1165 5 view .LVU301
 932 0066 1368     		ldr	r3, [r2]
 933 0068 013B     		subs	r3, r3, #1
 934 006a 1360     		str	r3, [r2]
ARM GAS  /tmp/cc4h6SWf.s 			page 110


1166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 935              		.loc 1 1166 5 is_stmt 1 view .LVU302
 936              	.LVL76:
 937              	.LBB56:
 938              	.LBI53:
3670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 939              		.loc 1 3670 14 view .LVU303
 940              	.LBB55:
3675:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 941              		.loc 1 3675 3 view .LVU304
3689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
 942              		.loc 1 3689 4 view .LVU305
 943 006c FFF7FEFF 		bl	vPortFree
 944              	.LVL77:
3690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 945              		.loc 1 3690 4 view .LVU306
 946 0070 2000     		movs	r0, r4
 947 0072 FFF7FEFF 		bl	vPortFree
 948              	.LVL78:
3690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 949              		.loc 1 3690 4 is_stmt 0 view .LVU307
 950              	.LBE55:
 951              	.LBE56:
1170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 952              		.loc 1 1170 5 is_stmt 1 view .LVU308
 953 0076 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 954              	.LVL79:
 955 007a E3E7     		b	.L53
 956              	.L55:
1183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 957              		.loc 1 1183 46 discriminator 2 view .LVU309
1184:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 958              		.loc 1 1184 5 discriminator 2 view .LVU310
 959 007c FFF7FEFF 		bl	vPortYield
 960              	.LVL80:
1188:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 961              		.loc 1 1188 29 discriminator 2 view .LVU311
 962              	.L49:
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 963              		.loc 1 1191 2 is_stmt 0 view .LVU312
 964              		@ sp needed
 965              	.LVL81:
 966              	.LVL82:
1191:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 967              		.loc 1 1191 2 view .LVU313
 968 0080 70BD     		pop	{r4, r5, r6, pc}
 969              	.L64:
 970 0082 C046     		.align	2
 971              	.L63:
 972 0084 00000000 		.word	.LANCHOR3
 973 0088 00000000 		.word	.LANCHOR13
 974 008c 00000000 		.word	.LANCHOR6
 975 0090 00000000 		.word	.LANCHOR8
 976 0094 00000000 		.word	.LANCHOR12
 977 0098 00000000 		.word	.LANCHOR15
 978 009c 00000000 		.word	.LANCHOR7
 979              		.cfi_endproc
ARM GAS  /tmp/cc4h6SWf.s 			page 111


 980              	.LFE3:
 982              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 983              		.align	1
 984              		.global	uxTaskPriorityGet
 985              		.syntax unified
 986              		.code	16
 987              		.thumb_func
 988              		.fpu softvfp
 990              	uxTaskPriorityGet:
 991              	.LVL83:
 992              	.LFB5:
1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 993              		.loc 1 1399 2 is_stmt 1 view -0
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 0
 996              		@ frame_needed = 0, uses_anonymous_args = 0
1400:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
 997              		.loc 1 1400 2 view .LVU315
1401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 998              		.loc 1 1401 2 view .LVU316
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 999              		.loc 1 1403 3 view .LVU317
1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1000              		.loc 1 1399 2 is_stmt 0 view .LVU318
 1001 0000 10B5     		push	{r4, lr}
 1002              	.LCFI5:
 1003              		.cfi_def_cfa_offset 8
 1004              		.cfi_offset 4, -8
 1005              		.cfi_offset 14, -4
1399:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1006              		.loc 1 1399 2 view .LVU319
 1007 0002 0400     		movs	r4, r0
1403:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1008              		.loc 1 1403 3 view .LVU320
 1009 0004 FFF7FEFF 		bl	vPortEnterCritical
 1010              	.LVL84:
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1011              		.loc 1 1407 4 is_stmt 1 view .LVU321
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1012              		.loc 1 1407 12 is_stmt 0 view .LVU322
 1013 0008 002C     		cmp	r4, #0
 1014 000a 01D1     		bne	.L66
1407:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1015              		.loc 1 1407 12 discriminator 1 view .LVU323
 1016 000c 034B     		ldr	r3, .L67
 1017 000e 1C68     		ldr	r4, [r3]
 1018              	.LVL85:
 1019              	.L66:
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1020              		.loc 1 1408 4 is_stmt 1 discriminator 4 view .LVU324
1408:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1021              		.loc 1 1408 13 is_stmt 0 discriminator 4 view .LVU325
 1022 0010 E46A     		ldr	r4, [r4, #44]
 1023              	.LVL86:
1410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1024              		.loc 1 1410 3 is_stmt 1 discriminator 4 view .LVU326
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc4h6SWf.s 			page 112


 1025              		.loc 1 1413 2 is_stmt 0 discriminator 4 view .LVU327
 1026              		@ sp needed
1410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1027              		.loc 1 1410 3 discriminator 4 view .LVU328
 1028 0012 FFF7FEFF 		bl	vPortExitCritical
 1029              	.LVL87:
1412:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1030              		.loc 1 1412 3 is_stmt 1 discriminator 4 view .LVU329
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1031              		.loc 1 1413 2 is_stmt 0 discriminator 4 view .LVU330
 1032 0016 2000     		movs	r0, r4
 1033              	.LVL88:
1413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1034              		.loc 1 1413 2 discriminator 4 view .LVU331
 1035 0018 10BD     		pop	{r4, pc}
 1036              	.L68:
 1037 001a C046     		.align	2
 1038              	.L67:
 1039 001c 00000000 		.word	.LANCHOR3
 1040              		.cfi_endproc
 1041              	.LFE5:
 1043              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1044              		.align	1
 1045              		.global	uxTaskPriorityGetFromISR
 1046              		.syntax unified
 1047              		.code	16
 1048              		.thumb_func
 1049              		.fpu softvfp
 1051              	uxTaskPriorityGetFromISR:
 1052              	.LVL89:
 1053              	.LFB6:
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1054              		.loc 1 1421 2 is_stmt 1 view -0
 1055              		.cfi_startproc
 1056              		@ args = 0, pretend = 0, frame = 0
 1057              		@ frame_needed = 0, uses_anonymous_args = 0
1422:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
 1058              		.loc 1 1422 2 view .LVU333
1423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1059              		.loc 1 1423 2 view .LVU334
1441:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1060              		.loc 1 1441 45 view .LVU335
1443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1061              		.loc 1 1443 3 view .LVU336
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1062              		.loc 1 1421 2 is_stmt 0 view .LVU337
 1063 0000 10B5     		push	{r4, lr}
 1064              	.LCFI6:
 1065              		.cfi_def_cfa_offset 8
 1066              		.cfi_offset 4, -8
 1067              		.cfi_offset 14, -4
1421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1068              		.loc 1 1421 2 view .LVU338
 1069 0002 0400     		movs	r4, r0
1443:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1070              		.loc 1 1443 27 view .LVU339
 1071 0004 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
ARM GAS  /tmp/cc4h6SWf.s 			page 113


 1072              	.LVL90:
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1073              		.loc 1 1447 4 is_stmt 1 view .LVU340
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1074              		.loc 1 1447 12 is_stmt 0 view .LVU341
 1075 0008 002C     		cmp	r4, #0
 1076 000a 01D1     		bne	.L70
1447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1077              		.loc 1 1447 12 discriminator 1 view .LVU342
 1078 000c 034B     		ldr	r3, .L71
 1079 000e 1C68     		ldr	r4, [r3]
 1080              	.LVL91:
 1081              	.L70:
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1082              		.loc 1 1448 4 is_stmt 1 discriminator 4 view .LVU343
1448:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1083              		.loc 1 1448 13 is_stmt 0 discriminator 4 view .LVU344
 1084 0010 E46A     		ldr	r4, [r4, #44]
 1085              	.LVL92:
1450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1086              		.loc 1 1450 3 is_stmt 1 discriminator 4 view .LVU345
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1087              		.loc 1 1453 2 is_stmt 0 discriminator 4 view .LVU346
 1088              		@ sp needed
1450:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1089              		.loc 1 1450 3 discriminator 4 view .LVU347
 1090 0012 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 1091              	.LVL93:
1452:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1092              		.loc 1 1452 3 is_stmt 1 discriminator 4 view .LVU348
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1093              		.loc 1 1453 2 is_stmt 0 discriminator 4 view .LVU349
 1094 0016 2000     		movs	r0, r4
 1095              	.LVL94:
1453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1096              		.loc 1 1453 2 discriminator 4 view .LVU350
 1097 0018 10BD     		pop	{r4, pc}
 1098              	.L72:
 1099 001a C046     		.align	2
 1100              	.L71:
 1101 001c 00000000 		.word	.LANCHOR3
 1102              		.cfi_endproc
 1103              	.LFE6:
 1105              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1106              		.align	1
 1107              		.global	vTaskPrioritySet
 1108              		.syntax unified
 1109              		.code	16
 1110              		.thumb_func
 1111              		.fpu softvfp
 1113              	vTaskPrioritySet:
 1114              	.LVL95:
 1115              	.LFB7:
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1116              		.loc 1 1461 2 is_stmt 1 view -0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc4h6SWf.s 			page 114


 1119              		@ frame_needed = 0, uses_anonymous_args = 0
1462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
 1120              		.loc 1 1462 2 view .LVU352
1463:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1121              		.loc 1 1463 2 view .LVU353
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1122              		.loc 1 1464 2 view .LVU354
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1123              		.loc 1 1466 3 view .LVU355
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1124              		.loc 1 1461 2 is_stmt 0 view .LVU356
 1125 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1126              	.LCFI7:
 1127              		.cfi_def_cfa_offset 24
 1128              		.cfi_offset 3, -24
 1129              		.cfi_offset 4, -20
 1130              		.cfi_offset 5, -16
 1131              		.cfi_offset 6, -12
 1132              		.cfi_offset 7, -8
 1133              		.cfi_offset 14, -4
1461:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 1134              		.loc 1 1461 2 view .LVU357
 1135 0002 0400     		movs	r4, r0
 1136 0004 0D00     		movs	r5, r1
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1137              		.loc 1 1466 3 view .LVU358
 1138 0006 0629     		cmp	r1, #6
 1139 0008 01D9     		bls	.L74
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1140              		.loc 1 1466 3 is_stmt 1 discriminator 1 view .LVU359
 1141              		.syntax divided
 1142              	@ 1466 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1143 000a 72B6     		 cpsid i 
 1144              	@ 0 "" 2
 1145              		.thumb
 1146              		.syntax unified
 1147              	.L75:
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1148              		.loc 1 1466 3 discriminator 1 view .LVU360
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1149              		.loc 1 1466 3 discriminator 1 view .LVU361
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1150              		.loc 1 1466 3 discriminator 1 view .LVU362
 1151 000c FEE7     		b	.L75
 1152              	.L74:
1466:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1153              		.loc 1 1466 59 view .LVU363
1469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1154              		.loc 1 1469 3 view .LVU364
1475:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1155              		.loc 1 1475 28 view .LVU365
1478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1156              		.loc 1 1478 3 view .LVU366
 1157 000e FFF7FEFF 		bl	vPortEnterCritical
 1158              	.LVL96:
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1159              		.loc 1 1482 4 view .LVU367
ARM GAS  /tmp/cc4h6SWf.s 			page 115


1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1160              		.loc 1 1482 12 is_stmt 0 view .LVU368
 1161 0012 002C     		cmp	r4, #0
 1162 0014 01D1     		bne	.L76
1482:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1163              		.loc 1 1482 12 discriminator 1 view .LVU369
 1164 0016 1F4B     		ldr	r3, .L90
 1165 0018 1C68     		ldr	r4, [r3]
 1166              	.LVL97:
 1167              	.L76:
1484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1168              		.loc 1 1484 50 is_stmt 1 discriminator 4 view .LVU370
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1169              		.loc 1 1488 5 discriminator 4 view .LVU371
1488:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1170              		.loc 1 1488 27 is_stmt 0 discriminator 4 view .LVU372
 1171 001a 626C     		ldr	r2, [r4, #68]
 1172              	.LVL98:
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1173              		.loc 1 1496 4 is_stmt 1 discriminator 4 view .LVU373
1496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1174              		.loc 1 1496 6 is_stmt 0 discriminator 4 view .LVU374
 1175 001c 9542     		cmp	r5, r2
 1176 001e 31D0     		beq	.L78
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1177              		.loc 1 1500 5 is_stmt 1 view .LVU375
 1178 0020 1C4B     		ldr	r3, .L90
1500:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1179              		.loc 1 1500 7 is_stmt 0 view .LVU376
 1180 0022 32D9     		bls	.L79
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1181              		.loc 1 1502 6 is_stmt 1 view .LVU377
 1182 0024 0021     		movs	r1, #0
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1183              		.loc 1 1502 16 is_stmt 0 view .LVU378
 1184 0026 1868     		ldr	r0, [r3]
1464:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1185              		.loc 1 1464 13 view .LVU379
 1186 0028 0E00     		movs	r6, r1
1502:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1187              		.loc 1 1502 8 view .LVU380
 1188 002a A042     		cmp	r0, r4
 1189 002c 04D0     		beq	.L80
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1190              		.loc 1 1507 7 is_stmt 1 view .LVU381
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1191              		.loc 1 1507 40 is_stmt 0 view .LVU382
 1192 002e 1B68     		ldr	r3, [r3]
1507:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 1193              		.loc 1 1507 9 view .LVU383
 1194 0030 DB6A     		ldr	r3, [r3, #44]
 1195 0032 9D42     		cmp	r5, r3
 1196 0034 4941     		adcs	r1, r1, r1
 1197 0036 0E00     		movs	r6, r1
 1198              	.L80:
 1199              	.LVL99:
1535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc4h6SWf.s 			page 116


 1200              		.loc 1 1535 5 is_stmt 1 view .LVU384
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1201              		.loc 1 1540 5 view .LVU385
1540:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1202              		.loc 1 1540 27 is_stmt 0 view .LVU386
 1203 0038 E06A     		ldr	r0, [r4, #44]
 1204              	.LVL100:
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1205              		.loc 1 1546 6 is_stmt 1 view .LVU387
1546:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1206              		.loc 1 1546 8 is_stmt 0 view .LVU388
 1207 003a 8242     		cmp	r2, r0
 1208 003c 00D1     		bne	.L81
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1209              		.loc 1 1548 7 is_stmt 1 view .LVU389
1548:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1210              		.loc 1 1548 25 is_stmt 0 view .LVU390
 1211 003e E562     		str	r5, [r4, #44]
 1212              	.L81:
1552:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1213              		.loc 1 1552 31 is_stmt 1 view .LVU391
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1214              		.loc 1 1556 6 view .LVU392
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1215              		.loc 1 1566 7 is_stmt 0 view .LVU393
 1216 0040 A369     		ldr	r3, [r4, #24]
1556:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1217              		.loc 1 1556 28 view .LVU394
 1218 0042 6564     		str	r5, [r4, #68]
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1219              		.loc 1 1566 5 is_stmt 1 view .LVU395
1566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1220              		.loc 1 1566 7 is_stmt 0 view .LVU396
 1221 0044 002B     		cmp	r3, #0
 1222 0046 02DB     		blt	.L82
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1223              		.loc 1 1568 6 is_stmt 1 view .LVU397
 1224 0048 0721     		movs	r1, #7
 1225 004a 4D1B     		subs	r5, r1, r5
 1226              	.LVL101:
1568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1227              		.loc 1 1568 6 is_stmt 0 view .LVU398
 1228 004c A561     		str	r5, [r4, #24]
 1229              	.L82:
1572:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1230              		.loc 1 1572 30 is_stmt 1 view .LVU399
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1231              		.loc 1 1579 5 view .LVU400
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1232              		.loc 1 1579 9 is_stmt 0 view .LVU401
 1233 004e 1423     		movs	r3, #20
 1234 0050 4343     		muls	r3, r0
 1235 0052 114D     		ldr	r5, .L90+4
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1236              		.loc 1 1579 112 view .LVU402
 1237 0054 6269     		ldr	r2, [r4, #20]
 1238              	.LVL102:
ARM GAS  /tmp/cc4h6SWf.s 			page 117


1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1239              		.loc 1 1579 9 view .LVU403
 1240 0056 5B19     		adds	r3, r3, r5
1579:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1241              		.loc 1 1579 112 view .LVU404
 1242 0058 9A42     		cmp	r2, r3
 1243 005a 0FD1     		bne	.L83
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1244              		.loc 1 1584 6 is_stmt 1 view .LVU405
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1245              		.loc 1 1584 10 is_stmt 0 view .LVU406
 1246 005c 271D     		adds	r7, r4, #4
 1247 005e 3800     		movs	r0, r7
 1248              	.LVL103:
1584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1249              		.loc 1 1584 10 view .LVU407
 1250 0060 FFF7FEFF 		bl	uxListRemove
 1251              	.LVL104:
1593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1252              		.loc 1 1593 31 is_stmt 1 view .LVU408
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1253              		.loc 1 1595 6 view .LVU409
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1254              		.loc 1 1595 6 view .LVU410
 1255 0064 0D4A     		ldr	r2, .L90+8
 1256 0066 E36A     		ldr	r3, [r4, #44]
 1257 0068 1168     		ldr	r1, [r2]
 1258 006a 8B42     		cmp	r3, r1
 1259 006c 00D9     		bls	.L84
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1260              		.loc 1 1595 6 discriminator 1 view .LVU411
 1261 006e 1360     		str	r3, [r2]
 1262              	.L84:
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1263              		.loc 1 1595 6 discriminator 3 view .LVU412
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1264              		.loc 1 1595 6 discriminator 3 view .LVU413
 1265 0070 1420     		movs	r0, #20
 1266 0072 5843     		muls	r0, r3
 1267 0074 3900     		movs	r1, r7
 1268 0076 2818     		adds	r0, r5, r0
 1269 0078 FFF7FEFF 		bl	vListInsertEnd
 1270              	.LVL105:
1595:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1271              		.loc 1 1595 36 discriminator 3 view .LVU414
 1272              	.L83:
1599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1273              		.loc 1 1599 30 view .LVU415
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1274              		.loc 1 1602 5 view .LVU416
1602:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1275              		.loc 1 1602 7 is_stmt 0 view .LVU417
 1276 007c 002E     		cmp	r6, #0
 1277 007e 01D0     		beq	.L78
1604:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1278              		.loc 1 1604 6 is_stmt 1 view .LVU418
 1279 0080 FFF7FEFF 		bl	vPortYield
ARM GAS  /tmp/cc4h6SWf.s 			page 118


 1280              	.LVL106:
 1281              	.L78:
1608:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1282              		.loc 1 1608 30 view .LVU419
1613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1283              		.loc 1 1613 5 view .LVU420
1616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1284              		.loc 1 1616 3 view .LVU421
 1285 0084 FFF7FEFF 		bl	vPortExitCritical
 1286              	.LVL107:
1617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1287              		.loc 1 1617 2 is_stmt 0 view .LVU422
 1288              		@ sp needed
 1289              	.LVL108:
1617:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1290              		.loc 1 1617 2 view .LVU423
 1291 0088 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1292              	.LVL109:
 1293              	.L79:
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1294              		.loc 1 1523 10 is_stmt 1 view .LVU424
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1295              		.loc 1 1523 20 is_stmt 0 view .LVU425
 1296 008a 1E68     		ldr	r6, [r3]
1523:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1297              		.loc 1 1523 12 view .LVU426
 1298 008c 361B     		subs	r6, r6, r4
1509:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 1299              		.loc 1 1509 23 view .LVU427
 1300 008e 7342     		rsbs	r3, r6, #0
 1301 0090 5E41     		adcs	r6, r6, r3
 1302 0092 D1E7     		b	.L80
 1303              	.L91:
 1304              		.align	2
 1305              	.L90:
 1306 0094 00000000 		.word	.LANCHOR3
 1307 0098 00000000 		.word	pxReadyTasksLists
 1308 009c 00000000 		.word	.LANCHOR14
 1309              		.cfi_endproc
 1310              	.LFE7:
 1312              		.section	.text.vTaskResume,"ax",%progbits
 1313              		.align	1
 1314              		.global	vTaskResume
 1315              		.syntax unified
 1316              		.code	16
 1317              		.thumb_func
 1318              		.fpu softvfp
 1320              	vTaskResume:
 1321              	.LVL110:
 1322              	.LFB10:
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1323              		.loc 1 1772 2 is_stmt 1 view -0
 1324              		.cfi_startproc
 1325              		@ args = 0, pretend = 0, frame = 0
 1326              		@ frame_needed = 0, uses_anonymous_args = 0
1773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1327              		.loc 1 1773 2 view .LVU429
ARM GAS  /tmp/cc4h6SWf.s 			page 119


1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1328              		.loc 1 1776 3 view .LVU430
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1329              		.loc 1 1772 2 is_stmt 0 view .LVU431
 1330 0000 70B5     		push	{r4, r5, r6, lr}
 1331              	.LCFI8:
 1332              		.cfi_def_cfa_offset 16
 1333              		.cfi_offset 4, -16
 1334              		.cfi_offset 5, -12
 1335              		.cfi_offset 6, -8
 1336              		.cfi_offset 14, -4
1772:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1337              		.loc 1 1772 2 view .LVU432
 1338 0002 041E     		subs	r4, r0, #0
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1339              		.loc 1 1776 3 view .LVU433
 1340 0004 01D1     		bne	.L93
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1341              		.loc 1 1776 3 is_stmt 1 discriminator 1 view .LVU434
 1342              		.syntax divided
 1343              	@ 1776 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1344 0006 72B6     		 cpsid i 
 1345              	@ 0 "" 2
 1346              		.thumb
 1347              		.syntax unified
 1348              	.L94:
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1349              		.loc 1 1776 3 discriminator 1 view .LVU435
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1350              		.loc 1 1776 3 discriminator 1 view .LVU436
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1351              		.loc 1 1776 3 discriminator 1 view .LVU437
 1352 0008 FEE7     		b	.L94
 1353              	.L93:
1776:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1354              		.loc 1 1776 32 discriminator 1 view .LVU438
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1355              		.loc 1 1780 3 discriminator 1 view .LVU439
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1356              		.loc 1 1780 36 is_stmt 0 discriminator 1 view .LVU440
 1357 000a 154D     		ldr	r5, .L100
 1358 000c 2B68     		ldr	r3, [r5]
1780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1359              		.loc 1 1780 25 discriminator 1 view .LVU441
 1360 000e 8342     		cmp	r3, r0
 1361 0010 25D0     		beq	.L92
1782:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1362              		.loc 1 1782 4 is_stmt 1 view .LVU442
 1363 0012 FFF7FEFF 		bl	vPortEnterCritical
 1364              	.LVL111:
1784:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1365              		.loc 1 1784 5 view .LVU443
 1366              	.LBB61:
 1367              	.LBI61:
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1368              		.loc 1 1725 20 view .LVU444
 1369              	.LBB62:
ARM GAS  /tmp/cc4h6SWf.s 			page 120


1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
 1370              		.loc 1 1727 2 view .LVU445
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1371              		.loc 1 1728 2 view .LVU446
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1372              		.loc 1 1734 3 view .LVU447
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1373              		.loc 1 1734 24 view .LVU448
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1374              		.loc 1 1737 3 view .LVU449
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1375              		.loc 1 1737 82 is_stmt 0 view .LVU450
 1376 0016 134B     		ldr	r3, .L100+4
 1377 0018 6269     		ldr	r2, [r4, #20]
 1378 001a 9A42     		cmp	r2, r3
 1379 001c 1DD1     		bne	.L97
 1380              	.LVL112:
 1381              	.LBB63:
 1382              	.LBI63:
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1383              		.loc 1 1725 20 is_stmt 1 view .LVU451
 1384              	.LBB64:
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1385              		.loc 1 1740 4 view .LVU452
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1386              		.loc 1 1740 8 is_stmt 0 view .LVU453
 1387 001e A36A     		ldr	r3, [r4, #40]
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1388              		.loc 1 1740 6 view .LVU454
 1389 0020 114A     		ldr	r2, .L100+8
 1390 0022 9342     		cmp	r3, r2
 1391 0024 19D0     		beq	.L97
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1392              		.loc 1 1744 5 is_stmt 1 view .LVU455
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1393              		.loc 1 1744 69 is_stmt 0 view .LVU456
 1394 0026 002B     		cmp	r3, #0
 1395 0028 17D1     		bne	.L97
 1396              	.LVL113:
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1397              		.loc 1 1744 69 view .LVU457
 1398              	.LBE64:
 1399              	.LBE63:
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1400              		.loc 1 1760 28 is_stmt 1 view .LVU458
1763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 1401              		.loc 1 1763 3 view .LVU459
1763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 1402              		.loc 1 1763 3 is_stmt 0 view .LVU460
 1403              	.LBE62:
 1404              	.LBE61:
1786:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1405              		.loc 1 1786 31 is_stmt 1 view .LVU461
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1406              		.loc 1 1790 6 view .LVU462
1790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1407              		.loc 1 1790 15 is_stmt 0 view .LVU463
ARM GAS  /tmp/cc4h6SWf.s 			page 121


 1408 002a 261D     		adds	r6, r4, #4
 1409 002c 3000     		movs	r0, r6
 1410 002e FFF7FEFF 		bl	uxListRemove
 1411              	.LVL114:
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1412              		.loc 1 1791 6 is_stmt 1 view .LVU464
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1413              		.loc 1 1791 6 view .LVU465
 1414 0032 0E4A     		ldr	r2, .L100+12
 1415 0034 E36A     		ldr	r3, [r4, #44]
 1416 0036 1168     		ldr	r1, [r2]
 1417 0038 8B42     		cmp	r3, r1
 1418 003a 00D9     		bls	.L99
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1419              		.loc 1 1791 6 discriminator 1 view .LVU466
 1420 003c 1360     		str	r3, [r2]
 1421              	.L99:
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1422              		.loc 1 1791 6 discriminator 3 view .LVU467
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1423              		.loc 1 1791 6 discriminator 3 view .LVU468
 1424 003e 1420     		movs	r0, #20
 1425 0040 5843     		muls	r0, r3
 1426 0042 0B4B     		ldr	r3, .L100+16
 1427 0044 3100     		movs	r1, r6
 1428 0046 C018     		adds	r0, r0, r3
 1429 0048 FFF7FEFF 		bl	vListInsertEnd
 1430              	.LVL115:
1791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1431              		.loc 1 1791 36 discriminator 3 view .LVU469
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1432              		.loc 1 1794 6 discriminator 3 view .LVU470
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1433              		.loc 1 1794 43 is_stmt 0 discriminator 3 view .LVU471
 1434 004c 2B68     		ldr	r3, [r5]
1794:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1435              		.loc 1 1794 8 discriminator 3 view .LVU472
 1436 004e E26A     		ldr	r2, [r4, #44]
 1437 0050 DB6A     		ldr	r3, [r3, #44]
 1438 0052 9A42     		cmp	r2, r3
 1439 0054 01D3     		bcc	.L97
1799:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1440              		.loc 1 1799 7 is_stmt 1 view .LVU473
 1441 0056 FFF7FEFF 		bl	vPortYield
 1442              	.LVL116:
 1443              	.L97:
1808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1444              		.loc 1 1808 30 view .LVU474
1811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1445              		.loc 1 1811 4 view .LVU475
 1446 005a FFF7FEFF 		bl	vPortExitCritical
 1447              	.LVL117:
1815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1448              		.loc 1 1815 28 view .LVU476
 1449              	.L92:
1817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1450              		.loc 1 1817 2 is_stmt 0 view .LVU477
ARM GAS  /tmp/cc4h6SWf.s 			page 122


 1451              		@ sp needed
 1452              	.LVL118:
1817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1453              		.loc 1 1817 2 view .LVU478
 1454 005e 70BD     		pop	{r4, r5, r6, pc}
 1455              	.L101:
 1456              		.align	2
 1457              	.L100:
 1458 0060 00000000 		.word	.LANCHOR3
 1459 0064 00000000 		.word	.LANCHOR4
 1460 0068 00000000 		.word	.LANCHOR11
 1461 006c 00000000 		.word	.LANCHOR14
 1462 0070 00000000 		.word	pxReadyTasksLists
 1463              		.cfi_endproc
 1464              	.LFE10:
 1466              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1467              		.align	1
 1468              		.global	xTaskResumeFromISR
 1469              		.syntax unified
 1470              		.code	16
 1471              		.thumb_func
 1472              		.fpu softvfp
 1474              	xTaskResumeFromISR:
 1475              	.LVL119:
 1476              	.LFB11:
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1477              		.loc 1 1826 2 is_stmt 1 view -0
 1478              		.cfi_startproc
 1479              		@ args = 0, pretend = 0, frame = 0
 1480              		@ frame_needed = 0, uses_anonymous_args = 0
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1481              		.loc 1 1827 2 view .LVU480
1828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 1482              		.loc 1 1828 2 view .LVU481
1829:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1483              		.loc 1 1829 2 view .LVU482
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1484              		.loc 1 1831 3 view .LVU483
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1485              		.loc 1 1826 2 is_stmt 0 view .LVU484
 1486 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1487              	.LCFI9:
 1488              		.cfi_def_cfa_offset 24
 1489              		.cfi_offset 3, -24
 1490              		.cfi_offset 4, -20
 1491              		.cfi_offset 5, -16
 1492              		.cfi_offset 6, -12
 1493              		.cfi_offset 7, -8
 1494              		.cfi_offset 14, -4
1826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1495              		.loc 1 1826 2 view .LVU485
 1496 0002 041E     		subs	r4, r0, #0
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1497              		.loc 1 1831 3 view .LVU486
 1498 0004 01D1     		bne	.L103
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1499              		.loc 1 1831 3 is_stmt 1 discriminator 1 view .LVU487
ARM GAS  /tmp/cc4h6SWf.s 			page 123


 1500              		.syntax divided
 1501              	@ 1831 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1502 0006 72B6     		 cpsid i 
 1503              	@ 0 "" 2
 1504              		.thumb
 1505              		.syntax unified
 1506              	.L104:
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1507              		.loc 1 1831 3 discriminator 1 view .LVU488
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1508              		.loc 1 1831 3 discriminator 1 view .LVU489
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1509              		.loc 1 1831 3 discriminator 1 view .LVU490
 1510 0008 FEE7     		b	.L104
 1511              	.L103:
1831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1512              		.loc 1 1831 32 discriminator 2 view .LVU491
1849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1513              		.loc 1 1849 45 discriminator 2 view .LVU492
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1514              		.loc 1 1851 3 discriminator 2 view .LVU493
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1515              		.loc 1 1851 28 is_stmt 0 discriminator 2 view .LVU494
 1516 000a FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 1517              	.LVL120:
 1518              	.LBB69:
 1519              	.LBB70:
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1520              		.loc 1 1737 82 discriminator 2 view .LVU495
 1521 000e 174B     		ldr	r3, .L112
 1522 0010 6269     		ldr	r2, [r4, #20]
 1523              	.LBE70:
 1524              	.LBE69:
1851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1525              		.loc 1 1851 28 discriminator 2 view .LVU496
 1526 0012 0600     		movs	r6, r0
 1527              	.LVL121:
1853:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1528              		.loc 1 1853 4 is_stmt 1 discriminator 2 view .LVU497
 1529              	.LBB75:
 1530              	.LBI69:
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1531              		.loc 1 1725 20 discriminator 2 view .LVU498
 1532              	.LBB73:
1727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
 1533              		.loc 1 1727 2 discriminator 2 view .LVU499
1728:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1534              		.loc 1 1728 2 discriminator 2 view .LVU500
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1535              		.loc 1 1734 3 discriminator 2 view .LVU501
1734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1536              		.loc 1 1734 24 discriminator 2 view .LVU502
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1537              		.loc 1 1737 3 discriminator 2 view .LVU503
 1538              	.LBE73:
 1539              	.LBE75:
1827:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
ARM GAS  /tmp/cc4h6SWf.s 			page 124


 1540              		.loc 1 1827 13 is_stmt 0 discriminator 2 view .LVU504
 1541 0014 0025     		movs	r5, #0
 1542              	.LBB76:
 1543              	.LBB74:
1737:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1544              		.loc 1 1737 82 discriminator 2 view .LVU505
 1545 0016 9A42     		cmp	r2, r3
 1546 0018 20D1     		bne	.L105
 1547              	.LVL122:
 1548              	.LBB71:
 1549              	.LBI71:
1725:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1550              		.loc 1 1725 20 is_stmt 1 view .LVU506
 1551              	.LBB72:
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1552              		.loc 1 1740 4 view .LVU507
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1553              		.loc 1 1740 8 is_stmt 0 view .LVU508
 1554 001a A36A     		ldr	r3, [r4, #40]
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1555              		.loc 1 1740 6 view .LVU509
 1556 001c 1448     		ldr	r0, .L112+4
 1557              	.LVL123:
1740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 1558              		.loc 1 1740 6 view .LVU510
 1559 001e 8342     		cmp	r3, r0
 1560 0020 1CD0     		beq	.L105
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1561              		.loc 1 1744 5 is_stmt 1 view .LVU511
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1562              		.loc 1 1744 69 is_stmt 0 view .LVU512
 1563 0022 AB42     		cmp	r3, r5
 1564 0024 1AD1     		bne	.L105
 1565              	.LVL124:
1744:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1566              		.loc 1 1744 69 view .LVU513
 1567              	.LBE72:
 1568              	.LBE71:
1760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 1569              		.loc 1 1760 28 is_stmt 1 view .LVU514
1763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 1570              		.loc 1 1763 3 view .LVU515
1763:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 1571              		.loc 1 1763 3 is_stmt 0 view .LVU516
 1572              	.LBE74:
 1573              	.LBE76:
1855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1574              		.loc 1 1855 39 is_stmt 1 view .LVU517
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1575              		.loc 1 1858 5 view .LVU518
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1576              		.loc 1 1858 30 is_stmt 0 view .LVU519
 1577 0026 134B     		ldr	r3, .L112+8
 1578 0028 1B68     		ldr	r3, [r3]
1858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 1579              		.loc 1 1858 7 view .LVU520
 1580 002a AB42     		cmp	r3, r5
ARM GAS  /tmp/cc4h6SWf.s 			page 125


 1581 002c 1BD1     		bne	.L106
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1582              		.loc 1 1862 6 is_stmt 1 view .LVU521
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1583              		.loc 1 1862 43 is_stmt 0 view .LVU522
 1584 002e 124B     		ldr	r3, .L112+12
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1585              		.loc 1 1862 8 view .LVU523
 1586 0030 E26A     		ldr	r2, [r4, #44]
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1587              		.loc 1 1862 43 view .LVU524
 1588 0032 1B68     		ldr	r3, [r3]
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1589              		.loc 1 1871 15 view .LVU525
 1590 0034 271D     		adds	r7, r4, #4
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1591              		.loc 1 1862 8 view .LVU526
 1592 0036 DB6A     		ldr	r3, [r3, #44]
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1593              		.loc 1 1871 15 view .LVU527
 1594 0038 3800     		movs	r0, r7
1862:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 1595              		.loc 1 1862 8 view .LVU528
 1596 003a 9A42     		cmp	r2, r3
 1597 003c 6D41     		adcs	r5, r5, r5
 1598              	.LVL125:
1868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 1599              		.loc 1 1868 31 is_stmt 1 view .LVU529
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1600              		.loc 1 1871 6 view .LVU530
1871:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1601              		.loc 1 1871 15 is_stmt 0 view .LVU531
 1602 003e FFF7FEFF 		bl	uxListRemove
 1603              	.LVL126:
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1604              		.loc 1 1872 6 is_stmt 1 view .LVU532
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1605              		.loc 1 1872 6 view .LVU533
 1606 0042 0E4A     		ldr	r2, .L112+16
 1607 0044 E36A     		ldr	r3, [r4, #44]
 1608 0046 1168     		ldr	r1, [r2]
 1609 0048 8B42     		cmp	r3, r1
 1610 004a 00D9     		bls	.L107
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1611              		.loc 1 1872 6 discriminator 1 view .LVU534
 1612 004c 1360     		str	r3, [r2]
 1613              	.L107:
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1614              		.loc 1 1872 6 discriminator 3 view .LVU535
1872:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1615              		.loc 1 1872 6 discriminator 3 view .LVU536
 1616 004e 1420     		movs	r0, #20
 1617 0050 3900     		movs	r1, r7
 1618 0052 5843     		muls	r0, r3
 1619 0054 0A4B     		ldr	r3, .L112+20
 1620 0056 C018     		adds	r0, r0, r3
 1621              	.LVL127:
ARM GAS  /tmp/cc4h6SWf.s 			page 126


 1622              	.L111:
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1623              		.loc 1 1879 6 is_stmt 0 view .LVU537
 1624 0058 FFF7FEFF 		bl	vListInsertEnd
 1625              	.LVL128:
 1626              	.L105:
1884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 1627              		.loc 1 1884 29 is_stmt 1 view .LVU538
1887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1628              		.loc 1 1887 3 view .LVU539
 1629 005c 3000     		movs	r0, r6
 1630 005e FFF7FEFF 		bl	vClearInterruptMaskFromISR
 1631              	.LVL129:
1889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1632              		.loc 1 1889 3 view .LVU540
1890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1633              		.loc 1 1890 2 is_stmt 0 view .LVU541
 1634              		@ sp needed
 1635 0062 2800     		movs	r0, r5
 1636              	.LVL130:
 1637              	.LVL131:
 1638              	.LVL132:
1890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1639              		.loc 1 1890 2 view .LVU542
 1640 0064 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1641              	.LVL133:
 1642              	.L106:
1879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 1643              		.loc 1 1879 6 is_stmt 1 view .LVU543
 1644 0066 2100     		movs	r1, r4
 1645 0068 1831     		adds	r1, r1, #24
 1646 006a F5E7     		b	.L111
 1647              	.L113:
 1648              		.align	2
 1649              	.L112:
 1650 006c 00000000 		.word	.LANCHOR4
 1651 0070 00000000 		.word	.LANCHOR11
 1652 0074 00000000 		.word	.LANCHOR15
 1653 0078 00000000 		.word	.LANCHOR3
 1654 007c 00000000 		.word	.LANCHOR14
 1655 0080 00000000 		.word	pxReadyTasksLists
 1656              		.cfi_endproc
 1657              	.LFE11:
 1659              		.section	.rodata.vTaskStartScheduler.str1.1,"aMS",%progbits,1
 1660              	.LC54:
 1661 0000 49444C45 		.ascii	"IDLE\000"
 1661      00
 1662              		.section	.text.vTaskStartScheduler,"ax",%progbits
 1663              		.align	1
 1664              		.global	vTaskStartScheduler
 1665              		.syntax unified
 1666              		.code	16
 1667              		.thumb_func
 1668              		.fpu softvfp
 1670              	vTaskStartScheduler:
 1671              	.LFB12:
1896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
ARM GAS  /tmp/cc4h6SWf.s 			page 127


 1672              		.loc 1 1896 1 view -0
 1673              		.cfi_startproc
 1674              		@ args = 0, pretend = 0, frame = 0
 1675              		@ frame_needed = 0, uses_anonymous_args = 0
1897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1676              		.loc 1 1897 1 view .LVU545
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configIDLE_TASK_NAME,
 1677              		.loc 1 1929 3 view .LVU546
1896:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 1678              		.loc 1 1896 1 is_stmt 0 view .LVU547
 1679 0000 13B5     		push	{r0, r1, r4, lr}
 1680              	.LCFI10:
 1681              		.cfi_def_cfa_offset 16
 1682              		.cfi_offset 0, -16
 1683              		.cfi_offset 1, -12
 1684              		.cfi_offset 4, -8
 1685              		.cfi_offset 14, -4
1929:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 								configIDLE_TASK_NAME,
 1686              		.loc 1 1929 13 view .LVU548
 1687 0002 0024     		movs	r4, #0
 1688 0004 0D4B     		ldr	r3, .L118
 1689 0006 8022     		movs	r2, #128
 1690 0008 0193     		str	r3, [sp, #4]
 1691 000a 0D49     		ldr	r1, .L118+4
 1692 000c 2300     		movs	r3, r4
 1693 000e 0D48     		ldr	r0, .L118+8
 1694 0010 0094     		str	r4, [sp]
 1695 0012 FFF7FEFF 		bl	xTaskCreate
 1696              	.LVL134:
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1697              		.loc 1 1951 2 is_stmt 1 view .LVU549
1951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1698              		.loc 1 1951 4 is_stmt 0 view .LVU550
 1699 0016 0128     		cmp	r0, #1
 1700 0018 0BD1     		bne	.L115
1967:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1701              		.loc 1 1967 3 is_stmt 1 view .LVU551
 1702              		.syntax divided
 1703              	@ 1967 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1704 001a 72B6     		 cpsid i 
 1705              	@ 0 "" 2
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1706              		.loc 1 1977 3 view .LVU552
1977:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1707              		.loc 1 1977 24 is_stmt 0 view .LVU553
 1708              		.thumb
 1709              		.syntax unified
 1710 001c 0122     		movs	r2, #1
 1711 001e 0A4B     		ldr	r3, .L118+12
 1712 0020 5242     		rsbs	r2, r2, #0
 1713 0022 1A60     		str	r2, [r3]
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 1714              		.loc 1 1978 3 is_stmt 1 view .LVU554
1978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 1715              		.loc 1 1978 21 is_stmt 0 view .LVU555
 1716 0024 094B     		ldr	r3, .L118+16
 1717 0026 1860     		str	r0, [r3]
ARM GAS  /tmp/cc4h6SWf.s 			page 128


1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1718              		.loc 1 1979 3 is_stmt 1 view .LVU556
1979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1719              		.loc 1 1979 14 is_stmt 0 view .LVU557
 1720 0028 094B     		ldr	r3, .L118+20
 1721 002a 1C60     		str	r4, [r3]
1987:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1722              		.loc 1 1987 43 is_stmt 1 view .LVU558
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1723              		.loc 1 1991 3 view .LVU559
1991:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 1724              		.loc 1 1991 7 is_stmt 0 view .LVU560
 1725 002c FFF7FEFF 		bl	xPortStartScheduler
 1726              	.LVL135:
 1727              	.L114:
2012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 1728              		.loc 1 2012 1 view .LVU561
 1729              		@ sp needed
 1730 0030 13BD     		pop	{r0, r1, r4, pc}
 1731              	.LVL136:
 1732              	.L115:
2006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1733              		.loc 1 2006 3 is_stmt 1 view .LVU562
 1734 0032 431C     		adds	r3, r0, #1
 1735 0034 FCD1     		bne	.L114
2006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1736              		.loc 1 2006 3 discriminator 1 view .LVU563
 1737              		.syntax divided
 1738              	@ 2006 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1739 0036 72B6     		 cpsid i 
 1740              	@ 0 "" 2
 1741              		.thumb
 1742              		.syntax unified
 1743              	.L117:
2006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1744              		.loc 1 2006 3 discriminator 2 view .LVU564
2006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1745              		.loc 1 2006 3 discriminator 2 view .LVU565
2006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1746              		.loc 1 2006 3 discriminator 2 view .LVU566
 1747 0038 FEE7     		b	.L117
 1748              	.L119:
 1749 003a C046     		.align	2
 1750              	.L118:
 1751 003c 00000000 		.word	.LANCHOR16
 1752 0040 00000000 		.word	.LC54
 1753 0044 00000000 		.word	prvIdleTask
 1754 0048 00000000 		.word	.LANCHOR1
 1755 004c 00000000 		.word	.LANCHOR12
 1756 0050 00000000 		.word	.LANCHOR2
 1757              		.cfi_endproc
 1758              	.LFE12:
 1760              		.section	.text.vTaskEndScheduler,"ax",%progbits
 1761              		.align	1
 1762              		.global	vTaskEndScheduler
 1763              		.syntax unified
 1764              		.code	16
ARM GAS  /tmp/cc4h6SWf.s 			page 129


 1765              		.thumb_func
 1766              		.fpu softvfp
 1768              	vTaskEndScheduler:
 1769              	.LFB13:
2016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 1770              		.loc 1 2016 1 view -0
 1771              		.cfi_startproc
 1772              		@ args = 0, pretend = 0, frame = 0
 1773              		@ frame_needed = 0, uses_anonymous_args = 0
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 1774              		.loc 1 2020 2 view .LVU568
2016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 1775              		.loc 1 2016 1 is_stmt 0 view .LVU569
 1776 0000 10B5     		push	{r4, lr}
 1777              	.LCFI11:
 1778              		.cfi_def_cfa_offset 8
 1779              		.cfi_offset 4, -8
 1780              		.cfi_offset 14, -4
2020:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 1781              		.loc 1 2020 2 view .LVU570
 1782              		.syntax divided
 1783              	@ 2020 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1784 0002 72B6     		 cpsid i 
 1785              	@ 0 "" 2
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 1786              		.loc 1 2021 2 is_stmt 1 view .LVU571
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 1787              		.loc 1 2021 20 is_stmt 0 view .LVU572
 1788              		.thumb
 1789              		.syntax unified
 1790 0004 0022     		movs	r2, #0
 1791 0006 024B     		ldr	r3, .L121
2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 1792              		.loc 1 2023 1 view .LVU573
 1793              		@ sp needed
2021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 1794              		.loc 1 2021 20 view .LVU574
 1795 0008 1A60     		str	r2, [r3]
2022:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1796              		.loc 1 2022 2 is_stmt 1 view .LVU575
 1797 000a FFF7FEFF 		bl	vPortEndScheduler
 1798              	.LVL137:
2023:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 1799              		.loc 1 2023 1 is_stmt 0 view .LVU576
 1800 000e 10BD     		pop	{r4, pc}
 1801              	.L122:
 1802              		.align	2
 1803              	.L121:
 1804 0010 00000000 		.word	.LANCHOR12
 1805              		.cfi_endproc
 1806              	.LFE13:
 1808              		.section	.text.vTaskSuspendAll,"ax",%progbits
 1809              		.align	1
 1810              		.global	vTaskSuspendAll
 1811              		.syntax unified
 1812              		.code	16
 1813              		.thumb_func
ARM GAS  /tmp/cc4h6SWf.s 			page 130


 1814              		.fpu softvfp
 1816              	vTaskSuspendAll:
 1817              	.LFB14:
2027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 1818              		.loc 1 2027 1 is_stmt 1 view -0
 1819              		.cfi_startproc
 1820              		@ args = 0, pretend = 0, frame = 0
 1821              		@ frame_needed = 0, uses_anonymous_args = 0
 1822              		@ link register save eliminated.
2032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1823              		.loc 1 2032 2 view .LVU578
 1824 0000 024A     		ldr	r2, .L124
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 1825              		.loc 1 2033 1 is_stmt 0 view .LVU579
 1826              		@ sp needed
2032:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1827              		.loc 1 2032 2 view .LVU580
 1828 0002 1368     		ldr	r3, [r2]
 1829 0004 0133     		adds	r3, r3, #1
 1830 0006 1360     		str	r3, [r2]
2033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
 1831              		.loc 1 2033 1 view .LVU581
 1832 0008 7047     		bx	lr
 1833              	.L125:
 1834 000a C046     		.align	2
 1835              	.L124:
 1836 000c 00000000 		.word	.LANCHOR15
 1837              		.cfi_endproc
 1838              	.LFE14:
 1840              		.section	.text.xTaskGetTickCount,"ax",%progbits
 1841              		.align	1
 1842              		.global	xTaskGetTickCount
 1843              		.syntax unified
 1844              		.code	16
 1845              		.thumb_func
 1846              		.fpu softvfp
 1848              	xTaskGetTickCount:
 1849              	.LFB16:
2210:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
 1850              		.loc 1 2210 1 is_stmt 1 view -0
 1851              		.cfi_startproc
 1852              		@ args = 0, pretend = 0, frame = 0
 1853              		@ frame_needed = 0, uses_anonymous_args = 0
 1854              		@ link register save eliminated.
2211:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1855              		.loc 1 2211 1 view .LVU583
2214:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 1856              		.loc 1 2214 32 view .LVU584
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1857              		.loc 1 2216 3 view .LVU585
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 1858              		.loc 1 2216 10 is_stmt 0 view .LVU586
 1859 0000 014B     		ldr	r3, .L127
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 1860              		.loc 1 2221 1 view .LVU587
 1861              		@ sp needed
2216:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cc4h6SWf.s 			page 131


 1862              		.loc 1 2216 10 view .LVU588
 1863 0002 1868     		ldr	r0, [r3]
 1864              	.LVL138:
2218:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1865              		.loc 1 2218 31 is_stmt 1 view .LVU589
2220:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1866              		.loc 1 2220 2 view .LVU590
2221:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 1867              		.loc 1 2221 1 is_stmt 0 view .LVU591
 1868 0004 7047     		bx	lr
 1869              	.L128:
 1870 0006 C046     		.align	2
 1871              	.L127:
 1872 0008 00000000 		.word	.LANCHOR2
 1873              		.cfi_endproc
 1874              	.LFE16:
 1876              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 1877              		.align	1
 1878              		.global	xTaskGetTickCountFromISR
 1879              		.syntax unified
 1880              		.code	16
 1881              		.thumb_func
 1882              		.fpu softvfp
 1884              	xTaskGetTickCountFromISR:
 1885              	.LFB56:
 1886              		.cfi_startproc
 1887              		@ args = 0, pretend = 0, frame = 0
 1888              		@ frame_needed = 0, uses_anonymous_args = 0
 1889              		@ link register save eliminated.
 1890 0000 014B     		ldr	r3, .L130
 1891              		@ sp needed
 1892 0002 1868     		ldr	r0, [r3]
 1893 0004 7047     		bx	lr
 1894              	.L131:
 1895 0006 C046     		.align	2
 1896              	.L130:
 1897 0008 00000000 		.word	.LANCHOR2
 1898              		.cfi_endproc
 1899              	.LFE56:
 1901              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 1902              		.align	1
 1903              		.global	uxTaskGetNumberOfTasks
 1904              		.syntax unified
 1905              		.code	16
 1906              		.thumb_func
 1907              		.fpu softvfp
 1909              	uxTaskGetNumberOfTasks:
 1910              	.LFB18:
2256:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 1911              		.loc 1 2256 1 is_stmt 1 view -0
 1912              		.cfi_startproc
 1913              		@ args = 0, pretend = 0, frame = 0
 1914              		@ frame_needed = 0, uses_anonymous_args = 0
 1915              		@ link register save eliminated.
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1916              		.loc 1 2259 2 view .LVU593
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
ARM GAS  /tmp/cc4h6SWf.s 			page 132


 1917              		.loc 1 2259 9 is_stmt 0 view .LVU594
 1918 0000 014B     		ldr	r3, .L133
2260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 1919              		.loc 1 2260 1 view .LVU595
 1920              		@ sp needed
2259:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1921              		.loc 1 2259 9 view .LVU596
 1922 0002 1868     		ldr	r0, [r3]
2260:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 1923              		.loc 1 2260 1 view .LVU597
 1924 0004 7047     		bx	lr
 1925              	.L134:
 1926 0006 C046     		.align	2
 1927              	.L133:
 1928 0008 00000000 		.word	.LANCHOR7
 1929              		.cfi_endproc
 1930              	.LFE18:
 1932              		.section	.text.pcTaskGetName,"ax",%progbits
 1933              		.align	1
 1934              		.global	pcTaskGetName
 1935              		.syntax unified
 1936              		.code	16
 1937              		.thumb_func
 1938              		.fpu softvfp
 1940              	pcTaskGetName:
 1941              	.LVL139:
 1942              	.LFB19:
2264:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
 1943              		.loc 1 2264 1 is_stmt 1 view -0
 1944              		.cfi_startproc
 1945              		@ args = 0, pretend = 0, frame = 0
 1946              		@ frame_needed = 0, uses_anonymous_args = 0
 1947              		@ link register save eliminated.
2265:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 1948              		.loc 1 2265 1 view .LVU599
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 1949              		.loc 1 2269 2 view .LVU600
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 1950              		.loc 1 2269 10 is_stmt 0 view .LVU601
 1951 0000 0028     		cmp	r0, #0
 1952 0002 05D1     		bne	.L136
2269:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 1953              		.loc 1 2269 10 discriminator 1 view .LVU602
 1954 0004 034B     		ldr	r3, .L138
 1955 0006 1868     		ldr	r0, [r3]
 1956              	.LVL140:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1957              		.loc 1 2270 2 is_stmt 1 discriminator 1 view .LVU603
 1958 0008 0028     		cmp	r0, #0
 1959 000a 01D1     		bne	.L136
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1960              		.loc 1 2270 2 discriminator 1 view .LVU604
 1961              		.syntax divided
 1962              	@ 2270 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 1963 000c 72B6     		 cpsid i 
 1964              	@ 0 "" 2
 1965              		.thumb
ARM GAS  /tmp/cc4h6SWf.s 			page 133


 1966              		.syntax unified
 1967              	.L137:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1968              		.loc 1 2270 2 discriminator 1 view .LVU605
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1969              		.loc 1 2270 2 discriminator 1 view .LVU606
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1970              		.loc 1 2270 2 discriminator 1 view .LVU607
 1971 000e FEE7     		b	.L137
 1972              	.LVL141:
 1973              	.L136:
2270:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1974              		.loc 1 2270 23 discriminator 2 view .LVU608
2271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1975              		.loc 1 2271 2 discriminator 2 view .LVU609
2271:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 1976              		.loc 1 2271 9 is_stmt 0 discriminator 2 view .LVU610
 1977 0010 3430     		adds	r0, r0, #52
 1978              	.LVL142:
2272:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 1979              		.loc 1 2272 1 discriminator 2 view .LVU611
 1980              		@ sp needed
 1981 0012 7047     		bx	lr
 1982              	.L139:
 1983              		.align	2
 1984              	.L138:
 1985 0014 00000000 		.word	.LANCHOR3
 1986              		.cfi_endproc
 1987              	.LFE19:
 1989              		.section	.text.xTaskIncrementTick,"ax",%progbits
 1990              		.align	1
 1991              		.global	xTaskIncrementTick
 1992              		.syntax unified
 1993              		.code	16
 1994              		.thumb_func
 1995              		.fpu softvfp
 1997              	xTaskIncrementTick:
 1998              	.LFB20:
2584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
 1999              		.loc 1 2584 1 is_stmt 1 view -0
 2000              		.cfi_startproc
 2001              		@ args = 0, pretend = 0, frame = 8
 2002              		@ frame_needed = 0, uses_anonymous_args = 0
2585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
 2003              		.loc 1 2585 1 view .LVU613
2586:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
 2004              		.loc 1 2586 1 view .LVU614
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2005              		.loc 1 2587 1 view .LVU615
 2006              	.LVL143:
2592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2007              		.loc 1 2592 40 view .LVU616
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2008              		.loc 1 2593 2 view .LVU617
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2009              		.loc 1 2593 27 is_stmt 0 view .LVU618
 2010 0000 344B     		ldr	r3, .L162
ARM GAS  /tmp/cc4h6SWf.s 			page 134


2584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
 2011              		.loc 1 2584 1 view .LVU619
 2012 0002 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 2013              	.LCFI12:
 2014              		.cfi_def_cfa_offset 32
 2015              		.cfi_offset 0, -32
 2016              		.cfi_offset 1, -28
 2017              		.cfi_offset 2, -24
 2018              		.cfi_offset 4, -20
 2019              		.cfi_offset 5, -16
 2020              		.cfi_offset 6, -12
 2021              		.cfi_offset 7, -8
 2022              		.cfi_offset 14, -4
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2023              		.loc 1 2593 27 view .LVU620
 2024 0004 1B68     		ldr	r3, [r3]
2593:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2025              		.loc 1 2593 4 view .LVU621
 2026 0006 002B     		cmp	r3, #0
 2027 0008 5ED1     		bne	.L141
 2028              	.LBB77:
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2029              		.loc 1 2597 3 is_stmt 1 view .LVU622
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2030              		.loc 1 2597 49 is_stmt 0 view .LVU623
 2031 000a 334B     		ldr	r3, .L162+4
 2032 000c 1A68     		ldr	r2, [r3]
2597:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2033              		.loc 1 2597 20 view .LVU624
 2034 000e 0132     		adds	r2, r2, #1
 2035 0010 0092     		str	r2, [sp]
 2036              	.LVL144:
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2037              		.loc 1 2601 3 is_stmt 1 view .LVU625
2601:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2038              		.loc 1 2601 14 is_stmt 0 view .LVU626
 2039 0012 1A60     		str	r2, [r3]
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2040              		.loc 1 2603 3 is_stmt 1 view .LVU627
2603:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2041              		.loc 1 2603 5 is_stmt 0 view .LVU628
 2042 0014 002A     		cmp	r2, #0
 2043 0016 11D1     		bne	.L142
 2044              	.LBB78:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2045              		.loc 1 2605 4 is_stmt 1 view .LVU629
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2046              		.loc 1 2605 4 view .LVU630
 2047 0018 304B     		ldr	r3, .L162+8
 2048 001a 1A68     		ldr	r2, [r3]
 2049              	.LVL145:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2050              		.loc 1 2605 4 is_stmt 0 view .LVU631
 2051 001c 1268     		ldr	r2, [r2]
 2052 001e 002A     		cmp	r2, #0
 2053 0020 01D0     		beq	.L143
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc4h6SWf.s 			page 135


 2054              		.loc 1 2605 4 is_stmt 1 discriminator 1 view .LVU632
 2055              		.syntax divided
 2056              	@ 2605 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2057 0022 72B6     		 cpsid i 
 2058              	@ 0 "" 2
 2059              		.thumb
 2060              		.syntax unified
 2061              	.L144:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2062              		.loc 1 2605 4 discriminator 1 view .LVU633
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2063              		.loc 1 2605 4 discriminator 1 view .LVU634
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2064              		.loc 1 2605 4 discriminator 1 view .LVU635
 2065 0024 FEE7     		b	.L144
 2066              	.L143:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2067              		.loc 1 2605 4 discriminator 2 view .LVU636
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2068              		.loc 1 2605 4 discriminator 2 view .LVU637
 2069 0026 2E4A     		ldr	r2, .L162+12
 2070 0028 1968     		ldr	r1, [r3]
 2071              	.LVL146:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2072              		.loc 1 2605 4 discriminator 2 view .LVU638
 2073 002a 1068     		ldr	r0, [r2]
 2074 002c 1860     		str	r0, [r3]
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2075              		.loc 1 2605 4 discriminator 2 view .LVU639
 2076 002e 1160     		str	r1, [r2]
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2077              		.loc 1 2605 4 discriminator 2 view .LVU640
 2078 0030 2C4A     		ldr	r2, .L162+16
 2079 0032 1368     		ldr	r3, [r2]
 2080 0034 0133     		adds	r3, r3, #1
 2081 0036 1360     		str	r3, [r2]
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2082              		.loc 1 2605 4 discriminator 2 view .LVU641
 2083 0038 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2084              	.LVL147:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2085              		.loc 1 2605 4 is_stmt 0 discriminator 2 view .LVU642
 2086              	.LBE78:
2605:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2087              		.loc 1 2605 30 is_stmt 1 discriminator 2 view .LVU643
 2088              	.L142:
2609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2089              		.loc 1 2609 28 view .LVU644
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2090              		.loc 1 2616 3 view .LVU645
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2091              		.loc 1 2616 23 is_stmt 0 view .LVU646
 2092 003c 2A4E     		ldr	r6, .L162+20
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2093              		.loc 1 2616 5 view .LVU647
 2094 003e 009A     		ldr	r2, [sp]
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
ARM GAS  /tmp/cc4h6SWf.s 			page 136


 2095              		.loc 1 2616 23 view .LVU648
 2096 0040 3368     		ldr	r3, [r6]
 2097              	.LBE77:
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2098              		.loc 1 2587 12 view .LVU649
 2099 0042 0024     		movs	r4, #0
 2100 0044 294F     		ldr	r7, .L162+24
 2101              	.LBB79:
2616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2102              		.loc 1 2616 5 view .LVU650
 2103 0046 9342     		cmp	r3, r2
 2104 0048 35D9     		bls	.L145
 2105              	.LVL148:
 2106              	.L146:
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2107              		.loc 1 2699 4 is_stmt 1 view .LVU651
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2108              		.loc 1 2699 8 is_stmt 0 view .LVU652
 2109 004a 3B68     		ldr	r3, [r7]
 2110 004c DA6A     		ldr	r2, [r3, #44]
 2111 004e 1423     		movs	r3, #20
 2112 0050 5343     		muls	r3, r2
 2113 0052 274A     		ldr	r2, .L162+28
 2114 0054 D358     		ldr	r3, [r2, r3]
2699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2115              		.loc 1 2699 6 view .LVU653
 2116 0056 012B     		cmp	r3, #1
 2117 0058 00D9     		bls	.L152
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2118              		.loc 1 2701 21 view .LVU654
 2119 005a 0124     		movs	r4, #1
 2120              	.LVL149:
 2121              	.L152:
2701:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2122              		.loc 1 2701 21 view .LVU655
 2123              	.LBE79:
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2124              		.loc 1 2740 3 is_stmt 1 view .LVU656
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2125              		.loc 1 2740 21 is_stmt 0 view .LVU657
 2126 005c 254B     		ldr	r3, .L162+32
 2127 005e 1B68     		ldr	r3, [r3]
2740:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2128              		.loc 1 2740 5 view .LVU658
 2129 0060 002B     		cmp	r3, #0
 2130 0062 00D0     		beq	.L140
2742:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2131              		.loc 1 2742 20 view .LVU659
 2132 0064 0124     		movs	r4, #1
 2133              	.LVL150:
2746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2134              		.loc 1 2746 28 is_stmt 1 view .LVU660
2751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2135              		.loc 1 2751 2 view .LVU661
 2136              	.L140:
2752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2137              		.loc 1 2752 1 is_stmt 0 view .LVU662
ARM GAS  /tmp/cc4h6SWf.s 			page 137


 2138 0066 2000     		movs	r0, r4
 2139              		@ sp needed
 2140 0068 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 2141              	.LVL151:
 2142              	.L147:
 2143              	.LBB80:
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2144              		.loc 1 2636 6 is_stmt 1 view .LVU663
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2145              		.loc 1 2636 26 is_stmt 0 view .LVU664
 2146 006a 1B68     		ldr	r3, [r3]
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2147              		.loc 1 2639 8 view .LVU665
 2148 006c 009A     		ldr	r2, [sp]
2636:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 2149              		.loc 1 2636 12 view .LVU666
 2150 006e DB68     		ldr	r3, [r3, #12]
 2151 0070 DD68     		ldr	r5, [r3, #12]
 2152              	.LVL152:
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2153              		.loc 1 2637 6 is_stmt 1 view .LVU667
2637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2154              		.loc 1 2637 17 is_stmt 0 view .LVU668
 2155 0072 6B68     		ldr	r3, [r5, #4]
 2156              	.LVL153:
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2157              		.loc 1 2639 6 is_stmt 1 view .LVU669
2639:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2158              		.loc 1 2639 8 is_stmt 0 view .LVU670
 2159 0074 9A42     		cmp	r2, r3
 2160 0076 25D3     		bcc	.L161
2651:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2161              		.loc 1 2651 31 is_stmt 1 view .LVU671
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2162              		.loc 1 2655 6 view .LVU672
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2163              		.loc 1 2655 15 is_stmt 0 view .LVU673
 2164 0078 2B1D     		adds	r3, r5, #4
 2165              	.LVL154:
2655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2166              		.loc 1 2655 15 view .LVU674
 2167 007a 1800     		movs	r0, r3
 2168 007c 0193     		str	r3, [sp, #4]
 2169 007e FFF7FEFF 		bl	uxListRemove
 2170              	.LVL155:
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2171              		.loc 1 2659 6 is_stmt 1 view .LVU675
2659:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2172              		.loc 1 2659 8 is_stmt 0 view .LVU676
 2173 0082 AB6A     		ldr	r3, [r5, #40]
 2174 0084 002B     		cmp	r3, #0
 2175 0086 03D0     		beq	.L149
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2176              		.loc 1 2661 7 is_stmt 1 view .LVU677
2661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2177              		.loc 1 2661 16 is_stmt 0 view .LVU678
 2178 0088 2800     		movs	r0, r5
ARM GAS  /tmp/cc4h6SWf.s 			page 138


 2179 008a 1830     		adds	r0, r0, #24
 2180 008c FFF7FEFF 		bl	uxListRemove
 2181              	.LVL156:
 2182              	.L149:
2665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2183              		.loc 1 2665 31 is_stmt 1 view .LVU679
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2184              		.loc 1 2670 6 view .LVU680
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2185              		.loc 1 2670 6 view .LVU681
 2186 0090 194B     		ldr	r3, .L162+36
 2187 0092 E86A     		ldr	r0, [r5, #44]
 2188 0094 1A68     		ldr	r2, [r3]
 2189 0096 9042     		cmp	r0, r2
 2190 0098 00D9     		bls	.L150
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2191              		.loc 1 2670 6 discriminator 1 view .LVU682
 2192 009a 1860     		str	r0, [r3]
 2193              	.L150:
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2194              		.loc 1 2670 6 discriminator 3 view .LVU683
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2195              		.loc 1 2670 6 discriminator 3 view .LVU684
 2196 009c 1423     		movs	r3, #20
 2197 009e 5843     		muls	r0, r3
 2198 00a0 134B     		ldr	r3, .L162+28
 2199 00a2 291D     		adds	r1, r5, #4
 2200 00a4 1818     		adds	r0, r3, r0
 2201 00a6 FFF7FEFF 		bl	vListInsertEnd
 2202              	.LVL157:
2670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2203              		.loc 1 2670 36 discriminator 3 view .LVU685
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2204              		.loc 1 2680 7 discriminator 3 view .LVU686
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2205              		.loc 1 2680 44 is_stmt 0 discriminator 3 view .LVU687
 2206 00aa 3B68     		ldr	r3, [r7]
2680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2207              		.loc 1 2680 9 discriminator 3 view .LVU688
 2208 00ac EA6A     		ldr	r2, [r5, #44]
 2209 00ae DB6A     		ldr	r3, [r3, #44]
 2210 00b0 9A42     		cmp	r2, r3
 2211 00b2 00D3     		bcc	.L145
2682:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 2212              		.loc 1 2682 24 view .LVU689
 2213 00b4 0124     		movs	r4, #1
 2214              	.LVL158:
 2215              	.L145:
2618:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2216              		.loc 1 2618 4 is_stmt 1 view .LVU690
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2217              		.loc 1 2620 5 view .LVU691
2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2218              		.loc 1 2620 9 is_stmt 0 view .LVU692
 2219 00b6 094B     		ldr	r3, .L162+8
 2220 00b8 1A68     		ldr	r2, [r3]
 2221 00ba 1268     		ldr	r2, [r2]
ARM GAS  /tmp/cc4h6SWf.s 			page 139


2620:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2222              		.loc 1 2620 48 view .LVU693
 2223 00bc 002A     		cmp	r2, #0
 2224 00be D4D1     		bne	.L147
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2225              		.loc 1 2627 6 is_stmt 1 view .LVU694
2627:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 2226              		.loc 1 2627 27 is_stmt 0 view .LVU695
 2227 00c0 0123     		movs	r3, #1
 2228 00c2 5B42     		rsbs	r3, r3, #0
 2229              	.L161:
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
 2230              		.loc 1 2646 7 is_stmt 1 view .LVU696
2646:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						break;
 2231              		.loc 1 2646 28 is_stmt 0 view .LVU697
 2232 00c4 3360     		str	r3, [r6]
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2233              		.loc 1 2647 7 is_stmt 1 view .LVU698
 2234 00c6 C0E7     		b	.L146
 2235              	.LVL159:
 2236              	.L141:
2647:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2237              		.loc 1 2647 7 is_stmt 0 view .LVU699
 2238              	.LBE80:
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2239              		.loc 1 2727 3 is_stmt 1 view .LVU700
 2240 00c8 0C4A     		ldr	r2, .L162+40
2587:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2241              		.loc 1 2587 12 is_stmt 0 view .LVU701
 2242 00ca 0024     		movs	r4, #0
2727:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2243              		.loc 1 2727 3 view .LVU702
 2244 00cc 1368     		ldr	r3, [r2]
 2245 00ce 0133     		adds	r3, r3, #1
 2246 00d0 1360     		str	r3, [r2]
 2247 00d2 C3E7     		b	.L152
 2248              	.L163:
 2249              		.align	2
 2250              	.L162:
 2251 00d4 00000000 		.word	.LANCHOR15
 2252 00d8 00000000 		.word	.LANCHOR2
 2253 00dc 00000000 		.word	.LANCHOR0
 2254 00e0 00000000 		.word	.LANCHOR5
 2255 00e4 00000000 		.word	.LANCHOR17
 2256 00e8 00000000 		.word	.LANCHOR1
 2257 00ec 00000000 		.word	.LANCHOR3
 2258 00f0 00000000 		.word	pxReadyTasksLists
 2259 00f4 00000000 		.word	.LANCHOR19
 2260 00f8 00000000 		.word	.LANCHOR14
 2261 00fc 00000000 		.word	.LANCHOR18
 2262              		.cfi_endproc
 2263              	.LFE20:
 2265              		.section	.text.xTaskResumeAll,"ax",%progbits
 2266              		.align	1
 2267              		.global	xTaskResumeAll
 2268              		.syntax unified
 2269              		.code	16
ARM GAS  /tmp/cc4h6SWf.s 			page 140


 2270              		.thumb_func
 2271              		.fpu softvfp
 2273              	xTaskResumeAll:
 2274              	.LFB15:
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
 2275              		.loc 1 2100 1 is_stmt 1 view -0
 2276              		.cfi_startproc
 2277              		@ args = 0, pretend = 0, frame = 0
 2278              		@ frame_needed = 0, uses_anonymous_args = 0
2101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2279              		.loc 1 2101 1 view .LVU704
 2280              	.LVL160:
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2281              		.loc 1 2102 1 view .LVU705
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2282              		.loc 1 2106 2 view .LVU706
2100:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
 2283              		.loc 1 2100 1 is_stmt 0 view .LVU707
 2284 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2285              	.LCFI13:
 2286              		.cfi_def_cfa_offset 24
 2287              		.cfi_offset 3, -24
 2288              		.cfi_offset 4, -20
 2289              		.cfi_offset 5, -16
 2290              		.cfi_offset 6, -12
 2291              		.cfi_offset 7, -8
 2292              		.cfi_offset 14, -4
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2293              		.loc 1 2106 2 view .LVU708
 2294 0002 2B4C     		ldr	r4, .L192
 2295 0004 2368     		ldr	r3, [r4]
 2296 0006 002B     		cmp	r3, #0
 2297 0008 01D1     		bne	.L165
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2298              		.loc 1 2106 2 is_stmt 1 discriminator 1 view .LVU709
 2299              		.syntax divided
 2300              	@ 2106 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2301 000a 72B6     		 cpsid i 
 2302              	@ 0 "" 2
 2303              		.thumb
 2304              		.syntax unified
 2305              	.L166:
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2306              		.loc 1 2106 2 discriminator 1 view .LVU710
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2307              		.loc 1 2106 2 discriminator 1 view .LVU711
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2308              		.loc 1 2106 2 discriminator 1 view .LVU712
 2309 000c FEE7     		b	.L166
 2310              	.L165:
 2311              	.LBB84:
 2312              	.LBI84:
2099:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 2313              		.loc 1 2099 12 view .LVU713
 2314              	.LBB85:
2106:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2315              		.loc 1 2106 38 view .LVU714
ARM GAS  /tmp/cc4h6SWf.s 			page 141


2113:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2316              		.loc 1 2113 2 view .LVU715
 2317 000e FFF7FEFF 		bl	vPortEnterCritical
 2318              	.LVL161:
2115:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2319              		.loc 1 2115 3 view .LVU716
 2320 0012 2368     		ldr	r3, [r4]
 2321 0014 013B     		subs	r3, r3, #1
 2322 0016 2360     		str	r3, [r4]
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2323              		.loc 1 2117 3 view .LVU717
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2324              		.loc 1 2117 28 is_stmt 0 view .LVU718
 2325 0018 2468     		ldr	r4, [r4]
2117:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2326              		.loc 1 2117 5 view .LVU719
 2327 001a 002C     		cmp	r4, #0
 2328 001c 04D0     		beq	.L167
 2329              	.L170:
2102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2330              		.loc 1 2102 12 view .LVU720
 2331 001e 0024     		movs	r4, #0
 2332              	.L168:
 2333              	.LVL162:
2200:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2334              		.loc 1 2200 28 is_stmt 1 view .LVU721
2203:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2335              		.loc 1 2203 2 view .LVU722
 2336 0020 FFF7FEFF 		bl	vPortExitCritical
 2337              	.LVL163:
2205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2338              		.loc 1 2205 2 view .LVU723
2205:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2339              		.loc 1 2205 2 is_stmt 0 view .LVU724
 2340              	.LBE85:
 2341              	.LBE84:
2206:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2342              		.loc 1 2206 1 view .LVU725
 2343              		@ sp needed
 2344 0024 2000     		movs	r0, r4
 2345 0026 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2346              	.L167:
 2347              	.LBB88:
 2348              	.LBB87:
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2349              		.loc 1 2119 4 is_stmt 1 view .LVU726
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2350              		.loc 1 2119 31 is_stmt 0 view .LVU727
 2351 0028 224B     		ldr	r3, .L192+4
 2352 002a 1B68     		ldr	r3, [r3]
2119:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2353              		.loc 1 2119 6 view .LVU728
 2354 002c 002B     		cmp	r3, #0
 2355 002e F6D0     		beq	.L170
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2356              		.loc 1 2128 6 view .LVU729
 2357 0030 1426     		movs	r6, #20
ARM GAS  /tmp/cc4h6SWf.s 			page 142


2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2358              		.loc 1 2134 21 view .LVU730
 2359 0032 0127     		movs	r7, #1
 2360 0034 1DE0     		b	.L169
 2361              	.LVL164:
 2362              	.L173:
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2363              		.loc 1 2125 6 is_stmt 1 view .LVU731
2125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2364              		.loc 1 2125 12 is_stmt 0 view .LVU732
 2365 0036 DB68     		ldr	r3, [r3, #12]
 2366 0038 DC68     		ldr	r4, [r3, #12]
 2367              	.LVL165:
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2368              		.loc 1 2126 6 is_stmt 1 view .LVU733
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2369              		.loc 1 2126 15 is_stmt 0 view .LVU734
 2370 003a 2000     		movs	r0, r4
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2371              		.loc 1 2127 15 view .LVU735
 2372 003c 251D     		adds	r5, r4, #4
2126:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2373              		.loc 1 2126 15 view .LVU736
 2374 003e 1830     		adds	r0, r0, #24
 2375 0040 FFF7FEFF 		bl	uxListRemove
 2376              	.LVL166:
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2377              		.loc 1 2127 6 is_stmt 1 view .LVU737
2127:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2378              		.loc 1 2127 15 is_stmt 0 view .LVU738
 2379 0044 2800     		movs	r0, r5
 2380 0046 FFF7FEFF 		bl	uxListRemove
 2381              	.LVL167:
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2382              		.loc 1 2128 6 is_stmt 1 view .LVU739
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2383              		.loc 1 2128 6 view .LVU740
 2384 004a 1B4B     		ldr	r3, .L192+8
 2385 004c E06A     		ldr	r0, [r4, #44]
 2386 004e 1A68     		ldr	r2, [r3]
 2387 0050 9042     		cmp	r0, r2
 2388 0052 00D9     		bls	.L171
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2389              		.loc 1 2128 6 view .LVU741
 2390 0054 1860     		str	r0, [r3]
 2391              	.L171:
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2392              		.loc 1 2128 6 view .LVU742
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2393              		.loc 1 2128 6 view .LVU743
 2394 0056 7043     		muls	r0, r6
 2395 0058 184B     		ldr	r3, .L192+12
 2396 005a 2900     		movs	r1, r5
 2397 005c C018     		adds	r0, r0, r3
 2398 005e FFF7FEFF 		bl	vListInsertEnd
 2399              	.LVL168:
2128:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc4h6SWf.s 			page 143


 2400              		.loc 1 2128 36 view .LVU744
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2401              		.loc 1 2132 6 view .LVU745
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2402              		.loc 1 2132 43 is_stmt 0 view .LVU746
 2403 0062 174B     		ldr	r3, .L192+16
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2404              		.loc 1 2132 8 view .LVU747
 2405 0064 E26A     		ldr	r2, [r4, #44]
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2406              		.loc 1 2132 43 view .LVU748
 2407 0066 1B68     		ldr	r3, [r3]
2132:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2408              		.loc 1 2132 8 view .LVU749
 2409 0068 DB6A     		ldr	r3, [r3, #44]
 2410 006a 9A42     		cmp	r2, r3
 2411 006c 01D3     		bcc	.L169
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2412              		.loc 1 2134 7 is_stmt 1 view .LVU750
2134:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2413              		.loc 1 2134 21 is_stmt 0 view .LVU751
 2414 006e 154B     		ldr	r3, .L192+20
 2415 0070 1F60     		str	r7, [r3]
 2416              	.LVL169:
 2417              	.L169:
2138:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2418              		.loc 1 2138 31 is_stmt 1 view .LVU752
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2419              		.loc 1 2123 10 view .LVU753
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2420              		.loc 1 2123 12 is_stmt 0 view .LVU754
 2421 0072 154B     		ldr	r3, .L192+24
 2422 0074 1A68     		ldr	r2, [r3]
2123:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2423              		.loc 1 2123 10 view .LVU755
 2424 0076 002A     		cmp	r2, #0
 2425 0078 DDD1     		bne	.L173
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2426              		.loc 1 2142 5 is_stmt 1 view .LVU756
2142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2427              		.loc 1 2142 7 is_stmt 0 view .LVU757
 2428 007a 002C     		cmp	r4, #0
 2429 007c 01D0     		beq	.L174
2150:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2430              		.loc 1 2150 6 is_stmt 1 view .LVU758
 2431 007e FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2432              	.LVL170:
 2433              	.L174:
 2434              	.LBB86:
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2435              		.loc 1 2158 6 view .LVU759
2158:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2436              		.loc 1 2158 18 is_stmt 0 view .LVU760
 2437 0082 124D     		ldr	r5, .L192+28
 2438 0084 2C68     		ldr	r4, [r5]
 2439              	.LVL171:
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
ARM GAS  /tmp/cc4h6SWf.s 			page 144


 2440              		.loc 1 2160 6 is_stmt 1 view .LVU761
2160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 2441              		.loc 1 2160 8 is_stmt 0 view .LVU762
 2442 0086 002C     		cmp	r4, #0
 2443 0088 0AD0     		beq	.L175
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2444              		.loc 1 2166 23 view .LVU763
 2445 008a 0126     		movs	r6, #1
 2446              	.L177:
2162:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 2447              		.loc 1 2162 7 is_stmt 1 view .LVU764
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2448              		.loc 1 2164 8 view .LVU765
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2449              		.loc 1 2164 12 is_stmt 0 view .LVU766
 2450 008c FFF7FEFF 		bl	xTaskIncrementTick
 2451              	.LVL172:
2164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							{
 2452              		.loc 1 2164 10 view .LVU767
 2453 0090 0028     		cmp	r0, #0
 2454 0092 01D0     		beq	.L176
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2455              		.loc 1 2166 9 is_stmt 1 view .LVU768
2166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2456              		.loc 1 2166 23 is_stmt 0 view .LVU769
 2457 0094 0B4B     		ldr	r3, .L192+20
 2458 0096 1E60     		str	r6, [r3]
 2459              	.L176:
2170:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 							}
 2460              		.loc 1 2170 33 is_stmt 1 view .LVU770
2172:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 2461              		.loc 1 2172 8 view .LVU771
 2462 0098 013C     		subs	r4, r4, #1
 2463              	.LVL173:
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2464              		.loc 1 2173 14 view .LVU772
2173:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2465              		.loc 1 2173 7 is_stmt 0 view .LVU773
 2466 009a 002C     		cmp	r4, #0
 2467 009c F6D1     		bne	.L177
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2468              		.loc 1 2175 7 is_stmt 1 view .LVU774
2175:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2469              		.loc 1 2175 21 is_stmt 0 view .LVU775
 2470 009e 2C60     		str	r4, [r5]
 2471              	.L175:
2179:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2472              		.loc 1 2179 31 is_stmt 1 view .LVU776
 2473              	.LBE86:
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2474              		.loc 1 2183 5 view .LVU777
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2475              		.loc 1 2183 23 is_stmt 0 view .LVU778
 2476 00a0 084B     		ldr	r3, .L192+20
 2477 00a2 1B68     		ldr	r3, [r3]
2183:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2478              		.loc 1 2183 7 view .LVU779
ARM GAS  /tmp/cc4h6SWf.s 			page 145


 2479 00a4 002B     		cmp	r3, #0
 2480 00a6 BAD0     		beq	.L170
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2481              		.loc 1 2187 7 is_stmt 1 view .LVU780
 2482              	.LVL174:
2190:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2483              		.loc 1 2190 6 view .LVU781
 2484 00a8 FFF7FEFF 		bl	vPortYield
 2485              	.LVL175:
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2486              		.loc 1 2187 23 is_stmt 0 view .LVU782
 2487 00ac 0124     		movs	r4, #1
 2488              	.LVL176:
2187:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 2489              		.loc 1 2187 23 view .LVU783
 2490 00ae B7E7     		b	.L168
 2491              	.L193:
 2492              		.align	2
 2493              	.L192:
 2494 00b0 00000000 		.word	.LANCHOR15
 2495 00b4 00000000 		.word	.LANCHOR7
 2496 00b8 00000000 		.word	.LANCHOR14
 2497 00bc 00000000 		.word	pxReadyTasksLists
 2498 00c0 00000000 		.word	.LANCHOR3
 2499 00c4 00000000 		.word	.LANCHOR19
 2500 00c8 00000000 		.word	.LANCHOR11
 2501 00cc 00000000 		.word	.LANCHOR18
 2502              	.LBE87:
 2503              	.LBE88:
 2504              		.cfi_endproc
 2505              	.LFE15:
 2507              		.section	.text.vTaskDelay,"ax",%progbits
 2508              		.align	1
 2509              		.global	vTaskDelay
 2510              		.syntax unified
 2511              		.code	16
 2512              		.thumb_func
 2513              		.fpu softvfp
 2515              	vTaskDelay:
 2516              	.LVL177:
 2517              	.LFB4:
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2518              		.loc 1 1283 2 is_stmt 1 view -0
 2519              		.cfi_startproc
 2520              		@ args = 0, pretend = 0, frame = 0
 2521              		@ frame_needed = 0, uses_anonymous_args = 0
1284:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2522              		.loc 1 1284 2 view .LVU785
1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2523              		.loc 1 1287 3 view .LVU786
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2524              		.loc 1 1283 2 is_stmt 0 view .LVU787
 2525 0000 70B5     		push	{r4, r5, r6, lr}
 2526              	.LCFI14:
 2527              		.cfi_def_cfa_offset 16
 2528              		.cfi_offset 4, -16
 2529              		.cfi_offset 5, -12
ARM GAS  /tmp/cc4h6SWf.s 			page 146


 2530              		.cfi_offset 6, -8
 2531              		.cfi_offset 14, -4
1283:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2532              		.loc 1 1283 2 view .LVU788
 2533 0002 041E     		subs	r4, r0, #0
1287:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2534              		.loc 1 1287 5 view .LVU789
 2535 0004 02D1     		bne	.L195
 2536              	.LVL178:
 2537              	.L199:
1314:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2538              		.loc 1 1314 4 is_stmt 1 view .LVU790
 2539 0006 FFF7FEFF 		bl	vPortYield
 2540              	.LVL179:
 2541              	.L194:
1320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2542              		.loc 1 1320 2 is_stmt 0 view .LVU791
 2543              		@ sp needed
 2544              	.LVL180:
1320:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2545              		.loc 1 1320 2 view .LVU792
 2546 000a 70BD     		pop	{r4, r5, r6, pc}
 2547              	.LVL181:
 2548              	.L195:
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2549              		.loc 1 1289 4 is_stmt 1 view .LVU793
 2550 000c 084B     		ldr	r3, .L203
 2551 000e 1D68     		ldr	r5, [r3]
 2552 0010 002D     		cmp	r5, #0
 2553 0012 01D0     		beq	.L197
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2554              		.loc 1 1289 4 discriminator 1 view .LVU794
 2555              		.syntax divided
 2556              	@ 1289 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2557 0014 72B6     		 cpsid i 
 2558              	@ 0 "" 2
 2559              		.thumb
 2560              		.syntax unified
 2561              	.L198:
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2562              		.loc 1 1289 4 discriminator 1 view .LVU795
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2563              		.loc 1 1289 4 discriminator 1 view .LVU796
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2564              		.loc 1 1289 4 discriminator 1 view .LVU797
 2565 0016 FEE7     		b	.L198
 2566              	.L197:
1289:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 2567              		.loc 1 1289 45 discriminator 2 view .LVU798
1290:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2568              		.loc 1 1290 4 discriminator 2 view .LVU799
 2569 0018 FFF7FEFF 		bl	vTaskSuspendAll
 2570              	.LVL182:
1292:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2571              		.loc 1 1292 22 discriminator 2 view .LVU800
1301:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2572              		.loc 1 1301 5 discriminator 2 view .LVU801
ARM GAS  /tmp/cc4h6SWf.s 			page 147


 2573 001c 2900     		movs	r1, r5
 2574 001e 2000     		movs	r0, r4
 2575 0020 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2576              	.LVL183:
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2577              		.loc 1 1303 4 discriminator 2 view .LVU802
1303:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2578              		.loc 1 1303 22 is_stmt 0 discriminator 2 view .LVU803
 2579 0024 FFF7FEFF 		bl	xTaskResumeAll
 2580              	.LVL184:
1307:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2581              		.loc 1 1307 28 is_stmt 1 discriminator 2 view .LVU804
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2582              		.loc 1 1312 3 discriminator 2 view .LVU805
1312:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2583              		.loc 1 1312 5 is_stmt 0 discriminator 2 view .LVU806
 2584 0028 0028     		cmp	r0, #0
 2585 002a ECD0     		beq	.L199
 2586 002c EDE7     		b	.L194
 2587              	.L204:
 2588 002e C046     		.align	2
 2589              	.L203:
 2590 0030 00000000 		.word	.LANCHOR15
 2591              		.cfi_endproc
 2592              	.LFE4:
 2594              		.section	.text.vTaskSwitchContext,"ax",%progbits
 2595              		.align	1
 2596              		.global	vTaskSwitchContext
 2597              		.syntax unified
 2598              		.code	16
 2599              		.thumb_func
 2600              		.fpu softvfp
 2602              	vTaskSwitchContext:
 2603              	.LFB21:
2846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2604              		.loc 1 2846 1 is_stmt 1 view -0
 2605              		.cfi_startproc
 2606              		@ args = 0, pretend = 0, frame = 0
 2607              		@ frame_needed = 0, uses_anonymous_args = 0
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2608              		.loc 1 2847 2 view .LVU808
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2609              		.loc 1 2847 27 is_stmt 0 view .LVU809
 2610 0000 154B     		ldr	r3, .L213
2846:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2611              		.loc 1 2846 1 view .LVU810
 2612 0002 30B5     		push	{r4, r5, lr}
 2613              	.LCFI15:
 2614              		.cfi_def_cfa_offset 12
 2615              		.cfi_offset 4, -12
 2616              		.cfi_offset 5, -8
 2617              		.cfi_offset 14, -4
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 2618              		.loc 1 2847 27 view .LVU811
 2619 0004 1A68     		ldr	r2, [r3]
 2620 0006 154B     		ldr	r3, .L213+4
2847:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
ARM GAS  /tmp/cc4h6SWf.s 			page 148


 2621              		.loc 1 2847 4 view .LVU812
 2622 0008 002A     		cmp	r2, #0
 2623 000a 02D0     		beq	.L206
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2624              		.loc 1 2851 3 is_stmt 1 view .LVU813
2851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 2625              		.loc 1 2851 17 is_stmt 0 view .LVU814
 2626 000c 0122     		movs	r2, #1
 2627 000e 1A60     		str	r2, [r3]
 2628              	.L205:
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2629              		.loc 1 2901 1 view .LVU815
 2630              		@ sp needed
 2631 0010 30BD     		pop	{r4, r5, pc}
 2632              	.L206:
 2633              	.LBB93:
 2634              	.LBI93:
2845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** {
 2635              		.loc 1 2845 6 is_stmt 1 view .LVU816
 2636              	.LBB94:
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2637              		.loc 1 2855 3 view .LVU817
 2638              	.LBB95:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2639              		.loc 1 2890 3 is_stmt 0 view .LVU818
 2640 0012 1425     		movs	r5, #20
 2641 0014 1248     		ldr	r0, .L213+8
 2642              	.LBE95:
2855:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2643              		.loc 1 2855 17 view .LVU819
 2644 0016 1A60     		str	r2, [r3]
2856:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2645              		.loc 1 2856 27 is_stmt 1 view .LVU820
2886:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2646              		.loc 1 2886 33 view .LVU821
 2647              	.LBB97:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2648              		.loc 1 2890 3 view .LVU822
 2649 0018 0268     		ldr	r2, [r0]
 2650              	.LVL185:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2651              		.loc 1 2890 3 view .LVU823
 2652 001a 1249     		ldr	r1, .L213+12
 2653              	.L208:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2654              		.loc 1 2890 3 view .LVU824
 2655 001c 2B00     		movs	r3, r5
 2656 001e 5343     		muls	r3, r2
 2657 0020 5C58     		ldr	r4, [r3, r1]
 2658 0022 002C     		cmp	r4, #0
 2659 0024 12D0     		beq	.L211
 2660              	.LBB96:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2661              		.loc 1 2890 3 view .LVU825
 2662              	.LVL186:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2663              		.loc 1 2890 3 view .LVU826
ARM GAS  /tmp/cc4h6SWf.s 			page 149


 2664 0026 CC18     		adds	r4, r1, r3
 2665 0028 6568     		ldr	r5, [r4, #4]
 2666 002a 0833     		adds	r3, r3, #8
 2667 002c 6D68     		ldr	r5, [r5, #4]
 2668 002e 5B18     		adds	r3, r3, r1
 2669 0030 6560     		str	r5, [r4, #4]
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2670              		.loc 1 2890 3 view .LVU827
 2671 0032 9D42     		cmp	r5, r3
 2672 0034 01D1     		bne	.L212
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2673              		.loc 1 2890 3 view .LVU828
 2674 0036 6B68     		ldr	r3, [r5, #4]
 2675 0038 6360     		str	r3, [r4, #4]
 2676              	.L212:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2677              		.loc 1 2890 3 view .LVU829
 2678 003a 1423     		movs	r3, #20
 2679 003c 5343     		muls	r3, r2
 2680 003e C918     		adds	r1, r1, r3
 2681 0040 4B68     		ldr	r3, [r1, #4]
 2682 0042 D968     		ldr	r1, [r3, #12]
 2683 0044 084B     		ldr	r3, .L213+16
 2684 0046 1960     		str	r1, [r3]
 2685              	.LBE96:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2686              		.loc 1 2890 3 view .LVU830
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2687              		.loc 1 2890 3 view .LVU831
 2688 0048 0260     		str	r2, [r0]
 2689              	.LBE97:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2690              		.loc 1 2890 37 view .LVU832
2891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2691              		.loc 1 2891 26 view .LVU833
 2692              	.LVL187:
2891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2693              		.loc 1 2891 26 is_stmt 0 view .LVU834
 2694              	.LBE94:
 2695              	.LBE93:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2696              		.loc 1 2890 37 is_stmt 1 view .LVU835
2891:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2697              		.loc 1 2891 26 view .LVU836
2901:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2698              		.loc 1 2901 1 is_stmt 0 view .LVU837
 2699 004a E1E7     		b	.L205
 2700              	.LVL188:
 2701              	.L211:
 2702              	.LBB100:
 2703              	.LBB99:
 2704              	.LBB98:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2705              		.loc 1 2890 3 is_stmt 1 view .LVU838
 2706 004c 002A     		cmp	r2, #0
 2707 004e 01D1     		bne	.L209
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
ARM GAS  /tmp/cc4h6SWf.s 			page 150


 2708              		.loc 1 2890 3 view .LVU839
 2709              		.syntax divided
 2710              	@ 2890 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2711 0050 72B6     		 cpsid i 
 2712              	@ 0 "" 2
 2713              		.thumb
 2714              		.syntax unified
 2715              	.L210:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2716              		.loc 1 2890 3 view .LVU840
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2717              		.loc 1 2890 3 view .LVU841
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2718              		.loc 1 2890 3 view .LVU842
 2719 0052 FEE7     		b	.L210
 2720              	.L209:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2721              		.loc 1 2890 3 view .LVU843
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2722              		.loc 1 2890 3 view .LVU844
 2723 0054 013A     		subs	r2, r2, #1
 2724              	.LVL189:
2890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2725              		.loc 1 2890 3 is_stmt 0 view .LVU845
 2726 0056 E1E7     		b	.L208
 2727              	.L214:
 2728              		.align	2
 2729              	.L213:
 2730 0058 00000000 		.word	.LANCHOR15
 2731 005c 00000000 		.word	.LANCHOR19
 2732 0060 00000000 		.word	.LANCHOR14
 2733 0064 00000000 		.word	pxReadyTasksLists
 2734 0068 00000000 		.word	.LANCHOR3
 2735              	.LBE98:
 2736              	.LBE99:
 2737              	.LBE100:
 2738              		.cfi_endproc
 2739              	.LFE21:
 2741              		.section	.text.vTaskSuspend,"ax",%progbits
 2742              		.align	1
 2743              		.global	vTaskSuspend
 2744              		.syntax unified
 2745              		.code	16
 2746              		.thumb_func
 2747              		.fpu softvfp
 2749              	vTaskSuspend:
 2750              	.LVL190:
 2751              	.LFB8:
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 2752              		.loc 1 1625 2 is_stmt 1 view -0
 2753              		.cfi_startproc
 2754              		@ args = 0, pretend = 0, frame = 0
 2755              		@ frame_needed = 0, uses_anonymous_args = 0
1626:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2756              		.loc 1 1626 2 view .LVU847
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2757              		.loc 1 1628 3 view .LVU848
ARM GAS  /tmp/cc4h6SWf.s 			page 151


1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 2758              		.loc 1 1625 2 is_stmt 0 view .LVU849
 2759 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2760              	.LCFI16:
 2761              		.cfi_def_cfa_offset 24
 2762              		.cfi_offset 3, -24
 2763              		.cfi_offset 4, -20
 2764              		.cfi_offset 5, -16
 2765              		.cfi_offset 6, -12
 2766              		.cfi_offset 7, -8
 2767              		.cfi_offset 14, -4
1625:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 2768              		.loc 1 1625 2 view .LVU850
 2769 0002 0400     		movs	r4, r0
1628:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2770              		.loc 1 1628 3 view .LVU851
 2771 0004 FFF7FEFF 		bl	vPortEnterCritical
 2772              	.LVL191:
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2773              		.loc 1 1632 4 is_stmt 1 view .LVU852
 2774 0008 1F4D     		ldr	r5, .L231
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2775              		.loc 1 1632 12 is_stmt 0 view .LVU853
 2776 000a 002C     		cmp	r4, #0
 2777 000c 00D1     		bne	.L216
1632:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2778              		.loc 1 1632 12 discriminator 1 view .LVU854
 2779 000e 2C68     		ldr	r4, [r5]
 2780              	.LVL192:
 2781              	.L216:
1634:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2782              		.loc 1 1634 30 is_stmt 1 discriminator 4 view .LVU855
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2783              		.loc 1 1638 4 discriminator 4 view .LVU856
1638:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2784              		.loc 1 1638 8 is_stmt 0 discriminator 4 view .LVU857
 2785 0010 271D     		adds	r7, r4, #4
 2786 0012 3800     		movs	r0, r7
 2787 0014 FFF7FEFF 		bl	uxListRemove
 2788              	.LVL193:
1644:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2789              		.loc 1 1644 29 is_stmt 1 discriminator 4 view .LVU858
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2790              		.loc 1 1648 4 discriminator 4 view .LVU859
1648:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2791              		.loc 1 1648 6 is_stmt 0 discriminator 4 view .LVU860
 2792 0018 A36A     		ldr	r3, [r4, #40]
 2793 001a 002B     		cmp	r3, #0
 2794 001c 03D0     		beq	.L217
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2795              		.loc 1 1650 5 is_stmt 1 view .LVU861
1650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2796              		.loc 1 1650 14 is_stmt 0 view .LVU862
 2797 001e 2000     		movs	r0, r4
 2798 0020 1830     		adds	r0, r0, #24
 2799 0022 FFF7FEFF 		bl	uxListRemove
 2800              	.LVL194:
ARM GAS  /tmp/cc4h6SWf.s 			page 152


 2801              	.L217:
1654:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2802              		.loc 1 1654 29 is_stmt 1 view .LVU863
1657:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2803              		.loc 1 1657 4 view .LVU864
 2804 0026 194E     		ldr	r6, .L231+4
 2805 0028 3900     		movs	r1, r7
 2806 002a 3000     		movs	r0, r6
 2807 002c FFF7FEFF 		bl	vListInsertEnd
 2808              	.LVL195:
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2809              		.loc 1 1661 5 view .LVU865
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2810              		.loc 1 1661 14 is_stmt 0 view .LVU866
 2811 0030 2300     		movs	r3, r4
 2812 0032 5033     		adds	r3, r3, #80
 2813 0034 1A78     		ldrb	r2, [r3]
1661:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2814              		.loc 1 1661 7 view .LVU867
 2815 0036 012A     		cmp	r2, #1
 2816 0038 01D1     		bne	.L218
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2817              		.loc 1 1665 6 is_stmt 1 view .LVU868
1665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2818              		.loc 1 1665 27 is_stmt 0 view .LVU869
 2819 003a 0022     		movs	r2, #0
 2820 003c 1A70     		strb	r2, [r3]
 2821              	.L218:
1670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2822              		.loc 1 1670 3 is_stmt 1 view .LVU870
 2823 003e FFF7FEFF 		bl	vPortExitCritical
 2824              	.LVL196:
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2825              		.loc 1 1672 3 view .LVU871
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2826              		.loc 1 1672 25 is_stmt 0 view .LVU872
 2827 0042 134F     		ldr	r7, .L231+8
 2828 0044 3B68     		ldr	r3, [r7]
1672:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2829              		.loc 1 1672 5 view .LVU873
 2830 0046 002B     		cmp	r3, #0
 2831 0048 05D0     		beq	.L219
1676:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2832              		.loc 1 1676 4 is_stmt 1 view .LVU874
 2833 004a FFF7FEFF 		bl	vPortEnterCritical
 2834              	.LVL197:
1678:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2835              		.loc 1 1678 5 view .LVU875
 2836 004e FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2837              	.LVL198:
1680:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2838              		.loc 1 1680 4 view .LVU876
 2839 0052 FFF7FEFF 		bl	vPortExitCritical
 2840              	.LVL199:
 2841              	.L219:
1684:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2842              		.loc 1 1684 28 view .LVU877
ARM GAS  /tmp/cc4h6SWf.s 			page 153


1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2843              		.loc 1 1687 3 view .LVU878
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2844              		.loc 1 1687 13 is_stmt 0 view .LVU879
 2845 0056 2B68     		ldr	r3, [r5]
1687:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 2846              		.loc 1 1687 5 view .LVU880
 2847 0058 A342     		cmp	r3, r4
 2848 005a 0AD1     		bne	.L215
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2849              		.loc 1 1689 4 is_stmt 1 view .LVU881
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2850              		.loc 1 1689 26 is_stmt 0 view .LVU882
 2851 005c 3B68     		ldr	r3, [r7]
1689:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 2852              		.loc 1 1689 6 view .LVU883
 2853 005e 002B     		cmp	r3, #0
 2854 0060 08D0     		beq	.L221
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 2855              		.loc 1 1692 5 is_stmt 1 view .LVU884
 2856 0062 0C4B     		ldr	r3, .L231+12
 2857 0064 1B68     		ldr	r3, [r3]
 2858 0066 002B     		cmp	r3, #0
 2859 0068 01D0     		beq	.L222
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 2860              		.loc 1 1692 5 discriminator 1 view .LVU885
 2861              		.syntax divided
 2862              	@ 1692 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2863 006a 72B6     		 cpsid i 
 2864              	@ 0 "" 2
 2865              		.thumb
 2866              		.syntax unified
 2867              	.L223:
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 2868              		.loc 1 1692 5 discriminator 1 view .LVU886
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 2869              		.loc 1 1692 5 discriminator 1 view .LVU887
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 2870              		.loc 1 1692 5 discriminator 1 view .LVU888
 2871 006c FEE7     		b	.L223
 2872              	.L222:
1692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 2873              		.loc 1 1692 46 discriminator 2 view .LVU889
1693:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 2874              		.loc 1 1693 5 discriminator 2 view .LVU890
 2875 006e FFF7FEFF 		bl	vPortYield
 2876              	.LVL200:
 2877              	.L215:
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2878              		.loc 1 1718 2 is_stmt 0 view .LVU891
 2879              		@ sp needed
 2880              	.LVL201:
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2881              		.loc 1 1718 2 view .LVU892
 2882 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2883              	.LVL202:
 2884              	.L221:
ARM GAS  /tmp/cc4h6SWf.s 			page 154


1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2885              		.loc 1 1700 5 is_stmt 1 view .LVU893
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2886              		.loc 1 1700 56 is_stmt 0 view .LVU894
 2887 0074 084A     		ldr	r2, .L231+16
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2888              		.loc 1 1700 9 view .LVU895
 2889 0076 3168     		ldr	r1, [r6]
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2890              		.loc 1 1700 56 view .LVU896
 2891 0078 1268     		ldr	r2, [r2]
1700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 2892              		.loc 1 1700 7 view .LVU897
 2893 007a 9142     		cmp	r1, r2
 2894 007c 01D1     		bne	.L224
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2895              		.loc 1 1706 6 is_stmt 1 view .LVU898
1706:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2896              		.loc 1 1706 19 is_stmt 0 view .LVU899
 2897 007e 2B60     		str	r3, [r5]
 2898 0080 F7E7     		b	.L215
 2899              	.L224:
1710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 2900              		.loc 1 1710 6 is_stmt 1 view .LVU900
 2901 0082 FFF7FEFF 		bl	vTaskSwitchContext
 2902              	.LVL203:
1716:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 2903              		.loc 1 1716 28 view .LVU901
1718:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2904              		.loc 1 1718 2 is_stmt 0 view .LVU902
 2905 0086 F4E7     		b	.L215
 2906              	.L232:
 2907              		.align	2
 2908              	.L231:
 2909 0088 00000000 		.word	.LANCHOR3
 2910 008c 00000000 		.word	.LANCHOR4
 2911 0090 00000000 		.word	.LANCHOR12
 2912 0094 00000000 		.word	.LANCHOR15
 2913 0098 00000000 		.word	.LANCHOR7
 2914              		.cfi_endproc
 2915              	.LFE8:
 2917              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 2918              		.align	1
 2919              		.global	vTaskPlaceOnEventList
 2920              		.syntax unified
 2921              		.code	16
 2922              		.thumb_func
 2923              		.fpu softvfp
 2925              	vTaskPlaceOnEventList:
 2926              	.LVL204:
 2927              	.LFB22:
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 2928              		.loc 1 2905 1 is_stmt 1 view -0
 2929              		.cfi_startproc
 2930              		@ args = 0, pretend = 0, frame = 0
 2931              		@ frame_needed = 0, uses_anonymous_args = 0
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc4h6SWf.s 			page 155


 2932              		.loc 1 2906 2 view .LVU904
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 2933              		.loc 1 2905 1 is_stmt 0 view .LVU905
 2934 0000 10B5     		push	{r4, lr}
 2935              	.LCFI17:
 2936              		.cfi_def_cfa_offset 8
 2937              		.cfi_offset 4, -8
 2938              		.cfi_offset 14, -4
2905:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 2939              		.loc 1 2905 1 view .LVU906
 2940 0002 0C00     		movs	r4, r1
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2941              		.loc 1 2906 2 view .LVU907
 2942 0004 0028     		cmp	r0, #0
 2943 0006 01D1     		bne	.L234
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2944              		.loc 1 2906 2 is_stmt 1 discriminator 1 view .LVU908
 2945              		.syntax divided
 2946              	@ 2906 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 2947 0008 72B6     		 cpsid i 
 2948              	@ 0 "" 2
 2949              		.thumb
 2950              		.syntax unified
 2951              	.L235:
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2952              		.loc 1 2906 2 discriminator 1 view .LVU909
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2953              		.loc 1 2906 2 discriminator 1 view .LVU910
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2954              		.loc 1 2906 2 discriminator 1 view .LVU911
 2955 000a FEE7     		b	.L235
 2956              	.L234:
2906:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2957              		.loc 1 2906 29 discriminator 2 view .LVU912
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2958              		.loc 1 2915 2 discriminator 2 view .LVU913
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2959              		.loc 1 2915 43 is_stmt 0 discriminator 2 view .LVU914
 2960 000c 044B     		ldr	r3, .L236
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2961              		.loc 1 2918 1 discriminator 2 view .LVU915
 2962              		@ sp needed
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2963              		.loc 1 2915 43 discriminator 2 view .LVU916
 2964 000e 1968     		ldr	r1, [r3]
 2965              	.LVL205:
2915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 2966              		.loc 1 2915 2 discriminator 2 view .LVU917
 2967 0010 1831     		adds	r1, r1, #24
 2968 0012 FFF7FEFF 		bl	vListInsert
 2969              	.LVL206:
2917:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 2970              		.loc 1 2917 2 is_stmt 1 discriminator 2 view .LVU918
 2971 0016 0121     		movs	r1, #1
 2972 0018 2000     		movs	r0, r4
 2973 001a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2974              	.LVL207:
ARM GAS  /tmp/cc4h6SWf.s 			page 156


 2975              	.LVL208:
2918:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 2976              		.loc 1 2918 1 is_stmt 0 discriminator 2 view .LVU919
 2977 001e 10BD     		pop	{r4, pc}
 2978              	.L237:
 2979              		.align	2
 2980              	.L236:
 2981 0020 00000000 		.word	.LANCHOR3
 2982              		.cfi_endproc
 2983              	.LFE22:
 2985              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 2986              		.align	1
 2987              		.global	vTaskPlaceOnUnorderedEventList
 2988              		.syntax unified
 2989              		.code	16
 2990              		.thumb_func
 2991              		.fpu softvfp
 2993              	vTaskPlaceOnUnorderedEventList:
 2994              	.LVL209:
 2995              	.LFB23:
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 2996              		.loc 1 2922 1 is_stmt 1 view -0
 2997              		.cfi_startproc
 2998              		@ args = 0, pretend = 0, frame = 0
 2999              		@ frame_needed = 0, uses_anonymous_args = 0
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3000              		.loc 1 2923 2 view .LVU921
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3001              		.loc 1 2922 1 is_stmt 0 view .LVU922
 3002 0000 70B5     		push	{r4, r5, r6, lr}
 3003              	.LCFI18:
 3004              		.cfi_def_cfa_offset 16
 3005              		.cfi_offset 4, -16
 3006              		.cfi_offset 5, -12
 3007              		.cfi_offset 6, -8
 3008              		.cfi_offset 14, -4
2922:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3009              		.loc 1 2922 1 view .LVU923
 3010 0002 0B00     		movs	r3, r1
 3011 0004 1400     		movs	r4, r2
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3012              		.loc 1 2923 2 view .LVU924
 3013 0006 0028     		cmp	r0, #0
 3014 0008 01D1     		bne	.L239
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3015              		.loc 1 2923 2 is_stmt 1 discriminator 1 view .LVU925
 3016              		.syntax divided
 3017              	@ 2923 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3018 000a 72B6     		 cpsid i 
 3019              	@ 0 "" 2
 3020              		.thumb
 3021              		.syntax unified
 3022              	.L240:
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3023              		.loc 1 2923 2 discriminator 1 view .LVU926
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3024              		.loc 1 2923 2 discriminator 1 view .LVU927
ARM GAS  /tmp/cc4h6SWf.s 			page 157


2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3025              		.loc 1 2923 2 discriminator 1 view .LVU928
 3026 000c FEE7     		b	.L240
 3027              	.L239:
2923:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3028              		.loc 1 2923 29 discriminator 2 view .LVU929
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3029              		.loc 1 2927 2 discriminator 2 view .LVU930
 3030 000e 0A4A     		ldr	r2, .L243
 3031              	.LVL210:
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3032              		.loc 1 2927 2 is_stmt 0 discriminator 2 view .LVU931
 3033 0010 1268     		ldr	r2, [r2]
 3034 0012 002A     		cmp	r2, #0
 3035 0014 01D1     		bne	.L241
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3036              		.loc 1 2927 2 is_stmt 1 discriminator 1 view .LVU932
 3037              		.syntax divided
 3038              	@ 2927 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3039 0016 72B6     		 cpsid i 
 3040              	@ 0 "" 2
 3041              		.thumb
 3042              		.syntax unified
 3043              	.L242:
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3044              		.loc 1 2927 2 discriminator 2 view .LVU933
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3045              		.loc 1 2927 2 discriminator 2 view .LVU934
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3046              		.loc 1 2927 2 discriminator 2 view .LVU935
 3047 0018 FEE7     		b	.L242
 3048              	.L241:
2927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3049              		.loc 1 2927 43 discriminator 2 view .LVU936
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3050              		.loc 1 2932 2 discriminator 2 view .LVU937
 3051 001a 8021     		movs	r1, #128
 3052              	.LVL211:
2932:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3053              		.loc 1 2932 2 is_stmt 0 discriminator 2 view .LVU938
 3054 001c 074A     		ldr	r2, .L243+4
 3055 001e 0906     		lsls	r1, r1, #24
 3056 0020 1568     		ldr	r5, [r2]
 3057 0022 1943     		orrs	r1, r3
 3058 0024 A961     		str	r1, [r5, #24]
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3059              		.loc 1 2939 2 is_stmt 1 discriminator 2 view .LVU939
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3060              		.loc 1 2939 46 is_stmt 0 discriminator 2 view .LVU940
 3061 0026 1168     		ldr	r1, [r2]
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3062              		.loc 1 2942 1 discriminator 2 view .LVU941
 3063              		@ sp needed
2939:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3064              		.loc 1 2939 2 discriminator 2 view .LVU942
 3065 0028 1831     		adds	r1, r1, #24
 3066 002a FFF7FEFF 		bl	vListInsertEnd
ARM GAS  /tmp/cc4h6SWf.s 			page 158


 3067              	.LVL212:
2941:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3068              		.loc 1 2941 2 is_stmt 1 discriminator 2 view .LVU943
 3069 002e 0121     		movs	r1, #1
 3070 0030 2000     		movs	r0, r4
 3071 0032 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3072              	.LVL213:
 3073              	.LVL214:
2942:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3074              		.loc 1 2942 1 is_stmt 0 discriminator 2 view .LVU944
 3075 0036 70BD     		pop	{r4, r5, r6, pc}
 3076              	.L244:
 3077              		.align	2
 3078              	.L243:
 3079 0038 00000000 		.word	.LANCHOR15
 3080 003c 00000000 		.word	.LANCHOR3
 3081              		.cfi_endproc
 3082              	.LFE23:
 3084              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3085              		.align	1
 3086              		.global	xTaskRemoveFromEventList
 3087              		.syntax unified
 3088              		.code	16
 3089              		.thumb_func
 3090              		.fpu softvfp
 3092              	xTaskRemoveFromEventList:
 3093              	.LVL215:
 3094              	.LFB24:
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3095              		.loc 1 2979 1 is_stmt 1 view -0
 3096              		.cfi_startproc
 3097              		@ args = 0, pretend = 0, frame = 0
 3098              		@ frame_needed = 0, uses_anonymous_args = 0
2980:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3099              		.loc 1 2980 1 view .LVU946
2981:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3100              		.loc 1 2981 1 view .LVU947
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3101              		.loc 1 2996 2 view .LVU948
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3102              		.loc 1 2996 17 is_stmt 0 view .LVU949
 3103 0000 C368     		ldr	r3, [r0, #12]
2979:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3104              		.loc 1 2979 1 view .LVU950
 3105 0002 70B5     		push	{r4, r5, r6, lr}
 3106              	.LCFI19:
 3107              		.cfi_def_cfa_offset 16
 3108              		.cfi_offset 4, -16
 3109              		.cfi_offset 5, -12
 3110              		.cfi_offset 6, -8
 3111              		.cfi_offset 14, -4
2996:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3112              		.loc 1 2996 17 view .LVU951
 3113 0004 DC68     		ldr	r4, [r3, #12]
 3114              	.LVL216:
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3115              		.loc 1 2997 2 is_stmt 1 view .LVU952
ARM GAS  /tmp/cc4h6SWf.s 			page 159


 3116 0006 002C     		cmp	r4, #0
 3117 0008 01D1     		bne	.L246
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3118              		.loc 1 2997 2 discriminator 1 view .LVU953
 3119              		.syntax divided
 3120              	@ 2997 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3121 000a 72B6     		 cpsid i 
 3122              	@ 0 "" 2
 3123              		.thumb
 3124              		.syntax unified
 3125              	.L247:
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3126              		.loc 1 2997 2 discriminator 1 view .LVU954
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3127              		.loc 1 2997 2 discriminator 1 view .LVU955
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3128              		.loc 1 2997 2 discriminator 1 view .LVU956
 3129 000c FEE7     		b	.L247
 3130              	.L246:
2997:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3131              		.loc 1 2997 32 discriminator 2 view .LVU957
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3132              		.loc 1 2998 2 discriminator 2 view .LVU958
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3133              		.loc 1 2998 11 is_stmt 0 discriminator 2 view .LVU959
 3134 000e 2500     		movs	r5, r4
 3135 0010 1835     		adds	r5, r5, #24
 3136 0012 2800     		movs	r0, r5
 3137              	.LVL217:
2998:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3138              		.loc 1 2998 11 discriminator 2 view .LVU960
 3139 0014 FFF7FEFF 		bl	uxListRemove
 3140              	.LVL218:
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3141              		.loc 1 3000 2 is_stmt 1 discriminator 2 view .LVU961
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3142              		.loc 1 3000 27 is_stmt 0 discriminator 2 view .LVU962
 3143 0018 114B     		ldr	r3, .L254
 3144 001a 1B68     		ldr	r3, [r3]
3000:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3145              		.loc 1 3000 4 discriminator 2 view .LVU963
 3146 001c 002B     		cmp	r3, #0
 3147 001e 1BD1     		bne	.L248
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3148              		.loc 1 3002 3 is_stmt 1 view .LVU964
3002:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3149              		.loc 1 3002 12 is_stmt 0 view .LVU965
 3150 0020 251D     		adds	r5, r4, #4
 3151 0022 2800     		movs	r0, r5
 3152 0024 FFF7FEFF 		bl	uxListRemove
 3153              	.LVL219:
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3154              		.loc 1 3003 3 is_stmt 1 view .LVU966
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3155              		.loc 1 3003 3 view .LVU967
 3156 0028 0E4A     		ldr	r2, .L254+4
 3157 002a E36A     		ldr	r3, [r4, #44]
ARM GAS  /tmp/cc4h6SWf.s 			page 160


 3158 002c 1168     		ldr	r1, [r2]
 3159 002e 8B42     		cmp	r3, r1
 3160 0030 00D9     		bls	.L249
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3161              		.loc 1 3003 3 discriminator 1 view .LVU968
 3162 0032 1360     		str	r3, [r2]
 3163              	.L249:
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3164              		.loc 1 3003 3 discriminator 3 view .LVU969
3003:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3165              		.loc 1 3003 3 discriminator 3 view .LVU970
 3166 0034 1420     		movs	r0, #20
 3167 0036 2900     		movs	r1, r5
 3168 0038 5843     		muls	r0, r3
 3169 003a 0B4B     		ldr	r3, .L254+8
 3170 003c C018     		adds	r0, r0, r3
 3171              	.L253:
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3172              		.loc 1 3009 3 is_stmt 0 view .LVU971
 3173 003e FFF7FEFF 		bl	vListInsertEnd
 3174              	.LVL220:
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3175              		.loc 1 3012 2 is_stmt 1 view .LVU972
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3176              		.loc 1 3012 47 is_stmt 0 view .LVU973
 3177 0042 0A4B     		ldr	r3, .L254+12
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3178              		.loc 1 3012 4 view .LVU974
 3179 0044 E26A     		ldr	r2, [r4, #44]
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3180              		.loc 1 3012 47 view .LVU975
 3181 0046 1B68     		ldr	r3, [r3]
3025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3182              		.loc 1 3025 11 view .LVU976
 3183 0048 0020     		movs	r0, #0
3012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3184              		.loc 1 3012 4 view .LVU977
 3185 004a DB6A     		ldr	r3, [r3, #44]
 3186 004c 9A42     		cmp	r2, r3
 3187 004e 02D9     		bls	.L245
3017:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3188              		.loc 1 3017 3 is_stmt 1 view .LVU978
 3189              	.LVL221:
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3190              		.loc 1 3021 3 view .LVU979
3021:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3191              		.loc 1 3021 17 is_stmt 0 view .LVU980
 3192 0050 074B     		ldr	r3, .L254+16
 3193 0052 0130     		adds	r0, r0, #1
 3194 0054 1860     		str	r0, [r3]
 3195              	.LVL222:
 3196              	.L245:
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3197              		.loc 1 3043 1 view .LVU981
 3198              		@ sp needed
 3199              	.LVL223:
3043:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  /tmp/cc4h6SWf.s 			page 161


 3200              		.loc 1 3043 1 view .LVU982
 3201 0056 70BD     		pop	{r4, r5, r6, pc}
 3202              	.LVL224:
 3203              	.L248:
3009:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3204              		.loc 1 3009 3 is_stmt 1 view .LVU983
 3205 0058 2900     		movs	r1, r5
 3206 005a 0648     		ldr	r0, .L254+20
 3207 005c EFE7     		b	.L253
 3208              	.L255:
 3209 005e C046     		.align	2
 3210              	.L254:
 3211 0060 00000000 		.word	.LANCHOR15
 3212 0064 00000000 		.word	.LANCHOR14
 3213 0068 00000000 		.word	pxReadyTasksLists
 3214 006c 00000000 		.word	.LANCHOR3
 3215 0070 00000000 		.word	.LANCHOR19
 3216 0074 00000000 		.word	.LANCHOR11
 3217              		.cfi_endproc
 3218              	.LFE24:
 3220              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 3221              		.align	1
 3222              		.global	vTaskRemoveFromUnorderedEventList
 3223              		.syntax unified
 3224              		.code	16
 3225              		.thumb_func
 3226              		.fpu softvfp
 3228              	vTaskRemoveFromUnorderedEventList:
 3229              	.LVL225:
 3230              	.LFB25:
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3231              		.loc 1 3047 1 view -0
 3232              		.cfi_startproc
 3233              		@ args = 0, pretend = 0, frame = 0
 3234              		@ frame_needed = 0, uses_anonymous_args = 0
3048:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3235              		.loc 1 3048 1 view .LVU985
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3236              		.loc 1 3052 2 view .LVU986
 3237 0000 164A     		ldr	r2, .L263
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3238              		.loc 1 3047 1 is_stmt 0 view .LVU987
 3239 0002 0B00     		movs	r3, r1
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3240              		.loc 1 3052 2 view .LVU988
 3241 0004 1268     		ldr	r2, [r2]
3047:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
 3242              		.loc 1 3047 1 view .LVU989
 3243 0006 70B5     		push	{r4, r5, r6, lr}
 3244              	.LCFI20:
 3245              		.cfi_def_cfa_offset 16
 3246              		.cfi_offset 4, -16
 3247              		.cfi_offset 5, -12
 3248              		.cfi_offset 6, -8
 3249              		.cfi_offset 14, -4
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3250              		.loc 1 3052 2 view .LVU990
ARM GAS  /tmp/cc4h6SWf.s 			page 162


 3251 0008 002A     		cmp	r2, #0
 3252 000a 01D1     		bne	.L257
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3253              		.loc 1 3052 2 is_stmt 1 discriminator 1 view .LVU991
 3254              		.syntax divided
 3255              	@ 3052 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3256 000c 72B6     		 cpsid i 
 3257              	@ 0 "" 2
 3258              		.thumb
 3259              		.syntax unified
 3260              	.L258:
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3261              		.loc 1 3052 2 discriminator 1 view .LVU992
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3262              		.loc 1 3052 2 discriminator 1 view .LVU993
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3263              		.loc 1 3052 2 discriminator 1 view .LVU994
 3264 000e FEE7     		b	.L258
 3265              	.L257:
3052:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3266              		.loc 1 3052 49 discriminator 2 view .LVU995
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3267              		.loc 1 3055 2 discriminator 2 view .LVU996
 3268 0010 8021     		movs	r1, #128
 3269              	.LVL226:
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3270              		.loc 1 3059 17 is_stmt 0 discriminator 2 view .LVU997
 3271 0012 C468     		ldr	r4, [r0, #12]
3055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3272              		.loc 1 3055 2 discriminator 2 view .LVU998
 3273 0014 0906     		lsls	r1, r1, #24
 3274 0016 1943     		orrs	r1, r3
 3275 0018 0160     		str	r1, [r0]
3059:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3276              		.loc 1 3059 2 is_stmt 1 discriminator 2 view .LVU999
 3277              	.LVL227:
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3278              		.loc 1 3060 2 discriminator 2 view .LVU1000
 3279 001a 002C     		cmp	r4, #0
 3280 001c 01D1     		bne	.L259
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3281              		.loc 1 3060 2 discriminator 1 view .LVU1001
 3282              		.syntax divided
 3283              	@ 3060 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3284 001e 72B6     		 cpsid i 
 3285              	@ 0 "" 2
 3286              		.thumb
 3287              		.syntax unified
 3288              	.L260:
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3289              		.loc 1 3060 2 discriminator 2 view .LVU1002
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3290              		.loc 1 3060 2 discriminator 2 view .LVU1003
3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3291              		.loc 1 3060 2 discriminator 2 view .LVU1004
 3292 0020 FEE7     		b	.L260
 3293              	.L259:
ARM GAS  /tmp/cc4h6SWf.s 			page 163


3060:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3294              		.loc 1 3060 32 discriminator 2 view .LVU1005
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3295              		.loc 1 3061 2 discriminator 2 view .LVU1006
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3296              		.loc 1 3066 11 is_stmt 0 discriminator 2 view .LVU1007
 3297 0022 251D     		adds	r5, r4, #4
3061:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3298              		.loc 1 3061 11 discriminator 2 view .LVU1008
 3299 0024 FFF7FEFF 		bl	uxListRemove
 3300              	.LVL228:
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3301              		.loc 1 3066 2 is_stmt 1 discriminator 2 view .LVU1009
3066:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3302              		.loc 1 3066 11 is_stmt 0 discriminator 2 view .LVU1010
 3303 0028 2800     		movs	r0, r5
 3304 002a FFF7FEFF 		bl	uxListRemove
 3305              	.LVL229:
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3306              		.loc 1 3067 2 is_stmt 1 discriminator 2 view .LVU1011
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3307              		.loc 1 3067 2 discriminator 2 view .LVU1012
 3308 002e 0C4A     		ldr	r2, .L263+4
 3309 0030 E36A     		ldr	r3, [r4, #44]
 3310 0032 1168     		ldr	r1, [r2]
 3311 0034 8B42     		cmp	r3, r1
 3312 0036 00D9     		bls	.L261
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3313              		.loc 1 3067 2 discriminator 1 view .LVU1013
 3314 0038 1360     		str	r3, [r2]
 3315              	.L261:
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3316              		.loc 1 3067 2 discriminator 3 view .LVU1014
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3317              		.loc 1 3067 2 discriminator 3 view .LVU1015
 3318 003a 1420     		movs	r0, #20
 3319 003c 5843     		muls	r0, r3
 3320 003e 094B     		ldr	r3, .L263+8
 3321 0040 2900     		movs	r1, r5
 3322 0042 C018     		adds	r0, r0, r3
 3323 0044 FFF7FEFF 		bl	vListInsertEnd
 3324              	.LVL230:
3067:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3325              		.loc 1 3067 41 discriminator 3 view .LVU1016
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3326              		.loc 1 3069 2 discriminator 3 view .LVU1017
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3327              		.loc 1 3069 47 is_stmt 0 discriminator 3 view .LVU1018
 3328 0048 074B     		ldr	r3, .L263+12
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3329              		.loc 1 3069 4 discriminator 3 view .LVU1019
 3330 004a E26A     		ldr	r2, [r4, #44]
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3331              		.loc 1 3069 47 discriminator 3 view .LVU1020
 3332 004c 1B68     		ldr	r3, [r3]
3069:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3333              		.loc 1 3069 4 discriminator 3 view .LVU1021
ARM GAS  /tmp/cc4h6SWf.s 			page 164


 3334 004e DB6A     		ldr	r3, [r3, #44]
 3335 0050 9A42     		cmp	r2, r3
 3336 0052 02D9     		bls	.L256
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3337              		.loc 1 3075 3 is_stmt 1 view .LVU1022
3075:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3338              		.loc 1 3075 17 is_stmt 0 view .LVU1023
 3339 0054 0122     		movs	r2, #1
 3340 0056 054B     		ldr	r3, .L263+16
 3341 0058 1A60     		str	r2, [r3]
 3342              	.L256:
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3343              		.loc 1 3077 1 view .LVU1024
 3344              		@ sp needed
 3345              	.LVL231:
 3346              	.LVL232:
3077:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3347              		.loc 1 3077 1 view .LVU1025
 3348 005a 70BD     		pop	{r4, r5, r6, pc}
 3349              	.L264:
 3350              		.align	2
 3351              	.L263:
 3352 005c 00000000 		.word	.LANCHOR15
 3353 0060 00000000 		.word	.LANCHOR14
 3354 0064 00000000 		.word	pxReadyTasksLists
 3355 0068 00000000 		.word	.LANCHOR3
 3356 006c 00000000 		.word	.LANCHOR19
 3357              		.cfi_endproc
 3358              	.LFE25:
 3360              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3361              		.align	1
 3362              		.global	vTaskSetTimeOutState
 3363              		.syntax unified
 3364              		.code	16
 3365              		.thumb_func
 3366              		.fpu softvfp
 3368              	vTaskSetTimeOutState:
 3369              	.LVL233:
 3370              	.LFB26:
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 3371              		.loc 1 3081 1 is_stmt 1 view -0
 3372              		.cfi_startproc
 3373              		@ args = 0, pretend = 0, frame = 0
 3374              		@ frame_needed = 0, uses_anonymous_args = 0
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 3375              		.loc 1 3082 2 view .LVU1027
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 3376              		.loc 1 3081 1 is_stmt 0 view .LVU1028
 3377 0000 10B5     		push	{r4, lr}
 3378              	.LCFI21:
 3379              		.cfi_def_cfa_offset 8
 3380              		.cfi_offset 4, -8
 3381              		.cfi_offset 14, -4
3081:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 3382              		.loc 1 3081 1 view .LVU1029
 3383 0002 041E     		subs	r4, r0, #0
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
ARM GAS  /tmp/cc4h6SWf.s 			page 165


 3384              		.loc 1 3082 2 view .LVU1030
 3385 0004 01D1     		bne	.L266
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 3386              		.loc 1 3082 2 is_stmt 1 discriminator 1 view .LVU1031
 3387              		.syntax divided
 3388              	@ 3082 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3389 0006 72B6     		 cpsid i 
 3390              	@ 0 "" 2
 3391              		.thumb
 3392              		.syntax unified
 3393              	.L267:
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 3394              		.loc 1 3082 2 discriminator 1 view .LVU1032
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 3395              		.loc 1 3082 2 discriminator 1 view .LVU1033
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 3396              		.loc 1 3082 2 discriminator 1 view .LVU1034
 3397 0008 FEE7     		b	.L267
 3398              	.L266:
3082:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 3399              		.loc 1 3082 27 discriminator 2 view .LVU1035
3083:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3400              		.loc 1 3083 2 discriminator 2 view .LVU1036
 3401 000a FFF7FEFF 		bl	vPortEnterCritical
 3402              	.LVL234:
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 3403              		.loc 1 3085 3 discriminator 2 view .LVU1037
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 3404              		.loc 1 3085 29 is_stmt 0 discriminator 2 view .LVU1038
 3405 000e 044B     		ldr	r3, .L268
3089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3406              		.loc 1 3089 1 discriminator 2 view .LVU1039
 3407              		@ sp needed
3085:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 3408              		.loc 1 3085 29 discriminator 2 view .LVU1040
 3409 0010 1B68     		ldr	r3, [r3]
 3410 0012 2360     		str	r3, [r4]
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3411              		.loc 1 3086 3 is_stmt 1 discriminator 2 view .LVU1041
3086:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3412              		.loc 1 3086 30 is_stmt 0 discriminator 2 view .LVU1042
 3413 0014 034B     		ldr	r3, .L268+4
 3414 0016 1B68     		ldr	r3, [r3]
 3415 0018 6360     		str	r3, [r4, #4]
3088:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3416              		.loc 1 3088 2 is_stmt 1 discriminator 2 view .LVU1043
 3417 001a FFF7FEFF 		bl	vPortExitCritical
 3418              	.LVL235:
 3419              	.LVL236:
3089:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3420              		.loc 1 3089 1 is_stmt 0 discriminator 2 view .LVU1044
 3421 001e 10BD     		pop	{r4, pc}
 3422              	.L269:
 3423              		.align	2
 3424              	.L268:
 3425 0020 00000000 		.word	.LANCHOR17
 3426 0024 00000000 		.word	.LANCHOR2
ARM GAS  /tmp/cc4h6SWf.s 			page 166


 3427              		.cfi_endproc
 3428              	.LFE26:
 3430              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 3431              		.align	1
 3432              		.global	vTaskInternalSetTimeOutState
 3433              		.syntax unified
 3434              		.code	16
 3435              		.thumb_func
 3436              		.fpu softvfp
 3438              	vTaskInternalSetTimeOutState:
 3439              	.LVL237:
 3440              	.LFB27:
3093:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
 3441              		.loc 1 3093 1 is_stmt 1 view -0
 3442              		.cfi_startproc
 3443              		@ args = 0, pretend = 0, frame = 0
 3444              		@ frame_needed = 0, uses_anonymous_args = 0
 3445              		@ link register save eliminated.
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3446              		.loc 1 3095 2 view .LVU1046
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3447              		.loc 1 3095 28 is_stmt 0 view .LVU1047
 3448 0000 034B     		ldr	r3, .L271
3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3449              		.loc 1 3097 1 view .LVU1048
 3450              		@ sp needed
3095:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3451              		.loc 1 3095 28 view .LVU1049
 3452 0002 1B68     		ldr	r3, [r3]
 3453 0004 0360     		str	r3, [r0]
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3454              		.loc 1 3096 2 is_stmt 1 view .LVU1050
3096:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3455              		.loc 1 3096 29 is_stmt 0 view .LVU1051
 3456 0006 034B     		ldr	r3, .L271+4
 3457 0008 1B68     		ldr	r3, [r3]
 3458 000a 4360     		str	r3, [r0, #4]
3097:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3459              		.loc 1 3097 1 view .LVU1052
 3460 000c 7047     		bx	lr
 3461              	.L272:
 3462 000e C046     		.align	2
 3463              	.L271:
 3464 0010 00000000 		.word	.LANCHOR17
 3465 0014 00000000 		.word	.LANCHOR2
 3466              		.cfi_endproc
 3467              	.LFE27:
 3469              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 3470              		.align	1
 3471              		.global	xTaskCheckForTimeOut
 3472              		.syntax unified
 3473              		.code	16
 3474              		.thumb_func
 3475              		.fpu softvfp
 3477              	xTaskCheckForTimeOut:
 3478              	.LVL238:
 3479              	.LFB28:
ARM GAS  /tmp/cc4h6SWf.s 			page 167


3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3480              		.loc 1 3101 1 is_stmt 1 view -0
 3481              		.cfi_startproc
 3482              		@ args = 0, pretend = 0, frame = 0
 3483              		@ frame_needed = 0, uses_anonymous_args = 0
3102:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3484              		.loc 1 3102 1 view .LVU1054
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3485              		.loc 1 3104 2 view .LVU1055
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3486              		.loc 1 3101 1 is_stmt 0 view .LVU1056
 3487 0000 70B5     		push	{r4, r5, r6, lr}
 3488              	.LCFI22:
 3489              		.cfi_def_cfa_offset 16
 3490              		.cfi_offset 4, -16
 3491              		.cfi_offset 5, -12
 3492              		.cfi_offset 6, -8
 3493              		.cfi_offset 14, -4
3101:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
 3494              		.loc 1 3101 1 view .LVU1057
 3495 0002 0500     		movs	r5, r0
 3496 0004 0C00     		movs	r4, r1
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3497              		.loc 1 3104 2 view .LVU1058
 3498 0006 0028     		cmp	r0, #0
 3499 0008 01D1     		bne	.L274
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3500              		.loc 1 3104 2 is_stmt 1 discriminator 1 view .LVU1059
 3501              		.syntax divided
 3502              	@ 3104 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3503 000a 72B6     		 cpsid i 
 3504              	@ 0 "" 2
 3505              		.thumb
 3506              		.syntax unified
 3507              	.L275:
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3508              		.loc 1 3104 2 discriminator 1 view .LVU1060
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3509              		.loc 1 3104 2 discriminator 1 view .LVU1061
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3510              		.loc 1 3104 2 discriminator 1 view .LVU1062
 3511 000c FEE7     		b	.L275
 3512              	.L274:
3104:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3513              		.loc 1 3104 27 discriminator 2 view .LVU1063
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3514              		.loc 1 3105 2 discriminator 2 view .LVU1064
 3515 000e 0029     		cmp	r1, #0
 3516 0010 01D1     		bne	.L276
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3517              		.loc 1 3105 2 discriminator 1 view .LVU1065
 3518              		.syntax divided
 3519              	@ 3105 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3520 0012 72B6     		 cpsid i 
 3521              	@ 0 "" 2
 3522              		.thumb
 3523              		.syntax unified
ARM GAS  /tmp/cc4h6SWf.s 			page 168


 3524              	.L277:
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3525              		.loc 1 3105 2 discriminator 2 view .LVU1066
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3526              		.loc 1 3105 2 discriminator 2 view .LVU1067
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3527              		.loc 1 3105 2 discriminator 2 view .LVU1068
 3528 0014 FEE7     		b	.L277
 3529              	.L276:
3105:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3530              		.loc 1 3105 31 discriminator 2 view .LVU1069
3107:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	{
 3531              		.loc 1 3107 2 discriminator 2 view .LVU1070
 3532 0016 FFF7FEFF 		bl	vPortEnterCritical
 3533              	.LVL239:
 3534              	.LBB101:
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 3535              		.loc 1 3110 3 discriminator 2 view .LVU1071
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 3536              		.loc 1 3110 20 is_stmt 0 discriminator 2 view .LVU1072
 3537 001a 104B     		ldr	r3, .L283
3130:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3538              		.loc 1 3130 13 discriminator 2 view .LVU1073
 3539 001c 0026     		movs	r6, #0
3110:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 3540              		.loc 1 3110 20 discriminator 2 view .LVU1074
 3541 001e 1968     		ldr	r1, [r3]
 3542              	.LVL240:
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3543              		.loc 1 3111 3 is_stmt 1 discriminator 2 view .LVU1075
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3544              		.loc 1 3125 4 discriminator 2 view .LVU1076
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3545              		.loc 1 3125 8 is_stmt 0 discriminator 2 view .LVU1077
 3546 0020 2368     		ldr	r3, [r4]
3125:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3547              		.loc 1 3125 6 discriminator 2 view .LVU1078
 3548 0022 5A1C     		adds	r2, r3, #1
 3549 0024 12D0     		beq	.L278
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3550              		.loc 1 3135 25 view .LVU1079
 3551 0026 0E48     		ldr	r0, .L283+4
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3552              		.loc 1 3135 5 view .LVU1080
 3553 0028 2E68     		ldr	r6, [r5]
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3554              		.loc 1 3135 25 view .LVU1081
 3555 002a 0068     		ldr	r0, [r0]
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3556              		.loc 1 3111 62 view .LVU1082
 3557 002c 6A68     		ldr	r2, [r5, #4]
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3558              		.loc 1 3135 3 is_stmt 1 view .LVU1083
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3559              		.loc 1 3135 5 is_stmt 0 view .LVU1084
 3560 002e 8642     		cmp	r6, r0
 3561 0030 02D0     		beq	.L279
ARM GAS  /tmp/cc4h6SWf.s 			page 169


3142:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3562              		.loc 1 3142 12 discriminator 1 view .LVU1085
 3563 0032 0126     		movs	r6, #1
3135:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3564              		.loc 1 3135 56 discriminator 1 view .LVU1086
 3565 0034 8A42     		cmp	r2, r1
 3566 0036 09D9     		bls	.L278
 3567              	.L279:
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3568              		.loc 1 3144 8 is_stmt 1 view .LVU1087
3111:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3569              		.loc 1 3111 20 is_stmt 0 view .LVU1088
 3570 0038 881A     		subs	r0, r1, r2
3144:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3571              		.loc 1 3144 10 view .LVU1089
 3572 003a 8342     		cmp	r3, r0
 3573 003c 0AD9     		bls	.L280
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 3574              		.loc 1 3147 4 is_stmt 1 view .LVU1090
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 3575              		.loc 1 3147 19 is_stmt 0 view .LVU1091
 3576 003e 5B1A     		subs	r3, r3, r1
 3577 0040 9B18     		adds	r3, r3, r2
3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 3578              		.loc 1 3148 4 view .LVU1092
 3579 0042 2800     		movs	r0, r5
3147:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 3580              		.loc 1 3147 19 view .LVU1093
 3581 0044 2360     		str	r3, [r4]
 3582              	.LVL241:
3148:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 3583              		.loc 1 3148 4 is_stmt 1 view .LVU1094
 3584 0046 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
 3585              	.LVL242:
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3586              		.loc 1 3149 4 view .LVU1095
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3587              		.loc 1 3149 12 is_stmt 0 view .LVU1096
 3588 004a 0026     		movs	r6, #0
 3589              	.LVL243:
 3590              	.L278:
3149:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3591              		.loc 1 3149 12 view .LVU1097
 3592              	.LBE101:
3157:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3593              		.loc 1 3157 2 is_stmt 1 view .LVU1098
 3594 004c FFF7FEFF 		bl	vPortExitCritical
 3595              	.LVL244:
3159:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3596              		.loc 1 3159 2 view .LVU1099
3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3597              		.loc 1 3160 1 is_stmt 0 view .LVU1100
 3598              		@ sp needed
 3599 0050 3000     		movs	r0, r6
 3600              	.LVL245:
 3601              	.LVL246:
 3602              	.LVL247:
ARM GAS  /tmp/cc4h6SWf.s 			page 170


3160:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3603              		.loc 1 3160 1 view .LVU1101
 3604 0052 70BD     		pop	{r4, r5, r6, pc}
 3605              	.LVL248:
 3606              	.L280:
 3607              	.LBB102:
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 3608              		.loc 1 3153 4 is_stmt 1 view .LVU1102
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 3609              		.loc 1 3153 19 is_stmt 0 view .LVU1103
 3610 0054 0023     		movs	r3, #0
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3611              		.loc 1 3154 12 view .LVU1104
 3612 0056 0126     		movs	r6, #1
3153:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 3613              		.loc 1 3153 19 view .LVU1105
 3614 0058 2360     		str	r3, [r4]
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3615              		.loc 1 3154 4 is_stmt 1 view .LVU1106
 3616              	.LVL249:
3154:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3617              		.loc 1 3154 4 is_stmt 0 view .LVU1107
 3618 005a F7E7     		b	.L278
 3619              	.L284:
 3620              		.align	2
 3621              	.L283:
 3622 005c 00000000 		.word	.LANCHOR2
 3623 0060 00000000 		.word	.LANCHOR17
 3624              	.LBE102:
 3625              		.cfi_endproc
 3626              	.LFE28:
 3628              		.section	.text.vTaskMissedYield,"ax",%progbits
 3629              		.align	1
 3630              		.global	vTaskMissedYield
 3631              		.syntax unified
 3632              		.code	16
 3633              		.thumb_func
 3634              		.fpu softvfp
 3636              	vTaskMissedYield:
 3637              	.LFB29:
3164:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
 3638              		.loc 1 3164 1 is_stmt 1 view -0
 3639              		.cfi_startproc
 3640              		@ args = 0, pretend = 0, frame = 0
 3641              		@ frame_needed = 0, uses_anonymous_args = 0
 3642              		@ link register save eliminated.
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3643              		.loc 1 3165 2 view .LVU1109
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3644              		.loc 1 3165 16 is_stmt 0 view .LVU1110
 3645 0000 0122     		movs	r2, #1
 3646 0002 014B     		ldr	r3, .L286
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3647              		.loc 1 3166 1 view .LVU1111
 3648              		@ sp needed
3165:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 3649              		.loc 1 3165 16 view .LVU1112
ARM GAS  /tmp/cc4h6SWf.s 			page 171


 3650 0004 1A60     		str	r2, [r3]
3166:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 3651              		.loc 1 3166 1 view .LVU1113
 3652 0006 7047     		bx	lr
 3653              	.L287:
 3654              		.align	2
 3655              	.L286:
 3656 0008 00000000 		.word	.LANCHOR19
 3657              		.cfi_endproc
 3658              	.LFE29:
 3660              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 3661              		.align	1
 3662              		.global	xTaskGetCurrentTaskHandle
 3663              		.syntax unified
 3664              		.code	16
 3665              		.thumb_func
 3666              		.fpu softvfp
 3668              	xTaskGetCurrentTaskHandle:
 3669              	.LFB35:
3751:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 3670              		.loc 1 3751 2 is_stmt 1 view -0
 3671              		.cfi_startproc
 3672              		@ args = 0, pretend = 0, frame = 0
 3673              		@ frame_needed = 0, uses_anonymous_args = 0
 3674              		@ link register save eliminated.
3752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3675              		.loc 1 3752 2 view .LVU1115
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3676              		.loc 1 3757 3 view .LVU1116
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3677              		.loc 1 3757 11 is_stmt 0 view .LVU1117
 3678 0000 014B     		ldr	r3, .L289
3760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3679              		.loc 1 3760 2 view .LVU1118
 3680              		@ sp needed
3757:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3681              		.loc 1 3757 11 view .LVU1119
 3682 0002 1868     		ldr	r0, [r3]
 3683              	.LVL250:
3759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 3684              		.loc 1 3759 3 is_stmt 1 view .LVU1120
3760:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3685              		.loc 1 3760 2 is_stmt 0 view .LVU1121
 3686 0004 7047     		bx	lr
 3687              	.L290:
 3688 0006 C046     		.align	2
 3689              	.L289:
 3690 0008 00000000 		.word	.LANCHOR3
 3691              		.cfi_endproc
 3692              	.LFE35:
 3694              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 3695              		.align	1
 3696              		.global	xTaskGetSchedulerState
 3697              		.syntax unified
 3698              		.code	16
 3699              		.thumb_func
 3700              		.fpu softvfp
ARM GAS  /tmp/cc4h6SWf.s 			page 172


 3702              	xTaskGetSchedulerState:
 3703              	.LFB36:
3768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 3704              		.loc 1 3768 2 is_stmt 1 view -0
 3705              		.cfi_startproc
 3706              		@ args = 0, pretend = 0, frame = 0
 3707              		@ frame_needed = 0, uses_anonymous_args = 0
 3708              		@ link register save eliminated.
3769:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3709              		.loc 1 3769 2 view .LVU1123
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3710              		.loc 1 3771 3 view .LVU1124
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3711              		.loc 1 3771 25 is_stmt 0 view .LVU1125
 3712 0000 054B     		ldr	r3, .L296
3773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 3713              		.loc 1 3773 12 view .LVU1126
 3714 0002 0120     		movs	r0, #1
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3715              		.loc 1 3771 25 view .LVU1127
 3716 0004 1B68     		ldr	r3, [r3]
3771:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3717              		.loc 1 3771 5 view .LVU1128
 3718 0006 002B     		cmp	r3, #0
 3719 0008 04D0     		beq	.L291
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3720              		.loc 1 3777 4 is_stmt 1 view .LVU1129
3777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3721              		.loc 1 3777 29 is_stmt 0 view .LVU1130
 3722 000a 044B     		ldr	r3, .L296+4
 3723 000c 1868     		ldr	r0, [r3]
3783:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3724              		.loc 1 3783 13 view .LVU1131
 3725 000e 4342     		rsbs	r3, r0, #0
 3726 0010 5841     		adcs	r0, r0, r3
 3727 0012 4000     		lsls	r0, r0, #1
 3728              	.L291:
3788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3729              		.loc 1 3788 2 view .LVU1132
 3730              		@ sp needed
 3731 0014 7047     		bx	lr
 3732              	.L297:
 3733 0016 C046     		.align	2
 3734              	.L296:
 3735 0018 00000000 		.word	.LANCHOR12
 3736 001c 00000000 		.word	.LANCHOR15
 3737              		.cfi_endproc
 3738              	.LFE36:
 3740              		.section	.text.xTaskPriorityInherit,"ax",%progbits
 3741              		.align	1
 3742              		.global	xTaskPriorityInherit
 3743              		.syntax unified
 3744              		.code	16
 3745              		.thumb_func
 3746              		.fpu softvfp
 3748              	xTaskPriorityInherit:
 3749              	.LVL251:
ARM GAS  /tmp/cc4h6SWf.s 			page 173


 3750              	.LFB37:
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
 3751              		.loc 1 3796 2 is_stmt 1 view -0
 3752              		.cfi_startproc
 3753              		@ args = 0, pretend = 0, frame = 0
 3754              		@ frame_needed = 0, uses_anonymous_args = 0
3797:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 3755              		.loc 1 3797 2 view .LVU1134
3798:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3756              		.loc 1 3798 2 view .LVU1135
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3757              		.loc 1 3803 3 view .LVU1136
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
 3758              		.loc 1 3796 2 is_stmt 0 view .LVU1137
 3759 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3760              	.LCFI23:
 3761              		.cfi_def_cfa_offset 24
 3762              		.cfi_offset 3, -24
 3763              		.cfi_offset 4, -20
 3764              		.cfi_offset 5, -16
 3765              		.cfi_offset 6, -12
 3766              		.cfi_offset 7, -8
 3767              		.cfi_offset 14, -4
3796:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = ( TCB_t * ) pxMutexHolder;
 3768              		.loc 1 3796 2 view .LVU1138
 3769 0002 041E     		subs	r4, r0, #0
3803:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3770              		.loc 1 3803 5 view .LVU1139
 3771 0004 2AD0     		beq	.L298
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3772              		.loc 1 3808 4 is_stmt 1 view .LVU1140
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3773              		.loc 1 3808 51 is_stmt 0 view .LVU1141
 3774 0006 1A4D     		ldr	r5, .L307
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3775              		.loc 1 3808 24 view .LVU1142
 3776 0008 C16A     		ldr	r1, [r0, #44]
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3777              		.loc 1 3808 51 view .LVU1143
 3778 000a 2B68     		ldr	r3, [r5]
3808:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3779              		.loc 1 3808 6 view .LVU1144
 3780 000c DB6A     		ldr	r3, [r3, #44]
 3781 000e 9942     		cmp	r1, r3
 3782 0010 27D2     		bcs	.L300
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3783              		.loc 1 3813 5 is_stmt 1 view .LVU1145
3813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3784              		.loc 1 3813 7 is_stmt 0 view .LVU1146
 3785 0012 8369     		ldr	r3, [r0, #24]
 3786 0014 002B     		cmp	r3, #0
 3787 0016 04DB     		blt	.L301
3815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3788              		.loc 1 3815 6 is_stmt 1 view .LVU1147
 3789 0018 0722     		movs	r2, #7
 3790 001a 2B68     		ldr	r3, [r5]
 3791 001c DB6A     		ldr	r3, [r3, #44]
ARM GAS  /tmp/cc4h6SWf.s 			page 174


 3792 001e D21A     		subs	r2, r2, r3
 3793 0020 8261     		str	r2, [r0, #24]
 3794              	.L301:
3819:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3795              		.loc 1 3819 30 view .LVU1148
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3796              		.loc 1 3824 5 view .LVU1149
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3797              		.loc 1 3824 9 is_stmt 0 view .LVU1150
 3798 0022 1423     		movs	r3, #20
 3799 0024 4B43     		muls	r3, r1
 3800 0026 134E     		ldr	r6, .L307+4
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3801              		.loc 1 3824 130 view .LVU1151
 3802 0028 6269     		ldr	r2, [r4, #20]
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3803              		.loc 1 3824 9 view .LVU1152
 3804 002a 9B19     		adds	r3, r3, r6
3824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3805              		.loc 1 3824 130 view .LVU1153
 3806 002c 9A42     		cmp	r2, r3
 3807 002e 11D1     		bne	.L302
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3808              		.loc 1 3826 6 is_stmt 1 view .LVU1154
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3809              		.loc 1 3826 10 is_stmt 0 view .LVU1155
 3810 0030 271D     		adds	r7, r4, #4
 3811 0032 3800     		movs	r0, r7
 3812              	.LVL252:
3826:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3813              		.loc 1 3826 10 view .LVU1156
 3814 0034 FFF7FEFF 		bl	uxListRemove
 3815              	.LVL253:
3832:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3816              		.loc 1 3832 31 is_stmt 1 view .LVU1157
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 3817              		.loc 1 3836 6 view .LVU1158
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 3818              		.loc 1 3836 49 is_stmt 0 view .LVU1159
 3819 0038 2B68     		ldr	r3, [r5]
 3820 003a D86A     		ldr	r0, [r3, #44]
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3821              		.loc 1 3837 6 view .LVU1160
 3822 003c 0E4B     		ldr	r3, .L307+8
3836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 3823              		.loc 1 3836 35 view .LVU1161
 3824 003e E062     		str	r0, [r4, #44]
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3825              		.loc 1 3837 6 is_stmt 1 view .LVU1162
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3826              		.loc 1 3837 6 view .LVU1163
 3827 0040 1A68     		ldr	r2, [r3]
 3828 0042 9042     		cmp	r0, r2
 3829 0044 0BD8     		bhi	.L303
 3830              	.L304:
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3831              		.loc 1 3837 6 discriminator 3 view .LVU1164
ARM GAS  /tmp/cc4h6SWf.s 			page 175


3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3832              		.loc 1 3837 6 discriminator 3 view .LVU1165
 3833 0046 1423     		movs	r3, #20
 3834 0048 5843     		muls	r0, r3
 3835 004a 3900     		movs	r1, r7
 3836 004c 3018     		adds	r0, r6, r0
 3837 004e FFF7FEFF 		bl	vListInsertEnd
 3838              	.LVL254:
 3839 0052 02E0     		b	.L306
 3840              	.LVL255:
 3841              	.L302:
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3842              		.loc 1 3842 6 view .LVU1166
3842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3843              		.loc 1 3842 49 is_stmt 0 view .LVU1167
 3844 0054 2B68     		ldr	r3, [r5]
 3845 0056 DB6A     		ldr	r3, [r3, #44]
 3846 0058 E362     		str	r3, [r4, #44]
 3847              	.LVL256:
 3848              	.L306:
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3849              		.loc 1 3837 47 is_stmt 1 discriminator 3 view .LVU1168
3848:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 3850              		.loc 1 3848 13 is_stmt 0 discriminator 3 view .LVU1169
 3851 005a 0120     		movs	r0, #1
 3852              	.L298:
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3853              		.loc 1 3875 2 view .LVU1170
 3854              		@ sp needed
 3855              	.LVL257:
3875:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3856              		.loc 1 3875 2 view .LVU1171
 3857 005c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3858              	.LVL258:
 3859              	.L303:
3837:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 3860              		.loc 1 3837 6 is_stmt 1 discriminator 1 view .LVU1172
 3861 005e 1860     		str	r0, [r3]
 3862 0060 F1E7     		b	.L304
 3863              	.LVL259:
 3864              	.L300:
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3865              		.loc 1 3852 5 view .LVU1173
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3866              		.loc 1 3852 56 is_stmt 0 view .LVU1174
 3867 0062 2B68     		ldr	r3, [r5]
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3868              		.loc 1 3852 7 view .LVU1175
 3869 0064 406C     		ldr	r0, [r0, #68]
 3870              	.LVL260:
3852:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3871              		.loc 1 3852 7 view .LVU1176
 3872 0066 DB6A     		ldr	r3, [r3, #44]
 3873 0068 9842     		cmp	r0, r3
 3874 006a 8041     		sbcs	r0, r0, r0
 3875 006c 4042     		rsbs	r0, r0, #0
 3876 006e F5E7     		b	.L298
ARM GAS  /tmp/cc4h6SWf.s 			page 176


 3877              	.L308:
 3878              		.align	2
 3879              	.L307:
 3880 0070 00000000 		.word	.LANCHOR3
 3881 0074 00000000 		.word	pxReadyTasksLists
 3882 0078 00000000 		.word	.LANCHOR14
 3883              		.cfi_endproc
 3884              	.LFE37:
 3886              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 3887              		.align	1
 3888              		.global	xTaskPriorityDisinherit
 3889              		.syntax unified
 3890              		.code	16
 3891              		.thumb_func
 3892              		.fpu softvfp
 3894              	xTaskPriorityDisinherit:
 3895              	.LVL261:
 3896              	.LFB38:
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 3897              		.loc 1 3883 2 is_stmt 1 view -0
 3898              		.cfi_startproc
 3899              		@ args = 0, pretend = 0, frame = 0
 3900              		@ frame_needed = 0, uses_anonymous_args = 0
3884:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 3901              		.loc 1 3884 2 view .LVU1178
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3902              		.loc 1 3885 2 view .LVU1179
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3903              		.loc 1 3887 3 view .LVU1180
3883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 3904              		.loc 1 3883 2 is_stmt 0 view .LVU1181
 3905 0000 70B5     		push	{r4, r5, r6, lr}
 3906              	.LCFI24:
 3907              		.cfi_def_cfa_offset 16
 3908              		.cfi_offset 4, -16
 3909              		.cfi_offset 5, -12
 3910              		.cfi_offset 6, -8
 3911              		.cfi_offset 14, -4
3887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 3912              		.loc 1 3887 5 view .LVU1182
 3913 0002 0028     		cmp	r0, #0
 3914 0004 01D1     		bne	.L310
 3915              	.L316:
3885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3916              		.loc 1 3885 13 view .LVU1183
 3917 0006 0020     		movs	r0, #0
 3918              	.LVL262:
 3919              	.L309:
3955:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3920              		.loc 1 3955 2 view .LVU1184
 3921              		@ sp needed
 3922 0008 70BD     		pop	{r4, r5, r6, pc}
 3923              	.LVL263:
 3924              	.L310:
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 3925              		.loc 1 3893 4 is_stmt 1 view .LVU1185
 3926 000a 154B     		ldr	r3, .L318
ARM GAS  /tmp/cc4h6SWf.s 			page 177


 3927 000c 1C68     		ldr	r4, [r3]
 3928 000e 8442     		cmp	r4, r0
 3929 0010 01D0     		beq	.L312
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 3930              		.loc 1 3893 4 discriminator 1 view .LVU1186
 3931              		.syntax divided
 3932              	@ 3893 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3933 0012 72B6     		 cpsid i 
 3934              	@ 0 "" 2
 3935              		.thumb
 3936              		.syntax unified
 3937              	.L313:
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 3938              		.loc 1 3893 4 discriminator 1 view .LVU1187
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 3939              		.loc 1 3893 4 discriminator 1 view .LVU1188
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 3940              		.loc 1 3893 4 discriminator 1 view .LVU1189
 3941 0014 FEE7     		b	.L313
 3942              	.L312:
3893:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 3943              		.loc 1 3893 41 discriminator 2 view .LVU1190
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 3944              		.loc 1 3894 4 discriminator 2 view .LVU1191
 3945 0016 A36C     		ldr	r3, [r4, #72]
 3946 0018 002B     		cmp	r3, #0
 3947 001a 01D1     		bne	.L314
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 3948              		.loc 1 3894 4 discriminator 1 view .LVU1192
 3949              		.syntax divided
 3950              	@ 3894 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 3951 001c 72B6     		 cpsid i 
 3952              	@ 0 "" 2
 3953              		.thumb
 3954              		.syntax unified
 3955              	.L315:
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 3956              		.loc 1 3894 4 discriminator 2 view .LVU1193
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 3957              		.loc 1 3894 4 discriminator 2 view .LVU1194
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 3958              		.loc 1 3894 4 discriminator 2 view .LVU1195
 3959 001e FEE7     		b	.L315
 3960              	.L314:
3894:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 3961              		.loc 1 3894 40 discriminator 2 view .LVU1196
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3962              		.loc 1 3895 4 discriminator 2 view .LVU1197
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3963              		.loc 1 3899 6 is_stmt 0 discriminator 2 view .LVU1198
 3964 0020 E26A     		ldr	r2, [r4, #44]
 3965 0022 616C     		ldr	r1, [r4, #68]
3895:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3966              		.loc 1 3895 28 discriminator 2 view .LVU1199
 3967 0024 013B     		subs	r3, r3, #1
 3968 0026 A364     		str	r3, [r4, #72]
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
ARM GAS  /tmp/cc4h6SWf.s 			page 178


 3969              		.loc 1 3899 4 is_stmt 1 discriminator 2 view .LVU1200
3899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 3970              		.loc 1 3899 6 is_stmt 0 discriminator 2 view .LVU1201
 3971 0028 8A42     		cmp	r2, r1
 3972 002a ECD0     		beq	.L316
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3973              		.loc 1 3902 5 is_stmt 1 view .LVU1202
3902:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 3974              		.loc 1 3902 7 is_stmt 0 view .LVU1203
 3975 002c 002B     		cmp	r3, #0
 3976 002e EAD1     		bne	.L316
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3977              		.loc 1 3909 6 is_stmt 1 view .LVU1204
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3978              		.loc 1 3909 10 is_stmt 0 view .LVU1205
 3979 0030 251D     		adds	r5, r4, #4
 3980 0032 2800     		movs	r0, r5
 3981              	.LVL264:
3909:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 3982              		.loc 1 3909 10 view .LVU1206
 3983 0034 FFF7FEFF 		bl	uxListRemove
 3984              	.LVL265:
3915:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 3985              		.loc 1 3915 31 is_stmt 1 view .LVU1207
3920:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
 3986              		.loc 1 3920 67 view .LVU1208
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3987              		.loc 1 3921 6 view .LVU1209
3926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 3988              		.loc 1 3926 6 is_stmt 0 view .LVU1210
 3989 0038 0722     		movs	r2, #7
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3990              		.loc 1 3921 31 view .LVU1211
 3991 003a 636C     		ldr	r3, [r4, #68]
3926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 3992              		.loc 1 3926 6 view .LVU1212
 3993 003c D21A     		subs	r2, r2, r3
 3994 003e A261     		str	r2, [r4, #24]
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3995              		.loc 1 3927 6 view .LVU1213
 3996 0040 084A     		ldr	r2, .L318+4
3921:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 3997              		.loc 1 3921 24 view .LVU1214
 3998 0042 E362     		str	r3, [r4, #44]
3926:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 3999              		.loc 1 3926 6 is_stmt 1 view .LVU1215
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4000              		.loc 1 3927 6 view .LVU1216
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4001              		.loc 1 3927 6 view .LVU1217
 4002 0044 1168     		ldr	r1, [r2]
 4003 0046 8B42     		cmp	r3, r1
 4004 0048 00D9     		bls	.L317
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4005              		.loc 1 3927 6 discriminator 1 view .LVU1218
 4006 004a 1360     		str	r3, [r2]
 4007              	.L317:
ARM GAS  /tmp/cc4h6SWf.s 			page 179


3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4008              		.loc 1 3927 6 discriminator 3 view .LVU1219
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4009              		.loc 1 3927 6 discriminator 3 view .LVU1220
 4010 004c 1420     		movs	r0, #20
 4011 004e 5843     		muls	r0, r3
 4012 0050 054B     		ldr	r3, .L318+8
 4013 0052 2900     		movs	r1, r5
 4014 0054 C018     		adds	r0, r0, r3
 4015 0056 FFF7FEFF 		bl	vListInsertEnd
 4016              	.LVL266:
3927:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4017              		.loc 1 3927 36 discriminator 3 view .LVU1221
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4018              		.loc 1 3937 6 discriminator 3 view .LVU1222
3937:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4019              		.loc 1 3937 14 is_stmt 0 discriminator 3 view .LVU1223
 4020 005a 0120     		movs	r0, #1
3951:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4021              		.loc 1 3951 28 is_stmt 1 discriminator 3 view .LVU1224
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4022              		.loc 1 3954 3 discriminator 3 view .LVU1225
3954:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4023              		.loc 1 3954 10 is_stmt 0 discriminator 3 view .LVU1226
 4024 005c D4E7     		b	.L309
 4025              	.L319:
 4026 005e C046     		.align	2
 4027              	.L318:
 4028 0060 00000000 		.word	.LANCHOR3
 4029 0064 00000000 		.word	.LANCHOR14
 4030 0068 00000000 		.word	pxReadyTasksLists
 4031              		.cfi_endproc
 4032              	.LFE38:
 4034              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 4035              		.align	1
 4036              		.global	vTaskPriorityDisinheritAfterTimeout
 4037              		.syntax unified
 4038              		.code	16
 4039              		.thumb_func
 4040              		.fpu softvfp
 4042              	vTaskPriorityDisinheritAfterTimeout:
 4043              	.LVL267:
 4044              	.LFB39:
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4045              		.loc 1 3963 2 is_stmt 1 view -0
 4046              		.cfi_startproc
 4047              		@ args = 0, pretend = 0, frame = 0
 4048              		@ frame_needed = 0, uses_anonymous_args = 0
3964:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
 4049              		.loc 1 3964 2 view .LVU1228
3965:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 4050              		.loc 1 3965 2 view .LVU1229
3966:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4051              		.loc 1 3966 2 view .LVU1230
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4052              		.loc 1 3968 3 view .LVU1231
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
ARM GAS  /tmp/cc4h6SWf.s 			page 180


 4053              		.loc 1 3963 2 is_stmt 0 view .LVU1232
 4054 0000 70B5     		push	{r4, r5, r6, lr}
 4055              	.LCFI25:
 4056              		.cfi_def_cfa_offset 16
 4057              		.cfi_offset 4, -16
 4058              		.cfi_offset 5, -12
 4059              		.cfi_offset 6, -8
 4060              		.cfi_offset 14, -4
3963:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
 4061              		.loc 1 3963 2 view .LVU1233
 4062 0002 041E     		subs	r4, r0, #0
3968:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4063              		.loc 1 3968 5 view .LVU1234
 4064 0004 31D0     		beq	.L320
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4065              		.loc 1 3972 4 is_stmt 1 view .LVU1235
 4066 0006 836C     		ldr	r3, [r0, #72]
 4067 0008 002B     		cmp	r3, #0
 4068 000a 01D1     		bne	.L323
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4069              		.loc 1 3972 4 discriminator 1 view .LVU1236
 4070              		.syntax divided
 4071              	@ 3972 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4072 000c 72B6     		 cpsid i 
 4073              	@ 0 "" 2
 4074              		.thumb
 4075              		.syntax unified
 4076              	.L324:
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4077              		.loc 1 3972 4 discriminator 1 view .LVU1237
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4078              		.loc 1 3972 4 discriminator 1 view .LVU1238
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4079              		.loc 1 3972 4 discriminator 1 view .LVU1239
 4080 000e FEE7     		b	.L324
 4081              	.L323:
3972:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4082              		.loc 1 3972 40 discriminator 2 view .LVU1240
3978:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4083              		.loc 1 3978 4 discriminator 2 view .LVU1241
 4084 0010 426C     		ldr	r2, [r0, #68]
 4085 0012 8A42     		cmp	r2, r1
 4086 0014 00D2     		bcs	.L325
 4087 0016 0A00     		movs	r2, r1
 4088              	.L325:
 4089              	.LVL268:
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4090              		.loc 1 3988 4 discriminator 2 view .LVU1242
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4091              		.loc 1 3988 13 is_stmt 0 discriminator 2 view .LVU1243
 4092 0018 E06A     		ldr	r0, [r4, #44]
 4093              	.LVL269:
3988:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4094              		.loc 1 3988 6 discriminator 2 view .LVU1244
 4095 001a 9042     		cmp	r0, r2
 4096 001c 25D0     		beq	.L320
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc4h6SWf.s 			page 181


 4097              		.loc 1 3994 5 is_stmt 1 view .LVU1245
3994:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4098              		.loc 1 3994 7 is_stmt 0 view .LVU1246
 4099 001e 012B     		cmp	r3, #1
 4100 0020 23D1     		bne	.L320
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4101              		.loc 1 3999 6 is_stmt 1 view .LVU1247
 4102 0022 124B     		ldr	r3, .L331
 4103 0024 1B68     		ldr	r3, [r3]
 4104 0026 A342     		cmp	r3, r4
 4105 0028 01D1     		bne	.L327
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4106              		.loc 1 3999 6 discriminator 1 view .LVU1248
 4107              		.syntax divided
 4108              	@ 3999 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4109 002a 72B6     		 cpsid i 
 4110              	@ 0 "" 2
 4111              		.thumb
 4112              		.syntax unified
 4113              	.L328:
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4114              		.loc 1 3999 6 discriminator 2 view .LVU1249
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4115              		.loc 1 3999 6 discriminator 2 view .LVU1250
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4116              		.loc 1 3999 6 discriminator 2 view .LVU1251
 4117 002c FEE7     		b	.L328
 4118              	.L327:
3999:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4119              		.loc 1 3999 43 discriminator 2 view .LVU1252
4004:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
 4120              		.loc 1 4004 67 discriminator 2 view .LVU1253
4005:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
 4121              		.loc 1 4005 6 discriminator 2 view .LVU1254
 4122              	.LVL270:
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4123              		.loc 1 4006 6 discriminator 2 view .LVU1255
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4124              		.loc 1 4010 8 is_stmt 0 discriminator 2 view .LVU1256
 4125 002e A369     		ldr	r3, [r4, #24]
4006:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4126              		.loc 1 4006 24 discriminator 2 view .LVU1257
 4127 0030 E262     		str	r2, [r4, #44]
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4128              		.loc 1 4010 6 is_stmt 1 discriminator 2 view .LVU1258
4010:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4129              		.loc 1 4010 8 is_stmt 0 discriminator 2 view .LVU1259
 4130 0032 002B     		cmp	r3, #0
 4131 0034 02DB     		blt	.L329
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4132              		.loc 1 4012 7 is_stmt 1 view .LVU1260
 4133 0036 0721     		movs	r1, #7
 4134              	.LVL271:
4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4135              		.loc 1 4012 7 is_stmt 0 view .LVU1261
 4136 0038 8A1A     		subs	r2, r1, r2
 4137              	.LVL272:
ARM GAS  /tmp/cc4h6SWf.s 			page 182


4012:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4138              		.loc 1 4012 7 view .LVU1262
 4139 003a A261     		str	r2, [r4, #24]
 4140              	.L329:
4016:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4141              		.loc 1 4016 31 is_stmt 1 view .LVU1263
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4142              		.loc 1 4025 6 view .LVU1264
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4143              		.loc 1 4025 10 is_stmt 0 view .LVU1265
 4144 003c 1423     		movs	r3, #20
 4145 003e 4343     		muls	r3, r0
 4146 0040 0B4D     		ldr	r5, .L331+4
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4147              		.loc 1 4025 113 view .LVU1266
 4148 0042 6269     		ldr	r2, [r4, #20]
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4149              		.loc 1 4025 10 view .LVU1267
 4150 0044 5B19     		adds	r3, r3, r5
4025:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4151              		.loc 1 4025 113 view .LVU1268
 4152 0046 9A42     		cmp	r2, r3
 4153 0048 0FD1     		bne	.L320
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 4154              		.loc 1 4027 7 is_stmt 1 view .LVU1269
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 4155              		.loc 1 4027 11 is_stmt 0 view .LVU1270
 4156 004a 261D     		adds	r6, r4, #4
 4157 004c 3000     		movs	r0, r6
 4158              	.LVL273:
4027:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						{
 4159              		.loc 1 4027 11 view .LVU1271
 4160 004e FFF7FEFF 		bl	uxListRemove
 4161              	.LVL274:
4033:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 						}
 4162              		.loc 1 4033 32 is_stmt 1 view .LVU1272
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4163              		.loc 1 4036 7 view .LVU1273
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4164              		.loc 1 4036 7 view .LVU1274
 4165 0052 084A     		ldr	r2, .L331+8
 4166 0054 E36A     		ldr	r3, [r4, #44]
 4167 0056 1168     		ldr	r1, [r2]
 4168 0058 8B42     		cmp	r3, r1
 4169 005a 00D9     		bls	.L330
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4170              		.loc 1 4036 7 discriminator 1 view .LVU1275
 4171 005c 1360     		str	r3, [r2]
 4172              	.L330:
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4173              		.loc 1 4036 7 discriminator 3 view .LVU1276
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4174              		.loc 1 4036 7 discriminator 3 view .LVU1277
 4175 005e 1420     		movs	r0, #20
 4176 0060 5843     		muls	r0, r3
 4177 0062 3100     		movs	r1, r6
 4178 0064 2818     		adds	r0, r5, r0
ARM GAS  /tmp/cc4h6SWf.s 			page 183


 4179 0066 FFF7FEFF 		bl	vListInsertEnd
 4180              	.LVL275:
4036:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4181              		.loc 1 4036 37 discriminator 3 view .LVU1278
4055:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4182              		.loc 1 4055 28 discriminator 3 view .LVU1279
 4183              	.L320:
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4184              		.loc 1 4057 2 is_stmt 0 view .LVU1280
 4185              		@ sp needed
 4186              	.LVL276:
4057:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4187              		.loc 1 4057 2 view .LVU1281
 4188 006a 70BD     		pop	{r4, r5, r6, pc}
 4189              	.L332:
 4190              		.align	2
 4191              	.L331:
 4192 006c 00000000 		.word	.LANCHOR3
 4193 0070 00000000 		.word	pxReadyTasksLists
 4194 0074 00000000 		.word	.LANCHOR14
 4195              		.cfi_endproc
 4196              	.LFE39:
 4198              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 4199              		.align	1
 4200              		.global	uxTaskResetEventItemValue
 4201              		.syntax unified
 4202              		.code	16
 4203              		.thumb_func
 4204              		.fpu softvfp
 4206              	uxTaskResetEventItemValue:
 4207              	.LFB40:
4377:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
 4208              		.loc 1 4377 1 is_stmt 1 view -0
 4209              		.cfi_startproc
 4210              		@ args = 0, pretend = 0, frame = 0
 4211              		@ frame_needed = 0, uses_anonymous_args = 0
 4212              		@ link register save eliminated.
4378:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4213              		.loc 1 4378 1 view .LVU1283
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4214              		.loc 1 4380 2 view .LVU1284
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4215              		.loc 1 4380 13 is_stmt 0 view .LVU1285
 4216 0000 044B     		ldr	r3, .L334
4387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4217              		.loc 1 4387 1 view .LVU1286
 4218              		@ sp needed
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4219              		.loc 1 4380 13 view .LVU1287
 4220 0002 1A68     		ldr	r2, [r3]
4384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4221              		.loc 1 4384 2 view .LVU1288
 4222 0004 1968     		ldr	r1, [r3]
4380:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4223              		.loc 1 4380 11 view .LVU1289
 4224 0006 9069     		ldr	r0, [r2, #24]
 4225              	.LVL277:
ARM GAS  /tmp/cc4h6SWf.s 			page 184


4384:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4226              		.loc 1 4384 2 is_stmt 1 view .LVU1290
 4227 0008 1A68     		ldr	r2, [r3]
 4228 000a 0723     		movs	r3, #7
 4229 000c C96A     		ldr	r1, [r1, #44]
 4230 000e 5B1A     		subs	r3, r3, r1
 4231 0010 9361     		str	r3, [r2, #24]
4386:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** }
 4232              		.loc 1 4386 2 view .LVU1291
4387:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 4233              		.loc 1 4387 1 is_stmt 0 view .LVU1292
 4234 0012 7047     		bx	lr
 4235              	.L335:
 4236              		.align	2
 4237              	.L334:
 4238 0014 00000000 		.word	.LANCHOR3
 4239              		.cfi_endproc
 4240              	.LFE40:
 4242              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 4243              		.align	1
 4244              		.global	pvTaskIncrementMutexHeldCount
 4245              		.syntax unified
 4246              		.code	16
 4247              		.thumb_func
 4248              		.fpu softvfp
 4250              	pvTaskIncrementMutexHeldCount:
 4251              	.LFB41:
4393:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
 4252              		.loc 1 4393 2 is_stmt 1 view -0
 4253              		.cfi_startproc
 4254              		@ args = 0, pretend = 0, frame = 0
 4255              		@ frame_needed = 0, uses_anonymous_args = 0
 4256              		@ link register save eliminated.
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4257              		.loc 1 4396 3 view .LVU1294
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4258              		.loc 1 4396 20 is_stmt 0 view .LVU1295
 4259 0000 044B     		ldr	r3, .L341
 4260 0002 1A68     		ldr	r2, [r3]
4396:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4261              		.loc 1 4396 5 view .LVU1296
 4262 0004 002A     		cmp	r2, #0
 4263 0006 03D0     		beq	.L337
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4264              		.loc 1 4398 4 is_stmt 1 view .LVU1297
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4265              		.loc 1 4398 18 is_stmt 0 view .LVU1298
 4266 0008 1968     		ldr	r1, [r3]
4398:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4267              		.loc 1 4398 35 view .LVU1299
 4268 000a 8A6C     		ldr	r2, [r1, #72]
 4269 000c 0132     		adds	r2, r2, #1
 4270 000e 8A64     		str	r2, [r1, #72]
 4271              	.L337:
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4272              		.loc 1 4401 3 is_stmt 1 view .LVU1300
4401:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
ARM GAS  /tmp/cc4h6SWf.s 			page 185


 4273              		.loc 1 4401 10 is_stmt 0 view .LVU1301
 4274 0010 1868     		ldr	r0, [r3]
4402:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4275              		.loc 1 4402 2 view .LVU1302
 4276              		@ sp needed
 4277 0012 7047     		bx	lr
 4278              	.L342:
 4279              		.align	2
 4280              	.L341:
 4281 0014 00000000 		.word	.LANCHOR3
 4282              		.cfi_endproc
 4283              	.LFE41:
 4285              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 4286              		.align	1
 4287              		.global	ulTaskNotifyTake
 4288              		.syntax unified
 4289              		.code	16
 4290              		.thumb_func
 4291              		.fpu softvfp
 4293              	ulTaskNotifyTake:
 4294              	.LVL278:
 4295              	.LFB42:
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 4296              		.loc 1 4410 2 is_stmt 1 view -0
 4297              		.cfi_startproc
 4298              		@ args = 0, pretend = 0, frame = 0
 4299              		@ frame_needed = 0, uses_anonymous_args = 0
4411:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4300              		.loc 1 4411 2 view .LVU1304
4413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4301              		.loc 1 4413 3 view .LVU1305
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 4302              		.loc 1 4410 2 is_stmt 0 view .LVU1306
 4303 0000 70B5     		push	{r4, r5, r6, lr}
 4304              	.LCFI26:
 4305              		.cfi_def_cfa_offset 16
 4306              		.cfi_offset 4, -16
 4307              		.cfi_offset 5, -12
 4308              		.cfi_offset 6, -8
 4309              		.cfi_offset 14, -4
4410:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
 4310              		.loc 1 4410 2 view .LVU1307
 4311 0002 0600     		movs	r6, r0
 4312 0004 0D00     		movs	r5, r1
4413:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4313              		.loc 1 4413 3 view .LVU1308
 4314 0006 FFF7FEFF 		bl	vPortEnterCritical
 4315              	.LVL279:
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4316              		.loc 1 4416 4 is_stmt 1 view .LVU1309
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4317              		.loc 1 4416 20 is_stmt 0 view .LVU1310
 4318 000a 134C     		ldr	r4, .L356
 4319 000c 2368     		ldr	r3, [r4]
 4320 000e DB6C     		ldr	r3, [r3, #76]
4416:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4321              		.loc 1 4416 6 view .LVU1311
ARM GAS  /tmp/cc4h6SWf.s 			page 186


 4322 0010 002B     		cmp	r3, #0
 4323 0012 0AD1     		bne	.L345
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4324              		.loc 1 4419 5 is_stmt 1 view .LVU1312
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4325              		.loc 1 4419 33 is_stmt 0 view .LVU1313
 4326 0014 0121     		movs	r1, #1
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4327              		.loc 1 4419 17 view .LVU1314
 4328 0016 2368     		ldr	r3, [r4]
4419:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4329              		.loc 1 4419 33 view .LVU1315
 4330 0018 5033     		adds	r3, r3, #80
 4331 001a 1970     		strb	r1, [r3]
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4332              		.loc 1 4421 5 is_stmt 1 view .LVU1316
4421:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4333              		.loc 1 4421 7 is_stmt 0 view .LVU1317
 4334 001c 002D     		cmp	r5, #0
 4335 001e 04D0     		beq	.L345
4423:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 4336              		.loc 1 4423 6 is_stmt 1 view .LVU1318
 4337 0020 2800     		movs	r0, r5
 4338 0022 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4339              	.LVL280:
4424:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4340              		.loc 1 4424 35 view .LVU1319
4430:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4341              		.loc 1 4430 6 view .LVU1320
 4342 0026 FFF7FEFF 		bl	vPortYield
 4343              	.LVL281:
 4344              	.L345:
4439:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4345              		.loc 1 4439 29 view .LVU1321
4442:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4346              		.loc 1 4442 3 view .LVU1322
 4347 002a FFF7FEFF 		bl	vPortExitCritical
 4348              	.LVL282:
4444:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4349              		.loc 1 4444 3 view .LVU1323
 4350 002e FFF7FEFF 		bl	vPortEnterCritical
 4351              	.LVL283:
4446:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
 4352              		.loc 1 4446 27 view .LVU1324
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4353              		.loc 1 4447 4 view .LVU1325
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4354              		.loc 1 4447 27 is_stmt 0 view .LVU1326
 4355 0032 2368     		ldr	r3, [r4]
4447:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4356              		.loc 1 4447 13 view .LVU1327
 4357 0034 DD6C     		ldr	r5, [r3, #76]
 4358              	.LVL284:
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4359              		.loc 1 4449 4 is_stmt 1 view .LVU1328
4449:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4360              		.loc 1 4449 6 is_stmt 0 view .LVU1329
ARM GAS  /tmp/cc4h6SWf.s 			page 187


 4361 0036 002D     		cmp	r5, #0
 4362 0038 05D0     		beq	.L347
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4363              		.loc 1 4451 5 is_stmt 1 view .LVU1330
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4364              		.loc 1 4453 36 is_stmt 0 view .LVU1331
 4365 003a 0022     		movs	r2, #0
4453:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4366              		.loc 1 4453 18 view .LVU1332
 4367 003c 2368     		ldr	r3, [r4]
4451:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4368              		.loc 1 4451 7 view .LVU1333
 4369 003e 002E     		cmp	r6, #0
 4370 0040 00D1     		bne	.L355
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4371              		.loc 1 4457 6 is_stmt 1 view .LVU1334
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4372              		.loc 1 4457 47 is_stmt 0 view .LVU1335
 4373 0042 6A1E     		subs	r2, r5, #1
 4374              	.L355:
4457:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4375              		.loc 1 4457 36 view .LVU1336
 4376 0044 DA64     		str	r2, [r3, #76]
 4377              	.L347:
4462:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4378              		.loc 1 4462 29 is_stmt 1 view .LVU1337
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4379              		.loc 1 4465 4 view .LVU1338
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4380              		.loc 1 4465 32 is_stmt 0 view .LVU1339
 4381 0046 0022     		movs	r2, #0
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4382              		.loc 1 4465 16 view .LVU1340
 4383 0048 2368     		ldr	r3, [r4]
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4384              		.loc 1 4470 2 view .LVU1341
 4385              		@ sp needed
4465:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4386              		.loc 1 4465 32 view .LVU1342
 4387 004a 5033     		adds	r3, r3, #80
 4388 004c 1A70     		strb	r2, [r3]
4467:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4389              		.loc 1 4467 3 is_stmt 1 view .LVU1343
 4390 004e FFF7FEFF 		bl	vPortExitCritical
 4391              	.LVL285:
4469:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4392              		.loc 1 4469 3 view .LVU1344
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4393              		.loc 1 4470 2 is_stmt 0 view .LVU1345
 4394 0052 2800     		movs	r0, r5
 4395              	.LVL286:
 4396              	.LVL287:
4470:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4397              		.loc 1 4470 2 view .LVU1346
 4398 0054 70BD     		pop	{r4, r5, r6, pc}
 4399              	.L357:
 4400 0056 C046     		.align	2
ARM GAS  /tmp/cc4h6SWf.s 			page 188


 4401              	.L356:
 4402 0058 00000000 		.word	.LANCHOR3
 4403              		.cfi_endproc
 4404              	.LFE42:
 4406              		.section	.text.xTaskNotifyWait,"ax",%progbits
 4407              		.align	1
 4408              		.global	xTaskNotifyWait
 4409              		.syntax unified
 4410              		.code	16
 4411              		.thumb_func
 4412              		.fpu softvfp
 4414              	xTaskNotifyWait:
 4415              	.LVL288:
 4416              	.LFB43:
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4417              		.loc 1 4478 2 is_stmt 1 view -0
 4418              		.cfi_startproc
 4419              		@ args = 0, pretend = 0, frame = 8
 4420              		@ frame_needed = 0, uses_anonymous_args = 0
4479:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4421              		.loc 1 4479 2 view .LVU1348
4481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4422              		.loc 1 4481 3 view .LVU1349
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4423              		.loc 1 4478 2 is_stmt 0 view .LVU1350
 4424 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 4425              	.LCFI27:
 4426              		.cfi_def_cfa_offset 32
 4427              		.cfi_offset 0, -32
 4428              		.cfi_offset 1, -28
 4429              		.cfi_offset 2, -24
 4430              		.cfi_offset 4, -20
 4431              		.cfi_offset 5, -16
 4432              		.cfi_offset 6, -12
 4433              		.cfi_offset 7, -8
 4434              		.cfi_offset 14, -4
4478:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 4435              		.loc 1 4478 2 view .LVU1351
 4436 0002 1E00     		movs	r6, r3
 4437 0004 0700     		movs	r7, r0
 4438 0006 1500     		movs	r5, r2
 4439 0008 0191     		str	r1, [sp, #4]
4481:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4440              		.loc 1 4481 3 view .LVU1352
 4441 000a FFF7FEFF 		bl	vPortEnterCritical
 4442              	.LVL289:
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4443              		.loc 1 4484 4 is_stmt 1 view .LVU1353
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4444              		.loc 1 4484 20 is_stmt 0 view .LVU1354
 4445 000e 194C     		ldr	r4, .L371
 4446 0010 2368     		ldr	r3, [r4]
 4447 0012 5033     		adds	r3, r3, #80
 4448 0014 1B78     		ldrb	r3, [r3]
4484:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4449              		.loc 1 4484 6 view .LVU1355
 4450 0016 022B     		cmp	r3, #2
ARM GAS  /tmp/cc4h6SWf.s 			page 189


 4451 0018 0ED0     		beq	.L360
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4452              		.loc 1 4489 5 is_stmt 1 view .LVU1356
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4453              		.loc 1 4492 33 is_stmt 0 view .LVU1357
 4454 001a 0121     		movs	r1, #1
4489:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4455              		.loc 1 4489 35 view .LVU1358
 4456 001c 2268     		ldr	r2, [r4]
 4457 001e D36C     		ldr	r3, [r2, #76]
 4458 0020 BB43     		bics	r3, r7
 4459 0022 D364     		str	r3, [r2, #76]
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4460              		.loc 1 4492 5 is_stmt 1 view .LVU1359
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4461              		.loc 1 4492 17 is_stmt 0 view .LVU1360
 4462 0024 2368     		ldr	r3, [r4]
4492:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4463              		.loc 1 4492 33 view .LVU1361
 4464 0026 5033     		adds	r3, r3, #80
 4465 0028 1970     		strb	r1, [r3]
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4466              		.loc 1 4494 5 is_stmt 1 view .LVU1362
4494:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4467              		.loc 1 4494 7 is_stmt 0 view .LVU1363
 4468 002a 002E     		cmp	r6, #0
 4469 002c 04D0     		beq	.L360
4496:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 4470              		.loc 1 4496 6 is_stmt 1 view .LVU1364
 4471 002e 3000     		movs	r0, r6
 4472 0030 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 4473              	.LVL290:
4497:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4474              		.loc 1 4497 35 view .LVU1365
4503:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4475              		.loc 1 4503 6 view .LVU1366
 4476 0034 FFF7FEFF 		bl	vPortYield
 4477              	.LVL291:
 4478              	.L360:
4512:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4479              		.loc 1 4512 29 view .LVU1367
4515:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4480              		.loc 1 4515 3 view .LVU1368
 4481 0038 FFF7FEFF 		bl	vPortExitCritical
 4482              	.LVL292:
4517:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4483              		.loc 1 4517 3 view .LVU1369
 4484 003c FFF7FEFF 		bl	vPortEnterCritical
 4485              	.LVL293:
4519:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4486              		.loc 1 4519 27 view .LVU1370
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4487              		.loc 1 4521 4 view .LVU1371
4521:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4488              		.loc 1 4521 6 is_stmt 0 view .LVU1372
 4489 0040 002D     		cmp	r5, #0
 4490 0042 02D0     		beq	.L362
ARM GAS  /tmp/cc4h6SWf.s 			page 190


4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4491              		.loc 1 4525 5 is_stmt 1 view .LVU1373
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4492              		.loc 1 4525 41 is_stmt 0 view .LVU1374
 4493 0044 2368     		ldr	r3, [r4]
 4494 0046 DB6C     		ldr	r3, [r3, #76]
4525:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4495              		.loc 1 4525 27 view .LVU1375
 4496 0048 2B60     		str	r3, [r5]
 4497              	.L362:
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4498              		.loc 1 4532 4 is_stmt 1 view .LVU1376
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4499              		.loc 1 4532 20 is_stmt 0 view .LVU1377
 4500 004a 2368     		ldr	r3, [r4]
4535:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4501              		.loc 1 4535 13 view .LVU1378
 4502 004c 0025     		movs	r5, #0
 4503              	.LVL294:
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4504              		.loc 1 4532 20 view .LVU1379
 4505 004e 5033     		adds	r3, r3, #80
 4506 0050 1B78     		ldrb	r3, [r3]
4532:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4507              		.loc 1 4532 6 view .LVU1380
 4508 0052 022B     		cmp	r3, #2
 4509 0054 05D1     		bne	.L363
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 4510              		.loc 1 4541 5 is_stmt 1 view .LVU1381
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 4511              		.loc 1 4541 35 is_stmt 0 view .LVU1382
 4512 0056 2268     		ldr	r2, [r4]
 4513 0058 0199     		ldr	r1, [sp, #4]
 4514 005a D36C     		ldr	r3, [r2, #76]
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4515              		.loc 1 4542 13 view .LVU1383
 4516 005c 0135     		adds	r5, r5, #1
4541:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 4517              		.loc 1 4541 35 view .LVU1384
 4518 005e 8B43     		bics	r3, r1
 4519 0060 D364     		str	r3, [r2, #76]
4542:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4520              		.loc 1 4542 5 is_stmt 1 view .LVU1385
 4521              	.LVL295:
 4522              	.L363:
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4523              		.loc 1 4545 4 view .LVU1386
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4524              		.loc 1 4545 32 is_stmt 0 view .LVU1387
 4525 0062 0022     		movs	r2, #0
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
 4526              		.loc 1 4545 16 view .LVU1388
 4527 0064 2368     		ldr	r3, [r4]
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4528              		.loc 1 4550 2 view .LVU1389
 4529              		@ sp needed
4545:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		}
ARM GAS  /tmp/cc4h6SWf.s 			page 191


 4530              		.loc 1 4545 32 view .LVU1390
 4531 0066 5033     		adds	r3, r3, #80
 4532 0068 1A70     		strb	r2, [r3]
4547:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4533              		.loc 1 4547 3 is_stmt 1 view .LVU1391
 4534 006a FFF7FEFF 		bl	vPortExitCritical
 4535              	.LVL296:
4549:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4536              		.loc 1 4549 3 view .LVU1392
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4537              		.loc 1 4550 2 is_stmt 0 view .LVU1393
 4538 006e 2800     		movs	r0, r5
 4539              	.LVL297:
 4540              	.LVL298:
 4541              	.LVL299:
4550:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4542              		.loc 1 4550 2 view .LVU1394
 4543 0070 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 4544              	.L372:
 4545 0072 C046     		.align	2
 4546              	.L371:
 4547 0074 00000000 		.word	.LANCHOR3
 4548              		.cfi_endproc
 4549              	.LFE43:
 4551              		.section	.text.xTaskGenericNotify,"ax",%progbits
 4552              		.align	1
 4553              		.global	xTaskGenericNotify
 4554              		.syntax unified
 4555              		.code	16
 4556              		.thumb_func
 4557              		.fpu softvfp
 4559              	xTaskGenericNotify:
 4560              	.LVL300:
 4561              	.LFB44:
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 4562              		.loc 1 4558 2 is_stmt 1 view -0
 4563              		.cfi_startproc
 4564              		@ args = 0, pretend = 0, frame = 0
 4565              		@ frame_needed = 0, uses_anonymous_args = 0
4559:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 4566              		.loc 1 4559 2 view .LVU1396
4560:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4567              		.loc 1 4560 2 view .LVU1397
4561:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4568              		.loc 1 4561 2 view .LVU1398
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 4569              		.loc 1 4563 3 view .LVU1399
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 4570              		.loc 1 4558 2 is_stmt 0 view .LVU1400
 4571 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4572              	.LCFI28:
 4573              		.cfi_def_cfa_offset 24
 4574              		.cfi_offset 3, -24
 4575              		.cfi_offset 4, -20
 4576              		.cfi_offset 5, -16
 4577              		.cfi_offset 6, -12
 4578              		.cfi_offset 7, -8
ARM GAS  /tmp/cc4h6SWf.s 			page 192


 4579              		.cfi_offset 14, -4
4558:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 4580              		.loc 1 4558 2 view .LVU1401
 4581 0002 0400     		movs	r4, r0
 4582 0004 0D00     		movs	r5, r1
 4583 0006 1600     		movs	r6, r2
 4584 0008 1F00     		movs	r7, r3
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 4585              		.loc 1 4563 3 view .LVU1402
 4586 000a 0028     		cmp	r0, #0
 4587 000c 01D1     		bne	.L374
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 4588              		.loc 1 4563 3 is_stmt 1 discriminator 1 view .LVU1403
 4589              		.syntax divided
 4590              	@ 4563 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4591 000e 72B6     		 cpsid i 
 4592              	@ 0 "" 2
 4593              		.thumb
 4594              		.syntax unified
 4595              	.L375:
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 4596              		.loc 1 4563 3 discriminator 1 view .LVU1404
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 4597              		.loc 1 4563 3 discriminator 1 view .LVU1405
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 4598              		.loc 1 4563 3 discriminator 1 view .LVU1406
 4599 0010 FEE7     		b	.L375
 4600              	.L374:
4563:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 4601              		.loc 1 4563 32 discriminator 2 view .LVU1407
4564:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4602              		.loc 1 4564 3 discriminator 2 view .LVU1408
 4603              	.LVL301:
4566:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4604              		.loc 1 4566 3 discriminator 2 view .LVU1409
 4605 0012 FFF7FEFF 		bl	vPortEnterCritical
 4606              	.LVL302:
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4607              		.loc 1 4568 4 discriminator 2 view .LVU1410
4568:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4608              		.loc 1 4568 6 is_stmt 0 discriminator 2 view .LVU1411
 4609 0016 002F     		cmp	r7, #0
 4610 0018 01D0     		beq	.L376
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4611              		.loc 1 4570 5 is_stmt 1 view .LVU1412
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4612              		.loc 1 4570 42 is_stmt 0 view .LVU1413
 4613 001a E36C     		ldr	r3, [r4, #76]
4570:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4614              		.loc 1 4570 35 view .LVU1414
 4615 001c 3B60     		str	r3, [r7]
 4616              	.L376:
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4617              		.loc 1 4573 4 is_stmt 1 view .LVU1415
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4618              		.loc 1 4573 26 is_stmt 0 view .LVU1416
 4619 001e 2200     		movs	r2, r4
ARM GAS  /tmp/cc4h6SWf.s 			page 193


4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4620              		.loc 1 4575 25 view .LVU1417
 4621 0020 0221     		movs	r1, #2
4573:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4622              		.loc 1 4573 26 view .LVU1418
 4623 0022 5032     		adds	r2, r2, #80
 4624 0024 1378     		ldrb	r3, [r2]
 4625 0026 701E     		subs	r0, r6, #1
 4626 0028 DBB2     		uxtb	r3, r3
 4627              	.LVL303:
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4628              		.loc 1 4575 4 is_stmt 1 view .LVU1419
4575:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4629              		.loc 1 4575 25 is_stmt 0 view .LVU1420
 4630 002a 1170     		strb	r1, [r2]
4577:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4631              		.loc 1 4577 4 is_stmt 1 view .LVU1421
 4632 002c 0328     		cmp	r0, #3
 4633 002e 0AD8     		bhi	.L377
 4634 0030 FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 4635              	.L379:
 4636 0034 02       		.byte	(.L382-.L379)/2
 4637 0035 06       		.byte	(.L381-.L379)/2
 4638 0036 04       		.byte	(.L393-.L379)/2
 4639 0037 10       		.byte	(.L378-.L379)/2
 4640              		.p2align 1
 4641              	.L382:
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4642              		.loc 1 4580 6 view .LVU1422
4580:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4643              		.loc 1 4580 29 is_stmt 0 view .LVU1423
 4644 0038 E16C     		ldr	r1, [r4, #76]
 4645 003a 0D43     		orrs	r5, r1
 4646              	.LVL304:
 4647              	.L393:
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4648              		.loc 1 4594 7 is_stmt 1 view .LVU1424
4594:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4649              		.loc 1 4594 30 is_stmt 0 view .LVU1425
 4650 003c E564     		str	r5, [r4, #76]
 4651 003e 02E0     		b	.L377
 4652              	.LVL305:
 4653              	.L381:
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4654              		.loc 1 4584 6 is_stmt 1 view .LVU1426
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4655              		.loc 1 4584 13 is_stmt 0 view .LVU1427
 4656 0040 E26C     		ldr	r2, [r4, #76]
4584:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4657              		.loc 1 4584 32 view .LVU1428
 4658 0042 0132     		adds	r2, r2, #1
 4659 0044 E264     		str	r2, [r4, #76]
4585:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4660              		.loc 1 4585 6 is_stmt 1 view .LVU1429
 4661              	.LVL306:
 4662              	.L377:
4609:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
ARM GAS  /tmp/cc4h6SWf.s 			page 194


 4663              		.loc 1 4609 22 view .LVU1430
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4664              		.loc 1 4613 4 view .LVU1431
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4665              		.loc 1 4613 6 is_stmt 0 view .LVU1432
 4666 0046 012B     		cmp	r3, #1
 4667 0048 08D0     		beq	.L384
 4668              	.LVL307:
 4669              	.L394:
4613:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4670              		.loc 1 4613 6 view .LVU1433
 4671 004a 0124     		movs	r4, #1
 4672              	.LVL308:
 4673              	.L383:
4650:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4674              		.loc 1 4650 29 is_stmt 1 view .LVU1434
4653:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4675              		.loc 1 4653 3 view .LVU1435
 4676 004c FFF7FEFF 		bl	vPortExitCritical
 4677              	.LVL309:
4655:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4678              		.loc 1 4655 3 view .LVU1436
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4679              		.loc 1 4656 2 is_stmt 0 view .LVU1437
 4680              		@ sp needed
 4681 0050 2000     		movs	r0, r4
 4682              	.LVL310:
4656:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4683              		.loc 1 4656 2 view .LVU1438
 4684 0052 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4685              	.LVL311:
 4686              	.L378:
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4687              		.loc 1 4592 6 is_stmt 1 view .LVU1439
4592:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4688              		.loc 1 4592 8 is_stmt 0 view .LVU1440
 4689 0054 022B     		cmp	r3, #2
 4690 0056 F1D1     		bne	.L393
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4691              		.loc 1 4599 15 view .LVU1441
 4692 0058 0024     		movs	r4, #0
 4693              	.LVL312:
4599:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4694              		.loc 1 4599 15 view .LVU1442
 4695 005a F7E7     		b	.L383
 4696              	.LVL313:
 4697              	.L384:
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 4698              		.loc 1 4615 5 is_stmt 1 view .LVU1443
4615:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 4699              		.loc 1 4615 14 is_stmt 0 view .LVU1444
 4700 005c 251D     		adds	r5, r4, #4
 4701 005e 2800     		movs	r0, r5
 4702 0060 FFF7FEFF 		bl	uxListRemove
 4703              	.LVL314:
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4704              		.loc 1 4616 5 is_stmt 1 view .LVU1445
ARM GAS  /tmp/cc4h6SWf.s 			page 195


4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4705              		.loc 1 4616 5 view .LVU1446
 4706 0064 0D4A     		ldr	r2, .L395
 4707 0066 E36A     		ldr	r3, [r4, #44]
 4708 0068 1168     		ldr	r1, [r2]
 4709 006a 8B42     		cmp	r3, r1
 4710 006c 00D9     		bls	.L385
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4711              		.loc 1 4616 5 discriminator 1 view .LVU1447
 4712 006e 1360     		str	r3, [r2]
 4713              	.L385:
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4714              		.loc 1 4616 5 discriminator 3 view .LVU1448
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4715              		.loc 1 4616 5 discriminator 3 view .LVU1449
 4716 0070 1420     		movs	r0, #20
 4717 0072 5843     		muls	r0, r3
 4718 0074 0A4B     		ldr	r3, .L395+4
 4719 0076 2900     		movs	r1, r5
 4720 0078 C018     		adds	r0, r0, r3
 4721 007a FFF7FEFF 		bl	vListInsertEnd
 4722              	.LVL315:
4616:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4723              		.loc 1 4616 35 discriminator 3 view .LVU1450
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4724              		.loc 1 4619 5 discriminator 3 view .LVU1451
 4725 007e A36A     		ldr	r3, [r4, #40]
 4726 0080 002B     		cmp	r3, #0
 4727 0082 01D0     		beq	.L386
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4728              		.loc 1 4619 5 discriminator 1 view .LVU1452
 4729              		.syntax divided
 4730              	@ 4619 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4731 0084 72B6     		 cpsid i 
 4732              	@ 0 "" 2
 4733              		.thumb
 4734              		.syntax unified
 4735              	.L387:
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4736              		.loc 1 4619 5 discriminator 2 view .LVU1453
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4737              		.loc 1 4619 5 discriminator 2 view .LVU1454
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4738              		.loc 1 4619 5 discriminator 2 view .LVU1455
 4739 0086 FEE7     		b	.L387
 4740              	.L386:
4619:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4741              		.loc 1 4619 82 discriminator 2 view .LVU1456
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4742              		.loc 1 4637 5 discriminator 2 view .LVU1457
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4743              		.loc 1 4637 41 is_stmt 0 discriminator 2 view .LVU1458
 4744 0088 064B     		ldr	r3, .L395+8
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4745              		.loc 1 4637 7 discriminator 2 view .LVU1459
 4746 008a E26A     		ldr	r2, [r4, #44]
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
ARM GAS  /tmp/cc4h6SWf.s 			page 196


 4747              		.loc 1 4637 41 discriminator 2 view .LVU1460
 4748 008c 1B68     		ldr	r3, [r3]
4637:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4749              		.loc 1 4637 7 discriminator 2 view .LVU1461
 4750 008e DB6A     		ldr	r3, [r3, #44]
 4751 0090 9A42     		cmp	r2, r3
 4752 0092 DAD9     		bls	.L394
4641:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4753              		.loc 1 4641 6 is_stmt 1 view .LVU1462
 4754 0094 FFF7FEFF 		bl	vPortYield
 4755              	.LVL316:
 4756 0098 D7E7     		b	.L394
 4757              	.L396:
 4758 009a C046     		.align	2
 4759              	.L395:
 4760 009c 00000000 		.word	.LANCHOR14
 4761 00a0 00000000 		.word	pxReadyTasksLists
 4762 00a4 00000000 		.word	.LANCHOR3
 4763              		.cfi_endproc
 4764              	.LFE44:
 4766              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 4767              		.align	1
 4768              		.global	xTaskGenericNotifyFromISR
 4769              		.syntax unified
 4770              		.code	16
 4771              		.thumb_func
 4772              		.fpu softvfp
 4774              	xTaskGenericNotifyFromISR:
 4775              	.LVL317:
 4776              	.LFB45:
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 4777              		.loc 1 4664 2 view -0
 4778              		.cfi_startproc
 4779              		@ args = 4, pretend = 0, frame = 8
 4780              		@ frame_needed = 0, uses_anonymous_args = 0
4665:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 4781              		.loc 1 4665 2 view .LVU1464
4666:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 4782              		.loc 1 4666 2 view .LVU1465
4667:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 4783              		.loc 1 4667 2 view .LVU1466
4668:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4784              		.loc 1 4668 2 view .LVU1467
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4785              		.loc 1 4670 3 view .LVU1468
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 4786              		.loc 1 4664 2 is_stmt 0 view .LVU1469
 4787 0000 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 4788              	.LCFI29:
 4789              		.cfi_def_cfa_offset 32
 4790              		.cfi_offset 0, -32
 4791              		.cfi_offset 1, -28
 4792              		.cfi_offset 2, -24
 4793              		.cfi_offset 4, -20
 4794              		.cfi_offset 5, -16
 4795              		.cfi_offset 6, -12
 4796              		.cfi_offset 7, -8
ARM GAS  /tmp/cc4h6SWf.s 			page 197


 4797              		.cfi_offset 14, -4
4664:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 4798              		.loc 1 4664 2 view .LVU1470
 4799 0002 0400     		movs	r4, r0
 4800 0004 0D00     		movs	r5, r1
 4801 0006 1E00     		movs	r6, r3
 4802 0008 0192     		str	r2, [sp, #4]
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4803              		.loc 1 4670 3 view .LVU1471
 4804 000a 0028     		cmp	r0, #0
 4805 000c 01D1     		bne	.L398
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4806              		.loc 1 4670 3 is_stmt 1 discriminator 1 view .LVU1472
 4807              		.syntax divided
 4808              	@ 4670 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4809 000e 72B6     		 cpsid i 
 4810              	@ 0 "" 2
 4811              		.thumb
 4812              		.syntax unified
 4813              	.L399:
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4814              		.loc 1 4670 3 discriminator 1 view .LVU1473
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4815              		.loc 1 4670 3 discriminator 1 view .LVU1474
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4816              		.loc 1 4670 3 discriminator 1 view .LVU1475
 4817 0010 FEE7     		b	.L399
 4818              	.L398:
4670:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4819              		.loc 1 4670 32 discriminator 2 view .LVU1476
4688:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4820              		.loc 1 4688 45 discriminator 2 view .LVU1477
4690:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4821              		.loc 1 4690 3 discriminator 2 view .LVU1478
 4822              	.LVL318:
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4823              		.loc 1 4692 3 discriminator 2 view .LVU1479
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4824              		.loc 1 4692 28 is_stmt 0 discriminator 2 view .LVU1480
 4825 0012 FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 4826              	.LVL319:
4692:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 4827              		.loc 1 4692 28 discriminator 2 view .LVU1481
 4828 0016 0700     		movs	r7, r0
 4829              	.LVL320:
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4830              		.loc 1 4694 4 is_stmt 1 discriminator 2 view .LVU1482
4694:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4831              		.loc 1 4694 6 is_stmt 0 discriminator 2 view .LVU1483
 4832 0018 002E     		cmp	r6, #0
 4833 001a 01D0     		beq	.L400
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4834              		.loc 1 4696 5 is_stmt 1 view .LVU1484
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 4835              		.loc 1 4696 42 is_stmt 0 view .LVU1485
 4836 001c E36C     		ldr	r3, [r4, #76]
4696:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
ARM GAS  /tmp/cc4h6SWf.s 			page 198


 4837              		.loc 1 4696 35 view .LVU1486
 4838 001e 3360     		str	r3, [r6]
 4839              	.L400:
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4840              		.loc 1 4699 4 is_stmt 1 view .LVU1487
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4841              		.loc 1 4699 26 is_stmt 0 view .LVU1488
 4842 0020 2200     		movs	r2, r4
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4843              		.loc 1 4700 25 view .LVU1489
 4844 0022 0221     		movs	r1, #2
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4845              		.loc 1 4699 26 view .LVU1490
 4846 0024 5032     		adds	r2, r2, #80
 4847 0026 0198     		ldr	r0, [sp, #4]
 4848              	.LVL321:
4699:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4849              		.loc 1 4699 26 view .LVU1491
 4850 0028 1378     		ldrb	r3, [r2]
 4851 002a 0138     		subs	r0, r0, #1
 4852 002c DBB2     		uxtb	r3, r3
 4853              	.LVL322:
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4854              		.loc 1 4700 4 is_stmt 1 view .LVU1492
4700:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4855              		.loc 1 4700 25 is_stmt 0 view .LVU1493
 4856 002e 1170     		strb	r1, [r2]
4702:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4857              		.loc 1 4702 4 is_stmt 1 view .LVU1494
 4858 0030 0328     		cmp	r0, #3
 4859 0032 0AD8     		bhi	.L401
 4860 0034 FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 4861              	.L403:
 4862 0038 02       		.byte	(.L406-.L403)/2
 4863 0039 06       		.byte	(.L405-.L403)/2
 4864 003a 04       		.byte	(.L420-.L403)/2
 4865 003b 11       		.byte	(.L402-.L403)/2
 4866              		.p2align 1
 4867              	.L406:
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4868              		.loc 1 4705 6 view .LVU1495
4705:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4869              		.loc 1 4705 29 is_stmt 0 view .LVU1496
 4870 003c E16C     		ldr	r1, [r4, #76]
 4871 003e 0D43     		orrs	r5, r1
 4872              	.LVL323:
 4873              	.L420:
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4874              		.loc 1 4719 7 is_stmt 1 view .LVU1497
4719:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4875              		.loc 1 4719 30 is_stmt 0 view .LVU1498
 4876 0040 E564     		str	r5, [r4, #76]
 4877 0042 02E0     		b	.L401
 4878              	.LVL324:
 4879              	.L405:
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4880              		.loc 1 4709 6 is_stmt 1 view .LVU1499
ARM GAS  /tmp/cc4h6SWf.s 			page 199


4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4881              		.loc 1 4709 13 is_stmt 0 view .LVU1500
 4882 0044 E26C     		ldr	r2, [r4, #76]
4709:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					break;
 4883              		.loc 1 4709 32 view .LVU1501
 4884 0046 0132     		adds	r2, r2, #1
 4885 0048 E264     		str	r2, [r4, #76]
4710:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4886              		.loc 1 4710 6 is_stmt 1 view .LVU1502
 4887              	.LVL325:
 4888              	.L401:
4734:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4889              		.loc 1 4734 31 view .LVU1503
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4890              		.loc 1 4738 4 view .LVU1504
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4891              		.loc 1 4738 6 is_stmt 0 view .LVU1505
 4892 004a 012B     		cmp	r3, #1
 4893 004c 09D0     		beq	.L408
 4894              	.LVL326:
 4895              	.L414:
4738:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 4896              		.loc 1 4738 6 view .LVU1506
 4897 004e 0124     		movs	r4, #1
 4898              	.LVL327:
 4899              	.L407:
4773:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4900              		.loc 1 4773 30 is_stmt 1 view .LVU1507
4777:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4901              		.loc 1 4777 3 view .LVU1508
 4902 0050 3800     		movs	r0, r7
 4903 0052 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 4904              	.LVL328:
4779:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 4905              		.loc 1 4779 3 view .LVU1509
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4906              		.loc 1 4780 2 is_stmt 0 view .LVU1510
 4907              		@ sp needed
 4908 0056 2000     		movs	r0, r4
 4909              	.LVL329:
 4910              	.LVL330:
4780:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4911              		.loc 1 4780 2 view .LVU1511
 4912 0058 FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 4913              	.LVL331:
 4914              	.L402:
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4915              		.loc 1 4717 6 is_stmt 1 view .LVU1512
4717:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4916              		.loc 1 4717 8 is_stmt 0 view .LVU1513
 4917 005a 022B     		cmp	r3, #2
 4918 005c F0D1     		bne	.L420
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 4919              		.loc 1 4724 15 view .LVU1514
 4920 005e 0024     		movs	r4, #0
 4921              	.LVL332:
4724:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
ARM GAS  /tmp/cc4h6SWf.s 			page 200


 4922              		.loc 1 4724 15 view .LVU1515
 4923 0060 F6E7     		b	.L407
 4924              	.LVL333:
 4925              	.L408:
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4926              		.loc 1 4741 5 is_stmt 1 view .LVU1516
 4927 0062 A36A     		ldr	r3, [r4, #40]
 4928              	.LVL334:
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4929              		.loc 1 4741 5 is_stmt 0 view .LVU1517
 4930 0064 002B     		cmp	r3, #0
 4931 0066 01D0     		beq	.L409
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4932              		.loc 1 4741 5 is_stmt 1 discriminator 1 view .LVU1518
 4933              		.syntax divided
 4934              	@ 4741 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 4935 0068 72B6     		 cpsid i 
 4936              	@ 0 "" 2
 4937              		.thumb
 4938              		.syntax unified
 4939              	.L410:
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4940              		.loc 1 4741 5 discriminator 2 view .LVU1519
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4941              		.loc 1 4741 5 discriminator 2 view .LVU1520
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4942              		.loc 1 4741 5 discriminator 2 view .LVU1521
 4943 006a FEE7     		b	.L410
 4944              	.L409:
4741:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 4945              		.loc 1 4741 82 discriminator 2 view .LVU1522
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4946              		.loc 1 4743 5 discriminator 2 view .LVU1523
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4947              		.loc 1 4743 30 is_stmt 0 discriminator 2 view .LVU1524
 4948 006c 134B     		ldr	r3, .L423
 4949 006e 1B68     		ldr	r3, [r3]
4743:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4950              		.loc 1 4743 7 discriminator 2 view .LVU1525
 4951 0070 002B     		cmp	r3, #0
 4952 0072 1CD1     		bne	.L411
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4953              		.loc 1 4745 6 is_stmt 1 view .LVU1526
4745:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4954              		.loc 1 4745 15 is_stmt 0 view .LVU1527
 4955 0074 251D     		adds	r5, r4, #4
 4956 0076 2800     		movs	r0, r5
 4957 0078 FFF7FEFF 		bl	uxListRemove
 4958              	.LVL335:
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4959              		.loc 1 4746 6 is_stmt 1 view .LVU1528
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4960              		.loc 1 4746 6 view .LVU1529
 4961 007c 104A     		ldr	r2, .L423+4
 4962 007e E36A     		ldr	r3, [r4, #44]
 4963 0080 1168     		ldr	r1, [r2]
 4964 0082 8B42     		cmp	r3, r1
ARM GAS  /tmp/cc4h6SWf.s 			page 201


 4965 0084 00D9     		bls	.L412
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4966              		.loc 1 4746 6 discriminator 1 view .LVU1530
 4967 0086 1360     		str	r3, [r2]
 4968              	.L412:
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4969              		.loc 1 4746 6 discriminator 3 view .LVU1531
4746:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4970              		.loc 1 4746 6 discriminator 3 view .LVU1532
 4971 0088 1420     		movs	r0, #20
 4972 008a 2900     		movs	r1, r5
 4973 008c 5843     		muls	r0, r3
 4974 008e 0D4B     		ldr	r3, .L423+8
 4975 0090 C018     		adds	r0, r0, r3
 4976              	.L421:
4752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 4977              		.loc 1 4752 6 is_stmt 0 view .LVU1533
 4978 0092 FFF7FEFF 		bl	vListInsertEnd
 4979              	.LVL336:
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4980              		.loc 1 4755 5 is_stmt 1 view .LVU1534
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4981              		.loc 1 4755 41 is_stmt 0 view .LVU1535
 4982 0096 0C4B     		ldr	r3, .L423+12
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4983              		.loc 1 4755 7 view .LVU1536
 4984 0098 E26A     		ldr	r2, [r4, #44]
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4985              		.loc 1 4755 41 view .LVU1537
 4986 009a 1B68     		ldr	r3, [r3]
4755:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 4987              		.loc 1 4755 7 view .LVU1538
 4988 009c DB6A     		ldr	r3, [r3, #44]
 4989 009e 9A42     		cmp	r2, r3
 4990 00a0 D5D9     		bls	.L414
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4991              		.loc 1 4759 6 is_stmt 1 view .LVU1539
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4992              		.loc 1 4759 8 is_stmt 0 view .LVU1540
 4993 00a2 089B     		ldr	r3, [sp, #32]
 4994 00a4 0124     		movs	r4, #1
 4995              	.LVL337:
4759:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 4996              		.loc 1 4759 8 view .LVU1541
 4997 00a6 002B     		cmp	r3, #0
 4998 00a8 05D0     		beq	.L415
 4999              	.L422:
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5000              		.loc 1 4768 21 view .LVU1542
 5001 00aa 1C60     		str	r4, [r3]
 5002 00ac D0E7     		b	.L407
 5003              	.LVL338:
 5004              	.L411:
4752:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5005              		.loc 1 4752 6 is_stmt 1 view .LVU1543
 5006 00ae 2100     		movs	r1, r4
 5007 00b0 0648     		ldr	r0, .L423+16
ARM GAS  /tmp/cc4h6SWf.s 			page 202


 5008 00b2 1831     		adds	r1, r1, #24
 5009 00b4 EDE7     		b	.L421
 5010              	.LVL339:
 5011              	.L415:
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5012              		.loc 1 4768 7 view .LVU1544
4768:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5013              		.loc 1 4768 21 is_stmt 0 view .LVU1545
 5014 00b6 064B     		ldr	r3, .L423+20
 5015 00b8 F7E7     		b	.L422
 5016              	.L424:
 5017 00ba C046     		.align	2
 5018              	.L423:
 5019 00bc 00000000 		.word	.LANCHOR15
 5020 00c0 00000000 		.word	.LANCHOR14
 5021 00c4 00000000 		.word	pxReadyTasksLists
 5022 00c8 00000000 		.word	.LANCHOR3
 5023 00cc 00000000 		.word	.LANCHOR11
 5024 00d0 00000000 		.word	.LANCHOR19
 5025              		.cfi_endproc
 5026              	.LFE45:
 5028              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 5029              		.align	1
 5030              		.global	vTaskNotifyGiveFromISR
 5031              		.syntax unified
 5032              		.code	16
 5033              		.thumb_func
 5034              		.fpu softvfp
 5036              	vTaskNotifyGiveFromISR:
 5037              	.LVL340:
 5038              	.LFB46:
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5039              		.loc 1 4788 2 is_stmt 1 view -0
 5040              		.cfi_startproc
 5041              		@ args = 0, pretend = 0, frame = 0
 5042              		@ frame_needed = 0, uses_anonymous_args = 0
4789:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 5043              		.loc 1 4789 2 view .LVU1547
4790:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 5044              		.loc 1 4790 2 view .LVU1548
4791:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5045              		.loc 1 4791 2 view .LVU1549
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5046              		.loc 1 4793 3 view .LVU1550
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5047              		.loc 1 4788 2 is_stmt 0 view .LVU1551
 5048 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5049              	.LCFI30:
 5050              		.cfi_def_cfa_offset 24
 5051              		.cfi_offset 3, -24
 5052              		.cfi_offset 4, -20
 5053              		.cfi_offset 5, -16
 5054              		.cfi_offset 6, -12
 5055              		.cfi_offset 7, -8
 5056              		.cfi_offset 14, -4
4788:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
 5057              		.loc 1 4788 2 view .LVU1552
ARM GAS  /tmp/cc4h6SWf.s 			page 203


 5058 0002 0400     		movs	r4, r0
 5059 0004 0D00     		movs	r5, r1
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5060              		.loc 1 4793 3 view .LVU1553
 5061 0006 0028     		cmp	r0, #0
 5062 0008 01D1     		bne	.L426
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5063              		.loc 1 4793 3 is_stmt 1 discriminator 1 view .LVU1554
 5064              		.syntax divided
 5065              	@ 4793 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5066 000a 72B6     		 cpsid i 
 5067              	@ 0 "" 2
 5068              		.thumb
 5069              		.syntax unified
 5070              	.L427:
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5071              		.loc 1 4793 3 discriminator 1 view .LVU1555
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5072              		.loc 1 4793 3 discriminator 1 view .LVU1556
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5073              		.loc 1 4793 3 discriminator 1 view .LVU1557
 5074 000c FEE7     		b	.L427
 5075              	.L426:
4793:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5076              		.loc 1 4793 32 discriminator 2 view .LVU1558
4811:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5077              		.loc 1 4811 45 discriminator 2 view .LVU1559
4813:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5078              		.loc 1 4813 3 discriminator 2 view .LVU1560
 5079              	.LVL341:
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5080              		.loc 1 4815 3 discriminator 2 view .LVU1561
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5081              		.loc 1 4815 28 is_stmt 0 discriminator 2 view .LVU1562
 5082 000e FFF7FEFF 		bl	ulSetInterruptMaskFromISR
 5083              	.LVL342:
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5084              		.loc 1 4817 26 discriminator 2 view .LVU1563
 5085 0012 2300     		movs	r3, r4
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5086              		.loc 1 4818 25 discriminator 2 view .LVU1564
 5087 0014 0221     		movs	r1, #2
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 5088              		.loc 1 4817 26 discriminator 2 view .LVU1565
 5089 0016 5033     		adds	r3, r3, #80
 5090 0018 1A78     		ldrb	r2, [r3]
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5091              		.loc 1 4818 25 discriminator 2 view .LVU1566
 5092 001a 1970     		strb	r1, [r3]
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5093              		.loc 1 4822 11 discriminator 2 view .LVU1567
 5094 001c E36C     		ldr	r3, [r4, #76]
4815:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5095              		.loc 1 4815 28 discriminator 2 view .LVU1568
 5096 001e 0600     		movs	r6, r0
 5097              	.LVL343:
4817:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
ARM GAS  /tmp/cc4h6SWf.s 			page 204


 5098              		.loc 1 4817 4 is_stmt 1 discriminator 2 view .LVU1569
4818:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5099              		.loc 1 4818 4 discriminator 2 view .LVU1570
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5100              		.loc 1 4822 4 discriminator 2 view .LVU1571
4822:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5101              		.loc 1 4822 30 is_stmt 0 discriminator 2 view .LVU1572
 5102 0020 0133     		adds	r3, r3, #1
 5103 0022 E364     		str	r3, [r4, #76]
4824:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5104              		.loc 1 4824 36 is_stmt 1 discriminator 2 view .LVU1573
4828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5105              		.loc 1 4828 4 discriminator 2 view .LVU1574
4828:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5106              		.loc 1 4828 6 is_stmt 0 discriminator 2 view .LVU1575
 5107 0024 012A     		cmp	r2, #1
 5108 0026 23D1     		bne	.L429
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5109              		.loc 1 4831 5 is_stmt 1 view .LVU1576
 5110 0028 A36A     		ldr	r3, [r4, #40]
 5111 002a 002B     		cmp	r3, #0
 5112 002c 01D0     		beq	.L430
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5113              		.loc 1 4831 5 discriminator 1 view .LVU1577
 5114              		.syntax divided
 5115              	@ 4831 "Middlewares/Third_Party/FreeRTOS/Source/tasks.c" 1
 5116 002e 72B6     		 cpsid i 
 5117              	@ 0 "" 2
 5118              		.thumb
 5119              		.syntax unified
 5120              	.L431:
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5121              		.loc 1 4831 5 discriminator 2 view .LVU1578
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5122              		.loc 1 4831 5 discriminator 2 view .LVU1579
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5123              		.loc 1 4831 5 discriminator 2 view .LVU1580
 5124 0030 FEE7     		b	.L431
 5125              	.L430:
4831:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5126              		.loc 1 4831 82 discriminator 2 view .LVU1581
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5127              		.loc 1 4833 5 discriminator 2 view .LVU1582
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5128              		.loc 1 4833 30 is_stmt 0 discriminator 2 view .LVU1583
 5129 0032 154B     		ldr	r3, .L438
 5130 0034 1B68     		ldr	r3, [r3]
4833:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5131              		.loc 1 4833 7 discriminator 2 view .LVU1584
 5132 0036 002B     		cmp	r3, #0
 5133 0038 1ED1     		bne	.L432
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5134              		.loc 1 4835 6 is_stmt 1 view .LVU1585
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5135              		.loc 1 4835 15 is_stmt 0 view .LVU1586
 5136 003a 271D     		adds	r7, r4, #4
 5137 003c 3800     		movs	r0, r7
ARM GAS  /tmp/cc4h6SWf.s 			page 205


 5138              	.LVL344:
4835:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5139              		.loc 1 4835 15 view .LVU1587
 5140 003e FFF7FEFF 		bl	uxListRemove
 5141              	.LVL345:
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5142              		.loc 1 4836 6 is_stmt 1 view .LVU1588
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5143              		.loc 1 4836 6 view .LVU1589
 5144 0042 124A     		ldr	r2, .L438+4
 5145 0044 E36A     		ldr	r3, [r4, #44]
 5146 0046 1168     		ldr	r1, [r2]
 5147 0048 8B42     		cmp	r3, r1
 5148 004a 00D9     		bls	.L433
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5149              		.loc 1 4836 6 discriminator 1 view .LVU1590
 5150 004c 1360     		str	r3, [r2]
 5151              	.L433:
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5152              		.loc 1 4836 6 discriminator 3 view .LVU1591
4836:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5153              		.loc 1 4836 6 discriminator 3 view .LVU1592
 5154 004e 1420     		movs	r0, #20
 5155 0050 3900     		movs	r1, r7
 5156 0052 5843     		muls	r0, r3
 5157 0054 0E4B     		ldr	r3, .L438+8
 5158 0056 C018     		adds	r0, r0, r3
 5159              	.L437:
4842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5160              		.loc 1 4842 6 is_stmt 0 view .LVU1593
 5161 0058 FFF7FEFF 		bl	vListInsertEnd
 5162              	.LVL346:
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5163              		.loc 1 4845 5 is_stmt 1 view .LVU1594
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5164              		.loc 1 4845 41 is_stmt 0 view .LVU1595
 5165 005c 0D4B     		ldr	r3, .L438+12
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5166              		.loc 1 4845 7 view .LVU1596
 5167 005e E26A     		ldr	r2, [r4, #44]
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5168              		.loc 1 4845 41 view .LVU1597
 5169 0060 1B68     		ldr	r3, [r3]
4845:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				{
 5170              		.loc 1 4845 7 view .LVU1598
 5171 0062 DB6A     		ldr	r3, [r3, #44]
 5172 0064 9A42     		cmp	r2, r3
 5173 0066 03D9     		bls	.L429
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5174              		.loc 1 4849 6 is_stmt 1 view .LVU1599
 5175 0068 0123     		movs	r3, #1
4849:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					{
 5176              		.loc 1 4849 8 is_stmt 0 view .LVU1600
 5177 006a 002D     		cmp	r5, #0
 5178 006c 08D0     		beq	.L436
4851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5179              		.loc 1 4851 7 is_stmt 1 view .LVU1601
ARM GAS  /tmp/cc4h6SWf.s 			page 206


4851:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5180              		.loc 1 4851 34 is_stmt 0 view .LVU1602
 5181 006e 2B60     		str	r3, [r5]
 5182              	.L429:
4863:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5183              		.loc 1 4863 30 is_stmt 1 view .LVU1603
4867:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5184              		.loc 1 4867 3 view .LVU1604
 5185 0070 3000     		movs	r0, r6
 5186 0072 FFF7FEFF 		bl	vClearInterruptMaskFromISR
 5187              	.LVL347:
4868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5188              		.loc 1 4868 2 is_stmt 0 view .LVU1605
 5189              		@ sp needed
 5190              	.LVL348:
 5191              	.LVL349:
 5192              	.LVL350:
4868:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5193              		.loc 1 4868 2 view .LVU1606
 5194 0076 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5195              	.LVL351:
 5196              	.L432:
4842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5197              		.loc 1 4842 6 is_stmt 1 view .LVU1607
 5198 0078 2100     		movs	r1, r4
 5199 007a 0748     		ldr	r0, .L438+16
 5200              	.LVL352:
4842:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				}
 5201              		.loc 1 4842 6 is_stmt 0 view .LVU1608
 5202 007c 1831     		adds	r1, r1, #24
 5203 007e EBE7     		b	.L437
 5204              	.LVL353:
 5205              	.L436:
4858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5206              		.loc 1 4858 7 is_stmt 1 view .LVU1609
4858:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 					}
 5207              		.loc 1 4858 21 is_stmt 0 view .LVU1610
 5208 0080 064A     		ldr	r2, .L438+20
 5209 0082 1360     		str	r3, [r2]
 5210 0084 F4E7     		b	.L429
 5211              	.L439:
 5212 0086 C046     		.align	2
 5213              	.L438:
 5214 0088 00000000 		.word	.LANCHOR15
 5215 008c 00000000 		.word	.LANCHOR14
 5216 0090 00000000 		.word	pxReadyTasksLists
 5217 0094 00000000 		.word	.LANCHOR3
 5218 0098 00000000 		.word	.LANCHOR11
 5219 009c 00000000 		.word	.LANCHOR19
 5220              		.cfi_endproc
 5221              	.LFE46:
 5223              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 5224              		.align	1
 5225              		.global	xTaskNotifyStateClear
 5226              		.syntax unified
 5227              		.code	16
 5228              		.thumb_func
ARM GAS  /tmp/cc4h6SWf.s 			page 207


 5229              		.fpu softvfp
 5231              	xTaskNotifyStateClear:
 5232              	.LVL354:
 5233              	.LFB47:
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 5234              		.loc 1 4877 2 is_stmt 1 view -0
 5235              		.cfi_startproc
 5236              		@ args = 0, pretend = 0, frame = 0
 5237              		@ frame_needed = 0, uses_anonymous_args = 0
4878:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 5238              		.loc 1 4878 2 view .LVU1612
4879:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5239              		.loc 1 4879 2 view .LVU1613
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5240              		.loc 1 4883 3 view .LVU1614
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 5241              		.loc 1 4877 2 is_stmt 0 view .LVU1615
 5242 0000 70B5     		push	{r4, r5, r6, lr}
 5243              	.LCFI31:
 5244              		.cfi_def_cfa_offset 16
 5245              		.cfi_offset 4, -16
 5246              		.cfi_offset 5, -12
 5247              		.cfi_offset 6, -8
 5248              		.cfi_offset 14, -4
4877:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
 5249              		.loc 1 4877 2 view .LVU1616
 5250 0002 041E     		subs	r4, r0, #0
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5251              		.loc 1 4883 11 view .LVU1617
 5252 0004 01D1     		bne	.L441
4883:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5253              		.loc 1 4883 11 discriminator 1 view .LVU1618
 5254 0006 074B     		ldr	r3, .L444
 5255 0008 1C68     		ldr	r4, [r3]
 5256              	.LVL355:
 5257              	.L441:
4885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5258              		.loc 1 4885 3 is_stmt 1 discriminator 4 view .LVU1619
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5259              		.loc 1 4887 13 is_stmt 0 discriminator 4 view .LVU1620
 5260 000a 5034     		adds	r4, r4, #80
 5261              	.LVL356:
4885:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 		{
 5262              		.loc 1 4885 3 discriminator 4 view .LVU1621
 5263 000c FFF7FEFF 		bl	vPortEnterCritical
 5264              	.LVL357:
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5265              		.loc 1 4887 4 is_stmt 1 discriminator 4 view .LVU1622
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5266              		.loc 1 4887 13 is_stmt 0 discriminator 4 view .LVU1623
 5267 0010 2378     		ldrb	r3, [r4]
 5268 0012 0025     		movs	r5, #0
4887:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			{
 5269              		.loc 1 4887 6 discriminator 4 view .LVU1624
 5270 0014 022B     		cmp	r3, #2
 5271 0016 01D1     		bne	.L442
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
ARM GAS  /tmp/cc4h6SWf.s 			page 208


 5272              		.loc 1 4889 5 is_stmt 1 view .LVU1625
4889:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 5273              		.loc 1 4889 26 is_stmt 0 view .LVU1626
 5274 0018 2570     		strb	r5, [r4]
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5275              		.loc 1 4890 5 is_stmt 1 view .LVU1627
 5276              	.LVL358:
4890:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 			}
 5277              		.loc 1 4890 13 is_stmt 0 view .LVU1628
 5278 001a 0135     		adds	r5, r5, #1
 5279              	.LVL359:
 5280              	.L442:
4897:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5281              		.loc 1 4897 3 is_stmt 1 view .LVU1629
 5282 001c FFF7FEFF 		bl	vPortExitCritical
 5283              	.LVL360:
4899:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 	}
 5284              		.loc 1 4899 3 view .LVU1630
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5285              		.loc 1 4900 2 is_stmt 0 view .LVU1631
 5286              		@ sp needed
 5287 0020 2800     		movs	r0, r5
 5288              	.LVL361:
 5289              	.LVL362:
4900:Middlewares/Third_Party/FreeRTOS/Source/tasks.c **** 
 5290              		.loc 1 4900 2 view .LVU1632
 5291 0022 70BD     		pop	{r4, r5, r6, pc}
 5292              	.L445:
 5293              		.align	2
 5294              	.L444:
 5295 0024 00000000 		.word	.LANCHOR3
 5296              		.cfi_endproc
 5297              	.LFE47:
 5299              		.global	pxCurrentTCB
 5300              		.section	.bss.pxCurrentTCB,"aw",%nobits
 5301              		.align	2
 5302              		.set	.LANCHOR3,. + 0
 5305              	pxCurrentTCB:
 5306 0000 00000000 		.space	4
 5307              		.section	.bss.pxDelayedTaskList,"aw",%nobits
 5308              		.align	2
 5309              		.set	.LANCHOR0,. + 0
 5312              	pxDelayedTaskList:
 5313 0000 00000000 		.space	4
 5314              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
 5315              		.align	2
 5316              		.set	.LANCHOR5,. + 0
 5319              	pxOverflowDelayedTaskList:
 5320 0000 00000000 		.space	4
 5321              		.section	.bss.pxReadyTasksLists,"aw",%nobits
 5322              		.align	2
 5325              	pxReadyTasksLists:
 5326 0000 00000000 		.space	140
 5326      00000000 
 5326      00000000 
 5326      00000000 
 5326      00000000 
ARM GAS  /tmp/cc4h6SWf.s 			page 209


 5327              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
 5328              		.align	2
 5329              		.set	.LANCHOR7,. + 0
 5332              	uxCurrentNumberOfTasks:
 5333 0000 00000000 		.space	4
 5334              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
 5335              		.align	2
 5336              		.set	.LANCHOR8,. + 0
 5339              	uxDeletedTasksWaitingCleanUp:
 5340 0000 00000000 		.space	4
 5341              		.section	.bss.uxPendedTicks,"aw",%nobits
 5342              		.align	2
 5343              		.set	.LANCHOR18,. + 0
 5346              	uxPendedTicks:
 5347 0000 00000000 		.space	4
 5348              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 5349              		.align	2
 5350              		.set	.LANCHOR15,. + 0
 5353              	uxSchedulerSuspended:
 5354 0000 00000000 		.space	4
 5355              		.section	.bss.uxTaskNumber,"aw",%nobits
 5356              		.align	2
 5357              		.set	.LANCHOR13,. + 0
 5360              	uxTaskNumber:
 5361 0000 00000000 		.space	4
 5362              		.section	.bss.uxTopReadyPriority,"aw",%nobits
 5363              		.align	2
 5364              		.set	.LANCHOR14,. + 0
 5367              	uxTopReadyPriority:
 5368 0000 00000000 		.space	4
 5369              		.section	.bss.xDelayedTaskList1,"aw",%nobits
 5370              		.align	2
 5371              		.set	.LANCHOR9,. + 0
 5374              	xDelayedTaskList1:
 5375 0000 00000000 		.space	20
 5375      00000000 
 5375      00000000 
 5375      00000000 
 5375      00000000 
 5376              		.section	.bss.xDelayedTaskList2,"aw",%nobits
 5377              		.align	2
 5378              		.set	.LANCHOR10,. + 0
 5381              	xDelayedTaskList2:
 5382 0000 00000000 		.space	20
 5382      00000000 
 5382      00000000 
 5382      00000000 
 5382      00000000 
 5383              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 5384              		.align	2
 5385              		.set	.LANCHOR16,. + 0
 5388              	xIdleTaskHandle:
 5389 0000 00000000 		.space	4
 5390              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 5391              		.align	2
 5392              		.set	.LANCHOR1,. + 0
 5395              	xNextTaskUnblockTime:
ARM GAS  /tmp/cc4h6SWf.s 			page 210


 5396 0000 00000000 		.space	4
 5397              		.section	.bss.xNumOfOverflows,"aw",%nobits
 5398              		.align	2
 5399              		.set	.LANCHOR17,. + 0
 5402              	xNumOfOverflows:
 5403 0000 00000000 		.space	4
 5404              		.section	.bss.xPendingReadyList,"aw",%nobits
 5405              		.align	2
 5406              		.set	.LANCHOR11,. + 0
 5409              	xPendingReadyList:
 5410 0000 00000000 		.space	20
 5410      00000000 
 5410      00000000 
 5410      00000000 
 5410      00000000 
 5411              		.section	.bss.xSchedulerRunning,"aw",%nobits
 5412              		.align	2
 5413              		.set	.LANCHOR12,. + 0
 5416              	xSchedulerRunning:
 5417 0000 00000000 		.space	4
 5418              		.section	.bss.xSuspendedTaskList,"aw",%nobits
 5419              		.align	2
 5420              		.set	.LANCHOR4,. + 0
 5423              	xSuspendedTaskList:
 5424 0000 00000000 		.space	20
 5424      00000000 
 5424      00000000 
 5424      00000000 
 5424      00000000 
 5425              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
 5426              		.align	2
 5427              		.set	.LANCHOR6,. + 0
 5430              	xTasksWaitingTermination:
 5431 0000 00000000 		.space	20
 5431      00000000 
 5431      00000000 
 5431      00000000 
 5431      00000000 
 5432              		.section	.bss.xTickCount,"aw",%nobits
 5433              		.align	2
 5434              		.set	.LANCHOR2,. + 0
 5437              	xTickCount:
 5438 0000 00000000 		.space	4
 5439              		.section	.bss.xYieldPending,"aw",%nobits
 5440              		.align	2
 5441              		.set	.LANCHOR19,. + 0
 5444              	xYieldPending:
 5445 0000 00000000 		.space	4
 5446              		.text
 5447              	.Letext0:
 5448              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stddef.h"
 5449              		.file 3 "/usr/include/newlib/sys/_types.h"
 5450              		.file 4 "/usr/include/newlib/sys/reent.h"
 5451              		.file 5 "/usr/include/newlib/sys/lock.h"
 5452              		.file 6 "/usr/include/newlib/stdlib.h"
 5453              		.file 7 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 5454              		.file 8 "Inc/FreeRTOSConfig.h"
ARM GAS  /tmp/cc4h6SWf.s 			page 211


 5455              		.file 9 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 5456              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM0/portmacro.h"
 5457              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 5458              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 5459              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  /tmp/cc4h6SWf.s 			page 212


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tasks.c
     /tmp/cc4h6SWf.s:16     .text.prvResetNextTaskUnblockTime:0000000000000000 $t
     /tmp/cc4h6SWf.s:23     .text.prvResetNextTaskUnblockTime:0000000000000000 prvResetNextTaskUnblockTime
     /tmp/cc4h6SWf.s:80     .text.prvResetNextTaskUnblockTime:0000000000000020 $d
     /tmp/cc4h6SWf.s:88     .text.prvAddCurrentTaskToDelayedList:0000000000000000 $t
     /tmp/cc4h6SWf.s:94     .text.prvAddCurrentTaskToDelayedList:0000000000000000 prvAddCurrentTaskToDelayedList
     /tmp/cc4h6SWf.s:214    .text.prvAddCurrentTaskToDelayedList:0000000000000058 $d
     /tmp/cc4h6SWf.s:224    .text.prvIdleTask:0000000000000000 $t
     /tmp/cc4h6SWf.s:230    .text.prvIdleTask:0000000000000000 prvIdleTask
     /tmp/cc4h6SWf.s:319    .text.prvIdleTask:0000000000000048 $d
     /tmp/cc4h6SWf.s:5325   .bss.pxReadyTasksLists:0000000000000000 pxReadyTasksLists
     /tmp/cc4h6SWf.s:331    .text.xTaskCreate:0000000000000000 $t
     /tmp/cc4h6SWf.s:338    .text.xTaskCreate:0000000000000000 xTaskCreate
     /tmp/cc4h6SWf.s:781    .text.xTaskCreate:0000000000000168 $d
     /tmp/cc4h6SWf.s:806    .text.vTaskDelete:0000000000000000 $t
     /tmp/cc4h6SWf.s:813    .text.vTaskDelete:0000000000000000 vTaskDelete
     /tmp/cc4h6SWf.s:972    .text.vTaskDelete:0000000000000084 $d
     /tmp/cc4h6SWf.s:983    .text.uxTaskPriorityGet:0000000000000000 $t
     /tmp/cc4h6SWf.s:990    .text.uxTaskPriorityGet:0000000000000000 uxTaskPriorityGet
     /tmp/cc4h6SWf.s:1039   .text.uxTaskPriorityGet:000000000000001c $d
     /tmp/cc4h6SWf.s:1044   .text.uxTaskPriorityGetFromISR:0000000000000000 $t
     /tmp/cc4h6SWf.s:1051   .text.uxTaskPriorityGetFromISR:0000000000000000 uxTaskPriorityGetFromISR
     /tmp/cc4h6SWf.s:1101   .text.uxTaskPriorityGetFromISR:000000000000001c $d
     /tmp/cc4h6SWf.s:1106   .text.vTaskPrioritySet:0000000000000000 $t
     /tmp/cc4h6SWf.s:1113   .text.vTaskPrioritySet:0000000000000000 vTaskPrioritySet
     /tmp/cc4h6SWf.s:1306   .text.vTaskPrioritySet:0000000000000094 $d
     /tmp/cc4h6SWf.s:1313   .text.vTaskResume:0000000000000000 $t
     /tmp/cc4h6SWf.s:1320   .text.vTaskResume:0000000000000000 vTaskResume
     /tmp/cc4h6SWf.s:1458   .text.vTaskResume:0000000000000060 $d
     /tmp/cc4h6SWf.s:1467   .text.xTaskResumeFromISR:0000000000000000 $t
     /tmp/cc4h6SWf.s:1474   .text.xTaskResumeFromISR:0000000000000000 xTaskResumeFromISR
     /tmp/cc4h6SWf.s:1650   .text.xTaskResumeFromISR:000000000000006c $d
     /tmp/cc4h6SWf.s:1663   .text.vTaskStartScheduler:0000000000000000 $t
     /tmp/cc4h6SWf.s:1670   .text.vTaskStartScheduler:0000000000000000 vTaskStartScheduler
     /tmp/cc4h6SWf.s:1751   .text.vTaskStartScheduler:000000000000003c $d
     /tmp/cc4h6SWf.s:1761   .text.vTaskEndScheduler:0000000000000000 $t
     /tmp/cc4h6SWf.s:1768   .text.vTaskEndScheduler:0000000000000000 vTaskEndScheduler
     /tmp/cc4h6SWf.s:1804   .text.vTaskEndScheduler:0000000000000010 $d
     /tmp/cc4h6SWf.s:1809   .text.vTaskSuspendAll:0000000000000000 $t
     /tmp/cc4h6SWf.s:1816   .text.vTaskSuspendAll:0000000000000000 vTaskSuspendAll
     /tmp/cc4h6SWf.s:1836   .text.vTaskSuspendAll:000000000000000c $d
     /tmp/cc4h6SWf.s:1841   .text.xTaskGetTickCount:0000000000000000 $t
     /tmp/cc4h6SWf.s:1848   .text.xTaskGetTickCount:0000000000000000 xTaskGetTickCount
     /tmp/cc4h6SWf.s:1872   .text.xTaskGetTickCount:0000000000000008 $d
     /tmp/cc4h6SWf.s:1877   .text.xTaskGetTickCountFromISR:0000000000000000 $t
     /tmp/cc4h6SWf.s:1884   .text.xTaskGetTickCountFromISR:0000000000000000 xTaskGetTickCountFromISR
     /tmp/cc4h6SWf.s:1897   .text.xTaskGetTickCountFromISR:0000000000000008 $d
     /tmp/cc4h6SWf.s:1902   .text.uxTaskGetNumberOfTasks:0000000000000000 $t
     /tmp/cc4h6SWf.s:1909   .text.uxTaskGetNumberOfTasks:0000000000000000 uxTaskGetNumberOfTasks
     /tmp/cc4h6SWf.s:1928   .text.uxTaskGetNumberOfTasks:0000000000000008 $d
     /tmp/cc4h6SWf.s:1933   .text.pcTaskGetName:0000000000000000 $t
     /tmp/cc4h6SWf.s:1940   .text.pcTaskGetName:0000000000000000 pcTaskGetName
     /tmp/cc4h6SWf.s:1985   .text.pcTaskGetName:0000000000000014 $d
     /tmp/cc4h6SWf.s:1990   .text.xTaskIncrementTick:0000000000000000 $t
     /tmp/cc4h6SWf.s:1997   .text.xTaskIncrementTick:0000000000000000 xTaskIncrementTick
     /tmp/cc4h6SWf.s:2251   .text.xTaskIncrementTick:00000000000000d4 $d
ARM GAS  /tmp/cc4h6SWf.s 			page 213


     /tmp/cc4h6SWf.s:2266   .text.xTaskResumeAll:0000000000000000 $t
     /tmp/cc4h6SWf.s:2273   .text.xTaskResumeAll:0000000000000000 xTaskResumeAll
     /tmp/cc4h6SWf.s:2494   .text.xTaskResumeAll:00000000000000b0 $d
     /tmp/cc4h6SWf.s:2508   .text.vTaskDelay:0000000000000000 $t
     /tmp/cc4h6SWf.s:2515   .text.vTaskDelay:0000000000000000 vTaskDelay
     /tmp/cc4h6SWf.s:2590   .text.vTaskDelay:0000000000000030 $d
     /tmp/cc4h6SWf.s:2595   .text.vTaskSwitchContext:0000000000000000 $t
     /tmp/cc4h6SWf.s:2602   .text.vTaskSwitchContext:0000000000000000 vTaskSwitchContext
     /tmp/cc4h6SWf.s:2730   .text.vTaskSwitchContext:0000000000000058 $d
     /tmp/cc4h6SWf.s:2742   .text.vTaskSuspend:0000000000000000 $t
     /tmp/cc4h6SWf.s:2749   .text.vTaskSuspend:0000000000000000 vTaskSuspend
     /tmp/cc4h6SWf.s:2909   .text.vTaskSuspend:0000000000000088 $d
     /tmp/cc4h6SWf.s:2918   .text.vTaskPlaceOnEventList:0000000000000000 $t
     /tmp/cc4h6SWf.s:2925   .text.vTaskPlaceOnEventList:0000000000000000 vTaskPlaceOnEventList
     /tmp/cc4h6SWf.s:2981   .text.vTaskPlaceOnEventList:0000000000000020 $d
     /tmp/cc4h6SWf.s:2986   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 $t
     /tmp/cc4h6SWf.s:2993   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 vTaskPlaceOnUnorderedEventList
     /tmp/cc4h6SWf.s:3079   .text.vTaskPlaceOnUnorderedEventList:0000000000000038 $d
     /tmp/cc4h6SWf.s:3085   .text.xTaskRemoveFromEventList:0000000000000000 $t
     /tmp/cc4h6SWf.s:3092   .text.xTaskRemoveFromEventList:0000000000000000 xTaskRemoveFromEventList
     /tmp/cc4h6SWf.s:3211   .text.xTaskRemoveFromEventList:0000000000000060 $d
     /tmp/cc4h6SWf.s:3221   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 $t
     /tmp/cc4h6SWf.s:3228   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 vTaskRemoveFromUnorderedEventList
     /tmp/cc4h6SWf.s:3352   .text.vTaskRemoveFromUnorderedEventList:000000000000005c $d
     /tmp/cc4h6SWf.s:3361   .text.vTaskSetTimeOutState:0000000000000000 $t
     /tmp/cc4h6SWf.s:3368   .text.vTaskSetTimeOutState:0000000000000000 vTaskSetTimeOutState
     /tmp/cc4h6SWf.s:3425   .text.vTaskSetTimeOutState:0000000000000020 $d
     /tmp/cc4h6SWf.s:3431   .text.vTaskInternalSetTimeOutState:0000000000000000 $t
     /tmp/cc4h6SWf.s:3438   .text.vTaskInternalSetTimeOutState:0000000000000000 vTaskInternalSetTimeOutState
     /tmp/cc4h6SWf.s:3464   .text.vTaskInternalSetTimeOutState:0000000000000010 $d
     /tmp/cc4h6SWf.s:3470   .text.xTaskCheckForTimeOut:0000000000000000 $t
     /tmp/cc4h6SWf.s:3477   .text.xTaskCheckForTimeOut:0000000000000000 xTaskCheckForTimeOut
     /tmp/cc4h6SWf.s:3622   .text.xTaskCheckForTimeOut:000000000000005c $d
     /tmp/cc4h6SWf.s:3629   .text.vTaskMissedYield:0000000000000000 $t
     /tmp/cc4h6SWf.s:3636   .text.vTaskMissedYield:0000000000000000 vTaskMissedYield
     /tmp/cc4h6SWf.s:3656   .text.vTaskMissedYield:0000000000000008 $d
     /tmp/cc4h6SWf.s:3661   .text.xTaskGetCurrentTaskHandle:0000000000000000 $t
     /tmp/cc4h6SWf.s:3668   .text.xTaskGetCurrentTaskHandle:0000000000000000 xTaskGetCurrentTaskHandle
     /tmp/cc4h6SWf.s:3690   .text.xTaskGetCurrentTaskHandle:0000000000000008 $d
     /tmp/cc4h6SWf.s:3695   .text.xTaskGetSchedulerState:0000000000000000 $t
     /tmp/cc4h6SWf.s:3702   .text.xTaskGetSchedulerState:0000000000000000 xTaskGetSchedulerState
     /tmp/cc4h6SWf.s:3735   .text.xTaskGetSchedulerState:0000000000000018 $d
     /tmp/cc4h6SWf.s:3741   .text.xTaskPriorityInherit:0000000000000000 $t
     /tmp/cc4h6SWf.s:3748   .text.xTaskPriorityInherit:0000000000000000 xTaskPriorityInherit
     /tmp/cc4h6SWf.s:3880   .text.xTaskPriorityInherit:0000000000000070 $d
     /tmp/cc4h6SWf.s:3887   .text.xTaskPriorityDisinherit:0000000000000000 $t
     /tmp/cc4h6SWf.s:3894   .text.xTaskPriorityDisinherit:0000000000000000 xTaskPriorityDisinherit
     /tmp/cc4h6SWf.s:4028   .text.xTaskPriorityDisinherit:0000000000000060 $d
     /tmp/cc4h6SWf.s:4035   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 $t
     /tmp/cc4h6SWf.s:4042   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 vTaskPriorityDisinheritAfterTimeout
     /tmp/cc4h6SWf.s:4192   .text.vTaskPriorityDisinheritAfterTimeout:000000000000006c $d
     /tmp/cc4h6SWf.s:4199   .text.uxTaskResetEventItemValue:0000000000000000 $t
     /tmp/cc4h6SWf.s:4206   .text.uxTaskResetEventItemValue:0000000000000000 uxTaskResetEventItemValue
     /tmp/cc4h6SWf.s:4238   .text.uxTaskResetEventItemValue:0000000000000014 $d
     /tmp/cc4h6SWf.s:4243   .text.pvTaskIncrementMutexHeldCount:0000000000000000 $t
     /tmp/cc4h6SWf.s:4250   .text.pvTaskIncrementMutexHeldCount:0000000000000000 pvTaskIncrementMutexHeldCount
     /tmp/cc4h6SWf.s:4281   .text.pvTaskIncrementMutexHeldCount:0000000000000014 $d
ARM GAS  /tmp/cc4h6SWf.s 			page 214


     /tmp/cc4h6SWf.s:4286   .text.ulTaskNotifyTake:0000000000000000 $t
     /tmp/cc4h6SWf.s:4293   .text.ulTaskNotifyTake:0000000000000000 ulTaskNotifyTake
     /tmp/cc4h6SWf.s:4402   .text.ulTaskNotifyTake:0000000000000058 $d
     /tmp/cc4h6SWf.s:4407   .text.xTaskNotifyWait:0000000000000000 $t
     /tmp/cc4h6SWf.s:4414   .text.xTaskNotifyWait:0000000000000000 xTaskNotifyWait
     /tmp/cc4h6SWf.s:4547   .text.xTaskNotifyWait:0000000000000074 $d
     /tmp/cc4h6SWf.s:4552   .text.xTaskGenericNotify:0000000000000000 $t
     /tmp/cc4h6SWf.s:4559   .text.xTaskGenericNotify:0000000000000000 xTaskGenericNotify
     /tmp/cc4h6SWf.s:4636   .text.xTaskGenericNotify:0000000000000034 $d
     /tmp/cc4h6SWf.s:4640   .text.xTaskGenericNotify:0000000000000038 $t
     /tmp/cc4h6SWf.s:4760   .text.xTaskGenericNotify:000000000000009c $d
     /tmp/cc4h6SWf.s:4767   .text.xTaskGenericNotifyFromISR:0000000000000000 $t
     /tmp/cc4h6SWf.s:4774   .text.xTaskGenericNotifyFromISR:0000000000000000 xTaskGenericNotifyFromISR
     /tmp/cc4h6SWf.s:4862   .text.xTaskGenericNotifyFromISR:0000000000000038 $d
     /tmp/cc4h6SWf.s:4866   .text.xTaskGenericNotifyFromISR:000000000000003c $t
     /tmp/cc4h6SWf.s:5019   .text.xTaskGenericNotifyFromISR:00000000000000bc $d
     /tmp/cc4h6SWf.s:5029   .text.vTaskNotifyGiveFromISR:0000000000000000 $t
     /tmp/cc4h6SWf.s:5036   .text.vTaskNotifyGiveFromISR:0000000000000000 vTaskNotifyGiveFromISR
     /tmp/cc4h6SWf.s:5214   .text.vTaskNotifyGiveFromISR:0000000000000088 $d
     /tmp/cc4h6SWf.s:5224   .text.xTaskNotifyStateClear:0000000000000000 $t
     /tmp/cc4h6SWf.s:5231   .text.xTaskNotifyStateClear:0000000000000000 xTaskNotifyStateClear
     /tmp/cc4h6SWf.s:5295   .text.xTaskNotifyStateClear:0000000000000024 $d
     /tmp/cc4h6SWf.s:5305   .bss.pxCurrentTCB:0000000000000000 pxCurrentTCB
     /tmp/cc4h6SWf.s:5301   .bss.pxCurrentTCB:0000000000000000 $d
     /tmp/cc4h6SWf.s:5308   .bss.pxDelayedTaskList:0000000000000000 $d
     /tmp/cc4h6SWf.s:5312   .bss.pxDelayedTaskList:0000000000000000 pxDelayedTaskList
     /tmp/cc4h6SWf.s:5315   .bss.pxOverflowDelayedTaskList:0000000000000000 $d
     /tmp/cc4h6SWf.s:5319   .bss.pxOverflowDelayedTaskList:0000000000000000 pxOverflowDelayedTaskList
     /tmp/cc4h6SWf.s:5322   .bss.pxReadyTasksLists:0000000000000000 $d
     /tmp/cc4h6SWf.s:5328   .bss.uxCurrentNumberOfTasks:0000000000000000 $d
     /tmp/cc4h6SWf.s:5332   .bss.uxCurrentNumberOfTasks:0000000000000000 uxCurrentNumberOfTasks
     /tmp/cc4h6SWf.s:5335   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 $d
     /tmp/cc4h6SWf.s:5339   .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 uxDeletedTasksWaitingCleanUp
     /tmp/cc4h6SWf.s:5342   .bss.uxPendedTicks:0000000000000000 $d
     /tmp/cc4h6SWf.s:5346   .bss.uxPendedTicks:0000000000000000 uxPendedTicks
     /tmp/cc4h6SWf.s:5349   .bss.uxSchedulerSuspended:0000000000000000 $d
     /tmp/cc4h6SWf.s:5353   .bss.uxSchedulerSuspended:0000000000000000 uxSchedulerSuspended
     /tmp/cc4h6SWf.s:5356   .bss.uxTaskNumber:0000000000000000 $d
     /tmp/cc4h6SWf.s:5360   .bss.uxTaskNumber:0000000000000000 uxTaskNumber
     /tmp/cc4h6SWf.s:5363   .bss.uxTopReadyPriority:0000000000000000 $d
     /tmp/cc4h6SWf.s:5367   .bss.uxTopReadyPriority:0000000000000000 uxTopReadyPriority
     /tmp/cc4h6SWf.s:5370   .bss.xDelayedTaskList1:0000000000000000 $d
     /tmp/cc4h6SWf.s:5374   .bss.xDelayedTaskList1:0000000000000000 xDelayedTaskList1
     /tmp/cc4h6SWf.s:5377   .bss.xDelayedTaskList2:0000000000000000 $d
     /tmp/cc4h6SWf.s:5381   .bss.xDelayedTaskList2:0000000000000000 xDelayedTaskList2
     /tmp/cc4h6SWf.s:5384   .bss.xIdleTaskHandle:0000000000000000 $d
     /tmp/cc4h6SWf.s:5388   .bss.xIdleTaskHandle:0000000000000000 xIdleTaskHandle
     /tmp/cc4h6SWf.s:5391   .bss.xNextTaskUnblockTime:0000000000000000 $d
     /tmp/cc4h6SWf.s:5395   .bss.xNextTaskUnblockTime:0000000000000000 xNextTaskUnblockTime
     /tmp/cc4h6SWf.s:5398   .bss.xNumOfOverflows:0000000000000000 $d
     /tmp/cc4h6SWf.s:5402   .bss.xNumOfOverflows:0000000000000000 xNumOfOverflows
     /tmp/cc4h6SWf.s:5405   .bss.xPendingReadyList:0000000000000000 $d
     /tmp/cc4h6SWf.s:5409   .bss.xPendingReadyList:0000000000000000 xPendingReadyList
     /tmp/cc4h6SWf.s:5412   .bss.xSchedulerRunning:0000000000000000 $d
     /tmp/cc4h6SWf.s:5416   .bss.xSchedulerRunning:0000000000000000 xSchedulerRunning
     /tmp/cc4h6SWf.s:5419   .bss.xSuspendedTaskList:0000000000000000 $d
     /tmp/cc4h6SWf.s:5423   .bss.xSuspendedTaskList:0000000000000000 xSuspendedTaskList
ARM GAS  /tmp/cc4h6SWf.s 			page 215


     /tmp/cc4h6SWf.s:5426   .bss.xTasksWaitingTermination:0000000000000000 $d
     /tmp/cc4h6SWf.s:5430   .bss.xTasksWaitingTermination:0000000000000000 xTasksWaitingTermination
     /tmp/cc4h6SWf.s:5433   .bss.xTickCount:0000000000000000 $d
     /tmp/cc4h6SWf.s:5437   .bss.xTickCount:0000000000000000 xTickCount
     /tmp/cc4h6SWf.s:5440   .bss.xYieldPending:0000000000000000 $d
     /tmp/cc4h6SWf.s:5444   .bss.xYieldPending:0000000000000000 xYieldPending

UNDEFINED SYMBOLS
uxListRemove
vListInsertEnd
vListInsert
vPortYield
vPortEnterCritical
vPortExitCritical
vPortFree
pvPortMalloc
vListInitialiseItem
pxPortInitialiseStack
vListInitialise
ulSetInterruptMaskFromISR
vClearInterruptMaskFromISR
xPortStartScheduler
vPortEndScheduler
__gnu_thumb1_case_uqi
