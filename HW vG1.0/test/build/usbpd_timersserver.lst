ARM GAS  /tmp/ccHKcJQI.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"usbpd_timersserver.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	__aeabi_uidiv
  16              		.section	.text.USBPD_TIM_Init,"ax",%progbits
  17              		.align	1
  18              		.global	USBPD_TIM_Init
  19              		.arch armv6s-m
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  23              		.fpu softvfp
  25              	USBPD_TIM_Init:
  26              	.LFB829:
  27              		.file 1 "Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c"
   1:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** /**
   2:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   ******************************************************************************
   3:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   * @file    usbpd_timersserver.c
   4:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   * @author  MCD Application Team
   5:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   * @brief   This file contains timer server functions.
   6:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   ******************************************************************************
   7:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   * @attention
   8:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   *
   9:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  10:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   * All rights reserved.</center></h2>
  11:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   *
  12:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   * the License. You may obtain a copy of the License at:
  15:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   *                             www.st.com/SLA0044
  16:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   *
  17:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   ******************************************************************************
  18:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   */
  19:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** 
  20:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** /* Includes ------------------------------------------------------------------*/
  21:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** #include "usbpd_devices_conf.h"
  22:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** #include "usbpd_timersserver.h"
  23:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** 
  24:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** /** @addtogroup STM32_USBPD_LIBRARY
  25:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   * @{
  26:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   */
  27:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** 
  28:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** /** @addtogroup USBPD_DEVICE
  29:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   * @{
  30:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   */
  31:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** 
ARM GAS  /tmp/ccHKcJQI.s 			page 2


  32:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** /** @addtogroup USBPD_DEVICE_TIMESERVER
  33:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   * @{
  34:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   */
  35:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** 
  36:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** /* Private typedef -----------------------------------------------------------*/
  37:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** /* Private define ------------------------------------------------------------*/
  38:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** /* Private macro -------------------------------------------------------------*/
  39:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** /* Private variables ---------------------------------------------------------*/
  40:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** /* Private function prototypes -----------------------------------------------*/
  41:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** /* Private functions ---------------------------------------------------------*/
  42:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** 
  43:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** /**
  44:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   * @brief  Initialize Timer 2
  45:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   * @retval None
  46:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   */
  47:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** void USBPD_TIM_Init(void)
  48:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** {
  28              		.loc 1 48 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  49:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   TIMX_CLK_ENABLE;
  32              		.loc 1 49 3 view .LVU1
  33              	.LBB60:
  34              	.LBI60:
  35              		.file 2 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h"
   1:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @file    stm32g0xx_ll_bus.h
   4:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
   7:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   @verbatim
   8:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****                       ##### RCC Limitations #####
   9:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   ==============================================================================
  10:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****     [..]
  11:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral
  12:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write
  13:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****       from/to registers.
  14:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  15:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  17:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****     [..]
  18:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****       Workarounds:
  19:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  21:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  22:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   @endverbatim
  23:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   ******************************************************************************
  24:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @attention
  25:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *
  26:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * <h2><center>&copy; Copyright (c) 2018 STMicroelectronics. 
  27:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * All rights reserved.</center></h2>
  28:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *
  29:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  30:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * the "License"; You may not use this file except in compliance with the 
  31:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * License. You may obtain a copy of the License at:
ARM GAS  /tmp/ccHKcJQI.s 			page 3


  32:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *                        opensource.org/licenses/BSD-3-Clause
  33:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *
  34:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   ******************************************************************************
  35:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
  36:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  37:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  38:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #ifndef STM32G0xx_LL_BUS_H
  39:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define STM32G0xx_LL_BUS_H
  40:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  41:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #ifdef __cplusplus
  42:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** extern "C" {
  43:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
  44:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  45:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  46:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #include "stm32g0xx.h"
  47:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  48:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @addtogroup STM32G0xx_LL_Driver
  49:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
  50:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
  51:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  52:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(RCC)
  53:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  54:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  55:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
  56:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
  57:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  58:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  59:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  60:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  61:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  62:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  63:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  64:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  65:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  66:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  67:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  68:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
  69:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
  70:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  71:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  72:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
  73:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
  74:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
  75:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHBENR_DMA1EN
  76:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_FLASH          RCC_AHBENR_FLASHEN
  77:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM           RCC_AHBSMENR_SRAMSMEN
  78:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(CRC)
  79:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHBENR_CRCEN
  80:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
  81:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(AES)
  82:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRYP           RCC_AHBENR_AESEN
  83:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* AES */
  84:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(RNG)
  85:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_RNG            RCC_AHBENR_RNGEN
  86:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
  87:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
  88:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @}
ARM GAS  /tmp/ccHKcJQI.s 			page 4


  89:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
  90:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  91:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  92:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
  93:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
  94:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
  95:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
  96:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(TIM2)
  97:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APBENR1_TIM2EN
  98:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* TIM2 */
  99:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(TIM3)
 100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APBENR1_TIM3EN
 101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* TIM3 */
 102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(TIM6)
 103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APBENR1_TIM6EN
 104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* TIM6 */
 105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(TIM7)
 106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APBENR1_TIM7EN
 107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* TIM7 */
 108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_RTC            RCC_APBENR1_RTCAPBEN
 109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APBENR1_WWDGEN
 110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APBENR1_SPI2EN
 111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APBENR1_USART2EN
 112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(USART3)
 113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART3         RCC_APBENR1_USART3EN
 114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(USART4)
 116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART4         RCC_APBENR1_USART4EN
 117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* USART4 */
 118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(LPUART1)
 119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPUART1        RCC_APBENR1_LPUART1EN
 120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APBENR1_I2C1EN
 122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APBENR1_I2C2EN
 123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(CEC)
 124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CEC            RCC_APBENR1_CECEN
 125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* CEC */
 126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(UCPD1)
 127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UCPD1          RCC_APBENR1_UCPD1EN
 128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(UCPD2)
 130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UCPD2          RCC_APBENR1_UCPD2EN
 131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DBGMCU         RCC_APBENR1_DBGEN
 133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APBENR1_PWREN
 134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(DAC1)
 135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APBENR1_DAC1EN
 136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(LPTIM2)
 138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPTIM2         RCC_APBENR1_LPTIM2EN
 139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(LPTIM1)
 141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPTIM1         RCC_APBENR1_LPTIM1EN
 142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @}
 145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
ARM GAS  /tmp/ccHKcJQI.s 			page 5


 146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB2_GRP1_PERIPH  APB2 GRP1 PERIPH
 148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
 149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ALL            0xFFFFFFFFU
 151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SYSCFG         RCC_APBENR2_SYSCFGEN
 152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM1           RCC_APBENR2_TIM1EN
 153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI1           RCC_APBENR2_SPI1EN
 154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART1         RCC_APBENR2_USART1EN
 155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(TIM14)
 156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM14          RCC_APBENR2_TIM14EN
 157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* TIM14 */
 158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(TIM15)
 159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM15          RCC_APBENR2_TIM15EN
 160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(TIM16)
 162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM16          RCC_APBENR2_TIM16EN
 163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(TIM17)
 165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM17          RCC_APBENR2_TIM17EN
 166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* TIM17 */
 167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(ADC)
 168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC            RCC_APBENR2_ADCEN
 169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @}
 172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_IOP_GRP1_PERIPH  IOP GRP1 PERIPH
 175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
 176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_ALL             0xFFFFFFFFU
 178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOA           RCC_IOPENR_GPIOAEN
 179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOB           RCC_IOPENR_GPIOBEN
 180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOC           RCC_IOPENR_GPIOCEN
 181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOD           RCC_IOPENR_GPIODEN
 182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(GPIOE)
 183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOE           RCC_IOPENR_GPIOEEN
 184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* GPIOE */
 185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(GPIOF)
 186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOF           RCC_IOPENR_GPIOFEN
 187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* GPIOF */
 188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @}
 190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @}
 194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
 200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
ARM GAS  /tmp/ccHKcJQI.s 			page 6


 203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
 204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_EnableClock\n
 209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       FLASHEN       LL_AHB1_GRP1_EnableClock\n
 210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_EnableClock\n
 211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       AESEN         LL_AHB1_GRP1_EnableClock\n
 212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       RNGEN         LL_AHB1_GRP1_EnableClock
 213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG  (*)
 219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note   (*) RNG & CRYP Peripherals available only on STM32G081xx
 220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->AHBENR, Periphs);
 226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBENR, Periphs);
 228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   (void)tmpreg;
 229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_IsEnabledClock\n
 234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       FLASHEN       LL_AHB1_GRP1_IsEnabledClock\n
 235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_IsEnabledClock\n
 236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       AESEN         LL_AHB1_GRP1_IsEnabledClock\n
 237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       RNGEN         LL_AHB1_GRP1_IsEnabledClock
 238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG  (*)
 244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note   (*) RNG & CRYP Peripherals available only on STM32G081xx
 245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   return ((READ_BIT(RCC->AHBENR, Periphs) == Periphs) ? 1UL : 0UL);
 250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_DisableClock\n
 255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       FLASHEN       LL_AHB1_GRP1_DisableClock\n
 256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_DisableClock\n
 257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       AESEN         LL_AHB1_GRP1_DisableClock\n
 258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       RNGEN         LL_AHB1_GRP1_DisableClock
 259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
ARM GAS  /tmp/ccHKcJQI.s 			page 7


 260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG  (*)
 265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note   (*) RNG & CRYP Peripherals available only on STM32G081xx
 266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBENR, Periphs);
 271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll AHBRSTR      DMA1RST       LL_AHB1_GRP1_ForceReset\n
 276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBRSTR      FLASHRST      LL_AHB1_GRP1_ForceReset\n
 277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBRSTR      CRCRST        LL_AHB1_GRP1_ForceReset\n
 278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBRSTR      AESRST        LL_AHB1_GRP1_ForceReset\n
 279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBRSTR      RNGRST        LL_AHB1_GRP1_ForceReset
 280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** * @param  Periphs This parameter can be a combination of the following values:
 281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG  (*)
 287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note   (*) RNG & CRYP Peripherals available only on STM32G081xx
 288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->AHBRSTR, Periphs);
 293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll AHBRSTR      DMA1RST       LL_AHB1_GRP1_ReleaseReset\n
 298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBRSTR      FLASHRST      LL_AHB1_GRP1_ReleaseReset\n
 299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBRSTR      CRCRST        LL_AHB1_GRP1_ReleaseReset\n
 300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBRSTR      AESRST        LL_AHB1_GRP1_ReleaseReset\n
 301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBRSTR      RNGRST        LL_AHB1_GRP1_ReleaseReset
 302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG  (*)
 309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note   (*) RNG & CRYP Peripherals available only on STM32G081xx
 310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBRSTR, Periphs);
 315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
ARM GAS  /tmp/ccHKcJQI.s 			page 8


 317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Enable AHB1 peripheral clocks in Sleep and Stop modes
 319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll AHBSMENR     DMA1SMEN      LL_AHB1_GRP1_EnableClockStopSleep\n
 320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     FLASHSMEN     LL_AHB1_GRP1_EnableClockStopSleep\n
 321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     SRAMSMEN      LL_AHB1_GRP1_EnableClockStopSleep\n
 322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     CRCSMEN       LL_AHB1_GRP1_EnableClockStopSleep\n
 323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     AESSMEN       LL_AHB1_GRP1_EnableClockStopSleep\n
 324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     RNGSMEN       LL_AHB1_GRP1_EnableClockStopSleep
 325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG  (*)
 332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note   (*) RNG & CRYP Peripherals available only on STM32G081xx
 333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClockStopSleep(uint32_t Periphs)
 336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->AHBSMENR, Periphs);
 339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBSMENR, Periphs);
 341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   (void)tmpreg;
 342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Disable AHB1 peripheral clocks in Sleep and Stop modes
 346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll AHBSMENR     DMA1SMEN      LL_AHB1_GRP1_DisableClockStopSleep\n
 347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     FLASHSMEN     LL_AHB1_GRP1_DisableClockStopSleep\n
 348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     SRAMSMEN      LL_AHB1_GRP1_DisableClockStopSleep\n
 349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     CRCSMEN       LL_AHB1_GRP1_DisableClockStopSleep\n
 350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     AESSMEN       LL_AHB1_GRP1_DisableClockStopSleep\n
 351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     RNGSMEN       LL_AHB1_GRP1_DisableClockStopSleep
 352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG  (*)
 359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note   (*) RNG & CRYP Peripherals available only on STM32G081xx
 360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClockStopSleep(uint32_t Periphs)
 363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBSMENR, Periphs);
 365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @}
 369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1 APB1
 372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
 373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
ARM GAS  /tmp/ccHKcJQI.s 			page 9


 374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
 377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBENR1      TIM2EN        LL_APB1_GRP1_EnableClock\n
 378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM3EN        LL_APB1_GRP1_EnableClock\n
 379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM6EN        LL_APB1_GRP1_EnableClock\n
 380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM7EN        LL_APB1_GRP1_EnableClock\n
 381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      RTCAPBEN      LL_APB1_GRP1_EnableClock\n
 382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      WWDGEN        LL_APB1_GRP1_EnableClock\n
 383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      SPI2EN        LL_APB1_GRP1_EnableClock\n
 384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART2EN      LL_APB1_GRP1_EnableClock\n
 385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART3EN      LL_APB1_GRP1_EnableClock\n
 386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART4EN      LL_APB1_GRP1_EnableClock\n
 387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPUART1EN     LL_APB1_GRP1_EnableClock\n
 388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      I2C1EN        LL_APB1_GRP1_EnableClock\n
 389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      I2C2EN        LL_APB1_GRP1_EnableClock\n
 390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      CECEN         LL_APB1_GRP1_EnableClock\n
 391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      UCPD1EN       LL_APB1_GRP1_EnableClock\n
 392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      UCPD2EN       LL_APB1_GRP1_EnableClock\n
 393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      DBGEN         LL_APB1_GRP1_EnableClock\n
 394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      PWREN         LL_APB1_GRP1_EnableClock\n
 395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      DAC1EN        LL_APB1_GRP1_EnableClock\n
 396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPTIM2EN      LL_APB1_GRP1_EnableClock\n
 397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPTIM1EN      LL_APB1_GRP1_EnableClock
 398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2    (1)
 400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6    (1)
 402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7    (1)
 403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTC
 404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3  (1)
 408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4  (1)
 409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1 (1)
 410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC     (1)
 413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD1   (1)
 414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD2   (1)
 415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DBGMCU
 416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1    (1)
 418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM2  (1)
 419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1  (1)
 420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note Peripheral marked with (1) are not available all devices
 421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
 424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->APBENR1, Periphs);
 427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APBENR1, Periphs);
 429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   (void)tmpreg;
 430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
ARM GAS  /tmp/ccHKcJQI.s 			page 10


 431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not
 434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBENR1      TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
 435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM3EN        LL_APB1_GRP1_IsEnabledClock\n
 436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM6EN        LL_APB1_GRP1_IsEnabledClock\n
 437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM7EN        LL_APB1_GRP1_IsEnabledClock\n
 438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      RTCAPBEN      LL_APB1_GRP1_IsEnabledClock\n
 439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      WWDGEN        LL_APB1_GRP1_IsEnabledClock\n
 440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
 441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART2EN      LL_APB1_GRP1_IsEnabledClock\n
 442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART3EN      LL_APB1_GRP1_IsEnabledClock\n
 443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART4EN      LL_APB1_GRP1_IsEnabledClock\n
 444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPUART1EN     LL_APB1_GRP1_IsEnabledClock\n
 445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
 446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
 447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      CECEN         LL_APB1_GRP1_IsEnabledClock\n
 448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      UCPD1EN       LL_APB1_GRP1_IsEnabledClock\n
 449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      UCPD2EN       LL_APB1_GRP1_IsEnabledClock\n
 450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      DBGEN         LL_APB1_GRP1_IsEnabledClock\n
 451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      PWREN         LL_APB1_GRP1_IsEnabledClock\n
 452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      DAC1EN        LL_APB1_GRP1_IsEnabledClock\n
 453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPTIM2EN      LL_APB1_GRP1_IsEnabledClock\n
 454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPTIM1EN      LL_APB1_GRP1_IsEnabledClock
 455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2    (1)
 457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6    (1)
 459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7    (1)
 460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTC
 461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3  (1)
 465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4  (1)
 466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1 (1)
 467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC     (1)
 470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD1   (1)
 471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD2   (1)
 472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DBGMCU
 473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1    (1)
 475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM2  (1)
 476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1  (1)
 477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note Peripheral marked with (1) are not available all devices
 478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
 481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   return ((READ_BIT(RCC->APBENR1, Periphs) == (Periphs)) ? 1UL : 0UL);
 483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock.
 487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBENR1      TIM2EN        LL_APB1_GRP1_DisableClock\n
ARM GAS  /tmp/ccHKcJQI.s 			page 11


 488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM3EN        LL_APB1_GRP1_DisableClock\n
 489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM6EN        LL_APB1_GRP1_DisableClock\n
 490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM7EN        LL_APB1_GRP1_DisableClock\n
 491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      RTCAPBEN      LL_APB1_GRP1_DisableClock\n
 492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      WWDGEN        LL_APB1_GRP1_DisableClock\n
 493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      SPI2EN        LL_APB1_GRP1_DisableClock\n
 494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART2EN      LL_APB1_GRP1_DisableClock\n
 495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART3EN      LL_APB1_GRP1_DisableClock\n
 496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART4EN      LL_APB1_GRP1_DisableClock\n
 497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPUART1EN     LL_APB1_GRP1_DisableClock\n
 498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      I2C1EN        LL_APB1_GRP1_DisableClock\n
 499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      I2C2EN        LL_APB1_GRP1_DisableClock\n
 500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      CECEN         LL_APB1_GRP1_DisableClock\n
 501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      UCPD1EN       LL_APB1_GRP1_DisableClock\n
 502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      UCPD2EN       LL_APB1_GRP1_DisableClock\n
 503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      DBGEN         LL_APB1_GRP1_DisableClock\n
 504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      PWREN         LL_APB1_GRP1_DisableClock\n
 505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      DAC1EN        LL_APB1_GRP1_DisableClock\n
 506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPTIM2EN      LL_APB1_GRP1_DisableClock\n
 507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPTIM1EN      LL_APB1_GRP1_DisableClock
 508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2    (1)
 510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6    (1)
 512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7    (1)
 513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTC
 514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3  (1)
 518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4  (1)
 519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1 (1)
 520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC     (1)
 523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD1   (1)
 524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD2   (1)
 525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DBGMCU
 526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1    (1)
 528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM2  (1)
 529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1  (1)
 530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note Peripheral marked with (1) are not available all devices
 531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
 534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   CLEAR_BIT(RCC->APBENR1, Periphs);
 536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset.
 540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBRSTR1     TIM2RST       LL_APB1_GRP1_ForceReset\n
 541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     TIM3RST       LL_APB1_GRP1_ForceReset\n
 542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     TIM6RST       LL_APB1_GRP1_ForceReset\n
 543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     TIM7RST       LL_APB1_GRP1_ForceReset\n
 544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     RTCRST        LL_APB1_GRP1_ForceReset\n
ARM GAS  /tmp/ccHKcJQI.s 			page 12


 545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     WWDGRST       LL_APB1_GRP1_ForceReset\n
 546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     SPI2RST       LL_APB1_GRP1_ForceReset\n
 547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     USART2RST     LL_APB1_GRP1_ForceReset\n
 548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     USART3RST     LL_APB1_GRP1_ForceReset\n
 549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     USART4RST     LL_APB1_GRP1_ForceReset\n
 550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     LPUART1RST    LL_APB1_GRP1_ForceReset\n
 551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     I2C1RST       LL_APB1_GRP1_ForceReset\n
 552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     I2C2RST       LL_APB1_GRP1_ForceReset\n
 553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     CECRST        LL_APB1_GRP1_ForceReset\n
 554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     UCPD1RST      LL_APB1_GRP1_ForceReset\n
 555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     UCPD2RST      LL_APB1_GRP1_ForceReset\n
 556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     DBGRST        LL_APB1_GRP1_ForceReset\n
 557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     PWRRST        LL_APB1_GRP1_ForceReset\n
 558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     DAC1RST       LL_APB1_GRP1_ForceReset\n
 559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     LPTIM2RST     LL_APB1_GRP1_ForceReset\n
 560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     LPTIM1RST     LL_APB1_GRP1_ForceReset
 561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2    (1)
 564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6    (1)
 566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7    (1)
 567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTC
 568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3  (1)
 572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4  (1)
 573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1 (1)
 574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC     (1)
 577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD1   (1)
 578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD2   (1)
 579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DBGMCU
 580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1    (1)
 582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM2  (1)
 583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1  (1)
 584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note Peripheral marked with (1) are not available all devices
 585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
 588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->APBRSTR1, Periphs);
 590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset.
 594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBRSTR1     TIM2RST       LL_APB1_GRP1_ReleaseReset\n
 595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     TIM3RST       LL_APB1_GRP1_ReleaseReset\n
 596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     TIM6RST       LL_APB1_GRP1_ReleaseReset\n
 597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     TIM7RST       LL_APB1_GRP1_ReleaseReset\n
 598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     RTCRST        LL_APB1_GRP1_ReleaseReset\n
 599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     WWDGRST       LL_APB1_GRP1_ReleaseReset\n
 600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     SPI2RST       LL_APB1_GRP1_ReleaseReset\n
 601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     USART2RST     LL_APB1_GRP1_ReleaseReset\n
ARM GAS  /tmp/ccHKcJQI.s 			page 13


 602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     USART3RST     LL_APB1_GRP1_ReleaseReset\n
 603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     USART4RST     LL_APB1_GRP1_ReleaseReset\n
 604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     LPUART1RST    LL_APB1_GRP1_ReleaseReset\n
 605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     I2C1RST       LL_APB1_GRP1_ReleaseReset\n
 606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     I2C2RST       LL_APB1_GRP1_ReleaseReset\n
 607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     CECRST        LL_APB1_GRP1_ReleaseReset\n
 608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     UCPD1RST      LL_APB1_GRP1_ReleaseReset\n
 609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     UCPD2RST      LL_APB1_GRP1_ReleaseReset\n
 610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     DBGRST        LL_APB1_GRP1_ReleaseReset\n
 611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     PWRRST        LL_APB1_GRP1_ReleaseReset\n
 612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     DAC1RST       LL_APB1_GRP1_ReleaseReset\n
 613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     LPTIM2RST     LL_APB1_GRP1_ReleaseReset\n
 614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     LPTIM1RST     LL_APB1_GRP1_ReleaseReset
 615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2    (1)
 618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6    (1)
 620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7    (1)
 621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTC
 622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3  (1)
 626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4  (1)
 627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1 (1)
 628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC     (1)
 631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD1   (1)
 632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD2   (1)
 633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DBGMCU
 634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1    (1)
 636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM2  (1)
 637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1  (1)
 638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note Peripheral marked with (1) are not available all devices
 639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
 642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   CLEAR_BIT(RCC->APBRSTR1, Periphs);
 644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Enable APB1 peripheral clocks in Sleep and Stop modes
 648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBSMENR1    TIM2SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    TIM3SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    TIM6SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    TIM7SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    RTCAPBSMEN    LL_APB1_GRP1_EnableClockStopSleep\n
 653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    WWDGSMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    SPI2SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    USART2SMEN    LL_APB1_GRP1_EnableClockStopSleep\n
 656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    USART3SMEN    LL_APB1_GRP1_EnableClockStopSleep\n
 657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    USART4SMEN    LL_APB1_GRP1_EnableClockStopSleep\n
 658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    LPUART1SMEN   LL_APB1_GRP1_EnableClockStopSleep\n
ARM GAS  /tmp/ccHKcJQI.s 			page 14


 659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    I2C1SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    I2C2SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    CECSMEN       LL_APB1_GRP1_EnableClockStopSleep\n
 662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    UCPD1SMEN     LL_APB1_GRP1_EnableClockStopSleep\n
 663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    UCPD2SMEN     LL_APB1_GRP1_EnableClockStopSleep\n
 664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    DBGSMEN       LL_APB1_GRP1_EnableClockStopSleep\n
 665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    PWRSMEN       LL_APB1_GRP1_EnableClockStopSleep\n
 666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    DAC1SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    LPTIM2SMEN    LL_APB1_GRP1_EnableClockStopSleep\n
 668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    LPTIM1SMEN    LL_APB1_GRP1_EnableClockStopSleep
 669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2    (1)
 671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6    (1)
 673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7    (1)
 674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTC
 675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3  (1)
 679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4  (1)
 680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1 (1)
 681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC     (1)
 684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD1   (1)
 685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD2   (1)
 686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DBGMCU
 687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1    (1)
 689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM2  (1)
 690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1  (1)
 691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note Peripheral marked with (1) are not available all devices
 692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClockStopSleep(uint32_t Periphs)
 695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->APBSMENR1, Periphs);
 698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APBSMENR1, Periphs);
 700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   (void)tmpreg;
 701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Disable APB1 peripheral clocks in Sleep and Stop modes
 705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBSMENR1    TIM2SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    TIM3SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    TIM6SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    TIM7SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    RTCAPBSMEN    LL_APB1_GRP1_DisableClockStopSleep\n
 710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    WWDGSMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    SPI2SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    USART2SMEN    LL_APB1_GRP1_DisableClockStopSleep\n
 713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    USART3SMEN    LL_APB1_GRP1_DisableClockStopSleep\n
 714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    USART4SMEN    LL_APB1_GRP1_DisableClockStopSleep\n
 715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    LPUART1SMEN   LL_APB1_GRP1_DisableClockStopSleep\n
ARM GAS  /tmp/ccHKcJQI.s 			page 15


 716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    I2C1SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    I2C2SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    CECSMEN       LL_APB1_GRP1_DisableClockStopSleep\n
 719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    UCPD1SMEN     LL_APB1_GRP1_DisableClockStopSleep\n
 720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    UCPD2SMEN     LL_APB1_GRP1_DisableClockStopSleep\n
 721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    DBGSMEN       LL_APB1_GRP1_DisableClockStopSleep\n
 722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    PWRSMEN       LL_APB1_GRP1_DisableClockStopSleep\n
 723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    DAC1SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    LPTIM2SMEN    LL_APB1_GRP1_DisableClockStopSleep\n
 725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    LPTIM1SMEN    LL_APB1_GRP1_DisableClockStopSleep
 726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2    (1)
 728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6    (1)
 730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7    (1)
 731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTC
 732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3  (1)
 736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4  (1)
 737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1 (1)
 738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC     (1)
 741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD1   (1)
 742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD2   (1)
 743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DBGMCU
 744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1    (1)
 746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM2  (1)
 747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1  (1)
 748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note Peripheral marked with (1) are not available all devices
 749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClockStopSleep(uint32_t Periphs)
 752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   CLEAR_BIT(RCC->APBSMENR1, Periphs);
 754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @}
 758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB2 APB2
 761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
 762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Enable APB2 peripherals clock.
 766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBENR2      SYSCFGEN      LL_APB2_GRP1_EnableClock\n
 767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM1EN        LL_APB2_GRP1_EnableClock\n
 768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      SPI1EN        LL_APB2_GRP1_EnableClock\n
 769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      USART1EN      LL_APB2_GRP1_EnableClock\n
 770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM14EN       LL_APB2_GRP1_EnableClock\n
 771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM15EN       LL_APB2_GRP1_EnableClock\n (*)
 772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM16EN       LL_APB2_GRP1_EnableClock\n
ARM GAS  /tmp/ccHKcJQI.s 			page 16


 773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM17EN       LL_APB2_GRP1_EnableClock\n
 774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      ADCEN         LL_APB2_GRP1_EnableClock
 775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM1
 778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
 780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM14
 781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM15 (*)
 782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM16
 783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM17
 784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC
 785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note (*) peripheral not available on all devices
 786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
  36              		.loc 2 788 22 view .LVU2
  37              	.LVL0:
  38              	.LBB61:
 789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   __IO uint32_t tmpreg;
  39              		.loc 2 790 3 view .LVU3
 791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->APBENR2, Periphs);
  40              		.loc 2 791 3 view .LVU4
  41              	.LBE61:
  42              	.LBE60:
  48:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   TIMX_CLK_ENABLE;
  43              		.loc 1 48 1 is_stmt 0 view .LVU5
  44 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
  45              	.LCFI0:
  46              		.cfi_def_cfa_offset 24
  47              		.cfi_offset 0, -24
  48              		.cfi_offset 1, -20
  49              		.cfi_offset 4, -16
  50              		.cfi_offset 5, -12
  51              		.cfi_offset 6, -8
  52              		.cfi_offset 14, -4
  53              	.LBB65:
  54              	.LBB62:
  55              		.loc 2 791 3 view .LVU6
  56 0002 8020     		movs	r0, #128
  57 0004 2A4A     		ldr	r2, .L6
  58 0006 0001     		lsls	r0, r0, #4
  59 0008 116C     		ldr	r1, [r2, #64]
  60              	.LBE62:
  61              	.LBE65:
  62              	.LBB66:
  63              	.LBB67:
  64              		.file 3 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h"
   1:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @file    stm32g0xx_ll_tim.h
   4:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief   Header file of TIM LL module.
   6:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   ******************************************************************************
   7:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @attention
   8:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
ARM GAS  /tmp/ccHKcJQI.s 			page 17


   9:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * <h2><center>&copy; Copyright (c) 2018 STMicroelectronics.
  10:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
  12:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
  17:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   ******************************************************************************
  18:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
  19:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
  20:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #ifndef __STM32G0xx_LL_TIM_H
  22:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define __STM32G0xx_LL_TIM_H
  23:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
  24:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #ifdef __cplusplus
  25:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** extern "C" {
  26:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #endif
  27:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
  28:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #include "stm32g0xx.h"
  30:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
  31:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @addtogroup STM32G0xx_LL_Driver
  32:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
  33:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
  34:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
  35:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #if defined (TIM1) || defined (TIM2) || defined (TIM3) ||  defined (TIM14) ||  defined (TIM15) || d
  36:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
  37:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL TIM
  38:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
  39:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
  40:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
  41:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Variables TIM Private Variables
  44:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
  45:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
  46:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** static const uint8_t OFFSET_TAB_CCMRx[] =
  47:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
  48:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   0x00U,   /* 0: TIMx_CH1  */
  49:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   0x00U,   /* 1: TIMx_CH1N */
  50:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   0x00U,   /* 2: TIMx_CH2  */
  51:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   0x00U,   /* 3: TIMx_CH2N */
  52:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   0x04U,   /* 4: TIMx_CH3  */
  53:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   0x04U,   /* 5: TIMx_CH3N */
  54:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   0x04U,   /* 6: TIMx_CH4  */
  55:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   0x3CU,   /* 7: TIMx_CH5  */
  56:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   0x3CU    /* 8: TIMx_CH6  */
  57:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** };
  58:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
  59:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** static const uint8_t SHIFT_TAB_OCxx[] =
  60:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
  61:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   0U,            /* 0: OC1M, OC1FE, OC1PE */
  62:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   0U,            /* 1: - NA */
  63:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   8U,            /* 2: OC2M, OC2FE, OC2PE */
  64:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   0U,            /* 3: - NA */
  65:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   0U,            /* 4: OC3M, OC3FE, OC3PE */
ARM GAS  /tmp/ccHKcJQI.s 			page 18


  66:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   0U,            /* 5: - NA */
  67:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   8U,            /* 6: OC4M, OC4FE, OC4PE */
  68:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   0U,            /* 7: OC5M, OC5FE, OC5PE */
  69:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   8U             /* 8: OC6M, OC6FE, OC6PE */
  70:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** };
  71:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
  72:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** static const uint8_t SHIFT_TAB_ICxx[] =
  73:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
  74:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   0U,            /* 0: CC1S, IC1PSC, IC1F */
  75:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   0U,            /* 1: - NA */
  76:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   8U,            /* 2: CC2S, IC2PSC, IC2F */
  77:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   0U,            /* 3: - NA */
  78:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   0U,            /* 4: CC3S, IC3PSC, IC3F */
  79:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   0U,            /* 5: - NA */
  80:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   8U,            /* 6: CC4S, IC4PSC, IC4F */
  81:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   0U,            /* 7: - NA */
  82:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   0U             /* 8: - NA */
  83:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** };
  84:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
  85:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** static const uint8_t SHIFT_TAB_CCxP[] =
  86:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
  87:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   0U,            /* 0: CC1P */
  88:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   2U,            /* 1: CC1NP */
  89:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   4U,            /* 2: CC2P */
  90:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   6U,            /* 3: CC2NP */
  91:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   8U,            /* 4: CC3P */
  92:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   10U,           /* 5: CC3NP */
  93:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   12U,           /* 6: CC4P */
  94:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   16U,           /* 7: CC5P */
  95:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   20U            /* 8: CC6P */
  96:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** };
  97:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
  98:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** static const uint8_t SHIFT_TAB_OISx[] =
  99:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   0U,            /* 0: OIS1 */
 101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   1U,            /* 1: OIS1N */
 102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   2U,            /* 2: OIS2 */
 103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   3U,            /* 3: OIS2N */
 104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   4U,            /* 4: OIS3 */
 105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   5U,            /* 5: OIS3N */
 106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   6U,            /* 6: OIS4 */
 107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   8U,            /* 7: OIS5 */
 108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   10U            /* 8: OIS6 */
 109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** };
 110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /* Private constants ---------------------------------------------------------*/
 115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Constants TIM Private Constants
 116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /* Defines used for the bit position in the register and perform offsets */
 120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define TIM_POSITION_BRK_SOURCE            ((Source >> 1U) & 0x1FUL)
 121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /* Generic bit definitions for TIMx_AF1 register */
ARM GAS  /tmp/ccHKcJQI.s 			page 19


 123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define TIMx_AF1_BKINE     TIM1_AF1_BKINE     /*!< BRK BKIN input enable */
 124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #if defined(COMP1) && defined(COMP2)
 125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define TIMx_AF1_BKCOMP1E  TIM1_AF1_BKCMP1E   /*!< BRK COMP1 enable */
 126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define TIMx_AF1_BKCOMP2E  TIM1_AF1_BKCMP2E   /*!< BRK COMP2 enable */
 127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #endif /* COMP1 && COMP2 */
 128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define TIMx_AF1_BKINP     TIM1_AF1_BKINP     /*!< BRK BKIN input polarity */
 129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #if defined(COMP1) && defined(COMP2)
 130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define TIMx_AF1_BKCOMP1P  TIM1_AF1_BKCMP1P   /*!< BRK COMP1 input polarity */
 131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define TIMx_AF1_BKCOMP2P  TIM1_AF1_BKCMP2P   /*!< BRK COMP2 input polarity */
 132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #endif /* COMP1 && COMP2 */
 133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define TIMx_AF1_ETRSEL    TIM1_AF1_ETRSEL    /*!< TIMx ETR source selection */
 134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /* Generic bit definitions for TIMx_AF2 register */
 136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define TIMx_AF2_BK2INE    TIM1_AF2_BK2INE      /*!< BRK2 BKIN2 input enable */
 137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #if defined(COMP1) && defined(COMP2)
 138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define TIMx_AF2_BK2COMP1E TIM1_AF2_BK2CMP1E    /*!< BRK2 COMP1 enable */
 139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define TIMx_AF2_BK2COMP2E TIM1_AF2_BK2CMP2E    /*!< BRK2 COMP2 enable */
 140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #endif /* COMP1 && COMP2 */
 141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define TIMx_AF2_BK2INP    TIM1_AF2_BK2INP      /*!< BRK2 BKIN2 input polarity */
 142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #if defined(COMP1) && defined(COMP2)
 143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define TIMx_AF2_BK2COMP1P TIM1_AF2_BK2CMP1P    /*!< BRK2 COMP1 input polarity */
 144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define TIMx_AF2_BK2COMP2P TIM1_AF2_BK2CMP2P    /*!< BRK2 COMP2 input polarity */
 145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #endif /* COMP1 && COMP2 */
 147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /* Mask used to set the TDG[x:0] of the DTG bits of the TIMx_BDTR register */
 150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define DT_DELAY_1 ((uint8_t)0x7F)
 151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define DT_DELAY_2 ((uint8_t)0x3F)
 152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define DT_DELAY_3 ((uint8_t)0x1F)
 153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define DT_DELAY_4 ((uint8_t)0x1F)
 154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /* Mask used to set the DTG[7:5] bits of the DTG bits of the TIMx_BDTR register */
 156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define DT_RANGE_1 ((uint8_t)0x00)
 157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define DT_RANGE_2 ((uint8_t)0x80)
 158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define DT_RANGE_3 ((uint8_t)0xC0)
 159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define DT_RANGE_4 ((uint8_t)0xE0)
 160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** Legacy definitions for compatibility purpose
 162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** @cond 0
 163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** @endcond
 166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define OCREF_CLEAR_SELECT_Pos (16U)
 169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define OCREF_CLEAR_SELECT_Msk (0x1U << OCREF_CLEAR_SELECT_Pos)                /*!< 0x00010000 */
 170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /* Private macros ------------------------------------------------------------*/
 175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_Private_Macros TIM Private Macros
 176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @brief  Convert channel id into channel index.
 179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
ARM GAS  /tmp/ccHKcJQI.s 			page 20


 180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
 181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
 182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
 183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
 184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
 185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
 186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
 187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
 188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
 189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval none
 190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define TIM_GET_CHANNEL_INDEX( __CHANNEL__) \
 192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   (((__CHANNEL__) == LL_TIM_CHANNEL_CH1) ? 0U :\
 193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH1N) ? 1U :\
 194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH2) ? 2U :\
 195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH2N) ? 3U :\
 196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH3) ? 4U :\
 197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH3N) ? 5U :\
 198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH4) ? 6U :\
 199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****    ((__CHANNEL__) == LL_TIM_CHANNEL_CH5) ? 7U : 8U)
 200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @brief  Calculate the deadtime sampling period(in ps).
 202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz).
 203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  __CKD__ This parameter can be one of the following values:
 204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
 205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
 206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
 207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval none
 208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define TIM_CALC_DTS(__TIMCLK__, __CKD__)                                                        \
 210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   (((__CKD__) == LL_TIM_CLOCKDIVISION_DIV1) ? ((uint64_t)1000000000000U/(__TIMCLK__))         : \
 211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****    ((__CKD__) == LL_TIM_CLOCKDIVISION_DIV2) ? ((uint64_t)1000000000000U/((__TIMCLK__) >> 1U)) : \
 212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****    ((uint64_t)1000000000000U/((__TIMCLK__) >> 2U)))
 213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /* Exported types ------------------------------------------------------------*/
 219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_ES_INIT TIM Exported Init structure
 221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  TIM Time Base configuration structure definition.
 226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** typedef struct
 228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint16_t Prescaler;         /*!< Specifies the prescaler value used to divide the TIM clock.
 230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                    This parameter can be a number between Min_Data=0x0000 and Max_D
 231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t CounterMode;       /*!< Specifies the counter mode.
 235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_COUNTERMODE.
 236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
ARM GAS  /tmp/ccHKcJQI.s 			page 21


 237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t Autoreload;        /*!< Specifies the auto reload value to be loaded into the active
 240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                    Auto-Reload Register at the next update event.
 241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                    This parameter must be a number between Min_Data=0x0000 and Max_
 242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                    Some timer instances may support 32 bits counters. In that case 
 243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t ClockDivision;     /*!< Specifies the clock division.
 247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                    This parameter can be a value of @ref TIM_LL_EC_CLOCKDIVISION.
 248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint8_t RepetitionCounter;  /*!< Specifies the repetition counter value. Each time the RCR downco
 252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                    reaches zero, an update event is generated and counting restarts
 253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                    from the RCR value (N).
 254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                    This means in PWM mode that (N+1) corresponds to:
 255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       - the number of PWM periods in edge-aligned mode
 256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       - the number of half PWM period in center-aligned mode
 257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                    This parameter must be a number between 0x00 and 0xFF.
 258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                    This feature can be modified afterwards using unitary function @
 260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** } LL_TIM_InitTypeDef;
 261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  TIM Output Compare configuration structure definition.
 264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** typedef struct
 266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t OCMode;        /*!< Specifies the output mode.
 268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCMODE.
 269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t OCState;       /*!< Specifies the TIM Output Compare state.
 273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCSTATE.
 274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                This feature can be modified afterwards using unitary functions @ref
 276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t OCNState;      /*!< Specifies the TIM complementary Output Compare state.
 278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCSTATE.
 279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                This feature can be modified afterwards using unitary functions @ref
 281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t CompareValue;  /*!< Specifies the Compare value to be loaded into the Capture Compare Re
 283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                This parameter can be a number between Min_Data=0x0000 and Max_Data=
 284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function LL_TI
 286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t OCPolarity;    /*!< Specifies the output polarity.
 288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCPOLARITY.
 289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t OCNPolarity;   /*!< Specifies the complementary output polarity.
 293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCPOLARITY.
ARM GAS  /tmp/ccHKcJQI.s 			page 22


 294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t OCIdleState;   /*!< Specifies the TIM Output Compare pin state during Idle state.
 299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCIDLESTATE.
 300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t OCNIdleState;  /*!< Specifies the TIM Output Compare pin state during Idle state.
 304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_OCIDLESTATE.
 305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** } LL_TIM_OC_InitTypeDef;
 308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  TIM Input Capture configuration structure definition.
 311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** typedef struct
 314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t ICPolarity;    /*!< Specifies the active edge of the input signal.
 317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t ICActiveInput; /*!< Specifies the input.
 322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t ICPrescaler;   /*!< Specifies the Input Capture Prescaler.
 327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t ICFilter;      /*!< Specifies the input capture filter.
 332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                This feature can be modified afterwards using unitary function @ref 
 335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** } LL_TIM_IC_InitTypeDef;
 336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  TIM Encoder interface configuration structure definition.
 340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** typedef struct
 342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t EncoderMode;     /*!< Specifies the encoder resolution (x2 or x4).
 344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ENCODERMODE.
 345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t IC1Polarity;     /*!< Specifies the active edge of TI1 input.
 349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
ARM GAS  /tmp/ccHKcJQI.s 			page 23


 351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t IC1ActiveInput;  /*!< Specifies the TI1 input source
 354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t IC1Prescaler;    /*!< Specifies the TI1 input prescaler value.
 359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t IC1Filter;       /*!< Specifies the TI1 input filter.
 364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t IC2Polarity;      /*!< Specifies the active edge of TI2 input.
 369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t IC2ActiveInput;  /*!< Specifies the TI2 input source
 374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ACTIVEINPUT.
 375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t IC2Prescaler;    /*!< Specifies the TI2 input prescaler value.
 379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t IC2Filter;       /*!< Specifies the TI2 input filter.
 384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                  This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                  This feature can be modified afterwards using unitary function @re
 387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** } LL_TIM_ENCODER_InitTypeDef;
 389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  TIM Hall sensor interface configuration structure definition.
 392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** typedef struct
 394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t IC1Polarity;        /*!< Specifies the active edge of TI1 input.
 397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_IC_POLARITY.
 398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function 
 400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t IC1Prescaler;       /*!< Specifies the TI1 input prescaler value.
 402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                     Prescaler must be set to get a maximum counter period longer th
 403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                     time interval between 2 consecutive changes on the Hall inputs.
 404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_ICPSC.
 405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function 
 407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
ARM GAS  /tmp/ccHKcJQI.s 			page 24


 408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t IC1Filter;          /*!< Specifies the TI1 input filter.
 409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                     This parameter can be a value of @ref TIM_LL_EC_IC_FILTER.
 410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function 
 412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t CommutationDelay;   /*!< Specifies the compare value to be loaded into the Capture Compa
 414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                     A positive pulse (TRGO event) is generated with a programmable 
 415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                     a change occurs on the Hall inputs.
 416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                     This parameter can be a number between Min_Data = 0x0000 and Ma
 417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                     This feature can be modified afterwards using unitary function 
 419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** } LL_TIM_HALLSENSOR_InitTypeDef;
 420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  BDTR (Break and Dead Time) structure definition
 423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** typedef struct
 425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t OSSRState;            /*!< Specifies the Off-State selection used in Run mode.
 427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_OSSR
 428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       @note This bit-field cannot be modified as long as LOCK level
 432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t OSSIState;            /*!< Specifies the Off-State used in Idle state.
 434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_OSSI
 435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       @note This bit-field cannot be modified as long as LOCK level
 439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t LockLevel;            /*!< Specifies the LOCK level parameters.
 441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_LOCKLEVEL
 442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       @note The LOCK bits can be written only once after the reset.
 444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                             has been written, their content is frozen until the nex
 445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint8_t DeadTime;              /*!< Specifies the delay time between the switching-off and the
 447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       switching-on of the outputs.
 448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       This parameter can be a number between Min_Data = 0x00 and Ma
 449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint16_t BreakState;           /*!< Specifies whether the TIM Break input is enabled or not.
 455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_ENABLE
 456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t BreakPolarity;        /*!< Specifies the TIM Break Input pin polarity.
 462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_POLARIT
 463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
ARM GAS  /tmp/ccHKcJQI.s 			page 25


 465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t BreakFilter;          /*!< Specifies the TIM Break Filter.
 469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_FILTER
 470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t BreakAFMode;           /*!< Specifies the alternate function mode of the break input.
 476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK_AFMODE
 477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       @note Bidirectional break input is only supported by advanced
 481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t Break2State;          /*!< Specifies whether the TIM Break2 input is enabled or not.
 485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK2_ENABLE
 486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t Break2Polarity;        /*!< Specifies the TIM Break2 Input pin polarity.
 492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK2_POLARI
 493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t Break2Filter;          /*!< Specifies the TIM Break2 Filter.
 499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK2_FILTER
 500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t Break2AFMode;          /*!< Specifies the alternate function mode of the break2 input.
 506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_BREAK2_AFMODE
 507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       @note Bidirectional break input is only supported by advanced
 511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   uint32_t AutomaticOutput;      /*!< Specifies whether the TIM Automatic Output feature is enabled
 515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       This parameter can be a value of @ref TIM_LL_EC_AUTOMATICOUTP
 516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       This feature can be modified afterwards using unitary functio
 518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       @note This bit-field can not be modified as long as LOCK leve
 520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** } LL_TIM_BDTR_InitTypeDef;
 521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
ARM GAS  /tmp/ccHKcJQI.s 			page 26


 522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /* Exported constants --------------------------------------------------------*/
 528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Constants TIM Exported Constants
 529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_GET_FLAG Get Flags Defines
 533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief    Flags defines which can be used with LL_TIM_ReadReg function.
 534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_SR_UIF                          TIM_SR_UIF           /*!< Update interrupt flag */
 537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_SR_CC1IF                        TIM_SR_CC1IF         /*!< Capture/compare 1 interrup
 538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_SR_CC2IF                        TIM_SR_CC2IF         /*!< Capture/compare 2 interrup
 539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_SR_CC3IF                        TIM_SR_CC3IF         /*!< Capture/compare 3 interrup
 540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_SR_CC4IF                        TIM_SR_CC4IF         /*!< Capture/compare 4 interrup
 541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_SR_CC5IF                        TIM_SR_CC5IF         /*!< Capture/compare 5 interrup
 542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_SR_CC6IF                        TIM_SR_CC6IF         /*!< Capture/compare 6 interrup
 543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_SR_COMIF                        TIM_SR_COMIF         /*!< COM interrupt flag */
 544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_SR_TIF                          TIM_SR_TIF           /*!< Trigger interrupt flag */
 545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_SR_BIF                          TIM_SR_BIF           /*!< Break interrupt flag */
 546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_SR_B2IF                         TIM_SR_B2IF          /*!< Second break interrupt fla
 547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_SR_CC1OF                        TIM_SR_CC1OF         /*!< Capture/Compare 1 overcapt
 548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_SR_CC2OF                        TIM_SR_CC2OF         /*!< Capture/Compare 2 overcapt
 549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_SR_CC3OF                        TIM_SR_CC3OF         /*!< Capture/Compare 3 overcapt
 550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_SR_CC4OF                        TIM_SR_CC4OF         /*!< Capture/Compare 4 overcapt
 551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_SR_SBIF                         TIM_SR_SBIF          /*!< System Break interrupt fla
 552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_ENABLE Break Enable
 558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK_DISABLE            0x00000000U             /*!< Break function disabled */
 561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK_ENABLE             TIM_BDTR_BKE            /*!< Break function enabled */
 562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK2_ENABLE Break2 Enable
 567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK2_DISABLE            0x00000000U              /*!< Break2 function disabled */
 570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK2_ENABLE             TIM_BDTR_BK2E            /*!< Break2 function enabled */
 571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_AUTOMATICOUTPUT_ENABLE Automatic output enable
 576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_AUTOMATICOUTPUT_DISABLE         0x00000000U             /*!< MOE can be set only by 
ARM GAS  /tmp/ccHKcJQI.s 			page 27


 579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_AUTOMATICOUTPUT_ENABLE          TIM_BDTR_AOE            /*!< MOE can be set by softw
 580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IT IT Defines
 586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief    IT defines which can be used with LL_TIM_ReadReg and  LL_TIM_WriteReg functions.
 587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DIER_UIE                        TIM_DIER_UIE         /*!< Update interrupt enable */
 590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DIER_CC1IE                      TIM_DIER_CC1IE       /*!< Capture/compare 1 interrup
 591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DIER_CC2IE                      TIM_DIER_CC2IE       /*!< Capture/compare 2 interrup
 592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DIER_CC3IE                      TIM_DIER_CC3IE       /*!< Capture/compare 3 interrup
 593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DIER_CC4IE                      TIM_DIER_CC4IE       /*!< Capture/compare 4 interrup
 594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DIER_COMIE                      TIM_DIER_COMIE       /*!< COM interrupt enable */
 595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DIER_TIE                        TIM_DIER_TIE         /*!< Trigger interrupt enable *
 596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DIER_BIE                        TIM_DIER_BIE         /*!< Break interrupt enable */
 597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_UPDATESOURCE Update Source
 602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_REGULAR            0x00000000U          /*!< Counter overflow/underflow
 605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_UPDATESOURCE_COUNTER            TIM_CR1_URS          /*!< Only counter overflow/unde
 606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ONEPULSEMODE One Pulse Mode
 611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_SINGLE             TIM_CR1_OPM          /*!< Counter is not stopped at 
 614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ONEPULSEMODE_REPETITIVE         0x00000000U          /*!< Counter stops counting at 
 615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERMODE Counter Mode
 620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_UP                  0x00000000U          /*!<Counter used as upcounter *
 623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_DOWN                TIM_CR1_DIR          /*!< Counter used as downcounte
 624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP           TIM_CR1_CMS_0        /*!< The counter counts up and 
 625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_DOWN         TIM_CR1_CMS_1        /*!<The counter counts up and d
 626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_COUNTERMODE_CENTER_UP_DOWN      TIM_CR1_CMS          /*!< The counter counts up and 
 627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKDIVISION Clock Division
 632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV1              0x00000000U          /*!< tDTS=tCK_INT */
 635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV2              TIM_CR1_CKD_0        /*!< tDTS=2*tCK_INT */
ARM GAS  /tmp/ccHKcJQI.s 			page 28


 636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_CLOCKDIVISION_DIV4              TIM_CR1_CKD_1        /*!< tDTS=4*tCK_INT */
 637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_COUNTERDIRECTION Counter Direction
 642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_UP             0x00000000U          /*!< Timer counter counts up */
 645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_COUNTERDIRECTION_DOWN           TIM_CR1_DIR          /*!< Timer counter counts down 
 646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CCUPDATESOURCE Capture Compare  Update Source
 651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_CCUPDATESOURCE_COMG_ONLY        0x00000000U          /*!< Capture/compare control bi
 654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_CCUPDATESOURCE_COMG_AND_TRGI    TIM_CR2_CCUS         /*!< Capture/compare control bi
 655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CCDMAREQUEST Capture Compare DMA Request
 660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_CC                 0x00000000U          /*!< CCx DMA request sent when 
 663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_CCDMAREQUEST_UPDATE             TIM_CR2_CCDS         /*!< CCx DMA requests sent when
 664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_LOCKLEVEL Lock Level
 669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_OFF                   0x00000000U          /*!< LOCK OFF - No bit is write
 672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_1                     TIM_BDTR_LOCK_0      /*!< LOCK Level 1 */
 673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_2                     TIM_BDTR_LOCK_1      /*!< LOCK Level 2 */
 674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_LOCKLEVEL_3                     TIM_BDTR_LOCK        /*!< LOCK Level 3 */
 675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CHANNEL Channel
 680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH1                     TIM_CCER_CC1E     /*!< Timer input/output channel 1 
 683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH1N                    TIM_CCER_CC1NE    /*!< Timer complementary output ch
 684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH2                     TIM_CCER_CC2E     /*!< Timer input/output channel 2 
 685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH2N                    TIM_CCER_CC2NE    /*!< Timer complementary output ch
 686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH3                     TIM_CCER_CC3E     /*!< Timer input/output channel 3 
 687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH3N                    TIM_CCER_CC3NE    /*!< Timer complementary output ch
 688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH4                     TIM_CCER_CC4E     /*!< Timer input/output channel 4 
 689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH5                     TIM_CCER_CC5E     /*!< Timer output channel 5 */
 690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_CHANNEL_CH6                     TIM_CCER_CC6E     /*!< Timer output channel 6 */
 691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
ARM GAS  /tmp/ccHKcJQI.s 			page 29


 693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #if defined(USE_FULL_LL_DRIVER)
 696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCSTATE Output Configuration State
 697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OCSTATE_DISABLE                 0x00000000U             /*!< OCx is not active */
 700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OCSTATE_ENABLE                  TIM_CCER_CC1E           /*!< OCx signal is output on
 701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #endif /* USE_FULL_LL_DRIVER */
 705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCMODE Output Configuration Mode
 707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OCMODE_FROZEN                   0x00000000U                                         
 710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OCMODE_ACTIVE                   TIM_CCMR1_OC1M_0                                    
 711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OCMODE_INACTIVE                 TIM_CCMR1_OC1M_1                                    
 712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OCMODE_TOGGLE                   (TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1M_0)               
 713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_INACTIVE          TIM_CCMR1_OC1M_2                                    
 714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OCMODE_FORCED_ACTIVE            (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_0)               
 715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM1                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1)               
 716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OCMODE_PWM2                     (TIM_CCMR1_OC1M_2 | TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1
 717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OCMODE_RETRIG_OPM1              TIM_CCMR1_OC1M_3                                    
 718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OCMODE_RETRIG_OPM2              (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M_0)               
 719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OCMODE_COMBINED_PWM1            (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M_2)               
 720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OCMODE_COMBINED_PWM2            (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M_0 | TIM_CCMR1_OC1
 721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OCMODE_ASSYMETRIC_PWM1          (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M_1 | TIM_CCMR1_OC1
 722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OCMODE_ASSYMETRIC_PWM2          (TIM_CCMR1_OC1M_3 | TIM_CCMR1_OC1M)                 
 723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCPOLARITY Output Configuration Polarity
 728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_HIGH                 0x00000000U                 /*!< OCxactive high*/
 731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OCPOLARITY_LOW                  TIM_CCER_CC1P               /*!< OCxactive low*/
 732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCIDLESTATE Output Configuration Idle State
 737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OCIDLESTATE_LOW                 0x00000000U             /*!<OCx=0 (after a dead-time
 740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OCIDLESTATE_HIGH                TIM_CR2_OIS1            /*!<OCx=1 (after a dead-time
 741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_GROUPCH5 GROUPCH5
 746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_GROUPCH5_NONE                   0x00000000U           /*!< No effect of OC5REF on OC
 749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_GROUPCH5_OC1REFC                TIM_CCR5_GC5C1        /*!< OC1REFC is the logical AN
ARM GAS  /tmp/ccHKcJQI.s 			page 30


 750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_GROUPCH5_OC2REFC                TIM_CCR5_GC5C2        /*!< OC2REFC is the logical AN
 751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_GROUPCH5_OC3REFC                TIM_CCR5_GC5C3        /*!< OC3REFC is the logical AN
 752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ACTIVEINPUT Active Input Selection
 757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_DIRECTTI            (TIM_CCMR1_CC1S_0 << 16U) /*!< ICx is mapped on TIx 
 760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_INDIRECTTI          (TIM_CCMR1_CC1S_1 << 16U) /*!< ICx is mapped on TIy 
 761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ACTIVEINPUT_TRC                 (TIM_CCMR1_CC1S << 16U)   /*!< ICx is mapped on TRC 
 762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ICPSC Input Configuration Prescaler
 767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV1                      0x00000000U                    /*!< No prescaler, ca
 770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV2                      (TIM_CCMR1_IC1PSC_0 << 16U)    /*!< Capture is done 
 771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV4                      (TIM_CCMR1_IC1PSC_1 << 16U)    /*!< Capture is done 
 772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ICPSC_DIV8                      (TIM_CCMR1_IC1PSC << 16U)      /*!< Capture is done 
 773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_FILTER Input Configuration Filter
 778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1                 0x00000000U                                         
 781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N2              (TIM_CCMR1_IC1F_0 << 16U)                           
 782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N4              (TIM_CCMR1_IC1F_1 << 16U)                           
 783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV1_N8              ((TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC1F_0) << 16U)      
 784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N6              (TIM_CCMR1_IC1F_2 << 16U)                           
 785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV2_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_0) << 16U)      
 786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N6              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1) << 16U)      
 787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV4_N8              ((TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N6              (TIM_CCMR1_IC1F_3 << 16U)                           
 789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV8_N8              ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_0) << 16U)      
 790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1) << 16U)      
 791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_1 | TIM_CCMR1_IC
 792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV16_N8             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2) << 16U)      
 793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N5             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
 794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N6             ((TIM_CCMR1_IC1F_3 | TIM_CCMR1_IC1F_2 | TIM_CCMR1_IC
 795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_IC_FILTER_FDIV32_N8             (TIM_CCMR1_IC1F << 16U)                             
 796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_IC_POLARITY Input Configuration Polarity
 801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_RISING              0x00000000U                      /*!< The circuit is
 804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_FALLING             TIM_CCER_CC1P                    /*!< The circuit is
 805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_IC_POLARITY_BOTHEDGE            (TIM_CCER_CC1P | TIM_CCER_CC1NP) /*!< The circuit is
 806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
ARM GAS  /tmp/ccHKcJQI.s 			page 31


 807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_CLOCKSOURCE Clock Source
 811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_INTERNAL            0x00000000U                                         
 814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE1           (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)  
 815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_CLOCKSOURCE_EXT_MODE2           TIM_SMCR_ECE                                        
 816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ENCODERMODE Encoder Mode
 821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI1                     TIM_SMCR_SMS_0                               
 824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X2_TI2                     TIM_SMCR_SMS_1                               
 825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ENCODERMODE_X4_TI12                   (TIM_SMCR_SMS_1 | TIM_SMCR_SMS_0)             
 826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TRGO Trigger Output
 831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TRGO_RESET                      0x00000000U                                     /*!<
 834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TRGO_ENABLE                     TIM_CR2_MMS_0                                   /*!<
 835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TRGO_UPDATE                     TIM_CR2_MMS_1                                   /*!<
 836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TRGO_CC1IF                      (TIM_CR2_MMS_1 | TIM_CR2_MMS_0)                 /*!<
 837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TRGO_OC1REF                     TIM_CR2_MMS_2                                   /*!<
 838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TRGO_OC2REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_0)                 /*!<
 839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TRGO_OC3REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1)                 /*!<
 840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TRGO_OC4REF                     (TIM_CR2_MMS_2 | TIM_CR2_MMS_1 | TIM_CR2_MMS_0) /*!<
 841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TRGO2 Trigger Output 2
 846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TRGO2_RESET                     0x00000000U                                         
 849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TRGO2_ENABLE                    TIM_CR2_MMS2_0                                      
 850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TRGO2_UPDATE                    TIM_CR2_MMS2_1                                      
 851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TRGO2_CC1F                      (TIM_CR2_MMS2_1 | TIM_CR2_MMS2_0)                   
 852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TRGO2_OC1                       TIM_CR2_MMS2_2                                      
 853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TRGO2_OC2                       (TIM_CR2_MMS2_2 | TIM_CR2_MMS2_0)                   
 854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TRGO2_OC3                       (TIM_CR2_MMS2_2 | TIM_CR2_MMS2_1)                   
 855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TRGO2_OC4                       (TIM_CR2_MMS2_2 | TIM_CR2_MMS2_1 | TIM_CR2_MMS2_0)  
 856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TRGO2_OC5                       TIM_CR2_MMS2_3                                      
 857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TRGO2_OC6                       (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_0)                   
 858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TRGO2_OC4_RISINGFALLING         (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_1)                   
 859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TRGO2_OC6_RISINGFALLING         (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_1 | TIM_CR2_MMS2_0)  
 860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TRGO2_OC4_RISING_OC6_RISING     (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_2)                   
 861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TRGO2_OC4_RISING_OC6_FALLING    (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_2 | TIM_CR2_MMS2_0)  
 862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TRGO2_OC5_RISING_OC6_RISING     (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_2 |TIM_CR2_MMS2_1)   
 863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TRGO2_OC5_RISING_OC6_FALLING    (TIM_CR2_MMS2_3 | TIM_CR2_MMS2_2 | TIM_CR2_MMS2_1 | 
ARM GAS  /tmp/ccHKcJQI.s 			page 32


 864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_SLAVEMODE Slave Mode
 869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_DISABLED              0x00000000U                         /*!< Slave mode 
 872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_RESET                 TIM_SMCR_SMS_2                      /*!< Reset Mode 
 873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_GATED                 (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_0)   /*!< Gated Mode 
 874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_TRIGGER               (TIM_SMCR_SMS_2 | TIM_SMCR_SMS_1)   /*!< Trigger Mod
 875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_SLAVEMODE_COMBINED_RESETTRIGGER TIM_SMCR_SMS_3                      /*!< Combined re
 876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TS Trigger Selection
 881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 883:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TS_ITR0                         0x00000000U                                         
 884:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TS_ITR1                         TIM_SMCR_TS_0                                       
 885:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TS_ITR2                         TIM_SMCR_TS_1                                       
 886:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TS_ITR3                         (TIM_SMCR_TS_0 | TIM_SMCR_TS_1)                     
 887:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TS_TI1F_ED                      TIM_SMCR_TS_2                                       
 888:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TS_TI1FP1                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_0)                     
 889:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TS_TI2FP2                       (TIM_SMCR_TS_2 | TIM_SMCR_TS_1)                     
 890:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TS_ETRF                         (TIM_SMCR_TS_2 | TIM_SMCR_TS_1 | TIM_SMCR_TS_0)     
 891:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 892:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 893:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 894:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 895:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_POLARITY External Trigger Polarity
 896:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 897:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 898:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_NONINVERTED        0x00000000U             /*!< ETR is non-inverted, ac
 899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETR_POLARITY_INVERTED           TIM_SMCR_ETP            /*!< ETR is inverted, active
 900:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 903:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 904:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_PRESCALER External Trigger Prescaler
 905:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 906:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 907:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV1              0x00000000U             /*!< ETR prescaler OFF */
 908:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV2              TIM_SMCR_ETPS_0         /*!< ETR frequency is divide
 909:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV4              TIM_SMCR_ETPS_1         /*!< ETR frequency is divide
 910:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETR_PRESCALER_DIV8              TIM_SMCR_ETPS           /*!< ETR frequency is divide
 911:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 914:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 915:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETR_FILTER External Trigger Filter
 916:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 917:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1                0x00000000U                                         
 919:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N2             TIM_SMCR_ETF_0                                      
 920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N4             TIM_SMCR_ETF_1                                      
ARM GAS  /tmp/ccHKcJQI.s 			page 33


 921:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV1_N8             (TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)                   
 922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N6             TIM_SMCR_ETF_2                                      
 923:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV2_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)                   
 924:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N6             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)                   
 925:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV4_N8             (TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
 926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N6             TIM_SMCR_ETF_3                                      
 927:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV8_N8             (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_0)                   
 928:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1)                   
 929:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_1 | TIM_SMCR_ETF_0)  
 930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV16_N8            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2)                   
 931:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N5            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_0)  
 932:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N6            (TIM_SMCR_ETF_3 | TIM_SMCR_ETF_2 | TIM_SMCR_ETF_1)  
 933:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETR_FILTER_FDIV32_N8            TIM_SMCR_ETF                                        
 934:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 935:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 936:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 937:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 938:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_ETRSOURCE External Trigger Source
 939:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 940:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 941:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETRSOURCE_GPIO                  0x00000000U                                         
 942:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #if defined(COMP1) && defined(COMP2)
 943:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETRSOURCE_COMP1                 TIM1_AF1_ETRSEL_0                                 /*
 944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETRSOURCE_COMP2                 TIM1_AF1_ETRSEL_1                                 /*
 945:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #endif /* COMP1 && COMP2 */
 946:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETRSOURCE_ADC1_AWD1             (TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_0) /*!< ETR inp
 947:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETRSOURCE_ADC1_AWD2             TIM1_AF1_ETRSEL_2                                 /*
 948:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETRSOURCE_ADC1_AWD3             (TIM1_AF1_ETRSEL_2 | TIM1_AF1_ETRSEL_0) /*!< ETR inp
 949:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ETRSOURCE_LSE                   (TIM1_AF1_ETRSEL_1 | TIM1_AF1_ETRSEL_0) /*!< ETR inp
 950:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 951:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 952:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 953:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 954:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_POLARITY break polarity
 955:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 956:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK_POLARITY_LOW              0x00000000U               /*!< Break input BRK is ac
 958:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK_POLARITY_HIGH             TIM_BDTR_BKP              /*!< Break input BRK is ac
 959:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 961:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 962:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 963:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_FILTER break filter
 964:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 965:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 966:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV1              0x00000000U   /*!< No filter, BRK acts asynchronousl
 967:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV1_N2           0x00010000U   /*!< fSAMPLING=fCK_INT, N=2 */
 968:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV1_N4           0x00020000U   /*!< fSAMPLING=fCK_INT, N=4 */
 969:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV1_N8           0x00030000U   /*!< fSAMPLING=fCK_INT, N=8 */
 970:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV2_N6           0x00040000U   /*!< fSAMPLING=fDTS/2, N=6 */
 971:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV2_N8           0x00050000U   /*!< fSAMPLING=fDTS/2, N=8 */
 972:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV4_N6           0x00060000U   /*!< fSAMPLING=fDTS/4, N=6 */
 973:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV4_N8           0x00070000U   /*!< fSAMPLING=fDTS/4, N=8 */
 974:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV8_N6           0x00080000U   /*!< fSAMPLING=fDTS/8, N=6 */
 975:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV8_N8           0x00090000U   /*!< fSAMPLING=fDTS/8, N=8 */
 976:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV16_N5          0x000A0000U   /*!< fSAMPLING=fDTS/16, N=5 */
 977:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV16_N6          0x000B0000U   /*!< fSAMPLING=fDTS/16, N=6 */
ARM GAS  /tmp/ccHKcJQI.s 			page 34


 978:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV16_N8          0x000C0000U   /*!< fSAMPLING=fDTS/16, N=8 */
 979:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV32_N5          0x000D0000U   /*!< fSAMPLING=fDTS/32, N=5 */
 980:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV32_N6          0x000E0000U   /*!< fSAMPLING=fDTS/32, N=6 */
 981:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK_FILTER_FDIV32_N8          0x000F0000U   /*!< fSAMPLING=fDTS/32, N=8 */
 982:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 983:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 984:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 985:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 986:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK2_POLARITY BREAK2 POLARITY
 987:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 989:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK2_POLARITY_LOW             0x00000000U             /*!< Break input BRK2 is act
 990:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK2_POLARITY_HIGH            TIM_BDTR_BK2P           /*!< Break input BRK2 is act
 991:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
 992:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
 993:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
 995:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK2_FILTER BREAK2 FILTER
 996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
 997:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
 998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV1             0x00000000U   /*!< No filter, BRK acts asynchronousl
 999:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV1_N2          0x00100000U   /*!< fSAMPLING=fCK_INT, N=2 */
1000:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV1_N4          0x00200000U   /*!< fSAMPLING=fCK_INT, N=4 */
1001:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV1_N8          0x00300000U   /*!< fSAMPLING=fCK_INT, N=8 */
1002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV2_N6          0x00400000U   /*!< fSAMPLING=fDTS/2, N=6 */
1003:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV2_N8          0x00500000U   /*!< fSAMPLING=fDTS/2, N=8 */
1004:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV4_N6          0x00600000U   /*!< fSAMPLING=fDTS/4, N=6 */
1005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV4_N8          0x00700000U   /*!< fSAMPLING=fDTS/4, N=8 */
1006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV8_N6          0x00800000U   /*!< fSAMPLING=fDTS/8, N=6 */
1007:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV8_N8          0x00900000U   /*!< fSAMPLING=fDTS/8, N=8 */
1008:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV16_N5         0x00A00000U   /*!< fSAMPLING=fDTS/16, N=5 */
1009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV16_N6         0x00B00000U   /*!< fSAMPLING=fDTS/16, N=6 */
1010:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV16_N8         0x00C00000U   /*!< fSAMPLING=fDTS/16, N=8 */
1011:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV32_N5         0x00D00000U   /*!< fSAMPLING=fDTS/32, N=5 */
1012:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV32_N6         0x00E00000U   /*!< fSAMPLING=fDTS/32, N=6 */
1013:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK2_FILTER_FDIV32_N8         0x00F00000U   /*!< fSAMPLING=fDTS/32, N=8 */
1014:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1015:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1016:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1017:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1018:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OSSI OSSI
1019:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1020:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1021:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OSSI_DISABLE                    0x00000000U             /*!< When inactive, OCx/OCxN
1022:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OSSI_ENABLE                     TIM_BDTR_OSSI           /*!< When inactive, OxC/OCxN
1023:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1024:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1025:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1026:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1027:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OSSR OSSR
1028:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1029:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1030:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OSSR_DISABLE                    0x00000000U             /*!< When inactive, OCx/OCxN
1031:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OSSR_ENABLE                     TIM_BDTR_OSSR           /*!< When inactive, OC/OCN o
1032:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1033:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1034:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
ARM GAS  /tmp/ccHKcJQI.s 			page 35


1035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1036:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_INPUT BREAK INPUT
1037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1039:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK_INPUT_BKIN                0x00000000U  /*!< TIMx_BKIN input */
1040:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK_INPUT_BKIN2               0x00000004U  /*!< TIMx_BKIN2 input */
1041:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1042:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1043:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1044:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1045:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BKIN_SOURCE BKIN SOURCE
1046:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1047:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1048:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_BKIN                TIM1_AF1_BKINE      /*!< BKIN input from AF controll
1049:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #if defined(COMP1) && defined(COMP2)
1050:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_BKCOMP1             TIM1_AF1_BKCMP1E    /*!< internal signal: COMP1 outp
1051:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_BKCOMP2             TIM1_AF1_BKCMP2E    /*!< internal signal: COMP2 outp
1052:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #endif /* COMP1 && COMP2 */
1053:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1054:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1055:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1056:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1057:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BKIN_POLARITY BKIN POLARITY
1058:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1059:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1060:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BKIN_POLARITY_LOW               TIM1_AF1_BKINP           /*!< BRK BKIN input is acti
1061:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BKIN_POLARITY_HIGH              0x00000000U              /*!< BRK BKIN input is acti
1062:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1063:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1064:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1065:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1066:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK_AFMODE BREAK AF MODE
1067:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1068:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1069:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK_AFMODE_INPUT              0x00000000U              /*!< Break input BRK in inp
1070:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK_AFMODE_BIDIRECTIONAL      TIM_BDTR_BKBID           /*!< Break input BRK in bid
1071:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1072:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1073:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1074:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1075:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_BREAK2_AFMODE BREAK2 AF MODE
1076:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1077:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1078:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK2_AFMODE_INPUT             0x00000000U             /*!< Break2 input BRK2 in in
1079:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BREAK2_AFMODE_BIDIRECTIONAL     TIM_BDTR_BK2BID         /*!< Break2 input BRK2 in bi
1080:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1081:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1082:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1083:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1084:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_BASEADDR DMA Burst Base Address
1085:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1087:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR1           0x00000000U                                         
1088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CR2           TIM_DCR_DBA_0                                       
1089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SMCR          TIM_DCR_DBA_1                                       
1090:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_DIER          (TIM_DCR_DBA_1 |  TIM_DCR_DBA_0)                    
1091:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_SR            TIM_DCR_DBA_2                                       
ARM GAS  /tmp/ccHKcJQI.s 			page 36


1092:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_EGR           (TIM_DCR_DBA_2 | TIM_DCR_DBA_0)                     
1093:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR1         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1)                     
1094:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR2         (TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
1095:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCER          TIM_DCR_DBA_3                                       
1096:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CNT           (TIM_DCR_DBA_3 | TIM_DCR_DBA_0)                     
1097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_PSC           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1)                     
1098:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_ARR           (TIM_DCR_DBA_3 | TIM_DCR_DBA_1 | TIM_DCR_DBA_0)     
1099:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_RCR           (TIM_DCR_DBA_3 | TIM_DCR_DBA_2)                     
1100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR1          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_0)     
1101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR2          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1)     
1102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR3          (TIM_DCR_DBA_3 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM
1103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR4          TIM_DCR_DBA_4                                       
1104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_BDTR          (TIM_DCR_DBA_4 | TIM_DCR_DBA_0)                     
1105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_OR1            (TIM_DCR_DBA_4 | TIM_DCR_DBA_2)                    
1106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCMR3         (TIM_DCR_DBA_4 | TIM_DCR_DBA_2 | TIM_DCR_DBA_0)     
1107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR5          (TIM_DCR_DBA_4 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1)     
1108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_CCR6          (TIM_DCR_DBA_4 | TIM_DCR_DBA_2 | TIM_DCR_DBA_1 | TIM
1109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_AF1           (TIM_DCR_DBA_4 | TIM_DCR_DBA_3)                     
1110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_AF2           (TIM_DCR_DBA_4 | TIM_DCR_DBA_3 | TIM_DCR_DBA_0)     
1111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_BASEADDR_TISEL         (TIM_DCR_DBA_4 | TIM_DCR_DBA_3 | TIM_DCR_DBA_1)     
1112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_DMABURST_LENGTH DMA Burst Length
1117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_1TRANSFER       0x00000000U                                         
1120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_2TRANSFERS      TIM_DCR_DBL_0                                       
1121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_3TRANSFERS      TIM_DCR_DBL_1                                       
1122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_4TRANSFERS      (TIM_DCR_DBL_1 |  TIM_DCR_DBL_0)                    
1123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_5TRANSFERS      TIM_DCR_DBL_2                                       
1124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_6TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_0)                     
1125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_7TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1)                     
1126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_8TRANSFERS      (TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
1127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_9TRANSFERS      TIM_DCR_DBL_3                                       
1128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_10TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_0)                     
1129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_11TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1)                     
1130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_12TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_1 | TIM_DCR_DBL_0)     
1131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_13TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2)                     
1132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_14TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_0)     
1133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_15TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1)     
1134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_16TRANSFERS     (TIM_DCR_DBL_3 | TIM_DCR_DBL_2 | TIM_DCR_DBL_1 | TIM
1135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_17TRANSFERS     TIM_DCR_DBL_4                                       
1136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_DMABURST_LENGTH_18TRANSFERS     (TIM_DCR_DBL_4 |  TIM_DCR_DBL_0)                    
1137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM1_TI1_RMP  TIM1 Timer Input Ch1 Remap
1142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM1_TI1_RMP_GPIO   0x00000000U                                       /*!< TIM1 inpu
1145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #if defined(COMP1)
1146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM1_TI1_RMP_COMP1  TIM_TISEL_TI1SEL_0                                /*!< TIM1 inpu
1147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #endif
1148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
ARM GAS  /tmp/ccHKcJQI.s 			page 37


1149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM1_TI2_RMP  TIM1 Timer Input Ch2 Remap
1153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM1_TI2_RMP_GPIO   0x00000000U                                       /*!< TIM1 inpu
1156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #if defined(COMP2)
1157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM1_TI2_RMP_COMP2  TIM_TISEL_TI2SEL_0                                /*!< TIM1 inpu
1158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #endif
1159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #if defined(TIM2)
1164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM2_TI1_RMP  TIM2 Timer Input Ch1 Remap
1165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM2_TI1_RMP_GPIO   0x00000000U                                       /*!< TIM2 inpu
1168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM2_TI1_RMP_COMP1  TIM_TISEL_TI1SEL_0                                /*!< TIM2 inpu
1169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM2_TI2_RMP  TIM2 Timer Input Ch2 Remap
1174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM2_TI2_RMP_GPIO   0x00000000U                                       /*!< TIM2 inpu
1177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM2_TI2_RMP_COMP2  TIM_TISEL_TI2SEL_0                                /*!< TIM2 inpu
1178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #endif
1182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM3_TI1_RMP  TIM3 Timer Input Ch1 Remap
1184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM3_TI1_RMP_GPIO   0x00000000U                                       /*!< TIM3 inpu
1187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #if defined(COMP1)
1188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM3_TI1_RMP_COMP1  TIM_TISEL_TI1SEL_0                                /*!< TIM3 inpu
1189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #endif
1190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM3_TI2_RMP  TIM3 Timer Input Ch2 Remap
1195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM3_TI2_RMP_GPIO   0x00000000U                                       /*!< TIM3 inpu
1198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #if defined(COMP2)
1199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM3_TI2_RMP_COMP2  TIM_TISEL_TI2SEL_0                                /*!< TIM3 inpu
1200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #endif
1201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM14_TI1_RMP  TIM14 Timer Input Ch1 Remap
ARM GAS  /tmp/ccHKcJQI.s 			page 38


1206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM14_TI1_RMP_GPIO     0x00000000U                                    /*!< TIM14 inp
1209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM14_TI1_RMP_RTC_CLK  TIM_TISEL_TI1SEL_0                             /*!< TIM14 inp
1210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM14_TI1_RMP_HSE_32   TIM_TISEL_TI1SEL_1                             /*!< TIM14_TI1
1211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM14_TI1_RMP_MCO      (TIM_TISEL_TI1SEL_0  | TIM_TISEL_TI1SEL_1)     /*!< TIM14 inp
1212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM15_TI1_RMP  TIM15 Timer Input Ch1 Remap
1217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #if defined(TIM15)
1220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM15_TI1_RMP_GPIO     0x00000000U                                    /*!< TIM15 inp
1221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #if defined(TIM2)
1222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM15_TI1_RMP_TIM2_IC1 TIM_TISEL_TI1SEL_0                             /*!< TIM15 inp
1223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #endif
1224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #if defined(TIM3)
1225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM15_TI1_RMP_TIM3_IC1 TIM_TISEL_TI1SEL_1                             /*!< TIM15 inp
1226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #endif
1227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #endif
1228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM15_TI2_RMP  TIM15 Timer Input Ch2 Remap
1233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #if defined(TIM15)
1236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM15_TI2_RMP_GPIO     0x00000000U                                    /*!< TIM15 inp
1237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #if defined(TIM2)
1238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM15_TI2_RMP_TIM2_IC2 TIM_TISEL_TI2SEL_0                             /*!< TIM15 inp
1239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #endif
1240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #if defined(TIM3)
1241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM15_TI2_RMP_TIM3_IC2 TIM_TISEL_TI1SEL_1                             /*!< TIM15 inp
1242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #endif
1243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #endif
1244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM16_TI1_RMP  TIM16 Timer Input Ch1 Remap
1249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM16_TI1_RMP_GPIO    0x00000000U                                     /*!< TIM16 inp
1252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM16_TI1_RMP_LSI     TIM_TISEL_TI1SEL_0                              /*!< TIM16 inp
1253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM16_TI1_RMP_LSE     TIM_TISEL_TI1SEL_1                              /*!< TIM16 inp
1254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM16_TI1_RMP_RTC_WK  (TIM_TISEL_TI1SEL_0 | TIM_TISEL_TI1SEL_1)       /*!< TIM16 inp
1255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_TIM17_TI1_RMP  TIM17 Timer Input Ch1 Remap
1260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM17_TI1_RMP_GPIO    0x00000000U                                     /*!< TIM17 inp
ARM GAS  /tmp/ccHKcJQI.s 			page 39


1263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM17_TI1_RMP_HSE_32  TIM_TISEL_TI1SEL_1                              /*!< TIM17 inp
1264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_TIM17_TI1_RMP_MCO    (TIM_TISEL_TI1SEL_0 | TIM_TISEL_TI1SEL_1)        /*!< TIM17 inp
1265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EC_OCREF_CLR_INT OCREF clear input selection
1270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_ETR         OCREF_CLEAR_SELECT_Msk       /*!< OCREF_CLR_INT is connect
1273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #if defined(COMP1) && defined(COMP2)
1274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_COMP1       0x00000000U                  /*!< OCREF clear input is con
1275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_OCREF_CLR_INT_COMP2       TIM1_OR1_OCREF_CLR           /*!< OCREF clear input is con
1276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #endif /* COMP1 & COMP2 */
1277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** Legacy definitions for compatibility purpose
1282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** @cond 0
1283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_BKIN_SOURCE_DFBK  LL_TIM_BKIN_SOURCE_DF1BK
1285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** @endcond
1287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /* Exported macro ------------------------------------------------------------*/
1293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Macros TIM Exported Macros
1294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EM_WRITE_READ Common Write and read registers Macros
1298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Write a value in TIM register.
1302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
1303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  __REG__ Register to be written
1304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  __VALUE__ Value to be written in the register
1305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
1306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG((__INSTANCE__)->__REG__, (__VAL
1308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Read a value in TIM register.
1311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  __INSTANCE__ TIM Instance
1312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  __REG__ Register to be read
1313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval Register value
1314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define LL_TIM_ReadReg(__INSTANCE__, __REG__) READ_REG((__INSTANCE__)->__REG__)
1316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
ARM GAS  /tmp/ccHKcJQI.s 			page 40


1320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EM_Exported_Macros Exported_Macros
1321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  HELPER macro retrieving the UIFCPY flag from the counter value.
1326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_GETFLAG_UIFCPY (@ref LL_TIM_GetCounter ());
1327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note  Relevant only if UIF flag remapping has been enabled  (UIF status bit is copied
1328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *        to TIMx_CNT register bit 31)
1329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  __CNT__ Counter value
1330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval UIF status bit
1331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define __LL_TIM_GETFLAG_UIFCPY(__CNT__)  \
1333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   (READ_BIT((__CNT__), TIM_CNT_UIFCPY) >> TIM_CNT_UIFCPY_Pos)
1334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  HELPER macro calculating DTG[0:7] in the TIMx_BDTR register to achieve the requested de
1337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_DEADTIME (80000000, @ref LL_TIM_GetClockDivision (), 120);
1338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  __CKD__ This parameter can be one of the following values:
1340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  __DT__ deadtime duration (in ns)
1344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval DTG[0:7]
1345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define __LL_TIM_CALC_DEADTIME(__TIMCLK__, __CKD__, __DT__)  \
1347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   ( (((uint64_t)((__DT__)*1000U)) < ((DT_DELAY_1+1U) * TIM_CALC_DTS((__TIMCLK__), (__CKD__))))    ?
1348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****     (((uint64_t)((__DT__)*1000U)) < ((64U + (DT_DELAY_2+1U)) * 2U * TIM_CALC_DTS((__TIMCLK__), (__C
1349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****     (((uint64_t)((__DT__)*1000U)) < ((32U + (DT_DELAY_3+1U)) * 8U * TIM_CALC_DTS((__TIMCLK__), (__C
1350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****     (((uint64_t)((__DT__)*1000U)) < ((32U + (DT_DELAY_4+1U)) * 16U * TIM_CALC_DTS((__TIMCLK__), (__
1351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****     0U)
1352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  HELPER macro calculating the prescaler value to achieve the required counter clock freq
1355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PSC (80000000, 1000000);
1356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  __CNTCLK__ counter clock frequency (in Hz)
1358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval Prescaler value  (between Min_Data=0 and Max_Data=65535)
1359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define __LL_TIM_CALC_PSC(__TIMCLK__, __CNTCLK__)   \
1361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   (((__TIMCLK__) >= (__CNTCLK__)) ? (uint32_t)(((__TIMCLK__)/(__CNTCLK__)) - 1U) : 0U)
1362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required output signal fr
1365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_ARR (1000000, @ref LL_TIM_GetPrescaler (), 10000);
1366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  __PSC__ prescaler
1368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  __FREQ__ output signal frequency (in Hz)
1369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval  Auto-reload value  (between Min_Data=0 and Max_Data=65535)
1370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define __LL_TIM_CALC_ARR(__TIMCLK__, __PSC__, __FREQ__) \
1372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   ((((__TIMCLK__)/((__PSC__) + 1U)) >= (__FREQ__)) ? (((__TIMCLK__)/((__FREQ__) * ((__PSC__) + 1U))
1373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  HELPER macro calculating the compare value required to achieve the required timer outpu
1376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_DELAY (1000000, @ref LL_TIM_GetPrescaler (), 10);
ARM GAS  /tmp/ccHKcJQI.s 			page 41


1377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  __PSC__ prescaler
1379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
1380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval Compare value  (between Min_Data=0 and Max_Data=65535)
1381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define __LL_TIM_CALC_DELAY(__TIMCLK__, __PSC__, __DELAY__)  \
1383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   ((uint32_t)(((uint64_t)(__TIMCLK__) * (uint64_t)(__DELAY__)) \
1384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****               / ((uint64_t)1000000U * (uint64_t)((__PSC__) + 1U))))
1385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  HELPER macro calculating the auto-reload value to achieve the required pulse duration (
1388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_CALC_PULSE (1000000, @ref LL_TIM_GetPrescaler (), 10, 20);
1389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  __TIMCLK__ timer input clock frequency (in Hz)
1390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  __PSC__ prescaler
1391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  __DELAY__ timer output compare active/inactive delay (in us)
1392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  __PULSE__ pulse duration (in us)
1393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval Auto-reload value  (between Min_Data=0 and Max_Data=65535)
1394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define __LL_TIM_CALC_PULSE(__TIMCLK__, __PSC__, __DELAY__, __PULSE__)  \
1396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   ((uint32_t)(__LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__PULSE__)) \
1397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****               + __LL_TIM_CALC_DELAY((__TIMCLK__), (__PSC__), (__DELAY__))))
1398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  HELPER macro retrieving the ratio of the input capture prescaler
1401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note ex: @ref __LL_TIM_GET_ICPSC_RATIO (@ref LL_TIM_IC_GetPrescaler ());
1402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  __ICPSC__ This parameter can be one of the following values:
1403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
1404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
1405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
1406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
1407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval Input capture prescaler ratio (1, 2, 4 or 8)
1408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** #define __LL_TIM_GET_ICPSC_RATIO(__ICPSC__)  \
1410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   ((uint32_t)(0x01U << (((__ICPSC__) >> 16U) >> TIM_CCMR1_IC1PSC_Pos)))
1411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /* Exported functions --------------------------------------------------------*/
1423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_Exported_Functions TIM Exported Functions
1424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Time_Base Time Base configuration
1428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Enable timer counter.
1432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_EnableCounter
1433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
ARM GAS  /tmp/ccHKcJQI.s 			page 42


1434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
1435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableCounter(TIM_TypeDef *TIMx)
1437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_CEN);
1439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Disable timer counter.
1443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_DisableCounter
1444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
1446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableCounter(TIM_TypeDef *TIMx)
1448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_CEN);
1450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Indicates whether the timer counter is enabled.
1454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR1          CEN           LL_TIM_IsEnabledCounter
1455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledCounter(TIM_TypeDef *TIMx)
1459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_CEN) == (TIM_CR1_CEN)) ? 1UL : 0UL);
1461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Enable update event generation.
1465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_EnableUpdateEvent
1466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
1468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableUpdateEvent(TIM_TypeDef *TIMx)
1470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_UDIS);
1472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Disable update event generation.
1476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_DisableUpdateEvent
1477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
1479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableUpdateEvent(TIM_TypeDef *TIMx)
1481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_UDIS);
1483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Indicates whether update event generation is enabled.
1487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR1          UDIS          LL_TIM_IsEnabledUpdateEvent
1488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval Inverted state of bit (0 or 1).
1490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
ARM GAS  /tmp/ccHKcJQI.s 			page 43


1491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledUpdateEvent(TIM_TypeDef *TIMx)
1492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_UDIS) == (uint32_t)RESET) ? 1UL : 0UL);
1494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set update event source
1498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_REGULAR: any of the following events
1499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       generate an update interrupt or DMA request if enabled:
1500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *        - Counter overflow/underflow
1501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *        - Setting the UG bit
1502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *        - Update generation through the slave mode controller
1503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Update event source set to LL_TIM_UPDATESOURCE_COUNTER: only counter
1504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       overflow/underflow generates an update interrupt or DMA request if enabled.
1505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_SetUpdateSource
1506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  UpdateSource This parameter can be one of the following values:
1508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
1509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
1510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
1511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetUpdateSource(TIM_TypeDef *TIMx, uint32_t UpdateSource)
1513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_URS, UpdateSource);
1515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get actual event update source
1519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR1          URS           LL_TIM_GetUpdateSource
1520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_REGULAR
1523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_UPDATESOURCE_COUNTER
1524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetUpdateSource(TIM_TypeDef *TIMx)
1526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_URS));
1528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set one pulse mode (one shot v.s. repetitive).
1532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_SetOnePulseMode
1533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  OnePulseMode This parameter can be one of the following values:
1535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
1536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
1537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
1538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOnePulseMode(TIM_TypeDef *TIMx, uint32_t OnePulseMode)
1540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_OPM, OnePulseMode);
1542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get actual one pulse mode.
1546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR1          OPM           LL_TIM_GetOnePulseMode
1547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
ARM GAS  /tmp/ccHKcJQI.s 			page 44


1548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_SINGLE
1550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ONEPULSEMODE_REPETITIVE
1551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetOnePulseMode(TIM_TypeDef *TIMx)
1553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_OPM));
1555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set the timer counter counting mode.
1559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
1560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
1561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       by a timer instance.
1562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Switching from Center Aligned counter mode to Edge counter mode (or reverse)
1563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       requires a timer reset to avoid unexpected direction
1564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       due to DIR bit readonly in center aligned mode.
1565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_SetCounterMode\n
1566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_SetCounterMode
1567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  CounterMode This parameter can be one of the following values:
1569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
1570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
1571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
1572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
1573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
1574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
1575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounterMode(TIM_TypeDef *TIMx, uint32_t CounterMode)
1577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, (TIM_CR1_DIR | TIM_CR1_CMS), CounterMode);
  65              		.loc 3 1578 3 view .LVU7
  66 000a 2A4C     		ldr	r4, .L6+4
  67              	.LBE67:
  68              	.LBE66:
  69              	.LBB71:
  70              	.LBB63:
  71              		.loc 2 791 3 view .LVU8
  72 000c 0143     		orrs	r1, r0
  73 000e 1164     		str	r1, [r2, #64]
 792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APBENR2, Periphs);
  74              		.loc 2 793 3 is_stmt 1 view .LVU9
  75              		.loc 2 793 12 is_stmt 0 view .LVU10
  76 0010 136C     		ldr	r3, [r2, #64]
  77              	.LBE63:
  78              	.LBE71:
  79              	.LBB72:
  80              	.LBB68:
  81              		.loc 3 1578 3 view .LVU11
  82 0012 7022     		movs	r2, #112
  83              	.LBE68:
  84              	.LBE72:
  85              	.LBB73:
  86              	.LBB64:
  87              		.loc 2 793 12 view .LVU12
  88 0014 0340     		ands	r3, r0
ARM GAS  /tmp/ccHKcJQI.s 			page 45


  89              		.loc 2 793 10 view .LVU13
  90 0016 0193     		str	r3, [sp, #4]
 794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   (void)tmpreg;
  91              		.loc 2 794 3 is_stmt 1 view .LVU14
  92 0018 019B     		ldr	r3, [sp, #4]
  93              	.LVL1:
  94              		.loc 2 794 3 is_stmt 0 view .LVU15
  95              	.LBE64:
  96              	.LBE73:
  50:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   /***************************/
  51:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   /* Time base configuration */
  52:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   /***************************/
  53:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   /* Counter mode: select up-counting mode */
  54:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   LL_TIM_SetCounterMode(TIMX, LL_TIM_COUNTERMODE_UP);
  97              		.loc 1 54 3 is_stmt 1 view .LVU16
  98              	.LBB74:
  99              	.LBI66:
1576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 100              		.loc 3 1576 22 view .LVU17
 101              	.LBB69:
 102              		.loc 3 1578 3 view .LVU18
 103 001a 2368     		ldr	r3, [r4]
 104              	.LBE69:
 105              	.LBE74:
  55:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** 
  56:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   /* Set the pre-scaler value to have TIMx counter clock equal to 1 MHz */
  57:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   LL_TIM_SetPrescaler(TIMX, __LL_TIM_CALC_PSC(SystemCoreClock, 1000000u));
 106              		.loc 1 57 3 is_stmt 0 view .LVU19
 107 001c 0020     		movs	r0, #0
 108              	.LBB75:
 109              	.LBB70:
 110              		.loc 3 1578 3 view .LVU20
 111 001e 9343     		bics	r3, r2
 112 0020 2360     		str	r3, [r4]
 113              	.LVL2:
 114              		.loc 3 1578 3 view .LVU21
 115              	.LBE70:
 116              	.LBE75:
 117              		.loc 1 57 3 is_stmt 1 view .LVU22
 118              		.loc 1 57 29 is_stmt 0 view .LVU23
 119 0022 254B     		ldr	r3, .L6+8
 120 0024 1D68     		ldr	r5, [r3]
 121              		.loc 1 57 3 view .LVU24
 122 0026 254B     		ldr	r3, .L6+12
 123 0028 9D42     		cmp	r5, r3
 124 002a 04D9     		bls	.L2
 125              		.loc 1 57 29 discriminator 1 view .LVU25
 126 002c 2800     		movs	r0, r5
 127 002e 2449     		ldr	r1, .L6+16
 128 0030 FFF7FEFF 		bl	__aeabi_uidiv
 129              	.LVL3:
 130              		.loc 1 57 3 discriminator 1 view .LVU26
 131 0034 0138     		subs	r0, r0, #1
 132              	.L2:
 133              	.LVL4:
 134              	.LBB76:
 135              	.LBI76:
ARM GAS  /tmp/ccHKcJQI.s 			page 46


1579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get actual counter mode.
1583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx) can be used to
1584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       check whether or not the counter mode selection feature is supported
1585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       by a timer instance.
1586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetCounterMode\n
1587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CR1          CMS           LL_TIM_GetCounterMode
1588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_UP
1591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_DOWN
1592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP
1593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_DOWN
1594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERMODE_CENTER_UP_DOWN
1595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounterMode(TIM_TypeDef *TIMx)
1597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR | TIM_CR1_CMS));
1599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Enable auto-reload (ARR) preload.
1603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_EnableARRPreload
1604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
1606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableARRPreload(TIM_TypeDef *TIMx)
1608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_ARPE);
1610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Disable auto-reload (ARR) preload.
1614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_DisableARRPreload
1615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
1617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableARRPreload(TIM_TypeDef *TIMx)
1619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_ARPE);
1621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Indicates whether auto-reload (ARR) preload is enabled.
1625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR1          ARPE          LL_TIM_IsEnabledARRPreload
1626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledARRPreload(TIM_TypeDef *TIMx)
1630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR1, TIM_CR1_ARPE) == (TIM_CR1_ARPE)) ? 1UL : 0UL);
1632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set the division ratio between the timer clock  and the sampling clock used by the dead
ARM GAS  /tmp/ccHKcJQI.s 			page 47


1636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
1637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
1638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       instance.
1639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_SetClockDivision
1640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  ClockDivision This parameter can be one of the following values:
1642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
1646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetClockDivision(TIM_TypeDef *TIMx, uint32_t ClockDivision)
1648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->CR1, TIM_CR1_CKD, ClockDivision);
1650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get the actual division ratio between the timer clock  and the sampling clock used by t
1654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx) can be used to check
1655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not the clock division feature is supported by the timer
1656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       instance.
1657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR1          CKD           LL_TIM_GetClockDivision
1658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV1
1661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV2
1662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKDIVISION_DIV4
1663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetClockDivision(TIM_TypeDef *TIMx)
1665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_CKD));
1667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set the counter value.
1671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_SetCounter
1674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Counter Counter value (between Min_Data=0 and Max_Data=0xFFFF or 0xFFFFFFFF)
1676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
1677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCounter(TIM_TypeDef *TIMx, uint32_t Counter)
1679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   WRITE_REG(TIMx->CNT, Counter);
1681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get the counter value.
1685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CNT          CNT           LL_TIM_GetCounter
1688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval Counter value (between Min_Data=0 and Max_Data=0xFFFF or 0xFFFFFFFF)
1690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetCounter(TIM_TypeDef *TIMx)
1692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
ARM GAS  /tmp/ccHKcJQI.s 			page 48


1693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CNT));
1694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get the current direction of the counter
1698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR1          DIR           LL_TIM_GetDirection
1699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_UP
1702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_COUNTERDIRECTION_DOWN
1703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetDirection(TIM_TypeDef *TIMx)
1705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR1, TIM_CR1_DIR));
1707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set the prescaler value.
1711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note The counter clock frequency CK_CNT is equal to fCK_PSC / (PSC[15:0] + 1).
1712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note The prescaler can be changed on the fly as this control register is buffered. The new
1713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       prescaler ratio is taken into account at the next update event.
1714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_PSC can be used to calculate the Prescaler parameter
1715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_SetPrescaler
1716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Prescaler between Min_Data=0 and Max_Data=65535
1718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
1719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Prescaler)
 136              		.loc 3 1720 22 is_stmt 1 discriminator 4 view .LVU27
 137              	.LBB77:
1721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   WRITE_REG(TIMx->PSC, Prescaler);
 138              		.loc 3 1722 3 discriminator 4 view .LVU28
 139 0036 A062     		str	r0, [r4, #40]
 140              	.LVL5:
 141              		.loc 3 1722 3 is_stmt 0 discriminator 4 view .LVU29
 142              	.LBE77:
 143              	.LBE76:
  58:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** 
  59:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   /* Set the auto-reload value to have a counter frequency of 100Hz */
  60:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   LL_TIM_SetAutoReload(TIMX, __LL_TIM_CALC_ARR(SystemCoreClock, LL_TIM_GetPrescaler(TIMX), 100u));
 144              		.loc 1 60 3 is_stmt 1 discriminator 4 view .LVU30
 145              	.LBB78:
 146              	.LBI78:
1723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get the prescaler value.
1727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll PSC          PSC           LL_TIM_GetPrescaler
1728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval  Prescaler value between Min_Data=0 and Max_Data=65535
1730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetPrescaler(TIM_TypeDef *TIMx)
 147              		.loc 3 1731 26 discriminator 4 view .LVU31
 148              	.LBB79:
1732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->PSC));
ARM GAS  /tmp/ccHKcJQI.s 			page 49


 149              		.loc 3 1733 3 discriminator 4 view .LVU32
 150              		.loc 3 1733 10 is_stmt 0 discriminator 4 view .LVU33
 151 0038 A16A     		ldr	r1, [r4, #40]
 152              	.LVL6:
 153              		.loc 3 1733 10 discriminator 4 view .LVU34
 154              	.LBE79:
 155              	.LBE78:
 156              		.loc 1 60 30 discriminator 4 view .LVU35
 157 003a 2800     		movs	r0, r5
 158 003c 0131     		adds	r1, r1, #1
 159 003e FFF7FEFF 		bl	__aeabi_uidiv
 160              	.LVL7:
 161              		.loc 1 60 3 discriminator 4 view .LVU36
 162 0042 0023     		movs	r3, #0
 163 0044 6328     		cmp	r0, #99
 164 0046 07D9     		bls	.L3
 165              	.LVL8:
 166              	.LBB80:
 167              	.LBI80:
1731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 168              		.loc 3 1731 26 is_stmt 1 discriminator 1 view .LVU37
 169              	.LBB81:
 170              		.loc 3 1733 3 discriminator 1 view .LVU38
 171              	.LBE81:
 172              	.LBE80:
 173              		.loc 1 60 30 is_stmt 0 discriminator 1 view .LVU39
 174 0048 6421     		movs	r1, #100
 175              	.LBB83:
 176              	.LBB82:
 177              		.loc 3 1733 10 discriminator 1 view .LVU40
 178 004a A36A     		ldr	r3, [r4, #40]
 179              	.LVL9:
 180              		.loc 3 1733 10 discriminator 1 view .LVU41
 181              	.LBE82:
 182              	.LBE83:
 183              		.loc 1 60 30 discriminator 1 view .LVU42
 184 004c 2800     		movs	r0, r5
 185 004e 0133     		adds	r3, r3, #1
 186 0050 5943     		muls	r1, r3
 187 0052 FFF7FEFF 		bl	__aeabi_uidiv
 188              	.LVL10:
 189              		.loc 1 60 3 discriminator 1 view .LVU43
 190 0056 431E     		subs	r3, r0, #1
 191              	.L3:
 192              	.LVL11:
 193              	.LBB84:
 194              	.LBI84:
1734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set the auto-reload value.
1738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note The counter is blocked while the auto-reload value is null.
1739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_ARR can be used to calculate the AutoReload parameter
1742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_SetAutoReload
1743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
ARM GAS  /tmp/ccHKcJQI.s 			page 50


1744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  AutoReload between Min_Data=0 and Max_Data=65535
1745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
1746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetAutoReload(TIM_TypeDef *TIMx, uint32_t AutoReload)
 195              		.loc 3 1747 22 is_stmt 1 discriminator 4 view .LVU44
 196              	.LBB85:
1748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   WRITE_REG(TIMx->ARR, AutoReload);
 197              		.loc 3 1749 3 discriminator 4 view .LVU45
 198              	.LBE85:
 199              	.LBE84:
 200              	.LBB87:
 201              	.LBB88:
1750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get the auto-reload value.
1754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll ARR          ARR           LL_TIM_GetAutoReload
1755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
1756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
1757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval Auto-reload value
1759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetAutoReload(TIM_TypeDef *TIMx)
1761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->ARR));
1763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set the repetition counter value.
1767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note For advanced timer instances RepetitionCounter can be up to 65535.
1768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx) can be used to check
1769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance supports a repetition counter.
1770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll RCR          REP           LL_TIM_SetRepetitionCounter
1771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  RepetitionCounter between Min_Data=0 and Max_Data=255
1773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
1774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetRepetitionCounter(TIM_TypeDef *TIMx, uint32_t RepetitionCounter)
1776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   WRITE_REG(TIMx->RCR, RepetitionCounter);
1778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get the repetition counter value.
1782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx) can be used to check
1783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance supports a repetition counter.
1784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll RCR          REP           LL_TIM_GetRepetitionCounter
1785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval Repetition counter value
1787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_GetRepetitionCounter(TIM_TypeDef *TIMx)
1789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->RCR));
1791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
ARM GAS  /tmp/ccHKcJQI.s 			page 51


1794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Force a continuous copy of the update interrupt flag (UIF) into the timer counter regis
1795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note This allows both the counter value and a potential roll-over condition signalled by the U
1796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR1          UIFREMAP      LL_TIM_EnableUIFRemap
1797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
1799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableUIFRemap(TIM_TypeDef *TIMx)
1801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   SET_BIT(TIMx->CR1, TIM_CR1_UIFREMAP);
1803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Disable update interrupt flag (UIF) remapping.
1807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR1          UIFREMAP      LL_TIM_DisableUIFRemap
1808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
1810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableUIFRemap(TIM_TypeDef *TIMx)
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR1, TIM_CR1_UIFREMAP);
1814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
1818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Capture_Compare Capture Compare configuration
1821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
1822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Enable  the capture/compare control bits (CCxE, CCxNE and OCxM) preload.
1825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note CCxE, CCxNE and OCxM bits are preloaded, after having been written,
1826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       they are updated only when a commutation event (COM) occurs.
1827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Only on channels that have a complementary output.
1828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
1829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
1830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR2          CCPC          LL_TIM_CC_EnablePreload
1831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
1833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_EnablePreload(TIM_TypeDef *TIMx)
1835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   SET_BIT(TIMx->CR2, TIM_CR2_CCPC);
1837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Disable  the capture/compare control bits (CCxE, CCxNE and OCxM) preload.
1841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
1842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
1843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR2          CCPC          LL_TIM_CC_DisablePreload
1844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
1846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_DisablePreload(TIM_TypeDef *TIMx)
1848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR2, TIM_CR2_CCPC);
1850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
ARM GAS  /tmp/ccHKcJQI.s 			page 52


1851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set the updated source of the capture/compare control bits (CCxE, CCxNE and OCxM).
1854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_COMMUTATION_EVENT_INSTANCE(TIMx) can be used to check
1855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance is able to generate a commutation event.
1856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR2          CCUS          LL_TIM_CC_SetUpdate
1857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  CCUpdateSource This parameter can be one of the following values:
1859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCUPDATESOURCE_COMG_ONLY
1860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCUPDATESOURCE_COMG_AND_TRGI
1861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
1862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetUpdate(TIM_TypeDef *TIMx, uint32_t CCUpdateSource)
1864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_CCUS, CCUpdateSource);
1866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set the trigger of the capture/compare DMA request.
1870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_SetDMAReqTrigger
1871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  DMAReqTrigger This parameter can be one of the following values:
1873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
1874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
1875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
1876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetDMAReqTrigger(TIM_TypeDef *TIMx, uint32_t DMAReqTrigger)
1878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_CCDS, DMAReqTrigger);
1880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1883:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get actual trigger of the capture/compare DMA request.
1884:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR2          CCDS          LL_TIM_CC_GetDMAReqTrigger
1885:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1886:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
1887:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_CC
1888:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CCDMAREQUEST_UPDATE
1889:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1890:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_GetDMAReqTrigger(TIM_TypeDef *TIMx)
1891:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1892:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CR2, TIM_CR2_CCDS));
1893:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1894:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1895:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1896:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set the lock level to freeze the
1897:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         configuration of several capture/compare parameters.
1898:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
1899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       the lock mechanism is supported by a timer instance.
1900:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll BDTR         LOCK          LL_TIM_CC_SetLockLevel
1901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  LockLevel This parameter can be one of the following values:
1903:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_OFF
1904:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_1
1905:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_2
1906:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_LOCKLEVEL_3
1907:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
ARM GAS  /tmp/ccHKcJQI.s 			page 53


1908:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1909:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_SetLockLevel(TIM_TypeDef *TIMx, uint32_t LockLevel)
1910:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1911:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_LOCK, LockLevel);
1912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1914:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1915:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Enable capture/compare channels.
1916:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_EnableChannel\n
1917:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_EnableChannel\n
1918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_EnableChannel\n
1919:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_EnableChannel\n
1920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_EnableChannel\n
1921:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_EnableChannel\n
1922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_EnableChannel\n
1923:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC5E          LL_TIM_CC_EnableChannel\n
1924:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC6E          LL_TIM_CC_EnableChannel
1925:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1927:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1928:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1929:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1931:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1932:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1933:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1934:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
1935:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
1936:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
1937:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1938:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_EnableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1939:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1940:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   SET_BIT(TIMx->CCER, Channels);
1941:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1942:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1943:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Disable capture/compare channels.
1945:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_DisableChannel\n
1946:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_DisableChannel\n
1947:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_DisableChannel\n
1948:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_DisableChannel\n
1949:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_DisableChannel\n
1950:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_DisableChannel\n
1951:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_DisableChannel\n
1952:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC5E          LL_TIM_CC_DisableChannel\n
1953:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC6E          LL_TIM_CC_DisableChannel
1954:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1955:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1956:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1958:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1959:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1961:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1962:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1963:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
1964:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
ARM GAS  /tmp/ccHKcJQI.s 			page 54


1965:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
1966:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1967:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_CC_DisableChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1968:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1969:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   CLEAR_BIT(TIMx->CCER, Channels);
1970:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
1971:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
1972:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
1973:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Indicate whether channel(s) is(are) enabled.
1974:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCER         CC1E          LL_TIM_CC_IsEnabledChannel\n
1975:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC1NE         LL_TIM_CC_IsEnabledChannel\n
1976:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC2E          LL_TIM_CC_IsEnabledChannel\n
1977:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC2NE         LL_TIM_CC_IsEnabledChannel\n
1978:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC3E          LL_TIM_CC_IsEnabledChannel\n
1979:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC3NE         LL_TIM_CC_IsEnabledChannel\n
1980:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC4E          LL_TIM_CC_IsEnabledChannel\n
1981:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC5E          LL_TIM_CC_IsEnabledChannel\n
1982:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC6E          LL_TIM_CC_IsEnabledChannel
1983:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
1984:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channels This parameter can be a combination of the following values:
1985:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
1986:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
1987:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
1988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
1989:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
1990:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
1991:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
1992:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
1993:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
1994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval State of bit (1 or 0).
1995:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
1996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_CC_IsEnabledChannel(TIM_TypeDef *TIMx, uint32_t Channels)
1997:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
1998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return ((READ_BIT(TIMx->CCER, Channels) == (Channels)) ? 1UL : 0UL);
1999:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2000:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2001:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
2003:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2004:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Output_Channel Output channel configuration
2006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
2007:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2008:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Configure an output channel.
2010:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_OC_ConfigOutput\n
2011:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_OC_ConfigOutput\n
2012:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_OC_ConfigOutput\n
2013:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_OC_ConfigOutput\n
2014:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR3        CC5S          LL_TIM_OC_ConfigOutput\n
2015:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR3        CC6S          LL_TIM_OC_ConfigOutput\n
2016:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC1P          LL_TIM_OC_ConfigOutput\n
2017:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_ConfigOutput\n
2018:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_ConfigOutput\n
2019:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_ConfigOutput\n
2020:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC5P          LL_TIM_OC_ConfigOutput\n
2021:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC6P          LL_TIM_OC_ConfigOutput\n
ARM GAS  /tmp/ccHKcJQI.s 			page 55


2022:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CR2          OIS1          LL_TIM_OC_ConfigOutput\n
2023:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CR2          OIS2          LL_TIM_OC_ConfigOutput\n
2024:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CR2          OIS3          LL_TIM_OC_ConfigOutput\n
2025:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CR2          OIS4          LL_TIM_OC_ConfigOutput\n
2026:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CR2          OIS5          LL_TIM_OC_ConfigOutput\n
2027:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CR2          OIS6          LL_TIM_OC_ConfigOutput
2028:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2029:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2030:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2031:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2032:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2033:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2034:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2036:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
2037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH or @ref LL_TIM_OCPOLARITY_LOW
2038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW or @ref LL_TIM_OCIDLESTATE_HIGH
2039:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
2040:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2041:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_ConfigOutput(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Configura
2042:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2043:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2044:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2045:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_CC1S << SHIFT_TAB_OCxx[iChannel]));
2046:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),
2047:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****              (Configuration & TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]);
2048:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel]),
2049:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****              (Configuration & TIM_CR2_OIS1) << SHIFT_TAB_OISx[iChannel]);
2050:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2051:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2052:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2053:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Define the behavior of the output reference signal OCxREF from which
2054:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         OCx and OCxN (when relevant) are derived.
2055:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_SetMode\n
2056:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_SetMode\n
2057:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_SetMode\n
2058:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_SetMode\n
2059:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR3        OC5M          LL_TIM_OC_SetMode\n
2060:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR3        OC6M          LL_TIM_OC_SetMode
2061:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2062:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2063:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2064:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2065:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2066:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2067:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2068:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2069:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Mode This parameter can be one of the following values:
2070:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
2071:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
2072:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
2073:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
2074:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
2075:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
2076:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
2077:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
2078:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_RETRIG_OPM1
ARM GAS  /tmp/ccHKcJQI.s 			page 56


2079:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_RETRIG_OPM2
2080:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_COMBINED_PWM1
2081:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_COMBINED_PWM2
2082:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ASSYMETRIC_PWM1
2083:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ASSYMETRIC_PWM2
2084:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
2085:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetMode(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Mode)
2087:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2090:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel]),  Mode << SHIF
 202              		.loc 3 2090 3 is_stmt 0 discriminator 4 view .LVU46
 203 0058 3021     		movs	r1, #48
 204              	.LBE88:
 205              	.LBE87:
 206              	.LBB91:
 207              	.LBB92:
 208 005a C020     		movs	r0, #192
 209              	.LBE92:
 210              	.LBE91:
 211              	.LBB95:
 212              	.LBB86:
1749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 213              		.loc 3 1749 3 discriminator 4 view .LVU47
 214 005c E362     		str	r3, [r4, #44]
 215              	.LVL12:
1749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 216              		.loc 3 1749 3 discriminator 4 view .LVU48
 217              	.LBE86:
 218              	.LBE95:
  61:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** 
  62:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   /*********************************/
  63:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   /* Output waveform configuration */
  64:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   /*********************************/
  65:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   /* Set output compare mode: TOGGLE */
  66:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   LL_TIM_OC_SetMode(TIMX, TIMX_CHANNEL_CH1, LL_TIM_OCMODE_TOGGLE);
 219              		.loc 1 66 3 is_stmt 1 discriminator 4 view .LVU49
 220              	.LBB96:
 221              	.LBI87:
2086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 222              		.loc 3 2086 22 discriminator 4 view .LVU50
 223              	.LBB89:
2088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
 224              		.loc 3 2088 3 discriminator 4 view .LVU51
2089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel]),  Mode << SHIF
 225              		.loc 3 2089 3 discriminator 4 view .LVU52
 226              		.loc 3 2090 3 discriminator 4 view .LVU53
 227 005e A369     		ldr	r3, [r4, #24]
 228 0060 184A     		ldr	r2, .L6+20
 229              	.LBE89:
 230              	.LBE96:
 231              	.LBB97:
 232              	.LBB93:
 233 0062 194D     		ldr	r5, .L6+24
 234              	.LBE93:
 235              	.LBE97:
ARM GAS  /tmp/ccHKcJQI.s 			page 57


 236              	.LBB98:
 237              	.LBB90:
 238 0064 1340     		ands	r3, r2
 239 0066 0B43     		orrs	r3, r1
 240 0068 A361     		str	r3, [r4, #24]
 241              	.LVL13:
 242              		.loc 3 2090 3 is_stmt 0 discriminator 4 view .LVU54
 243              	.LBE90:
 244              	.LBE98:
  67:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   LL_TIM_OC_SetMode(TIMX, TIMX_CHANNEL_CH2, LL_TIM_OCMODE_TOGGLE);
 245              		.loc 1 67 3 is_stmt 1 discriminator 4 view .LVU55
 246              	.LBB99:
 247              	.LBI91:
2086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 248              		.loc 3 2086 22 discriminator 4 view .LVU56
 249              	.LBB94:
2088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
 250              		.loc 3 2088 3 discriminator 4 view .LVU57
2089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel]),  Mode << SHIF
 251              		.loc 3 2089 3 discriminator 4 view .LVU58
 252              		.loc 3 2090 3 discriminator 4 view .LVU59
 253 006a A369     		ldr	r3, [r4, #24]
 254 006c 8001     		lsls	r0, r0, #6
 255 006e 2B40     		ands	r3, r5
 256 0070 0343     		orrs	r3, r0
 257 0072 A361     		str	r3, [r4, #24]
 258              	.LVL14:
 259              		.loc 3 2090 3 is_stmt 0 discriminator 4 view .LVU60
 260              	.LBE94:
 261              	.LBE99:
  68:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   LL_TIM_OC_SetMode(TIMX, TIMX_CHANNEL_CH3, LL_TIM_OCMODE_TOGGLE);
 262              		.loc 1 68 3 is_stmt 1 discriminator 4 view .LVU61
 263              	.LBB100:
 264              	.LBI100:
2086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 265              		.loc 3 2086 22 discriminator 4 view .LVU62
 266              	.LBB101:
2088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
 267              		.loc 3 2088 3 discriminator 4 view .LVU63
2089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel]),  Mode << SHIF
 268              		.loc 3 2089 3 discriminator 4 view .LVU64
2089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel]),  Mode << SHIF
 269              		.loc 3 2089 52 is_stmt 0 discriminator 4 view .LVU65
 270 0074 154B     		ldr	r3, .L6+28
 271              	.LVL15:
 272              		.loc 3 2090 3 is_stmt 1 discriminator 4 view .LVU66
 273              	.LBE101:
 274              	.LBE100:
  69:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   LL_TIM_OC_SetMode(TIMX, TIMX_CHANNEL_CH4, LL_TIM_OCMODE_TOGGLE);
  70:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** 
  71:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   /* Set output channel polarity: OC is active high */
  72:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   LL_TIM_OC_SetPolarity(TIMX, TIMX_CHANNEL_CH1, LL_TIM_OCPOLARITY_HIGH);
  73:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   LL_TIM_OC_SetPolarity(TIMX, TIMX_CHANNEL_CH2, LL_TIM_OCPOLARITY_HIGH);
  74:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   LL_TIM_OC_SetPolarity(TIMX, TIMX_CHANNEL_CH3, LL_TIM_OCPOLARITY_HIGH);
  75:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   LL_TIM_OC_SetPolarity(TIMX, TIMX_CHANNEL_CH4, LL_TIM_OCPOLARITY_HIGH);
  76:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** 
  77:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   /* Enable counter */
ARM GAS  /tmp/ccHKcJQI.s 			page 58


  78:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   LL_TIM_EnableCounter(TIMX);
  79:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** }
 275              		.loc 1 79 1 is_stmt 0 discriminator 4 view .LVU67
 276              		@ sp needed
 277              	.LBB103:
 278              	.LBB102:
 279              		.loc 3 2090 3 discriminator 4 view .LVU68
 280 0076 5E68     		ldr	r6, [r3, #4]
 281 0078 3240     		ands	r2, r6
 282 007a 1143     		orrs	r1, r2
 283 007c 5960     		str	r1, [r3, #4]
 284              	.LVL16:
 285              		.loc 3 2090 3 discriminator 4 view .LVU69
 286              	.LBE102:
 287              	.LBE103:
  69:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   LL_TIM_OC_SetMode(TIMX, TIMX_CHANNEL_CH4, LL_TIM_OCMODE_TOGGLE);
 288              		.loc 1 69 3 is_stmt 1 discriminator 4 view .LVU70
 289              	.LBB104:
 290              	.LBI104:
2086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 291              		.loc 3 2086 22 discriminator 4 view .LVU71
 292              	.LBB105:
2088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
 293              		.loc 3 2088 3 discriminator 4 view .LVU72
2089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel]),  Mode << SHIF
 294              		.loc 3 2089 3 discriminator 4 view .LVU73
 295              		.loc 3 2090 3 discriminator 4 view .LVU74
 296 007e 5A68     		ldr	r2, [r3, #4]
 297 0080 1540     		ands	r5, r2
 298              	.LBE105:
 299              	.LBE104:
 300              	.LBB107:
 301              	.LBB108:
2091:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2092:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2093:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2094:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get the output compare mode of an output channel.
2095:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCMR1        OC1M          LL_TIM_OC_GetMode\n
2096:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR1        OC2M          LL_TIM_OC_GetMode\n
2097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        OC3M          LL_TIM_OC_GetMode\n
2098:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        OC4M          LL_TIM_OC_GetMode\n
2099:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR3        OC5M          LL_TIM_OC_GetMode\n
2100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR3        OC6M          LL_TIM_OC_GetMode
2101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FROZEN
2111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ACTIVE
2112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_INACTIVE
2113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_TOGGLE
2114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_INACTIVE
ARM GAS  /tmp/ccHKcJQI.s 			page 59


2115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_FORCED_ACTIVE
2116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM1
2117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_PWM2
2118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_RETRIG_OPM1
2119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_RETRIG_OPM2
2120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_COMBINED_PWM1
2121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_COMBINED_PWM2
2122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ASSYMETRIC_PWM1
2123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCMODE_ASSYMETRIC_PWM2
2124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetMode(TIM_TypeDef *TIMx, uint32_t Channel)
2126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
2129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return (READ_BIT(*pReg, ((TIM_CCMR1_OC1M  | TIM_CCMR1_CC1S) << SHIFT_TAB_OCxx[iChannel])) >> SHIF
2130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set the polarity of an output channel.
2134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_SetPolarity\n
2135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_OC_SetPolarity\n
2136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_SetPolarity\n
2137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_OC_SetPolarity\n
2138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_SetPolarity\n
2139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_OC_SetPolarity\n
2140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_SetPolarity\n
2141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC5P          LL_TIM_OC_SetPolarity\n
2142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC6P          LL_TIM_OC_SetPolarity
2143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Polarity This parameter can be one of the following values:
2155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
2156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
2157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
2158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetPolarity(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Polarity)
2160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),  Polarity << SHIFT_TAB_CCxP[i
 302              		.loc 3 2162 3 is_stmt 0 discriminator 4 view .LVU75
 303 0082 0222     		movs	r2, #2
 304              	.LBE108:
 305              	.LBE107:
 306              	.LBB110:
 307              	.LBB106:
2090:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 308              		.loc 3 2090 3 discriminator 4 view .LVU76
 309 0084 2843     		orrs	r0, r5
ARM GAS  /tmp/ccHKcJQI.s 			page 60


 310 0086 5860     		str	r0, [r3, #4]
 311              	.LVL17:
2090:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 312              		.loc 3 2090 3 discriminator 4 view .LVU77
 313              	.LBE106:
 314              	.LBE110:
  72:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   LL_TIM_OC_SetPolarity(TIMX, TIMX_CHANNEL_CH2, LL_TIM_OCPOLARITY_HIGH);
 315              		.loc 1 72 3 is_stmt 1 discriminator 4 view .LVU78
 316              	.LBB111:
 317              	.LBI107:
2159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 318              		.loc 3 2159 22 discriminator 4 view .LVU79
 319              	.LBB109:
2161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),  Polarity << SHIFT_TAB_CCxP[i
 320              		.loc 3 2161 3 discriminator 4 view .LVU80
 321              		.loc 3 2162 3 discriminator 4 view .LVU81
 322 0088 236A     		ldr	r3, [r4, #32]
 323 008a 9343     		bics	r3, r2
 324 008c 2362     		str	r3, [r4, #32]
 325              	.LVL18:
 326              		.loc 3 2162 3 is_stmt 0 discriminator 4 view .LVU82
 327              	.LBE109:
 328              	.LBE111:
  73:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   LL_TIM_OC_SetPolarity(TIMX, TIMX_CHANNEL_CH3, LL_TIM_OCPOLARITY_HIGH);
 329              		.loc 1 73 3 is_stmt 1 discriminator 4 view .LVU83
 330              	.LBB112:
 331              	.LBI112:
2159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 332              		.loc 3 2159 22 discriminator 4 view .LVU84
 333              	.LBB113:
2161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),  Polarity << SHIFT_TAB_CCxP[i
 334              		.loc 3 2161 3 discriminator 4 view .LVU85
 335              		.loc 3 2162 3 discriminator 4 view .LVU86
 336 008e 236A     		ldr	r3, [r4, #32]
 337 0090 1E32     		adds	r2, r2, #30
 338 0092 9343     		bics	r3, r2
 339 0094 2362     		str	r3, [r4, #32]
 340              	.LVL19:
 341              		.loc 3 2162 3 is_stmt 0 discriminator 4 view .LVU87
 342              	.LBE113:
 343              	.LBE112:
  74:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   LL_TIM_OC_SetPolarity(TIMX, TIMX_CHANNEL_CH4, LL_TIM_OCPOLARITY_HIGH);
 344              		.loc 1 74 3 is_stmt 1 discriminator 4 view .LVU88
 345              	.LBB114:
 346              	.LBI114:
2159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 347              		.loc 3 2159 22 discriminator 4 view .LVU89
 348              	.LBB115:
2161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),  Polarity << SHIFT_TAB_CCxP[i
 349              		.loc 3 2161 3 discriminator 4 view .LVU90
 350              		.loc 3 2162 3 discriminator 4 view .LVU91
 351 0096 236A     		ldr	r3, [r4, #32]
 352 0098 0D4A     		ldr	r2, .L6+32
 353 009a 1340     		ands	r3, r2
 354 009c 2362     		str	r3, [r4, #32]
 355              	.LVL20:
 356              		.loc 3 2162 3 is_stmt 0 discriminator 4 view .LVU92
ARM GAS  /tmp/ccHKcJQI.s 			page 61


 357              	.LBE115:
 358              	.LBE114:
  75:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** 
 359              		.loc 1 75 3 is_stmt 1 discriminator 4 view .LVU93
 360              	.LBB116:
 361              	.LBI116:
2159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 362              		.loc 3 2159 22 discriminator 4 view .LVU94
 363              	.LBB117:
2161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel]),  Polarity << SHIFT_TAB_CCxP[i
 364              		.loc 3 2161 3 discriminator 4 view .LVU95
 365              		.loc 3 2162 3 discriminator 4 view .LVU96
 366 009e 236A     		ldr	r3, [r4, #32]
 367 00a0 0C4A     		ldr	r2, .L6+36
 368 00a2 1340     		ands	r3, r2
 369 00a4 2362     		str	r3, [r4, #32]
 370              	.LVL21:
 371              		.loc 3 2162 3 is_stmt 0 discriminator 4 view .LVU97
 372              	.LBE117:
 373              	.LBE116:
  78:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** }
 374              		.loc 1 78 3 is_stmt 1 discriminator 4 view .LVU98
 375              	.LBB118:
 376              	.LBI118:
1436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 377              		.loc 3 1436 22 discriminator 4 view .LVU99
 378              	.LBB119:
1438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 379              		.loc 3 1438 3 discriminator 4 view .LVU100
 380 00a6 0123     		movs	r3, #1
 381 00a8 2268     		ldr	r2, [r4]
 382 00aa 1343     		orrs	r3, r2
 383 00ac 2360     		str	r3, [r4]
 384              	.LVL22:
1438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 385              		.loc 3 1438 3 is_stmt 0 discriminator 4 view .LVU101
 386              	.LBE119:
 387              	.LBE118:
 388              		.loc 1 79 1 discriminator 4 view .LVU102
 389 00ae 73BD     		pop	{r0, r1, r4, r5, r6, pc}
 390              	.L7:
 391              		.align	2
 392              	.L6:
 393 00b0 00100240 		.word	1073876992
 394 00b4 002C0140 		.word	1073818624
 395 00b8 00000000 		.word	SystemCoreClock
 396 00bc 3F420F00 		.word	999999
 397 00c0 40420F00 		.word	1000000
 398 00c4 8CFFFEFF 		.word	-65652
 399 00c8 FF8CFFFE 		.word	-16806657
 400 00cc 182C0140 		.word	1073818648
 401 00d0 FFFDFFFF 		.word	-513
 402 00d4 FFDFFFFF 		.word	-8193
 403              		.cfi_endproc
 404              	.LFE829:
 406              		.global	__aeabi_uidivmod
 407              		.section	.text.USBPD_TIM_Start,"ax",%progbits
ARM GAS  /tmp/ccHKcJQI.s 			page 62


 408              		.align	1
 409              		.global	USBPD_TIM_Start
 410              		.syntax unified
 411              		.code	16
 412              		.thumb_func
 413              		.fpu softvfp
 415              	USBPD_TIM_Start:
 416              	.LVL23:
 417              	.LFB830:
  80:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** 
  81:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** void USBPD_TIM_Start(TIM_identifier Id, uint32_t TimeUs)
  82:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** {
 418              		.loc 1 82 1 is_stmt 1 view -0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 0
 421              		@ frame_needed = 0, uses_anonymous_args = 0
  83:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   /* Positionne l'evenement pour sa detection */
  84:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   switch (Id)
 422              		.loc 1 84 3 view .LVU104
  82:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   /* Positionne l'evenement pour sa detection */
 423              		.loc 1 82 1 is_stmt 0 view .LVU105
 424 0000 10B5     		push	{r4, lr}
 425              	.LCFI1:
 426              		.cfi_def_cfa_offset 8
 427              		.cfi_offset 4, -8
 428              		.cfi_offset 14, -4
 429 0002 0328     		cmp	r0, #3
 430 0004 0DD8     		bhi	.L8
 431 0006 134C     		ldr	r4, .L16
 432 0008 FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 433              	.L11:
 434 000c 02       		.byte	(.L14-.L11)/2
 435 000d 0C       		.byte	(.L13-.L11)/2
 436 000e 14       		.byte	(.L12-.L11)/2
 437 000f 1C       		.byte	(.L10-.L11)/2
 438              		.p2align 1
 439              	.L14:
  85:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   {
  86:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****     case TIM_PORT0_CRC:
  87:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       TIMX_CHANNEL1_SETEVENT;
 440              		.loc 1 87 7 is_stmt 1 view .LVU106
 441              		.loc 1 87 7 view .LVU107
 442 0010 606A     		ldr	r0, [r4, #36]
 443              	.LVL24:
 444              		.loc 1 87 7 is_stmt 0 view .LVU108
 445 0012 4018     		adds	r0, r0, r1
 446 0014 1049     		ldr	r1, .L16+4
 447              	.LVL25:
 448              		.loc 1 87 7 view .LVU109
 449 0016 FFF7FEFF 		bl	__aeabi_uidivmod
 450              	.LVL26:
 451              	.LBB120:
 452              	.LBI120:
2163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get the polarity of an output channel.
ARM GAS  /tmp/ccHKcJQI.s 			page 63


2167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_OC_GetPolarity\n
2168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_OC_GetPolarity\n
2169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_OC_GetPolarity\n
2170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_OC_GetPolarity\n
2171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_OC_GetPolarity\n
2172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_OC_GetPolarity\n
2173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_OC_GetPolarity\n
2174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC5P          LL_TIM_OC_GetPolarity\n
2175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC6P          LL_TIM_OC_GetPolarity
2176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_HIGH
2189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCPOLARITY_LOW
2190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetPolarity(TIM_TypeDef *TIMx, uint32_t Channel)
2192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, (TIM_CCER_CC1P << SHIFT_TAB_CCxP[iChannel])) >> SHIFT_TAB_CCxP[iChan
2195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set the IDLE state of an output channel
2199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note This function is significant only for the timer instances
2200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       supporting the break feature. Macro IS_TIM_BREAK_INSTANCE(TIMx)
2201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       can be used to check whether or not a timer instance provides
2202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       a break input.
2203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR2         OIS1          LL_TIM_OC_SetIdleState\n
2204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_SetIdleState\n
2205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CR2         OIS2          LL_TIM_OC_SetIdleState\n
2206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_SetIdleState\n
2207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CR2         OIS3          LL_TIM_OC_SetIdleState\n
2208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CR2         OIS3N         LL_TIM_OC_SetIdleState\n
2209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CR2         OIS4          LL_TIM_OC_SetIdleState\n
2210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CR2         OIS5          LL_TIM_OC_SetIdleState\n
2211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CR2         OIS6          LL_TIM_OC_SetIdleState
2212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  IdleState This parameter can be one of the following values:
ARM GAS  /tmp/ccHKcJQI.s 			page 64


2224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW
2225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_HIGH
2226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
2227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetIdleState(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t IdleState
2229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel]),  IdleState << SHIFT_TAB_OISx[iC
2232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get the IDLE state of an output channel
2236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR2         OIS1          LL_TIM_OC_GetIdleState\n
2237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_GetIdleState\n
2238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CR2         OIS2          LL_TIM_OC_GetIdleState\n
2239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CR2         OIS2N         LL_TIM_OC_GetIdleState\n
2240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CR2         OIS3          LL_TIM_OC_GetIdleState\n
2241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CR2         OIS3N         LL_TIM_OC_GetIdleState\n
2242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CR2         OIS4          LL_TIM_OC_GetIdleState\n
2243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CR2         OIS5          LL_TIM_OC_GetIdleState\n
2244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CR2         OIS6          LL_TIM_OC_GetIdleState
2245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1N
2249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2N
2251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3N
2253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_LOW
2258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCIDLESTATE_HIGH
2259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetIdleState(TIM_TypeDef *TIMx, uint32_t Channel)
2261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return (READ_BIT(TIMx->CR2, (TIM_CR2_OIS1 << SHIFT_TAB_OISx[iChannel])) >> SHIFT_TAB_OISx[iChanne
2264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Enable fast mode for the output channel.
2268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Acts only if the channel is configured in PWM1 or PWM2 mode.
2269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_EnableFast\n
2270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_EnableFast\n
2271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_EnableFast\n
2272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_EnableFast\n
2273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR3        OC5FE          LL_TIM_OC_EnableFast\n
2274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR3        OC6FE          LL_TIM_OC_EnableFast
2275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
ARM GAS  /tmp/ccHKcJQI.s 			page 65


2281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
2284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableFast(TIM_TypeDef *TIMx, uint32_t Channel)
2286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
2290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Disable fast mode for the output channel.
2295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_DisableFast\n
2296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_DisableFast\n
2297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_DisableFast\n
2298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_DisableFast\n
2299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR3        OC5FE          LL_TIM_OC_DisableFast\n
2300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR3        OC6FE          LL_TIM_OC_DisableFast
2301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
2310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableFast(TIM_TypeDef *TIMx, uint32_t Channel)
2312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel]));
2316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Indicates whether fast mode is enabled for the output channel.
2321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCMR1        OC1FE          LL_TIM_OC_IsEnabledFast\n
2322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR1        OC2FE          LL_TIM_OC_IsEnabledFast\n
2323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        OC3FE          LL_TIM_OC_IsEnabledFast\n
2324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        OC4FE          LL_TIM_OC_IsEnabledFast\n
2325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR3        OC5FE          LL_TIM_OC_IsEnabledFast\n
2326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR3        OC6FE          LL_TIM_OC_IsEnabledFast
2327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledFast(TIM_TypeDef *TIMx, uint32_t Channel)
ARM GAS  /tmp/ccHKcJQI.s 			page 66


2338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
2341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint32_t bitfield = TIM_CCMR1_OC1FE << SHIFT_TAB_OCxx[iChannel];
2342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
2343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Enable compare register (TIMx_CCRx) preload for the output channel.
2347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_EnablePreload\n
2348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_EnablePreload\n
2349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_EnablePreload\n
2350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_EnablePreload\n
2351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR3        OC5PE          LL_TIM_OC_EnablePreload\n
2352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR3        OC6PE          LL_TIM_OC_EnablePreload
2353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
2362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
2364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
2368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Disable compare register (TIMx_CCRx) preload for the output channel.
2372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_DisablePreload\n
2373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_DisablePreload\n
2374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_DisablePreload\n
2375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_DisablePreload\n
2376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR3        OC5PE          LL_TIM_OC_DisablePreload\n
2377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR3        OC6PE          LL_TIM_OC_DisablePreload
2378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
2387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisablePreload(TIM_TypeDef *TIMx, uint32_t Channel)
2389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel]));
2393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
ARM GAS  /tmp/ccHKcJQI.s 			page 67


2395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Indicates whether compare register (TIMx_CCRx) preload is enabled for the output channe
2397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCMR1        OC1PE          LL_TIM_OC_IsEnabledPreload\n
2398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR1        OC2PE          LL_TIM_OC_IsEnabledPreload\n
2399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        OC3PE          LL_TIM_OC_IsEnabledPreload\n
2400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        OC4PE          LL_TIM_OC_IsEnabledPreload\n
2401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR3        OC5PE          LL_TIM_OC_IsEnabledPreload\n
2402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR3        OC6PE          LL_TIM_OC_IsEnabledPreload
2403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledPreload(TIM_TypeDef *TIMx, uint32_t Channel)
2414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
2417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint32_t bitfield = TIM_CCMR1_OC1PE << SHIFT_TAB_OCxx[iChannel];
2418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
2419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Enable clearing the output channel on an external event.
2423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
2424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
2425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
2426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_EnableClear\n
2427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_EnableClear\n
2428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_EnableClear\n
2429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_EnableClear\n
2430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR3        OC5CE          LL_TIM_OC_EnableClear\n
2431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR3        OC6CE          LL_TIM_OC_EnableClear
2432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
2441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_EnableClear(TIM_TypeDef *TIMx, uint32_t Channel)
2443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   SET_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
2447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Disable clearing the output channel on an external event.
2451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
ARM GAS  /tmp/ccHKcJQI.s 			page 68


2452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
2453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_DisableClear\n
2454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_DisableClear\n
2455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_DisableClear\n
2456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_DisableClear\n
2457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR3        OC5CE          LL_TIM_OC_DisableClear\n
2458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR3        OC6CE          LL_TIM_OC_DisableClear
2459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
2468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_DisableClear(TIM_TypeDef *TIMx, uint32_t Channel)
2470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   CLEAR_BIT(*pReg, (TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel]));
2474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Indicates clearing the output channel on an external event is enabled for the output ch
2478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note This function enables clearing the output channel on an external event.
2479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes. It does not work in Force
2480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_OCXREF_CLEAR_INSTANCE(TIMx) can be used to check whether
2481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       or not a timer instance can clear the OCxREF signal on an external event.
2482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCMR1        OC1CE          LL_TIM_OC_IsEnabledClear\n
2483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR1        OC2CE          LL_TIM_OC_IsEnabledClear\n
2484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        OC3CE          LL_TIM_OC_IsEnabledClear\n
2485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        OC4CE          LL_TIM_OC_IsEnabledClear\n
2486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR3        OC5CE          LL_TIM_OC_IsEnabledClear\n
2487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR3        OC6CE          LL_TIM_OC_IsEnabledClear
2488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH5
2495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH6
2496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval State of bit (1 or 0).
2497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_IsEnabledClear(TIM_TypeDef *TIMx, uint32_t Channel)
2499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
2502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint32_t bitfield = TIM_CCMR1_OC1CE << SHIFT_TAB_OCxx[iChannel];
2503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return ((READ_BIT(*pReg, bitfield) == bitfield) ? 1UL : 0UL);
2504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set the dead-time delay (delay inserted between the rising edge of the OCxREF signal an
2508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
ARM GAS  /tmp/ccHKcJQI.s 			page 69


2509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       dead-time insertion feature is supported by a timer instance.
2510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Helper macro @ref __LL_TIM_CALC_DEADTIME can be used to calculate the DeadTime parameter
2511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll BDTR         DTG           LL_TIM_OC_SetDeadTime
2512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  DeadTime between Min_Data=0 and Max_Data=255
2514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
2515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetDeadTime(TIM_TypeDef *TIMx, uint32_t DeadTime)
2517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_DTG, DeadTime);
2519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set compare value for output channel 1 (TIMx_CCR1).
2523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
2524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
2527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       output channel 1 is supported by a timer instance.
2528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_OC_SetCompareCH1
2529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
2532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH1(TIM_TypeDef *TIMx, uint32_t CompareValue)
 453              		.loc 3 2533 22 is_stmt 1 view .LVU110
 454              	.LBB121:
2534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   WRITE_REG(TIMx->CCR1, CompareValue);
 455              		.loc 3 2535 3 view .LVU111
 456              	.LBE121:
 457              	.LBE120:
 458              	.LBB123:
 459              	.LBB124:
2536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set compare value for output channel 2 (TIMx_CCR2).
2540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
2541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
2544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       output channel 2 is supported by a timer instance.
2545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_OC_SetCompareCH2
2546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
2549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH2(TIM_TypeDef *TIMx, uint32_t CompareValue)
2551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   WRITE_REG(TIMx->CCR2, CompareValue);
2553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set compare value for output channel 3 (TIMx_CCR3).
2557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
2558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
ARM GAS  /tmp/ccHKcJQI.s 			page 70


2559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
2561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       output channel is supported by a timer instance.
2562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_OC_SetCompareCH3
2563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
2566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH3(TIM_TypeDef *TIMx, uint32_t CompareValue)
2568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   WRITE_REG(TIMx->CCR3, CompareValue);
2570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set compare value for output channel 4 (TIMx_CCR4).
2574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note In 32-bit timer implementations compare value can be between 0x00000000 and 0xFFFFFFFF.
2575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
2578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       output channel 4 is supported by a timer instance.
2579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_OC_SetCompareCH4
2580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
2583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH4(TIM_TypeDef *TIMx, uint32_t CompareValue)
2585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   WRITE_REG(TIMx->CCR4, CompareValue);
2587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set compare value for output channel 5 (TIMx_CCR5).
2591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_CC5_INSTANCE(TIMx) can be used to check whether or not
2592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       output channel 5 is supported by a timer instance.
2593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCR5         CCR5          LL_TIM_OC_SetCompareCH5
2594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
2597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH5(TIM_TypeDef *TIMx, uint32_t CompareValue)
2599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->CCR5, TIM_CCR5_CCR5, CompareValue);
2601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set compare value for output channel 6 (TIMx_CCR6).
2605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_CC6_INSTANCE(TIMx) can be used to check whether or not
2606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       output channel 6 is supported by a timer instance.
2607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCR6         CCR6          LL_TIM_OC_SetCompareCH6
2608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  CompareValue between Min_Data=0 and Max_Data=65535
2610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
2611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_OC_SetCompareCH6(TIM_TypeDef *TIMx, uint32_t CompareValue)
2613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   WRITE_REG(TIMx->CCR6, CompareValue);
2615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
ARM GAS  /tmp/ccHKcJQI.s 			page 71


2616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR1) set for  output channel 1.
2619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
2620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
2623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       output channel 1 is supported by a timer instance.
2624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_OC_GetCompareCH1
2625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH1(TIM_TypeDef *TIMx)
2629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR1));
2631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR2) set for  output channel 2.
2635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
2636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
2639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       output channel 2 is supported by a timer instance.
2640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_OC_GetCompareCH2
2641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH2(TIM_TypeDef *TIMx)
2645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR2));
2647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR3) set for  output channel 3.
2651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
2652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
2655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       output channel 3 is supported by a timer instance.
2656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_OC_GetCompareCH3
2657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH3(TIM_TypeDef *TIMx)
2661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR3));
2663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR4) set for  output channel 4.
2667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note In 32-bit timer implementations returned compare value can be between 0x00000000 and 0xFF
2668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
2669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
2670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
2671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       output channel 4 is supported by a timer instance.
2672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_OC_GetCompareCH4
ARM GAS  /tmp/ccHKcJQI.s 			page 72


2673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH4(TIM_TypeDef *TIMx)
2677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR4));
2679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR5) set for  output channel 5.
2683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_CC5_INSTANCE(TIMx) can be used to check whether or not
2684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       output channel 5 is supported by a timer instance.
2685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCR5         CCR5          LL_TIM_OC_GetCompareCH5
2686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH5(TIM_TypeDef *TIMx)
2690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return (uint32_t)(READ_BIT(TIMx->CCR5, TIM_CCR5_CCR5));
2692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get compare value (TIMx_CCR6) set for  output channel 6.
2696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_CC6_INSTANCE(TIMx) can be used to check whether or not
2697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       output channel 6 is supported by a timer instance.
2698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCR6         CCR6          LL_TIM_OC_GetCompareCH6
2699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval CompareValue (between Min_Data=0 and Max_Data=65535)
2701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_OC_GetCompareCH6(TIM_TypeDef *TIMx)
2703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR6));
2705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Select on which reference signal the OC5REF is combined to.
2709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_COMBINED3PHASEPWM_INSTANCE(TIMx) can be used to check
2710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance supports the combined 3-phase PWM mode.
2711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCR5         GC5C3          LL_TIM_SetCH5CombinedChannels\n
2712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCR5         GC5C2          LL_TIM_SetCH5CombinedChannels\n
2713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCR5         GC5C1          LL_TIM_SetCH5CombinedChannels
2714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  GroupCH5 This parameter can be a combination of the following values:
2716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_GROUPCH5_NONE
2717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_GROUPCH5_OC1REFC
2718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_GROUPCH5_OC2REFC
2719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_GROUPCH5_OC3REFC
2720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
2721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetCH5CombinedChannels(TIM_TypeDef *TIMx, uint32_t GroupCH5)
2723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->CCR5, (TIM_CCR5_GC5C3 | TIM_CCR5_GC5C2 | TIM_CCR5_GC5C1), GroupCH5);
2725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
2729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
ARM GAS  /tmp/ccHKcJQI.s 			page 73


2730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Input_Channel Input channel configuration
2732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
2733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Configure input channel.
2736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_Config\n
2737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR1        IC1PSC        LL_TIM_IC_Config\n
2738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR1        IC1F          LL_TIM_IC_Config\n
2739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_Config\n
2740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_Config\n
2741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_Config\n
2742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_Config\n
2743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_Config\n
2744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_Config\n
2745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_Config\n
2746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_Config\n
2747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_Config\n
2748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC1P          LL_TIM_IC_Config\n
2749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_Config\n
2750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_Config\n
2751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_Config\n
2752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_Config\n
2753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_Config\n
2754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_Config\n
2755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_Config
2756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Configuration This parameter must be a combination of all the following values:
2763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI or @ref LL_TIM_ACTIVEINPUT_INDIRECTTI or @ref LL_
2764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1 or ... or @ref LL_TIM_ICPSC_DIV8
2765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1 or ... or @ref LL_TIM_IC_FILTER_FDIV32_N8
2766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING or @ref LL_TIM_IC_POLARITY_FALLING or @ref LL_TIM_I
2767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
2768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_Config(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t Configuration)
2770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F | TIM_CCMR1_IC1PSC | TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChanne
2774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****              ((Configuration >> 16U) & (TIM_CCMR1_IC1F | TIM_CCMR1_IC1PSC | TIM_CCMR1_CC1S))  << SH
2775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
2776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****              (Configuration & (TIM_CCER_CC1NP | TIM_CCER_CC1P)) << SHIFT_TAB_CCxP[iChannel]);
2777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set the active input.
2781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_SetActiveInput\n
2782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_SetActiveInput\n
2783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_SetActiveInput\n
2784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_SetActiveInput
2785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
ARM GAS  /tmp/ccHKcJQI.s 			page 74


2787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  ICActiveInput This parameter can be one of the following values:
2792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI
2793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_INDIRECTTI
2794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_TRC
2795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
2796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetActiveInput(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICActiv
2798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel]), (ICActiveInput >> 16U) << SHIFT
2802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get the current active input.
2806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCMR1        CC1S          LL_TIM_IC_GetActiveInput\n
2807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR1        CC2S          LL_TIM_IC_GetActiveInput\n
2808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        CC3S          LL_TIM_IC_GetActiveInput\n
2809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        CC4S          LL_TIM_IC_GetActiveInput
2810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_DIRECTTI
2818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_INDIRECTTI
2819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ACTIVEINPUT_TRC
2820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetActiveInput(TIM_TypeDef *TIMx, uint32_t Channel)
2822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
2825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_CC1S) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iChann
2826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set the prescaler of input channel.
2830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCMR1        IC1PSC        LL_TIM_IC_SetPrescaler\n
2831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_SetPrescaler\n
2832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_SetPrescaler\n
2833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_SetPrescaler
2834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  ICPrescaler This parameter can be one of the following values:
2841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
2842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
2843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
ARM GAS  /tmp/ccHKcJQI.s 			page 75


2844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
2845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
2846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetPrescaler(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICPrescal
2848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel]), (ICPrescaler >> 16U) << SHIFT
2852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get the current prescaler value acting on an  input channel.
2856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCMR1        IC1PSC        LL_TIM_IC_GetPrescaler\n
2857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR1        IC2PSC        LL_TIM_IC_GetPrescaler\n
2858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        IC3PSC        LL_TIM_IC_GetPrescaler\n
2859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        IC4PSC        LL_TIM_IC_GetPrescaler
2860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV1
2868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV2
2869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV4
2870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ICPSC_DIV8
2871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetPrescaler(TIM_TypeDef *TIMx, uint32_t Channel)
2873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
2876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_IC1PSC) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iCha
2877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set the input filter duration.
2881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCMR1        IC1F          LL_TIM_IC_SetFilter\n
2882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_SetFilter\n
2883:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_SetFilter\n
2884:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_SetFilter
2885:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2886:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2887:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2888:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2889:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2890:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2891:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  ICFilter This parameter can be one of the following values:
2892:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1
2893:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N2
2894:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N4
2895:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N8
2896:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N6
2897:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N8
2898:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N6
2899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N8
2900:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N6
ARM GAS  /tmp/ccHKcJQI.s 			page 76


2901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N8
2902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N5
2903:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N6
2904:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N8
2905:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N5
2906:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N6
2907:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N8
2908:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
2909:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2910:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetFilter(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICFilter)
2911:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFSET_TAB
2914:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel]), (ICFilter >> 16U) << SHIFT_TAB_
2915:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2916:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2917:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get the input filter duration.
2919:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCMR1        IC1F          LL_TIM_IC_GetFilter\n
2920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR1        IC2F          LL_TIM_IC_GetFilter\n
2921:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        IC3F          LL_TIM_IC_GetFilter\n
2922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCMR2        IC4F          LL_TIM_IC_GetFilter
2923:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2924:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2925:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2927:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2928:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2929:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
2930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1
2931:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N2
2932:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N4
2933:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV1_N8
2934:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N6
2935:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV2_N8
2936:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N6
2937:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV4_N8
2938:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N6
2939:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV8_N8
2940:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N5
2941:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N6
2942:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV16_N8
2943:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N5
2944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N6
2945:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_FILTER_FDIV32_N8
2946:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2947:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetFilter(TIM_TypeDef *TIMx, uint32_t Channel)
2948:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2949:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2950:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register const __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->CCMR1) + OFFS
2951:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return ((READ_BIT(*pReg, ((TIM_CCMR1_IC1F) << SHIFT_TAB_ICxx[iChannel])) >> SHIFT_TAB_ICxx[iChann
2952:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2953:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2954:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2955:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set the input channel polarity.
2956:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_IC_SetPolarity\n
2957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_SetPolarity\n
ARM GAS  /tmp/ccHKcJQI.s 			page 77


2958:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_SetPolarity\n
2959:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_SetPolarity\n
2960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_SetPolarity\n
2961:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_SetPolarity\n
2962:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_SetPolarity\n
2963:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_SetPolarity
2964:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2965:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2966:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2967:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2968:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2969:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2970:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  ICPolarity This parameter can be one of the following values:
2971:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING
2972:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_FALLING
2973:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_BOTHEDGE
2974:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
2975:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
2976:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_SetPolarity(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ICPolarity
2977:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
2978:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
2979:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel]),
2980:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****              ICPolarity << SHIFT_TAB_CCxP[iChannel]);
2981:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
2982:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
2983:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
2984:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get the current input channel polarity.
2985:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCER         CC1P          LL_TIM_IC_GetPolarity\n
2986:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC1NP         LL_TIM_IC_GetPolarity\n
2987:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC2P          LL_TIM_IC_GetPolarity\n
2988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC2NP         LL_TIM_IC_GetPolarity\n
2989:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC3P          LL_TIM_IC_GetPolarity\n
2990:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC3NP         LL_TIM_IC_GetPolarity\n
2991:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC4P          LL_TIM_IC_GetPolarity\n
2992:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         CCER         CC4NP         LL_TIM_IC_GetPolarity
2993:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
2994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Channel This parameter can be one of the following values:
2995:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH1
2996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH2
2997:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH3
2998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CHANNEL_CH4
2999:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval Returned value can be one of the following values:
3000:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_RISING
3001:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_FALLING
3002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_IC_POLARITY_BOTHEDGE
3003:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3004:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetPolarity(TIM_TypeDef *TIMx, uint32_t Channel)
3005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register uint8_t iChannel = TIM_GET_CHANNEL_INDEX(Channel);
3007:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return (READ_BIT(TIMx->CCER, ((TIM_CCER_CC1NP | TIM_CCER_CC1P) << SHIFT_TAB_CCxP[iChannel])) >>
3008:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****           SHIFT_TAB_CCxP[iChannel]);
3009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3010:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3011:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3012:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Connect the TIMx_CH1, CH2 and CH3 pins  to the TI1 input (XOR combination).
3013:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
3014:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       a timer instance provides an XOR input.
ARM GAS  /tmp/ccHKcJQI.s 			page 78


3015:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_EnableXORCombination
3016:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3017:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3018:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3019:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_EnableXORCombination(TIM_TypeDef *TIMx)
3020:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3021:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   SET_BIT(TIMx->CR2, TIM_CR2_TI1S);
3022:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3023:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3024:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3025:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Disconnect the TIMx_CH1, CH2 and CH3 pins  from the TI1 input.
3026:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
3027:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       a timer instance provides an XOR input.
3028:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_DisableXORCombination
3029:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3030:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3031:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3032:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_IC_DisableXORCombination(TIM_TypeDef *TIMx)
3033:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3034:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   CLEAR_BIT(TIMx->CR2, TIM_CR2_TI1S);
3035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3036:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Indicates whether the TIMx_CH1, CH2 and CH3 pins are connectected to the TI1 input.
3039:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_XOR_INSTANCE(TIMx) can be used to check whether or not
3040:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * a timer instance provides an XOR input.
3041:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR2          TI1S          LL_TIM_IC_IsEnabledXORCombination
3042:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3043:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3044:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3045:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_IsEnabledXORCombination(TIM_TypeDef *TIMx)
3046:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3047:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return ((READ_BIT(TIMx->CR2, TIM_CR2_TI1S) == (TIM_CR2_TI1S)) ? 1UL : 0UL);
3048:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3049:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3050:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3051:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get captured value for input channel 1.
3052:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
3053:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3054:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3055:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_CC1_INSTANCE(TIMx) can be used to check whether or not
3056:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       input channel 1 is supported by a timer instance.
3057:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCR1         CCR1          LL_TIM_IC_GetCaptureCH1
3058:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3059:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
3060:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3061:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH1(TIM_TypeDef *TIMx)
3062:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3063:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR1));
3064:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3065:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3066:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3067:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get captured value for input channel 2.
3068:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
3069:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3070:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3071:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_CC2_INSTANCE(TIMx) can be used to check whether or not
ARM GAS  /tmp/ccHKcJQI.s 			page 79


3072:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       input channel 2 is supported by a timer instance.
3073:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCR2         CCR2          LL_TIM_IC_GetCaptureCH2
3074:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3075:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
3076:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3077:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH2(TIM_TypeDef *TIMx)
3078:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3079:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR2));
3080:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3081:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3082:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3083:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get captured value for input channel 3.
3084:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
3085:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3087:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_CC3_INSTANCE(TIMx) can be used to check whether or not
3088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       input channel 3 is supported by a timer instance.
3089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCR3         CCR3          LL_TIM_IC_GetCaptureCH3
3090:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3091:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
3092:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3093:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH3(TIM_TypeDef *TIMx)
3094:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3095:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR3));
3096:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3098:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3099:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Get captured value for input channel 4.
3100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note In 32-bit timer implementations returned captured value can be between 0x00000000 and 0xF
3101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_32B_COUNTER_INSTANCE(TIMx) can be used to check
3102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance supports a 32 bits counter.
3103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_CC4_INSTANCE(TIMx) can be used to check whether or not
3104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       input channel 4 is supported by a timer instance.
3105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CCR4         CCR4          LL_TIM_IC_GetCaptureCH4
3106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval CapturedValue (between Min_Data=0 and Max_Data=65535)
3108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IC_GetCaptureCH4(TIM_TypeDef *TIMx)
3110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return (uint32_t)(READ_REG(TIMx->CCR4));
3112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
3116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Clock_Selection Counter clock selection
3119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
3120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Enable external clock mode 2.
3123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note When external clock mode 2 is enabled the counter is clocked by any active edge on the ET
3124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
3125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
3126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_EnableExternalClock
3127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
ARM GAS  /tmp/ccHKcJQI.s 			page 80


3129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableExternalClock(TIM_TypeDef *TIMx)
3131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_ECE);
3133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Disable external clock mode 2.
3137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
3138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
3139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_DisableExternalClock
3140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableExternalClock(TIM_TypeDef *TIMx)
3144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_ECE);
3146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Indicate whether external clock mode 2 is enabled.
3150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
3151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
3152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll SMCR         ECE           LL_TIM_IsEnabledExternalClock
3153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledExternalClock(TIM_TypeDef *TIMx)
3157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return ((READ_BIT(TIMx->SMCR, TIM_SMCR_ECE) == (TIM_SMCR_ECE)) ? 1UL : 0UL);
3159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set the clock source of the counter clock.
3163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note when selected clock source is external clock mode 1, the timer input
3164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       the external clock is applied is selected by calling the @ref LL_TIM_SetTriggerInput()
3165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       function. This timer input must be configured by calling
3166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       the @ref LL_TIM_IC_Config() function.
3167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE1_INSTANCE(TIMx) can be used to check
3168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode1.
3169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(TIMx) can be used to check
3170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance supports external clock mode2.
3171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetClockSource\n
3172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         SMCR         ECE           LL_TIM_SetClockSource
3173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  ClockSource This parameter can be one of the following values:
3175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_INTERNAL
3176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_EXT_MODE1
3177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_CLOCKSOURCE_EXT_MODE2
3178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetClockSource(TIM_TypeDef *TIMx, uint32_t ClockSource)
3181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS | TIM_SMCR_ECE, ClockSource);
3183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
ARM GAS  /tmp/ccHKcJQI.s 			page 81


3186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set the encoder interface mode.
3187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_ENCODER_INTERFACE_INSTANCE(TIMx) can be used to check
3188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance supports the encoder mode.
3189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetEncoderMode
3190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  EncoderMode This parameter can be one of the following values:
3192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X2_TI1
3193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X2_TI2
3194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ENCODERMODE_X4_TI12
3195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetEncoderMode(TIM_TypeDef *TIMx, uint32_t EncoderMode)
3198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS, EncoderMode);
3200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
3204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Timer_Synchronization Timer synchronisation configuration
3207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
3208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set the trigger output (TRGO) used for timer synchronization .
3211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_MASTER_INSTANCE(TIMx) can be used to check
3212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance can operate as a master timer.
3213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR2          MMS           LL_TIM_SetTriggerOutput
3214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TimerSynchronization This parameter can be one of the following values:
3216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_RESET
3217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_ENABLE
3218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_UPDATE
3219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_CC1IF
3220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC1REF
3221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC2REF
3222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC3REF
3223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO_OC4REF
3224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerOutput(TIM_TypeDef *TIMx, uint32_t TimerSynchronization)
3227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_MMS, TimerSynchronization);
3229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set the trigger output 2 (TRGO2) used for ADC synchronization .
3233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_TRGO2_INSTANCE(TIMx) can be used to check
3234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       whether or not a timer instance can be used for ADC synchronization.
3235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll CR2          MMS2          LL_TIM_SetTriggerOutput2
3236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer Instance
3237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  ADCSynchronization This parameter can be one of the following values:
3238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_RESET
3239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_ENABLE
3240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_UPDATE
3241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_CC1F
3242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC1
ARM GAS  /tmp/ccHKcJQI.s 			page 82


3243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC2
3244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC3
3245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC4
3246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC5
3247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC6
3248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC4_RISINGFALLING
3249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC6_RISINGFALLING
3250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC4_RISING_OC6_RISING
3251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC4_RISING_OC6_FALLING
3252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC5_RISING_OC6_RISING
3253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TRGO2_OC5_RISING_OC6_FALLING
3254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerOutput2(TIM_TypeDef *TIMx, uint32_t ADCSynchronization)
3257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->CR2, TIM_CR2_MMS2, ADCSynchronization);
3259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set the synchronization mode of a slave timer.
3263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
3264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
3265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll SMCR         SMS           LL_TIM_SetSlaveMode
3266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  SlaveMode This parameter can be one of the following values:
3268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_DISABLED
3269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_RESET
3270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_GATED
3271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_TRIGGER
3272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_SLAVEMODE_COMBINED_RESETTRIGGER
3273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetSlaveMode(TIM_TypeDef *TIMx, uint32_t SlaveMode)
3276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_SMS, SlaveMode);
3278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set the selects the trigger input to be used to synchronize the counter.
3282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
3283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
3284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll SMCR         TS            LL_TIM_SetTriggerInput
3285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TriggerInput This parameter can be one of the following values:
3287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR0
3288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR1
3289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR2
3290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ITR3
3291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI1F_ED
3292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI1FP1
3293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_TI2FP2
3294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_TS_ETRF
3295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetTriggerInput(TIM_TypeDef *TIMx, uint32_t TriggerInput)
3298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_TS, TriggerInput);
ARM GAS  /tmp/ccHKcJQI.s 			page 83


3300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Enable the Master/Slave mode.
3304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
3305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
3306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_EnableMasterSlaveMode
3307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableMasterSlaveMode(TIM_TypeDef *TIMx)
3311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   SET_BIT(TIMx->SMCR, TIM_SMCR_MSM);
3313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Disable the Master/Slave mode.
3317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
3318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       a timer instance can operate as a slave timer.
3319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_DisableMasterSlaveMode
3320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableMasterSlaveMode(TIM_TypeDef *TIMx)
3324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   CLEAR_BIT(TIMx->SMCR, TIM_SMCR_MSM);
3326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief Indicates whether the Master/Slave mode is enabled.
3330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_SLAVE_INSTANCE(TIMx) can be used to check whether or not
3331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * a timer instance can operate as a slave timer.
3332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll SMCR         MSM           LL_TIM_IsEnabledMasterSlaveMode
3333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledMasterSlaveMode(TIM_TypeDef *TIMx)
3337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return ((READ_BIT(TIMx->SMCR, TIM_SMCR_MSM) == (TIM_SMCR_MSM)) ? 1UL : 0UL);
3339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Configure the external trigger (ETR) input.
3343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_ETR_INSTANCE(TIMx) can be used to check whether or not
3344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       a timer instance provides an external trigger input.
3345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll SMCR         ETP           LL_TIM_ConfigETR\n
3346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         SMCR         ETPS          LL_TIM_ConfigETR\n
3347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         SMCR         ETF           LL_TIM_ConfigETR
3348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  ETRPolarity This parameter can be one of the following values:
3350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_POLARITY_NONINVERTED
3351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_POLARITY_INVERTED
3352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  ETRPrescaler This parameter can be one of the following values:
3353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV1
3354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV2
3355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV4
3356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_PRESCALER_DIV8
ARM GAS  /tmp/ccHKcJQI.s 			page 84


3357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  ETRFilter This parameter can be one of the following values:
3358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1
3359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N2
3360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N4
3361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV1_N8
3362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV2_N6
3363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV2_N8
3364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV4_N6
3365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV4_N8
3366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV8_N6
3367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV8_N8
3368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N5
3369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N6
3370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV16_N8
3371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N5
3372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N6
3373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETR_FILTER_FDIV32_N8
3374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigETR(TIM_TypeDef *TIMx, uint32_t ETRPolarity, uint32_t ETRPrescale
3377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       uint32_t ETRFilter)
3378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_ETP | TIM_SMCR_ETPS | TIM_SMCR_ETF, ETRPolarity | ETRPrescaler | 
3380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Select the external trigger (ETR) input source.
3384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_ETRSEL_INSTANCE(TIMx) can be used to check whether or
3385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       not a timer instance supports ETR source selection.
3386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll AF1          ETRSEL        LL_TIM_SetETRSource
3387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  ETRSource This parameter can be one of the following values:
3389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         TIM1
3390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
3391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETRSOURCE_GPIO
3392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @if STM32G081xx
3393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETRSOURCE_COMP1
3394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETRSOURCE_COMP2
3395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @endif
3396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETRSOURCE_ADC1_AWD1
3397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETRSOURCE_ADC1_AWD2
3398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETRSOURCE_ADC1_AWD3
3399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
3400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         TIM2
3401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
3402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETRSOURCE_GPIO
3403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @if STM32G081xx
3404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETRSOURCE_COMP1
3405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETRSOURCE_COMP2
3406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @endif
3407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETRSOURCE_LSE
3408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
3409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         TIM3
3410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
3411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETRSOURCE_GPIO
3412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @if STM32G081xx
3413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETRSOURCE_COMP1
ARM GAS  /tmp/ccHKcJQI.s 			page 85


3414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_ETRSOURCE_COMP2
3415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @endif
3416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetETRSource(TIM_TypeDef *TIMx, uint32_t ETRSource)
3419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->AF1, TIMx_AF1_ETRSEL, ETRSource);
3422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
3426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Break_Function Break function configuration
3429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
3430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Enable the break function.
3433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
3434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       a timer instance provides a break input.
3435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll BDTR         BKE           LL_TIM_EnableBRK
3436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableBRK(TIM_TypeDef *TIMx)
3440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_BKE);
3442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Disable the break function.
3446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll BDTR         BKE           LL_TIM_DisableBRK
3447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
3449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       a timer instance provides a break input.
3450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableBRK(TIM_TypeDef *TIMx)
3453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_BKE);
3455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Configure the break input.
3459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
3460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       a timer instance provides a break input.
3461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Bidirectional mode is only supported by advanced timer instances.
3462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       Macro IS_TIM_ADVANCED_INSTANCE(TIMx) can be used to check whether or not
3463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       a timer instance is an advanced-control timer.
3464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note In bidirectional mode (BKBID bit set), the Break input is configured both
3465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *        in input mode and in open drain output mode. Any active Break event will
3466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *        assert a low logic level on the Break input to indicate an internal break
3467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *        event to external devices.
3468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note When bidirectional mode isn't supported, BreakAFMode must be set to
3469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       LL_TIM_BREAK_AFMODE_INPUT.
3470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll BDTR         BKP           LL_TIM_ConfigBRK\n
ARM GAS  /tmp/ccHKcJQI.s 			page 86


3471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         BDTR         BKF           LL_TIM_ConfigBRK\n
3472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         BDTR         BKBID         LL_TIM_ConfigBRK
3473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  BreakPolarity This parameter can be one of the following values:
3475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_POLARITY_LOW
3476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_POLARITY_HIGH
3477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  BreakFilter This parameter can be one of the following values:
3478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV1
3479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV1_N2
3480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV1_N4
3481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV1_N8
3482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV2_N6
3483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV2_N8
3484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV4_N6
3485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV4_N8
3486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV8_N6
3487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV8_N8
3488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV16_N5
3489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV16_N6
3490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV16_N8
3491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV32_N5
3492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV32_N6
3493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_FILTER_FDIV32_N8
3494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  BreakAFMode This parameter can be one of the following values:
3495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_AFMODE_INPUT
3496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_AFMODE_BIDIRECTIONAL
3497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigBRK(TIM_TypeDef *TIMx, uint32_t BreakPolarity, uint32_t BreakFilt
3500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                       uint32_t BreakAFMode)
3501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_BKP | TIM_BDTR_BKF | TIM_BDTR_BKBID, BreakPolarity | BreakFilter 
3503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Disarm the break input (when it operates in bidirectional mode).
3507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note  The break input can be disarmed only when it is configured in
3508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *        bidirectional mode and when when MOE is reset.
3509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note  Purpose is to be able to have the input voltage back to high-state,
3510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *        whatever the time constant on the output .
3511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll BDTR         BKDSRM        LL_TIM_DisarmBRK
3512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisarmBRK(TIM_TypeDef *TIMx)
3516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_BKDSRM);
3518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Re-arm the break input (when it operates in bidirectional mode).
3522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note  The Break input is automatically armed as soon as MOE bit is set.
3523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll BDTR         BKDSRM        LL_TIM_ReArmBRK
3524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ReArmBRK(TIM_TypeDef *TIMx)
ARM GAS  /tmp/ccHKcJQI.s 			page 87


3528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_BKDSRM);
3530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Enable the break 2 function.
3534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_BKIN2_INSTANCE(TIMx) can be used to check whether or not
3535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       a timer instance provides a second break input.
3536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll BDTR         BK2E          LL_TIM_EnableBRK2
3537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableBRK2(TIM_TypeDef *TIMx)
3541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_BK2E);
3543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Disable the break  2 function.
3547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_BKIN2_INSTANCE(TIMx) can be used to check whether or not
3548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       a timer instance provides a second break input.
3549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll BDTR         BK2E          LL_TIM_DisableBRK2
3550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableBRK2(TIM_TypeDef *TIMx)
3554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_BK2E);
3556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Configure the break 2 input.
3560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_BKIN2_INSTANCE(TIMx) can be used to check whether or not
3561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       a timer instance provides a second break input.
3562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Bidirectional mode is only supported by advanced timer instances.
3563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       Macro IS_TIM_ADVANCED_INSTANCE(TIMx) can be used to check whether or not
3564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       a timer instance is an advanced-control timer.
3565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note In bidirectional mode (BK2BID bit set), the Break 2 input is configured both
3566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *        in input mode and in open drain output mode. Any active Break event will
3567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *        assert a low logic level on the Break 2 input to indicate an internal break
3568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *        event to external devices.
3569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note When bidirectional mode isn't supported, Break2AFMode must be set to
3570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       LL_TIM_BREAK2_AFMODE_INPUT.
3571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll BDTR         BK2P          LL_TIM_ConfigBRK2\n
3572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         BDTR         BK2F          LL_TIM_ConfigBRK2\n
3573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         BDTR         BK2BID        LL_TIM_ConfigBRK2
3574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Break2Polarity This parameter can be one of the following values:
3576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_POLARITY_LOW
3577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_POLARITY_HIGH
3578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Break2Filter This parameter can be one of the following values:
3579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV1
3580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV1_N2
3581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV1_N4
3582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV1_N8
3583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV2_N6
3584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV2_N8
ARM GAS  /tmp/ccHKcJQI.s 			page 88


3585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV4_N6
3586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV4_N8
3587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV8_N6
3588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV8_N8
3589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV16_N5
3590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV16_N6
3591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV16_N8
3592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV32_N5
3593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV32_N6
3594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_FILTER_FDIV32_N8
3595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Break2AFMode This parameter can be one of the following values:
3596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_AFMODE_INPUT
3597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK2_AFMODE_BIDIRECTIONAL
3598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigBRK2(TIM_TypeDef *TIMx, uint32_t Break2Polarity, uint32_t Break2F
3601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                        uint32_t Break2AFMode)
3602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_BK2P | TIM_BDTR_BK2F | TIM_BDTR_BK2BID, Break2Polarity | Break2Fi
3604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Disarm the break 2 input (when it operates in bidirectional mode).
3608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note  The break 2 input can be disarmed only when it is configured in
3609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *        bidirectional mode and when when MOE is reset.
3610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note  Purpose is to be able to have the input voltage back to high-state,
3611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *        whatever the time constant on the output.
3612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll BDTR         BK2DSRM       LL_TIM_DisarmBRK2
3613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisarmBRK2(TIM_TypeDef *TIMx)
3617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_BK2DSRM);
3619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Re-arm the break 2 input (when it operates in bidirectional mode).
3623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note  The Break 2 input is automatically armed as soon as MOE bit is set.
3624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll BDTR         BK2DSRM       LL_TIM_ReArmBRK2
3625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ReArmBRK2(TIM_TypeDef *TIMx)
3629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_BK2DSRM);
3631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Select the outputs off state (enabled v.s. disabled) in Idle and Run modes.
3635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
3636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       a timer instance provides a break input.
3637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll BDTR         OSSI          LL_TIM_SetOffStates\n
3638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         BDTR         OSSR          LL_TIM_SetOffStates
3639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  OffStateIdle This parameter can be one of the following values:
3641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OSSI_DISABLE
ARM GAS  /tmp/ccHKcJQI.s 			page 89


3642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OSSI_ENABLE
3643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  OffStateRun This parameter can be one of the following values:
3644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OSSR_DISABLE
3645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OSSR_ENABLE
3646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOffStates(TIM_TypeDef *TIMx, uint32_t OffStateIdle, uint32_t OffStat
3649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->BDTR, TIM_BDTR_OSSI | TIM_BDTR_OSSR, OffStateIdle | OffStateRun);
3651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Enable automatic output (MOE can be set by software or automatically when a break input
3655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
3656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       a timer instance provides a break input.
3657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll BDTR         AOE           LL_TIM_EnableAutomaticOutput
3658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableAutomaticOutput(TIM_TypeDef *TIMx)
3662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_AOE);
3664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Disable automatic output (MOE can be set only by software).
3668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
3669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       a timer instance provides a break input.
3670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll BDTR         AOE           LL_TIM_DisableAutomaticOutput
3671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableAutomaticOutput(TIM_TypeDef *TIMx)
3675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_AOE);
3677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Indicate whether automatic output is enabled.
3681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
3682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       a timer instance provides a break input.
3683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll BDTR         AOE           LL_TIM_IsEnabledAutomaticOutput
3684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledAutomaticOutput(TIM_TypeDef *TIMx)
3688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return ((READ_BIT(TIMx->BDTR, TIM_BDTR_AOE) == (TIM_BDTR_AOE)) ? 1UL : 0UL);
3690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Enable the outputs (set the MOE bit in TIMx_BDTR register).
3694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note The MOE bit in TIMx_BDTR register allows to enable /disable the outputs by
3695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       software and is reset in case of break or break2 event
3696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
3697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       a timer instance provides a break input.
3698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll BDTR         MOE           LL_TIM_EnableAllOutputs
ARM GAS  /tmp/ccHKcJQI.s 			page 90


3699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableAllOutputs(TIM_TypeDef *TIMx)
3703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   SET_BIT(TIMx->BDTR, TIM_BDTR_MOE);
3705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Disable the outputs (reset the MOE bit in TIMx_BDTR register).
3709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note The MOE bit in TIMx_BDTR register allows to enable /disable the outputs by
3710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       software and is reset in case of break or break2 event.
3711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
3712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       a timer instance provides a break input.
3713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll BDTR         MOE           LL_TIM_DisableAllOutputs
3714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableAllOutputs(TIM_TypeDef *TIMx)
3718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   CLEAR_BIT(TIMx->BDTR, TIM_BDTR_MOE);
3720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Indicates whether outputs are enabled.
3724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_BREAK_INSTANCE(TIMx) can be used to check whether or not
3725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       a timer instance provides a break input.
3726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll BDTR         MOE           LL_TIM_IsEnabledAllOutputs
3727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval State of bit (1 or 0).
3729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsEnabledAllOutputs(TIM_TypeDef *TIMx)
3731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return ((READ_BIT(TIMx->BDTR, TIM_BDTR_MOE) == (TIM_BDTR_MOE)) ? 1UL : 0UL);
3733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Enable the signals connected to the designated timer break input.
3737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_BREAKSOURCE_INSTANCE(TIMx) can be used to check whether
3738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       or not a timer instance allows for break input selection.
3739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll AF1          BKINE         LL_TIM_EnableBreakInputSource\n
3740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @if STM32G081xx
3741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         AF1          BKCMP1E       LL_TIM_EnableBreakInputSource\n
3742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         AF1          BKCMP2E       LL_TIM_EnableBreakInputSource\n
3743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @endif
3744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         AF2          BK2INE        LL_TIM_EnableBreakInputSource\n
3745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @if STM32G081xx
3746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         AF2          BK2CMP1E      LL_TIM_EnableBreakInputSource\n
3747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         AF2          BK2CMP2E      LL_TIM_EnableBreakInputSource
3748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @endif
3749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  BreakInput This parameter can be one of the following values:
3751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_INPUT_BKIN
3752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_INPUT_BKIN2
3753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Source This parameter can be one of the following values:
3754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKIN
3755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @if STM32G081xx
ARM GAS  /tmp/ccHKcJQI.s 			page 91


3756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP1
3757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP2
3758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @endif
3759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_EnableBreakInputSource(TIM_TypeDef *TIMx, uint32_t BreakInput, uint32_t
3762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->AF1) + BreakInput))
3764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   SET_BIT(*pReg, Source);
3765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Disable the signals connected to the designated timer break input.
3769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_BREAKSOURCE_INSTANCE(TIMx) can be used to check whether
3770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       or not a timer instance allows for break input selection.
3771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll AF1          BKINE         LL_TIM_DisableBreakInputSource\n
3772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @if STM32G081xx
3773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         AF1          BKCMP1E       LL_TIM_DisableBreakInputSource\n
3774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         AF1          BKCMP2E       LL_TIM_DisableBreakInputSource\n
3775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @endif
3776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         AF2          BK2INE        LL_TIM_DisableBreakInputSource\n
3777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @if STM32G081xx
3778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         AF2          BK2CMP1E      LL_TIM_DisableBreakInputSource\n
3779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         AF2          BK2CMP2E      LL_TIM_DisableBreakInputSource
3780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @endif
3781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  BreakInput This parameter can be one of the following values:
3783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_INPUT_BKIN
3784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_INPUT_BKIN2
3785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Source This parameter can be one of the following values:
3786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKIN
3787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @if STM32G081xx
3788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP1
3789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP2
3790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @endif
3791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_DisableBreakInputSource(TIM_TypeDef *TIMx, uint32_t BreakInput, uint32_
3794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->AF1) + BreakInput))
3796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   CLEAR_BIT(*pReg, Source);
3797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set the polarity of the break signal for the timer break input.
3801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_BREAKSOURCE_INSTANCE(TIMx) can be used to check whether
3802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       or not a timer instance allows for break input selection.
3803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll AF1          BKINP         LL_TIM_SetBreakInputSourcePolarity\n
3804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @if STM32G081xx
3805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         AF1          BKCMP1P       LL_TIM_SetBreakInputSourcePolarity\n
3806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         AF1          BKCMP2P       LL_TIM_SetBreakInputSourcePolarity\n
3807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @endif
3808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         AF2          BK2INP        LL_TIM_SetBreakInputSourcePolarity\n
3809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @if STM32G081xx
3810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         AF2          BK2CMP1P      LL_TIM_SetBreakInputSourcePolarity\n
3811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         AF2          BK2CMP2P      LL_TIM_SetBreakInputSourcePolarity
3812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @endif
ARM GAS  /tmp/ccHKcJQI.s 			page 92


3813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  BreakInput This parameter can be one of the following values:
3815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_INPUT_BKIN
3816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BREAK_INPUT_BKIN2
3817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Source This parameter can be one of the following values:
3818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKIN
3819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @if STM32G081xx
3820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP1
3821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_SOURCE_BKCOMP2
3822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @endif
3823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Polarity This parameter can be one of the following values:
3824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_POLARITY_LOW
3825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_BKIN_POLARITY_HIGH
3826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetBreakInputSourcePolarity(TIM_TypeDef *TIMx, uint32_t BreakInput, uin
3829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****                                                         uint32_t Polarity)
3830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   register __IO uint32_t *pReg = (__IO uint32_t *)((uint32_t)((uint32_t)(&TIMx->AF1) + BreakInput))
3832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(*pReg, (TIMx_AF1_BKINP << TIM_POSITION_BRK_SOURCE), (Polarity << TIM_POSITION_BRK_SOUR
3833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
3836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EF_DMA_Burst_Mode DMA burst mode configuration
3839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
3840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Configures the timer DMA burst feature.
3843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_DMABURST_INSTANCE(TIMx) can be used to check whether or
3844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       not a timer instance supports the DMA burst mode.
3845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll DCR          DBL           LL_TIM_ConfigDMABurst\n
3846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         DCR          DBA           LL_TIM_ConfigDMABurst
3847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  DMABurstBaseAddress This parameter can be one of the following values:
3849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CR1
3850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CR2
3851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_SMCR
3852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_DIER
3853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_SR
3854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_EGR
3855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCMR1
3856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCMR2
3857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCER
3858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CNT
3859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_PSC
3860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_ARR
3861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_RCR
3862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR1
3863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR2
3864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR3
3865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR4
3866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_BDTR
3867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_OR1
3868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCMR3 
3869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR5  
ARM GAS  /tmp/ccHKcJQI.s 			page 93


3870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_CCR6  
3871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_AF1  
3872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_AF2  
3873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_BASEADDR_TISEL
3874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  DMABurstLength This parameter can be one of the following values:
3875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_1TRANSFER
3876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_2TRANSFERS
3877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_3TRANSFERS
3878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_4TRANSFERS
3879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_5TRANSFERS
3880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_6TRANSFERS
3881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_7TRANSFERS
3882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_8TRANSFERS
3883:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_9TRANSFERS
3884:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_10TRANSFERS
3885:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_11TRANSFERS
3886:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_12TRANSFERS
3887:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_13TRANSFERS
3888:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_14TRANSFERS
3889:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_15TRANSFERS
3890:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_16TRANSFERS
3891:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_17TRANSFERS
3892:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_DMABURST_LENGTH_18TRANSFERS
3893:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3894:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3895:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ConfigDMABurst(TIM_TypeDef *TIMx, uint32_t DMABurstBaseAddress, uint32_
3896:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3897:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->DCR, (TIM_DCR_DBL | TIM_DCR_DBA), (DMABurstBaseAddress | DMABurstLength));
3898:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3900:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
3902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3903:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3904:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EF_Timer_Inputs_Remapping Timer input remapping
3905:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
3906:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3907:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3908:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Remap TIM inputs (input channel, internal/external triggers).
3909:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note Macro IS_TIM_REMAP_INSTANCE(TIMx) can be used to check whether or not
3910:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *       a some timer inputs can be remapped.
3911:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll TIM1_TISEL    TI1SEL      LL_TIM_SetRemap\n
3912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         TIM1_TISEL    TI2SEL      LL_TIM_SetRemap\n
3913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         TIM2_TISEL    TI1SEL      LL_TIM_SetRemap\n
3914:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         TIM2_TISEL    TI2SEL      LL_TIM_SetRemap\n
3915:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         TIM3_TISEL    TI1SEL      LL_TIM_SetRemap\n
3916:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         TIM3_TISEL    TI2SEL      LL_TIM_SetRemap\n
3917:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         TIM14_TISEL   TI1SEL      LL_TIM_SetRemap\n
3918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         TIM15_TISEL   TI1SEL      LL_TIM_SetRemap\n
3919:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         TIM15_TISEL   TI2SEL      LL_TIM_SetRemap\n
3920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         TIM16_TISEL   TI1SEL      LL_TIM_SetRemap\n
3921:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         TIM17_TISEL   TI1SEL      LL_TIM_SetRemap
3922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
3923:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  Remap Remap param depends on the TIMx. Description available only
3924:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         in CHM version of the User Manual (not in .pdf).
3925:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         Otherwise see Reference Manual description of TISEL registers.
3926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
ARM GAS  /tmp/ccHKcJQI.s 			page 94


3927:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         Below description summarizes "Timer Instance" and "Remap" param combinations:
3928:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
3929:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         TIM1: any combination of TI1_RMP and TI2_RMP where
3930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
3931:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
3932:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_TI1_RMP_GPIO
3933:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_TI1_RMP_COMP1
3934:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
3935:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            . . TI2_RMP can be one of the following values
3936:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_TI2_RMP_GPIO
3937:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM1_TI2_RMP_COMP2
3938:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
3939:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         TIM2: any combination of TI1_RMP and TI2_RMP where
3940:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
3941:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
3942:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI1_RMP_GPIO
3943:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI1_RMP_COMP1
3944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
3945:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            . . TI2_RMP can be one of the following values
3946:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI2_RMP_GPIO
3947:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM2_TI2_RMP_COMP2
3948:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
3949:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         TIM3: any combination of TI1_RMP and TI2_RMP where
3950:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
3951:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
3952:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI1_RMP_GPIO
3953:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI1_RMP_COMP1
3954:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
3955:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            . . TI2_RMP can be one of the following values
3956:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI2_RMP_GPIO
3957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM3_TI2_RMP_COMP2
3958:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
3959:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         TIM14: one of the following values
3960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
3961:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM14_TI1_RMP_GPIO
3962:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM14_TI1_RMP_RTC_CLK
3963:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM14_TI1_RMP_HSE_32
3964:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM14_TI1_RMP_MCO
3965:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
3966:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         TIM15: any combination of TI1_RMP and TI2_RMP where
3967:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
3968:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            . . TI1_RMP can be one of the following values
3969:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI1_RMP_GPIO
3970:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI1_RMP_TIM2_IC1
3971:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI1_RMP_TIM3_IC1
3972:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
3973:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            . . TI2_RMP can be one of the following values
3974:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI2_RMP_GPIO
3975:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI2_RMP_TIM2_IC2
3976:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM15_TI2_RMP_TIM3_IC2
3977:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
3978:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         TIM16: one of the following values
3979:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
3980:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_GPIO
3981:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_LSI
3982:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_LSE
3983:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM16_TI1_RMP_RTC_WK
ARM GAS  /tmp/ccHKcJQI.s 			page 95


3984:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
3985:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         TIM17: one of the following values
3986:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
3987:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM17_TI1_RMP_GPIO
3988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM17_TI1_RMP_HSE_32
3989:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *            @arg @ref LL_TIM_TIM17_TI1_RMP_MCO
3990:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *
3991:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
3992:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
3993:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetRemap(TIM_TypeDef *TIMx, uint32_t Remap)
3994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
3995:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->TISEL, (TIM_TISEL_TI1SEL | TIM_TISEL_TI2SEL | TIM_TISEL_TI3SEL | TIM_TISEL_TI4SE
3996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
3997:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
3998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
3999:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
4000:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
4001:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
4002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EF_OCREF_Clear OCREF_Clear_Management
4003:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
4004:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
4005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
4006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Set the OCREF clear input source
4007:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note The OCxREF signal of a given channel can be cleared when a high level is applied on the O
4008:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @note This function can only be used in Output compare and PWM modes.
4009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll SMCR          OCCS                LL_TIM_SetOCRefClearInputSource
4010:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll OR1           OCREF_CLR           LL_TIM_SetOCRefClearInputSource
4011:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
4012:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  OCRefClearInputSource This parameter can be one of the following values:
4013:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_ETR
4014:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_COMP1
4015:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   *         @arg @ref LL_TIM_OCREF_CLR_INT_COMP2
4016:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
4017:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
4018:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_SetOCRefClearInputSource(TIM_TypeDef *TIMx, uint32_t OCRefClearInputSou
4019:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
4020:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->SMCR, TIM_SMCR_OCCS,
4021:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****              ((OCRefClearInputSource & OCREF_CLEAR_SELECT_Msk) >> OCREF_CLEAR_SELECT_Pos) << TIM_SM
4022:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   MODIFY_REG(TIMx->OR1, TIM1_OR1_OCREF_CLR, OCRefClearInputSource);
4023:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
4024:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
4025:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @}
4026:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
4027:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
4028:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /** @defgroup TIM_LL_EF_FLAG_Management FLAG-Management
4029:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @{
4030:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
4031:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
4032:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Clear the update interrupt flag (UIF).
4033:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll SR           UIF           LL_TIM_ClearFlag_UPDATE
4034:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
4035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
4036:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
4037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_UPDATE(TIM_TypeDef *TIMx)
4038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
4039:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_UIF));
4040:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
ARM GAS  /tmp/ccHKcJQI.s 			page 96


4041:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
4042:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
4043:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Indicate whether update interrupt flag (UIF) is set (update interrupt is pending).
4044:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll SR           UIF           LL_TIM_IsActiveFlag_UPDATE
4045:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
4046:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4047:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
4048:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_UPDATE(TIM_TypeDef *TIMx)
4049:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
4050:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_UIF) == (TIM_SR_UIF)) ? 1UL : 0UL);
4051:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
4052:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
4053:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
4054:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 1 interrupt flag (CC1F).
4055:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll SR           CC1IF         LL_TIM_ClearFlag_CC1
4056:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
4057:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
4058:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
4059:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC1(TIM_TypeDef *TIMx)
4060:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
4061:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC1IF));
 460              		.loc 3 4061 3 is_stmt 0 view .LVU112
 461 001a 0323     		movs	r3, #3
 462              	.LBE124:
 463              	.LBE123:
 464              	.LBB126:
 465              	.LBB122:
2535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 466              		.loc 3 2535 3 view .LVU113
 467 001c 6163     		str	r1, [r4, #52]
 468              	.LVL27:
2535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 469              		.loc 3 2535 3 view .LVU114
 470              	.LBE122:
 471              	.LBE126:
 472              		.loc 1 87 7 is_stmt 1 view .LVU115
 473              	.LBB127:
 474              	.LBI123:
4059:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 475              		.loc 3 4059 22 view .LVU116
 476              	.LBB125:
 477              		.loc 3 4061 3 view .LVU117
 478              	.L15:
 479              		.loc 3 4061 3 is_stmt 0 view .LVU118
 480              	.LBE125:
 481              	.LBE127:
 482              	.LBB128:
 483              	.LBB129:
4062:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
4063:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
4064:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
4065:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 1 interrupt flag (CC1F) is set (Capture/Compare 1 inte
4066:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll SR           CC1IF         LL_TIM_IsActiveFlag_CC1
4067:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
4068:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4069:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
4070:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC1(TIM_TypeDef *TIMx)
ARM GAS  /tmp/ccHKcJQI.s 			page 97


4071:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
4072:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC1IF) == (TIM_SR_CC1IF)) ? 1UL : 0UL);
4073:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
4074:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
4075:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
4076:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 2 interrupt flag (CC2F).
4077:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll SR           CC2IF         LL_TIM_ClearFlag_CC2
4078:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
4079:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
4080:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
4081:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC2(TIM_TypeDef *TIMx)
4082:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
4083:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC2IF));
4084:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
4085:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
4086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
4087:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 2 interrupt flag (CC2F) is set (Capture/Compare 2 inte
4088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll SR           CC2IF         LL_TIM_IsActiveFlag_CC2
4089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
4090:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4091:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
4092:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC2(TIM_TypeDef *TIMx)
4093:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
4094:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC2IF) == (TIM_SR_CC2IF)) ? 1UL : 0UL);
4095:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
4096:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
4097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
4098:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 3 interrupt flag (CC3F).
4099:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll SR           CC3IF         LL_TIM_ClearFlag_CC3
4100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
4101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
4102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
4103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC3(TIM_TypeDef *TIMx)
4104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
4105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC3IF));
4106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
4107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
4108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
4109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 3 interrupt flag (CC3F) is set (Capture/Compare 3 inte
4110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll SR           CC3IF         LL_TIM_IsActiveFlag_CC3
4111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
4112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
4114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC3(TIM_TypeDef *TIMx)
4115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
4116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC3IF) == (TIM_SR_CC3IF)) ? 1UL : 0UL);
4117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
4118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
4119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
4120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Clear the Capture/Compare 4 interrupt flag (CC4F).
4121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll SR           CC4IF         LL_TIM_ClearFlag_CC4
4122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
4123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval None
4124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
4125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE void LL_TIM_ClearFlag_CC4(TIM_TypeDef *TIMx)
4126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
4127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   WRITE_REG(TIMx->SR, ~(TIM_SR_CC4IF));
ARM GAS  /tmp/ccHKcJQI.s 			page 98


 484              		.loc 3 4127 3 view .LVU119
 485 001e 5B42     		rsbs	r3, r3, #0
 486 0020 2361     		str	r3, [r4, #16]
 487              	.L8:
 488              	.LBE129:
 489              	.LBE128:
  88:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
  89:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****     case TIM_PORT0_RETRY:
  90:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       TIMX_CHANNEL2_SETEVENT;
  91:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
  92:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****     case TIM_PORT1_CRC:
  93:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       TIMX_CHANNEL3_SETEVENT;
  94:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
  95:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****     case TIM_PORT1_RETRY:
  96:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       TIMX_CHANNEL4_SETEVENT;
  97:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
  98:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****     default:
  99:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
 100:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   }
 101:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** }
 490              		.loc 1 101 1 view .LVU120
 491              		@ sp needed
 492 0022 10BD     		pop	{r4, pc}
 493              	.LVL28:
 494              	.L13:
  90:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
 495              		.loc 1 90 7 is_stmt 1 view .LVU121
  90:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
 496              		.loc 1 90 7 view .LVU122
 497 0024 606A     		ldr	r0, [r4, #36]
 498              	.LVL29:
  90:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
 499              		.loc 1 90 7 is_stmt 0 view .LVU123
 500 0026 4018     		adds	r0, r0, r1
 501 0028 0B49     		ldr	r1, .L16+4
 502              	.LVL30:
  90:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
 503              		.loc 1 90 7 view .LVU124
 504 002a FFF7FEFF 		bl	__aeabi_uidivmod
 505              	.LVL31:
 506              	.LBB132:
 507              	.LBI132:
2550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 508              		.loc 3 2550 22 is_stmt 1 view .LVU125
 509              	.LBB133:
2552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 510              		.loc 3 2552 3 view .LVU126
 511              	.LBE133:
 512              	.LBE132:
 513              	.LBB135:
 514              	.LBB136:
4083:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 515              		.loc 3 4083 3 is_stmt 0 view .LVU127
 516 002e 0523     		movs	r3, #5
 517              	.LBE136:
 518              	.LBE135:
 519              	.LBB138:
ARM GAS  /tmp/ccHKcJQI.s 			page 99


 520              	.LBB134:
2552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 521              		.loc 3 2552 3 view .LVU128
 522 0030 A163     		str	r1, [r4, #56]
 523              	.LVL32:
2552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 524              		.loc 3 2552 3 view .LVU129
 525              	.LBE134:
 526              	.LBE138:
  90:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
 527              		.loc 1 90 7 is_stmt 1 view .LVU130
 528              	.LBB139:
 529              	.LBI135:
4081:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 530              		.loc 3 4081 22 view .LVU131
 531              	.LBB137:
4083:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 532              		.loc 3 4083 3 view .LVU132
 533 0032 F4E7     		b	.L15
 534              	.LVL33:
 535              	.L12:
4083:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 536              		.loc 3 4083 3 is_stmt 0 view .LVU133
 537              	.LBE137:
 538              	.LBE139:
  93:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
 539              		.loc 1 93 7 is_stmt 1 view .LVU134
  93:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
 540              		.loc 1 93 7 view .LVU135
 541 0034 606A     		ldr	r0, [r4, #36]
 542              	.LVL34:
  93:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
 543              		.loc 1 93 7 is_stmt 0 view .LVU136
 544 0036 4018     		adds	r0, r0, r1
 545 0038 0749     		ldr	r1, .L16+4
 546              	.LVL35:
  93:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
 547              		.loc 1 93 7 view .LVU137
 548 003a FFF7FEFF 		bl	__aeabi_uidivmod
 549              	.LVL36:
 550              	.LBB140:
 551              	.LBI140:
2567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 552              		.loc 3 2567 22 is_stmt 1 view .LVU138
 553              	.LBB141:
2569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 554              		.loc 3 2569 3 view .LVU139
 555              	.LBE141:
 556              	.LBE140:
 557              	.LBB143:
 558              	.LBB144:
4105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 559              		.loc 3 4105 3 is_stmt 0 view .LVU140
 560 003e 0923     		movs	r3, #9
 561              	.LBE144:
 562              	.LBE143:
 563              	.LBB146:
ARM GAS  /tmp/ccHKcJQI.s 			page 100


 564              	.LBB142:
2569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 565              		.loc 3 2569 3 view .LVU141
 566 0040 E163     		str	r1, [r4, #60]
 567              	.LVL37:
2569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 568              		.loc 3 2569 3 view .LVU142
 569              	.LBE142:
 570              	.LBE146:
  93:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
 571              		.loc 1 93 7 is_stmt 1 view .LVU143
 572              	.LBB147:
 573              	.LBI143:
4103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 574              		.loc 3 4103 22 view .LVU144
 575              	.LBB145:
4105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 576              		.loc 3 4105 3 view .LVU145
 577 0042 ECE7     		b	.L15
 578              	.LVL38:
 579              	.L10:
4105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 580              		.loc 3 4105 3 is_stmt 0 view .LVU146
 581              	.LBE145:
 582              	.LBE147:
  96:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
 583              		.loc 1 96 7 is_stmt 1 view .LVU147
  96:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
 584              		.loc 1 96 7 view .LVU148
 585 0044 606A     		ldr	r0, [r4, #36]
 586              	.LVL39:
  96:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
 587              		.loc 1 96 7 is_stmt 0 view .LVU149
 588 0046 4018     		adds	r0, r0, r1
 589 0048 0349     		ldr	r1, .L16+4
 590              	.LVL40:
  96:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
 591              		.loc 1 96 7 view .LVU150
 592 004a FFF7FEFF 		bl	__aeabi_uidivmod
 593              	.LVL41:
 594              	.LBB148:
 595              	.LBI148:
2584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 596              		.loc 3 2584 22 is_stmt 1 view .LVU151
 597              	.LBB149:
2586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 598              		.loc 3 2586 3 view .LVU152
 599              	.LBE149:
 600              	.LBE148:
 601              	.LBB151:
 602              	.LBB130:
 603              		.loc 3 4127 3 is_stmt 0 view .LVU153
 604 004e 1123     		movs	r3, #17
 605              	.LBE130:
 606              	.LBE151:
 607              	.LBB152:
 608              	.LBB150:
ARM GAS  /tmp/ccHKcJQI.s 			page 101


2586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 609              		.loc 3 2586 3 view .LVU154
 610 0050 2164     		str	r1, [r4, #64]
 611              	.LVL42:
2586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 612              		.loc 3 2586 3 view .LVU155
 613              	.LBE150:
 614              	.LBE152:
  96:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
 615              		.loc 1 96 7 is_stmt 1 view .LVU156
 616              	.LBB153:
 617              	.LBI128:
4125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 618              		.loc 3 4125 22 view .LVU157
 619              	.LBB131:
 620              		.loc 3 4127 3 view .LVU158
 621 0052 E4E7     		b	.L15
 622              	.L17:
 623              		.align	2
 624              	.L16:
 625 0054 002C0140 		.word	1073818624
 626 0058 10270000 		.word	10000
 627              	.LBE131:
 628              	.LBE153:
 629              		.cfi_endproc
 630              	.LFE830:
 632              		.section	.text.USBPD_TIM_IsExpired,"ax",%progbits
 633              		.align	1
 634              		.global	USBPD_TIM_IsExpired
 635              		.syntax unified
 636              		.code	16
 637              		.thumb_func
 638              		.fpu softvfp
 640              	USBPD_TIM_IsExpired:
 641              	.LVL43:
 642              	.LFB831:
 102:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** 
 103:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** uint32_t USBPD_TIM_IsExpired(TIM_identifier Id)
 104:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** {
 643              		.loc 1 104 1 view -0
 644              		.cfi_startproc
 645              		@ args = 0, pretend = 0, frame = 0
 646              		@ frame_needed = 0, uses_anonymous_args = 0
 105:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   uint32_t _expired = 1u;
 647              		.loc 1 105 3 view .LVU160
 106:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   switch (Id)
 648              		.loc 1 106 3 view .LVU161
 104:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   uint32_t _expired = 1u;
 649              		.loc 1 104 1 is_stmt 0 view .LVU162
 650 0000 0123     		movs	r3, #1
 651 0002 00B5     		push	{lr}
 652              	.LCFI2:
 653              		.cfi_def_cfa_offset 4
 654              		.cfi_offset 14, -4
 655 0004 0328     		cmp	r0, #3
 656 0006 07D8     		bhi	.L18
 657 0008 074A     		ldr	r2, .L27
ARM GAS  /tmp/ccHKcJQI.s 			page 102


 658              	.LBB162:
 659              	.LBB163:
4128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
4129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** 
4130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** /**
4131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @brief  Indicate whether Capture/Compare 4 interrupt flag (CC4F) is set (Capture/Compare 4 inte
4132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @rmtoll SR           CC4IF         LL_TIM_IsActiveFlag_CC4
4133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @param  TIMx Timer instance
4134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   * @retval State of bit (1 or 0).
4135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   */
4136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** __STATIC_INLINE uint32_t LL_TIM_IsActiveFlag_CC4(TIM_TypeDef *TIMx)
4137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
4138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h ****   return ((READ_BIT(TIMx->SR, TIM_SR_CC4IF) == (TIM_SR_CC4IF)) ? 1UL : 0UL);
 660              		.loc 3 4138 12 view .LVU163
 661 000a 1269     		ldr	r2, [r2, #16]
 662 000c FFF7FEFF 		bl	__gnu_thumb1_case_uqi
 663              	.L21:
 664 0010 02       		.byte	(.L24-.L21)/2
 665 0011 06       		.byte	(.L23-.L21)/2
 666 0012 08       		.byte	(.L22-.L21)/2
 667 0013 0A       		.byte	(.L20-.L21)/2
 668              		.p2align 1
 669              	.L24:
 670              	.LBE163:
 671              	.LBE162:
 107:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   {
 108:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****     case TIM_PORT0_CRC:
 109:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       _expired = TIMX_CHANNEL1_GETFLAG(TIMX);
 672              		.loc 1 109 7 is_stmt 1 view .LVU164
 673              	.LBB166:
 674              	.LBI166:
4070:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 675              		.loc 3 4070 26 view .LVU165
 676              	.LVL44:
 677              	.LBB167:
4072:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 678              		.loc 3 4072 3 view .LVU166
4072:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 679              		.loc 3 4072 70 is_stmt 0 view .LVU167
 680 0014 5208     		lsrs	r2, r2, #1
 681              	.LVL45:
 682              	.L26:
4072:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 683              		.loc 3 4072 70 view .LVU168
 684              	.LBE167:
 685              	.LBE166:
 686              	.LBB168:
 687              	.LBB164:
 688              		.loc 3 4138 70 view .LVU169
 689 0016 1340     		ands	r3, r2
 690              	.L18:
 691              	.LBE164:
 692              	.LBE168:
 110:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
 111:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****     case TIM_PORT0_RETRY:
 112:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       _expired = TIMX_CHANNEL2_GETFLAG(TIMX);
 113:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
ARM GAS  /tmp/ccHKcJQI.s 			page 103


 114:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****     case TIM_PORT1_CRC:
 115:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       _expired = TIMX_CHANNEL3_GETFLAG(TIMX);
 116:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
 117:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****     case TIM_PORT1_RETRY:
 118:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       _expired = TIMX_CHANNEL4_GETFLAG(TIMX);
 119:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
 120:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****     default:
 121:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
 122:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   }
 123:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****   return _expired;
 124:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c **** }
 693              		.loc 1 124 1 view .LVU170
 694 0018 1800     		movs	r0, r3
 695              	.LVL46:
 696              		.loc 1 124 1 view .LVU171
 697              		@ sp needed
 698 001a 00BD     		pop	{pc}
 699              	.LVL47:
 700              	.L23:
 112:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
 701              		.loc 1 112 7 is_stmt 1 view .LVU172
 702              	.LBB169:
 703              	.LBI169:
4092:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 704              		.loc 3 4092 26 view .LVU173
 705              	.LBB170:
4094:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 706              		.loc 3 4094 3 view .LVU174
4094:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 707              		.loc 3 4094 70 is_stmt 0 view .LVU175
 708 001c 9208     		lsrs	r2, r2, #2
 709 001e FAE7     		b	.L26
 710              	.LVL48:
 711              	.L22:
4094:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 712              		.loc 3 4094 70 view .LVU176
 713              	.LBE170:
 714              	.LBE169:
 115:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
 715              		.loc 1 115 7 is_stmt 1 view .LVU177
 716              	.LBB171:
 717              	.LBI171:
4114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 718              		.loc 3 4114 26 view .LVU178
 719              	.LBB172:
4116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 720              		.loc 3 4116 3 view .LVU179
4116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 721              		.loc 3 4116 70 is_stmt 0 view .LVU180
 722 0020 D208     		lsrs	r2, r2, #3
 723 0022 F8E7     		b	.L26
 724              	.LVL49:
 725              	.L20:
4116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** }
 726              		.loc 3 4116 70 view .LVU181
 727              	.LBE172:
 728              	.LBE171:
ARM GAS  /tmp/ccHKcJQI.s 			page 104


 118:Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/src/usbpd_timersserver.c ****       break;
 729              		.loc 1 118 7 is_stmt 1 view .LVU182
 730              	.LBB173:
 731              	.LBI162:
4136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_tim.h **** {
 732              		.loc 3 4136 26 view .LVU183
 733              	.LBB165:
 734              		.loc 3 4138 3 view .LVU184
 735              		.loc 3 4138 70 is_stmt 0 view .LVU185
 736 0024 1209     		lsrs	r2, r2, #4
 737 0026 F6E7     		b	.L26
 738              	.L28:
 739              		.align	2
 740              	.L27:
 741 0028 002C0140 		.word	1073818624
 742              	.LBE165:
 743              	.LBE173:
 744              		.cfi_endproc
 745              	.LFE831:
 747              		.text
 748              	.Letext0:
 749              		.file 4 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 750              		.file 5 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 751              		.file 6 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g071xx.h"
 752              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 753              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash.h"
 754              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 755              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
 756              		.file 11 "Middlewares/ST/STM32_USBPD_Library/Devices/STM32G0XX/inc/usbpd_timersserver.h"
ARM GAS  /tmp/ccHKcJQI.s 			page 105


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usbpd_timersserver.c
     /tmp/ccHKcJQI.s:17     .text.USBPD_TIM_Init:0000000000000000 $t
     /tmp/ccHKcJQI.s:25     .text.USBPD_TIM_Init:0000000000000000 USBPD_TIM_Init
     /tmp/ccHKcJQI.s:393    .text.USBPD_TIM_Init:00000000000000b0 $d
     /tmp/ccHKcJQI.s:408    .text.USBPD_TIM_Start:0000000000000000 $t
     /tmp/ccHKcJQI.s:415    .text.USBPD_TIM_Start:0000000000000000 USBPD_TIM_Start
     /tmp/ccHKcJQI.s:434    .text.USBPD_TIM_Start:000000000000000c $d
     /tmp/ccHKcJQI.s:438    .text.USBPD_TIM_Start:0000000000000010 $t
     /tmp/ccHKcJQI.s:625    .text.USBPD_TIM_Start:0000000000000054 $d
     /tmp/ccHKcJQI.s:633    .text.USBPD_TIM_IsExpired:0000000000000000 $t
     /tmp/ccHKcJQI.s:640    .text.USBPD_TIM_IsExpired:0000000000000000 USBPD_TIM_IsExpired
     /tmp/ccHKcJQI.s:664    .text.USBPD_TIM_IsExpired:0000000000000010 $d
     /tmp/ccHKcJQI.s:668    .text.USBPD_TIM_IsExpired:0000000000000014 $t
     /tmp/ccHKcJQI.s:741    .text.USBPD_TIM_IsExpired:0000000000000028 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
SystemCoreClock
__aeabi_uidivmod
__gnu_thumb1_case_uqi
