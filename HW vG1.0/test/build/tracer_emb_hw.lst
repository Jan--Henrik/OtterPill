ARM GAS  /tmp/ccV1cKci.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"tracer_emb_hw.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.LL_APB1_GRP1_EnableClock.constprop.0,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	LL_APB1_GRP1_EnableClock.constprop.0:
  24              	.LFB918:
  25              		.file 1 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h"
   1:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @file    stm32g0xx_ll_bus.h
   4:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief   Header file of BUS LL module.
   6:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
   7:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   @verbatim
   8:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****                       ##### RCC Limitations #####
   9:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   ==============================================================================
  10:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****     [..]
  11:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****       A delay between an RCC peripheral clock enable and the effective peripheral
  12:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****       enabling should be taken into account in order to manage the peripheral read/write
  13:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****       from/to registers.
  14:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****       (+) This delay depends on the peripheral mapping.
  15:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  16:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  17:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****     [..]
  18:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****       Workarounds:
  19:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  20:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****           inserted in each LL_{BUS}_GRP{x}_EnableClock() function.
  21:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  22:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   @endverbatim
  23:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   ******************************************************************************
  24:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @attention
  25:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *
  26:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * <h2><center>&copy; Copyright (c) 2018 STMicroelectronics. 
  27:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * All rights reserved.</center></h2>
  28:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *
  29:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  30:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * the "License"; You may not use this file except in compliance with the 
  31:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * License. You may obtain a copy of the License at:
  32:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *                        opensource.org/licenses/BSD-3-Clause
  33:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *
ARM GAS  /tmp/ccV1cKci.s 			page 2


  34:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   ******************************************************************************
  35:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
  36:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  37:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  38:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #ifndef STM32G0xx_LL_BUS_H
  39:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define STM32G0xx_LL_BUS_H
  40:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  41:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #ifdef __cplusplus
  42:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** extern "C" {
  43:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
  44:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  45:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Includes ------------------------------------------------------------------*/
  46:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #include "stm32g0xx.h"
  47:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  48:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @addtogroup STM32G0xx_LL_Driver
  49:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
  50:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
  51:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  52:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(RCC)
  53:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  54:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL BUS
  55:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
  56:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
  57:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  58:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Private types -------------------------------------------------------------*/
  59:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Private variables ---------------------------------------------------------*/
  60:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  61:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Private constants ---------------------------------------------------------*/
  62:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  63:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Private macros ------------------------------------------------------------*/
  64:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  65:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Exported types ------------------------------------------------------------*/
  66:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Exported constants --------------------------------------------------------*/
  67:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Constants BUS Exported Constants
  68:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
  69:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
  70:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  71:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_AHB1_GRP1_PERIPH  AHB1 GRP1 PERIPH
  72:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
  73:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
  74:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
  75:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_DMA1           RCC_AHBENR_DMA1EN
  76:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_FLASH          RCC_AHBENR_FLASHEN
  77:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_SRAM           RCC_AHBSMENR_SRAMSMEN
  78:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(CRC)
  79:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRC            RCC_AHBENR_CRCEN
  80:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
  81:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(AES)
  82:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_CRYP           RCC_AHBENR_AESEN
  83:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* AES */
  84:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(RNG)
  85:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_AHB1_GRP1_PERIPH_RNG            RCC_AHBENR_RNGEN
  86:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
  87:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
  88:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @}
  89:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
  90:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
ARM GAS  /tmp/ccV1cKci.s 			page 3


  91:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
  92:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB1_GRP1_PERIPH  APB1 GRP1 PERIPH
  93:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
  94:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
  95:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_ALL            0xFFFFFFFFU
  96:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(TIM2)
  97:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM2           RCC_APBENR1_TIM2EN
  98:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* TIM2 */
  99:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(TIM3)
 100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM3           RCC_APBENR1_TIM3EN
 101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* TIM3 */
 102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(TIM6)
 103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM6           RCC_APBENR1_TIM6EN
 104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* TIM6 */
 105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(TIM7)
 106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_TIM7           RCC_APBENR1_TIM7EN
 107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* TIM7 */
 108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_RTC            RCC_APBENR1_RTCAPBEN
 109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_WWDG           RCC_APBENR1_WWDGEN
 110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_SPI2           RCC_APBENR1_SPI2EN
 111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART2         RCC_APBENR1_USART2EN
 112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(USART3)
 113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART3         RCC_APBENR1_USART3EN
 114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(USART4)
 116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_USART4         RCC_APBENR1_USART4EN
 117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* USART4 */
 118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(LPUART1)
 119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPUART1        RCC_APBENR1_LPUART1EN
 120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C1           RCC_APBENR1_I2C1EN
 122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_I2C2           RCC_APBENR1_I2C2EN
 123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(CEC)
 124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_CEC            RCC_APBENR1_CECEN
 125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* CEC */
 126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(UCPD1)
 127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UCPD1          RCC_APBENR1_UCPD1EN
 128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(UCPD2)
 130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_UCPD2          RCC_APBENR1_UCPD2EN
 131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DBGMCU         RCC_APBENR1_DBGEN
 133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_PWR            RCC_APBENR1_PWREN
 134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(DAC1)
 135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_DAC1           RCC_APBENR1_DAC1EN
 136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(LPTIM2)
 138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPTIM2         RCC_APBENR1_LPTIM2EN
 139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(LPTIM1)
 141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB1_GRP1_PERIPH_LPTIM1         RCC_APBENR1_LPTIM1EN
 142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @}
 145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_APB2_GRP1_PERIPH  APB2 GRP1 PERIPH
ARM GAS  /tmp/ccV1cKci.s 			page 4


 148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
 149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ALL            0xFFFFFFFFU
 151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SYSCFG         RCC_APBENR2_SYSCFGEN
 152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM1           RCC_APBENR2_TIM1EN
 153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_SPI1           RCC_APBENR2_SPI1EN
 154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_USART1         RCC_APBENR2_USART1EN
 155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(TIM14)
 156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM14          RCC_APBENR2_TIM14EN
 157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* TIM14 */
 158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(TIM15)
 159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM15          RCC_APBENR2_TIM15EN
 160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(TIM16)
 162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM16          RCC_APBENR2_TIM16EN
 163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(TIM17)
 165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_TIM17          RCC_APBENR2_TIM17EN
 166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* TIM17 */
 167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(ADC)
 168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_APB2_GRP1_PERIPH_ADC            RCC_APBENR2_ADCEN
 169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif
 170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @}
 172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_EC_IOP_GRP1_PERIPH  IOP GRP1 PERIPH
 175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
 176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_ALL             0xFFFFFFFFU
 178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOA           RCC_IOPENR_GPIOAEN
 179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOB           RCC_IOPENR_GPIOBEN
 180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOC           RCC_IOPENR_GPIOCEN
 181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOD           RCC_IOPENR_GPIODEN
 182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(GPIOE)
 183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOE           RCC_IOPENR_GPIOEEN
 184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* GPIOE */
 185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #if defined(GPIOF)
 186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #define LL_IOP_GRP1_PERIPH_GPIOF           RCC_IOPENR_GPIOFEN
 187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** #endif /* GPIOF */
 188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @}
 190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @}
 194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Exported macro ------------------------------------------------------------*/
 197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /* Exported functions --------------------------------------------------------*/
 198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_Exported_Functions BUS Exported Functions
 199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
 200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_AHB1 AHB1
 203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
 204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
ARM GAS  /tmp/ccV1cKci.s 			page 5


 205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Enable AHB1 peripherals clock.
 208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_EnableClock\n
 209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       FLASHEN       LL_AHB1_GRP1_EnableClock\n
 210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_EnableClock\n
 211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       AESEN         LL_AHB1_GRP1_EnableClock\n
 212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       RNGEN         LL_AHB1_GRP1_EnableClock
 213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG  (*)
 219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note   (*) RNG & CRYP Peripherals available only on STM32G081xx
 220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClock(uint32_t Periphs)
 223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->AHBENR, Periphs);
 226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBENR, Periphs);
 228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   (void)tmpreg;
 229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Check if AHB1 peripheral clock is enabled or not
 233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_IsEnabledClock\n
 234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       FLASHEN       LL_AHB1_GRP1_IsEnabledClock\n
 235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_IsEnabledClock\n
 236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       AESEN         LL_AHB1_GRP1_IsEnabledClock\n
 237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       RNGEN         LL_AHB1_GRP1_IsEnabledClock
 238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG  (*)
 244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note   (*) RNG & CRYP Peripherals available only on STM32G081xx
 245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_AHB1_GRP1_IsEnabledClock(uint32_t Periphs)
 248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   return ((READ_BIT(RCC->AHBENR, Periphs) == Periphs) ? 1UL : 0UL);
 250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Disable AHB1 peripherals clock.
 254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll AHBENR       DMA1EN        LL_AHB1_GRP1_DisableClock\n
 255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       FLASHEN       LL_AHB1_GRP1_DisableClock\n
 256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       CRCEN         LL_AHB1_GRP1_DisableClock\n
 257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       AESEN         LL_AHB1_GRP1_DisableClock\n
 258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBENR       RNGEN         LL_AHB1_GRP1_DisableClock
 259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
ARM GAS  /tmp/ccV1cKci.s 			page 6


 262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG  (*)
 265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note   (*) RNG & CRYP Peripherals available only on STM32G081xx
 266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClock(uint32_t Periphs)
 269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBENR, Periphs);
 271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Force AHB1 peripherals reset.
 275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll AHBRSTR      DMA1RST       LL_AHB1_GRP1_ForceReset\n
 276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBRSTR      FLASHRST      LL_AHB1_GRP1_ForceReset\n
 277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBRSTR      CRCRST        LL_AHB1_GRP1_ForceReset\n
 278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBRSTR      AESRST        LL_AHB1_GRP1_ForceReset\n
 279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBRSTR      RNGRST        LL_AHB1_GRP1_ForceReset
 280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** * @param  Periphs This parameter can be a combination of the following values:
 281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG  (*)
 287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note   (*) RNG & CRYP Peripherals available only on STM32G081xx
 288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ForceReset(uint32_t Periphs)
 291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->AHBRSTR, Periphs);
 293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Release AHB1 peripherals reset.
 297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll AHBRSTR      DMA1RST       LL_AHB1_GRP1_ReleaseReset\n
 298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBRSTR      FLASHRST      LL_AHB1_GRP1_ReleaseReset\n
 299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBRSTR      CRCRST        LL_AHB1_GRP1_ReleaseReset\n
 300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBRSTR      AESRST        LL_AHB1_GRP1_ReleaseReset\n
 301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBRSTR      RNGRST        LL_AHB1_GRP1_ReleaseReset
 302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_ALL
 304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG  (*)
 309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note   (*) RNG & CRYP Peripherals available only on STM32G081xx
 310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_ReleaseReset(uint32_t Periphs)
 313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBRSTR, Periphs);
 315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Enable AHB1 peripheral clocks in Sleep and Stop modes
ARM GAS  /tmp/ccV1cKci.s 			page 7


 319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll AHBSMENR     DMA1SMEN      LL_AHB1_GRP1_EnableClockStopSleep\n
 320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     FLASHSMEN     LL_AHB1_GRP1_EnableClockStopSleep\n
 321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     SRAMSMEN      LL_AHB1_GRP1_EnableClockStopSleep\n
 322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     CRCSMEN       LL_AHB1_GRP1_EnableClockStopSleep\n
 323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     AESSMEN       LL_AHB1_GRP1_EnableClockStopSleep\n
 324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     RNGSMEN       LL_AHB1_GRP1_EnableClockStopSleep
 325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG  (*)
 332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note   (*) RNG & CRYP Peripherals available only on STM32G081xx
 333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_EnableClockStopSleep(uint32_t Periphs)
 336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->AHBSMENR, Periphs);
 339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->AHBSMENR, Periphs);
 341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   (void)tmpreg;
 342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Disable AHB1 peripheral clocks in Sleep and Stop modes
 346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll AHBSMENR     DMA1SMEN      LL_AHB1_GRP1_DisableClockStopSleep\n
 347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     FLASHSMEN     LL_AHB1_GRP1_DisableClockStopSleep\n
 348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     SRAMSMEN      LL_AHB1_GRP1_DisableClockStopSleep\n
 349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     CRCSMEN       LL_AHB1_GRP1_DisableClockStopSleep\n
 350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     AESSMEN       LL_AHB1_GRP1_DisableClockStopSleep\n
 351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         AHBSMENR     RNGSMEN       LL_AHB1_GRP1_DisableClockStopSleep
 352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_DMA1
 354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_FLASH
 355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_SRAM
 356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRC
 357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_CRYP (*)
 358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_AHB1_GRP1_PERIPH_RNG  (*)
 359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note   (*) RNG & CRYP Peripherals available only on STM32G081xx
 360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_AHB1_GRP1_DisableClockStopSleep(uint32_t Periphs)
 363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   CLEAR_BIT(RCC->AHBSMENR, Periphs);
 365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @}
 369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB1 APB1
 372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
 373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
ARM GAS  /tmp/ccV1cKci.s 			page 8


 376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Enable APB1 peripherals clock.
 377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBENR1      TIM2EN        LL_APB1_GRP1_EnableClock\n
 378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM3EN        LL_APB1_GRP1_EnableClock\n
 379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM6EN        LL_APB1_GRP1_EnableClock\n
 380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM7EN        LL_APB1_GRP1_EnableClock\n
 381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      RTCAPBEN      LL_APB1_GRP1_EnableClock\n
 382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      WWDGEN        LL_APB1_GRP1_EnableClock\n
 383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      SPI2EN        LL_APB1_GRP1_EnableClock\n
 384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART2EN      LL_APB1_GRP1_EnableClock\n
 385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART3EN      LL_APB1_GRP1_EnableClock\n
 386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART4EN      LL_APB1_GRP1_EnableClock\n
 387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPUART1EN     LL_APB1_GRP1_EnableClock\n
 388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      I2C1EN        LL_APB1_GRP1_EnableClock\n
 389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      I2C2EN        LL_APB1_GRP1_EnableClock\n
 390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      CECEN         LL_APB1_GRP1_EnableClock\n
 391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      UCPD1EN       LL_APB1_GRP1_EnableClock\n
 392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      UCPD2EN       LL_APB1_GRP1_EnableClock\n
 393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      DBGEN         LL_APB1_GRP1_EnableClock\n
 394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      PWREN         LL_APB1_GRP1_EnableClock\n
 395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      DAC1EN        LL_APB1_GRP1_EnableClock\n
 396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPTIM2EN      LL_APB1_GRP1_EnableClock\n
 397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPTIM1EN      LL_APB1_GRP1_EnableClock
 398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2    (1)
 400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6    (1)
 402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7    (1)
 403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTC
 404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3  (1)
 408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4  (1)
 409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1 (1)
 410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC     (1)
 413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD1   (1)
 414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD2   (1)
 415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DBGMCU
 416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1    (1)
 418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM2  (1)
 419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1  (1)
 420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note Peripheral marked with (1) are not available all devices
 421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClock(uint32_t Periphs)
  26              		.loc 1 423 22 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
 424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   __IO uint32_t tmpreg;
  32              		.loc 1 425 3 view .LVU1
ARM GAS  /tmp/ccV1cKci.s 			page 9


 426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->APBENR1, Periphs);
  33              		.loc 1 426 3 view .LVU2
  34 0000 8020     		movs	r0, #128
  35 0002 064A     		ldr	r2, .L2
  36 0004 4003     		lsls	r0, r0, #13
  37 0006 D16B     		ldr	r1, [r2, #60]
 423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
  38              		.loc 1 423 22 is_stmt 0 view .LVU3
  39 0008 82B0     		sub	sp, sp, #8
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 8
  42              		.loc 1 426 3 view .LVU4
  43 000a 0143     		orrs	r1, r0
  44 000c D163     		str	r1, [r2, #60]
 427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APBENR1, Periphs);
  45              		.loc 1 428 3 is_stmt 1 view .LVU5
  46              		.loc 1 428 12 is_stmt 0 view .LVU6
  47 000e D36B     		ldr	r3, [r2, #60]
  48 0010 0340     		ands	r3, r0
  49              		.loc 1 428 10 view .LVU7
  50 0012 0193     		str	r3, [sp, #4]
 429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   (void)tmpreg;
  51              		.loc 1 429 3 is_stmt 1 view .LVU8
  52 0014 019B     		ldr	r3, [sp, #4]
 430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
  53              		.loc 1 430 1 is_stmt 0 view .LVU9
  54 0016 02B0     		add	sp, sp, #8
  55              		@ sp needed
  56 0018 7047     		bx	lr
  57              	.L3:
  58 001a C046     		.align	2
  59              	.L2:
  60 001c 00100240 		.word	1073876992
  61              		.cfi_endproc
  62              	.LFE918:
  64              		.section	.text.HW_TRACER_EMB_Init,"ax",%progbits
  65              		.align	1
  66              		.global	HW_TRACER_EMB_Init
  67              		.syntax unified
  68              		.code	16
  69              		.thumb_func
  70              		.fpu softvfp
  72              	HW_TRACER_EMB_Init:
  73              	.LFB907:
  74              		.file 2 "Utilities/TRACER_EMB/tracer_emb_hw.c"
   1:Utilities/TRACER_EMB/tracer_emb_hw.c **** /**
   2:Utilities/TRACER_EMB/tracer_emb_hw.c ****   ******************************************************************************
   3:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * @file    tracer_emb_hw.c
   4:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * @author  MCD Application Team
   5:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * @brief   This file contains the low level interface to control trace system.
   6:Utilities/TRACER_EMB/tracer_emb_hw.c ****   ******************************************************************************
   7:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * @attention
   8:Utilities/TRACER_EMB/tracer_emb_hw.c ****   *
   9:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * <h2><center>&copy; Copyright (c) 2018 STMicroelectronics.
  10:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * All rights reserved.</center></h2>
  11:Utilities/TRACER_EMB/tracer_emb_hw.c ****   *
ARM GAS  /tmp/ccV1cKci.s 			page 10


  12:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * the "License"; You may not use this file except in compliance with the
  14:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * License. You may obtain a copy of the License at:
  15:Utilities/TRACER_EMB/tracer_emb_hw.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Utilities/TRACER_EMB/tracer_emb_hw.c ****   *
  17:Utilities/TRACER_EMB/tracer_emb_hw.c ****   ******************************************************************************
  18:Utilities/TRACER_EMB/tracer_emb_hw.c ****   */
  19:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
  20:Utilities/TRACER_EMB/tracer_emb_hw.c **** /* Includes ------------------------------------------------------------------*/
  21:Utilities/TRACER_EMB/tracer_emb_hw.c **** #include "tracer_emb.h"
  22:Utilities/TRACER_EMB/tracer_emb_hw.c **** #include "tracer_emb_hw.h"
  23:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
  24:Utilities/TRACER_EMB/tracer_emb_hw.c **** #if TRACER_EMB_DMA_MODE == 1UL && TRACER_EMB_IT_MODE == 1UL
  25:Utilities/TRACER_EMB/tracer_emb_hw.c **** #error "tracer emb hw please select DMA or IT mode"
  26:Utilities/TRACER_EMB/tracer_emb_hw.c **** #endif
  27:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
  28:Utilities/TRACER_EMB/tracer_emb_hw.c **** /* Private typedef -----------------------------------------------------------*/
  29:Utilities/TRACER_EMB/tracer_emb_hw.c **** /* Private Defines -----------------------------------------------------------*/
  30:Utilities/TRACER_EMB/tracer_emb_hw.c **** #if (TRACER_EMB_IS_INSTANCE_LPUART_TYPE == 1UL)
  31:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
  32:Utilities/TRACER_EMB/tracer_emb_hw.c **** /* LPUART entry point */
  33:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ENABLEDIRECTIONRX    LL_LPUART_EnableDirectionRx
  34:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_RECEIVE_DATA8        LL_LPUART_ReceiveData8
  35:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_TRANSMIT_DATA8       LL_LPUART_TransmitData8
  36:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_DMA_GETREGADDR       LL_LPUART_DMA_GetRegAddr
  37:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ENABLEDMAREQ_TX      LL_LPUART_EnableDMAReq_TX
  38:Utilities/TRACER_EMB/tracer_emb_hw.c ****  
  39:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ENABLE_IT_RXNE       LL_LPUART_EnableIT_RXNE
  40:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ENABLE_IT_ERROR      LL_LPUART_EnableIT_ERROR
  41:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ENABLE_IT_TXE        LL_LPUART_EnableIT_TXE
  42:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ENABLE_IT_TC         LL_LPUART_EnableIT_TC
  43:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
  44:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_DISABLEIT_TXE        LL_LPUART_DisableIT_TXE
  45:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_DISABLEIT_TC         LL_LPUART_DisableIT_TC
  46:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
  47:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISACTIVEFLAG_TXE     LL_LPUART_IsActiveFlag_TXE
  48:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISACTIVEFLAG_PE      LL_LPUART_IsActiveFlag_PE
  49:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISACTIVEFLAG_RXNE    LL_LPUART_IsActiveFlag_RXNE
  50:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISACTIVEFLAG_FE      LL_LPUART_IsActiveFlag_FE
  51:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISACTIVEFLAG_ORE     LL_LPUART_IsActiveFlag_ORE
  52:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISACTIVEFLAG_NE      LL_LPUART_IsActiveFlag_NE
  53:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISACTIVEFLAG_TC      LL_LPUART_IsActiveFlag_TC
  54:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
  55:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISENABLEDIT_TXE      LL_LPUART_IsEnabledIT_TXE
  56:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISENABLEDIT_RXNE     LL_LPUART_IsEnabledIT_RXNE
  57:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISENABLEDIT_PE       LL_LPUART_IsEnabledIT_PE
  58:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISENABLEDIT_ERROR    LL_LPUART_IsEnabledIT_ERROR
  59:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISENABLEDIT_TC       LL_LPUART_IsEnabledIT_TC
  60:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
  61:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_CLEARFLAG_PE         LL_LPUART_ClearFlag_PE
  62:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_CLEARFLAG_FE         LL_LPUART_ClearFlag_FE
  63:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_CLEARFLAG_ORE        LL_LPUART_ClearFlag_ORE
  64:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_CLEARFLAG_NE         LL_LPUART_ClearFlag_NE
  65:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_CLEARFLAG_TC         LL_LPUART_ClearFlag_TC
  66:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
  67:Utilities/TRACER_EMB/tracer_emb_hw.c **** #else
  68:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
ARM GAS  /tmp/ccV1cKci.s 			page 11


  69:Utilities/TRACER_EMB/tracer_emb_hw.c **** /* UART entry point */
  70:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ENABLEDIRECTIONRX    LL_USART_EnableDirectionRx
  71:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_RECEIVE_DATA8        LL_USART_ReceiveData8
  72:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_TRANSMIT_DATA8       LL_USART_TransmitData8
  73:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_DMA_GETREGADDR       LL_USART_DMA_GetRegAddr
  74:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ENABLEDMAREQ_TX      LL_USART_EnableDMAReq_TX
  75:Utilities/TRACER_EMB/tracer_emb_hw.c ****  
  76:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ENABLE_IT_RXNE       LL_USART_EnableIT_RXNE
  77:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ENABLE_IT_ERROR      LL_USART_EnableIT_ERROR
  78:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ENABLE_IT_TXE        LL_USART_EnableIT_TXE
  79:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ENABLE_IT_TC         LL_USART_EnableIT_TC
  80:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
  81:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_DISABLEIT_TXE        LL_USART_DisableIT_TXE
  82:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_DISABLEIT_TC         LL_USART_DisableIT_TC
  83:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
  84:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISACTIVEFLAG_TXE     LL_USART_IsActiveFlag_TXE
  85:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISACTIVEFLAG_PE      LL_USART_IsActiveFlag_PE
  86:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISACTIVEFLAG_RXNE    LL_USART_IsActiveFlag_RXNE
  87:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISACTIVEFLAG_FE      LL_USART_IsActiveFlag_FE
  88:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISACTIVEFLAG_ORE     LL_USART_IsActiveFlag_ORE
  89:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISACTIVEFLAG_NE      LL_USART_IsActiveFlag_NE
  90:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISACTIVEFLAG_TC      LL_USART_IsActiveFlag_TC
  91:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISACTIVEFLAG_RTO     LL_USART_IsActiveFlag_RTO
  92:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
  93:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISENABLEDIT_TXE      LL_USART_IsEnabledIT_TXE
  94:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISENABLEDIT_RXNE     LL_USART_IsEnabledIT_RXNE
  95:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISENABLEDIT_PE       LL_USART_IsEnabledIT_PE
  96:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISENABLEDIT_ERROR    LL_USART_IsEnabledIT_ERROR
  97:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISENABLEDIT_TC       LL_USART_IsEnabledIT_TC
  98:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_ISENABLEDIT_RTO      LL_USART_IsEnabledIT_RTO
  99:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 100:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_CLEARFLAG_PE         LL_USART_ClearFlag_PE
 101:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_CLEARFLAG_FE         LL_USART_ClearFlag_FE
 102:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_CLEARFLAG_ORE        LL_USART_ClearFlag_ORE
 103:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_CLEARFLAG_NE         LL_USART_ClearFlag_NE
 104:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_CLEARFLAG_TC         LL_USART_ClearFlag_TC
 105:Utilities/TRACER_EMB/tracer_emb_hw.c **** #define TRACER_EMB_CLEARFLAG_RTO        LL_USART_ClearFlag_RTO
 106:Utilities/TRACER_EMB/tracer_emb_hw.c **** #endif
 107:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 108:Utilities/TRACER_EMB/tracer_emb_hw.c **** /* Private Variables ---------------------------------------------------------*/
 109:Utilities/TRACER_EMB/tracer_emb_hw.c **** static void (*fptr_rx)(uint8_t, uint8_t) = NULL;
 110:Utilities/TRACER_EMB/tracer_emb_hw.c **** #if TRACER_EMB_IT_MODE == 1UL
 111:Utilities/TRACER_EMB/tracer_emb_hw.c ****   uint8_t *txData = NULL;
 112:Utilities/TRACER_EMB/tracer_emb_hw.c ****   uint32_t txSize = 0;
 113:Utilities/TRACER_EMB/tracer_emb_hw.c **** #endif
 114:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 115:Utilities/TRACER_EMB/tracer_emb_hw.c **** /* Private function prototypes -----------------------------------------------*/
 116:Utilities/TRACER_EMB/tracer_emb_hw.c **** /* Exported functions --------------------------------------------------------*/
 117:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 118:Utilities/TRACER_EMB/tracer_emb_hw.c **** /**
 119:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * @brief  Trace init
 120:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * @param  callbackTX
 121:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * @param  callbackRX
 122:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * @retval none
 123:Utilities/TRACER_EMB/tracer_emb_hw.c ****   */
 124:Utilities/TRACER_EMB/tracer_emb_hw.c **** void HW_TRACER_EMB_Init(void)
 125:Utilities/TRACER_EMB/tracer_emb_hw.c **** {
ARM GAS  /tmp/ccV1cKci.s 			page 12


  75              		.loc 2 125 1 is_stmt 1 view -0
  76              		.cfi_startproc
  77              		@ args = 0, pretend = 0, frame = 40
  78              		@ frame_needed = 0, uses_anonymous_args = 0
 126:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* Enable the peripheral clock of GPIO Port */
 127:Utilities/TRACER_EMB/tracer_emb_hw.c ****   TRACER_EMB_TX_GPIO_ENABLE_CLOCK();
  79              		.loc 2 127 3 view .LVU11
  80              	.LBB121:
  81              	.LBI121:
 431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Check if APB1 peripheral clock is enabled or not
 434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBENR1      TIM2EN        LL_APB1_GRP1_IsEnabledClock\n
 435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM3EN        LL_APB1_GRP1_IsEnabledClock\n
 436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM6EN        LL_APB1_GRP1_IsEnabledClock\n
 437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM7EN        LL_APB1_GRP1_IsEnabledClock\n
 438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      RTCAPBEN      LL_APB1_GRP1_IsEnabledClock\n
 439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      WWDGEN        LL_APB1_GRP1_IsEnabledClock\n
 440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      SPI2EN        LL_APB1_GRP1_IsEnabledClock\n
 441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART2EN      LL_APB1_GRP1_IsEnabledClock\n
 442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART3EN      LL_APB1_GRP1_IsEnabledClock\n
 443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART4EN      LL_APB1_GRP1_IsEnabledClock\n
 444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPUART1EN     LL_APB1_GRP1_IsEnabledClock\n
 445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      I2C1EN        LL_APB1_GRP1_IsEnabledClock\n
 446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      I2C2EN        LL_APB1_GRP1_IsEnabledClock\n
 447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      CECEN         LL_APB1_GRP1_IsEnabledClock\n
 448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      UCPD1EN       LL_APB1_GRP1_IsEnabledClock\n
 449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      UCPD2EN       LL_APB1_GRP1_IsEnabledClock\n
 450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      DBGEN         LL_APB1_GRP1_IsEnabledClock\n
 451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      PWREN         LL_APB1_GRP1_IsEnabledClock\n
 452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      DAC1EN        LL_APB1_GRP1_IsEnabledClock\n
 453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPTIM2EN      LL_APB1_GRP1_IsEnabledClock\n
 454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPTIM1EN      LL_APB1_GRP1_IsEnabledClock
 455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2    (1)
 457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6    (1)
 459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7    (1)
 460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTC
 461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3  (1)
 465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4  (1)
 466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1 (1)
 467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC     (1)
 470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD1   (1)
 471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD2   (1)
 472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DBGMCU
 473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1    (1)
 475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM2  (1)
 476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1  (1)
 477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note Peripheral marked with (1) are not available all devices
 478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
ARM GAS  /tmp/ccV1cKci.s 			page 13


 479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB1_GRP1_IsEnabledClock(uint32_t Periphs)
 481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   return ((READ_BIT(RCC->APBENR1, Periphs) == (Periphs)) ? 1UL : 0UL);
 483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Disable APB1 peripherals clock.
 487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBENR1      TIM2EN        LL_APB1_GRP1_DisableClock\n
 488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM3EN        LL_APB1_GRP1_DisableClock\n
 489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM6EN        LL_APB1_GRP1_DisableClock\n
 490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      TIM7EN        LL_APB1_GRP1_DisableClock\n
 491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      RTCAPBEN      LL_APB1_GRP1_DisableClock\n
 492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      WWDGEN        LL_APB1_GRP1_DisableClock\n
 493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      SPI2EN        LL_APB1_GRP1_DisableClock\n
 494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART2EN      LL_APB1_GRP1_DisableClock\n
 495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART3EN      LL_APB1_GRP1_DisableClock\n
 496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      USART4EN      LL_APB1_GRP1_DisableClock\n
 497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPUART1EN     LL_APB1_GRP1_DisableClock\n
 498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      I2C1EN        LL_APB1_GRP1_DisableClock\n
 499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      I2C2EN        LL_APB1_GRP1_DisableClock\n
 500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      CECEN         LL_APB1_GRP1_DisableClock\n
 501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      UCPD1EN       LL_APB1_GRP1_DisableClock\n
 502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      UCPD2EN       LL_APB1_GRP1_DisableClock\n
 503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      DBGEN         LL_APB1_GRP1_DisableClock\n
 504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      PWREN         LL_APB1_GRP1_DisableClock\n
 505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      DAC1EN        LL_APB1_GRP1_DisableClock\n
 506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPTIM2EN      LL_APB1_GRP1_DisableClock\n
 507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR1      LPTIM1EN      LL_APB1_GRP1_DisableClock
 508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2    (1)
 510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6    (1)
 512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7    (1)
 513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTC
 514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3  (1)
 518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4  (1)
 519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1 (1)
 520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC     (1)
 523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD1   (1)
 524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD2   (1)
 525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DBGMCU
 526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1    (1)
 528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM2  (1)
 529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1  (1)
 530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note Peripheral marked with (1) are not available all devices
 531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClock(uint32_t Periphs)
 534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   CLEAR_BIT(RCC->APBENR1, Periphs);
ARM GAS  /tmp/ccV1cKci.s 			page 14


 536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Force APB1 peripherals reset.
 540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBRSTR1     TIM2RST       LL_APB1_GRP1_ForceReset\n
 541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     TIM3RST       LL_APB1_GRP1_ForceReset\n
 542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     TIM6RST       LL_APB1_GRP1_ForceReset\n
 543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     TIM7RST       LL_APB1_GRP1_ForceReset\n
 544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     RTCRST        LL_APB1_GRP1_ForceReset\n
 545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     WWDGRST       LL_APB1_GRP1_ForceReset\n
 546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     SPI2RST       LL_APB1_GRP1_ForceReset\n
 547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     USART2RST     LL_APB1_GRP1_ForceReset\n
 548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     USART3RST     LL_APB1_GRP1_ForceReset\n
 549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     USART4RST     LL_APB1_GRP1_ForceReset\n
 550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     LPUART1RST    LL_APB1_GRP1_ForceReset\n
 551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     I2C1RST       LL_APB1_GRP1_ForceReset\n
 552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     I2C2RST       LL_APB1_GRP1_ForceReset\n
 553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     CECRST        LL_APB1_GRP1_ForceReset\n
 554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     UCPD1RST      LL_APB1_GRP1_ForceReset\n
 555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     UCPD2RST      LL_APB1_GRP1_ForceReset\n
 556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     DBGRST        LL_APB1_GRP1_ForceReset\n
 557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     PWRRST        LL_APB1_GRP1_ForceReset\n
 558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     DAC1RST       LL_APB1_GRP1_ForceReset\n
 559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     LPTIM2RST     LL_APB1_GRP1_ForceReset\n
 560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     LPTIM1RST     LL_APB1_GRP1_ForceReset
 561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2    (1)
 564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6    (1)
 566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7    (1)
 567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTC
 568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3  (1)
 572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4  (1)
 573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1 (1)
 574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC     (1)
 577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD1   (1)
 578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD2   (1)
 579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DBGMCU
 580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1    (1)
 582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM2  (1)
 583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1  (1)
 584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note Peripheral marked with (1) are not available all devices
 585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ForceReset(uint32_t Periphs)
 588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->APBRSTR1, Periphs);
 590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
ARM GAS  /tmp/ccV1cKci.s 			page 15


 593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Release APB1 peripherals reset.
 594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBRSTR1     TIM2RST       LL_APB1_GRP1_ReleaseReset\n
 595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     TIM3RST       LL_APB1_GRP1_ReleaseReset\n
 596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     TIM6RST       LL_APB1_GRP1_ReleaseReset\n
 597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     TIM7RST       LL_APB1_GRP1_ReleaseReset\n
 598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     RTCRST        LL_APB1_GRP1_ReleaseReset\n
 599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     WWDGRST       LL_APB1_GRP1_ReleaseReset\n
 600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     SPI2RST       LL_APB1_GRP1_ReleaseReset\n
 601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     USART2RST     LL_APB1_GRP1_ReleaseReset\n
 602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     USART3RST     LL_APB1_GRP1_ReleaseReset\n
 603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     USART4RST     LL_APB1_GRP1_ReleaseReset\n
 604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     LPUART1RST    LL_APB1_GRP1_ReleaseReset\n
 605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     I2C1RST       LL_APB1_GRP1_ReleaseReset\n
 606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     I2C2RST       LL_APB1_GRP1_ReleaseReset\n
 607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     CECRST        LL_APB1_GRP1_ReleaseReset\n
 608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     UCPD1RST      LL_APB1_GRP1_ReleaseReset\n
 609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     UCPD2RST      LL_APB1_GRP1_ReleaseReset\n
 610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     DBGRST        LL_APB1_GRP1_ReleaseReset\n
 611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     PWRRST        LL_APB1_GRP1_ReleaseReset\n
 612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     DAC1RST       LL_APB1_GRP1_ReleaseReset\n
 613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     LPTIM2RST     LL_APB1_GRP1_ReleaseReset\n
 614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR1     LPTIM1RST     LL_APB1_GRP1_ReleaseReset
 615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_ALL
 617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2    (1)
 618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6    (1)
 620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7    (1)
 621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTC
 622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3  (1)
 626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4  (1)
 627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1 (1)
 628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC     (1)
 631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD1   (1)
 632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD2   (1)
 633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DBGMCU
 634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1    (1)
 636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM2  (1)
 637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1  (1)
 638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note Peripheral marked with (1) are not available all devices
 639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_ReleaseReset(uint32_t Periphs)
 642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   CLEAR_BIT(RCC->APBRSTR1, Periphs);
 644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Enable APB1 peripheral clocks in Sleep and Stop modes
 648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBSMENR1    TIM2SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    TIM3SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
ARM GAS  /tmp/ccV1cKci.s 			page 16


 650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    TIM6SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    TIM7SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    RTCAPBSMEN    LL_APB1_GRP1_EnableClockStopSleep\n
 653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    WWDGSMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    SPI2SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    USART2SMEN    LL_APB1_GRP1_EnableClockStopSleep\n
 656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    USART3SMEN    LL_APB1_GRP1_EnableClockStopSleep\n
 657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    USART4SMEN    LL_APB1_GRP1_EnableClockStopSleep\n
 658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    LPUART1SMEN   LL_APB1_GRP1_EnableClockStopSleep\n
 659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    I2C1SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    I2C2SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    CECSMEN       LL_APB1_GRP1_EnableClockStopSleep\n
 662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    UCPD1SMEN     LL_APB1_GRP1_EnableClockStopSleep\n
 663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    UCPD2SMEN     LL_APB1_GRP1_EnableClockStopSleep\n
 664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    DBGSMEN       LL_APB1_GRP1_EnableClockStopSleep\n
 665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    PWRSMEN       LL_APB1_GRP1_EnableClockStopSleep\n
 666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    DAC1SMEN      LL_APB1_GRP1_EnableClockStopSleep\n
 667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    LPTIM2SMEN    LL_APB1_GRP1_EnableClockStopSleep\n
 668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    LPTIM1SMEN    LL_APB1_GRP1_EnableClockStopSleep
 669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2    (1)
 671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6    (1)
 673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7    (1)
 674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTC
 675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3  (1)
 679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4  (1)
 680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1 (1)
 681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC     (1)
 684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD1   (1)
 685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD2   (1)
 686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DBGMCU
 687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1    (1)
 689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM2  (1)
 690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1  (1)
 691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note Peripheral marked with (1) are not available all devices
 692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_EnableClockStopSleep(uint32_t Periphs)
 695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->APBSMENR1, Periphs);
 698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APBSMENR1, Periphs);
 700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   (void)tmpreg;
 701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Disable APB1 peripheral clocks in Sleep and Stop modes
 705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBSMENR1    TIM2SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    TIM3SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
ARM GAS  /tmp/ccV1cKci.s 			page 17


 707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    TIM6SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    TIM7SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    RTCAPBSMEN    LL_APB1_GRP1_DisableClockStopSleep\n
 710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    WWDGSMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    SPI2SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    USART2SMEN    LL_APB1_GRP1_DisableClockStopSleep\n
 713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    USART3SMEN    LL_APB1_GRP1_DisableClockStopSleep\n
 714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    USART4SMEN    LL_APB1_GRP1_DisableClockStopSleep\n
 715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    LPUART1SMEN   LL_APB1_GRP1_DisableClockStopSleep\n
 716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    I2C1SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    I2C2SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    CECSMEN       LL_APB1_GRP1_DisableClockStopSleep\n
 719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    UCPD1SMEN     LL_APB1_GRP1_DisableClockStopSleep\n
 720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    UCPD2SMEN     LL_APB1_GRP1_DisableClockStopSleep\n
 721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    DBGSMEN       LL_APB1_GRP1_DisableClockStopSleep\n
 722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    PWRSMEN       LL_APB1_GRP1_DisableClockStopSleep\n
 723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    DAC1SMEN      LL_APB1_GRP1_DisableClockStopSleep\n
 724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    LPTIM2SMEN    LL_APB1_GRP1_DisableClockStopSleep\n
 725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR1    LPTIM1SMEN    LL_APB1_GRP1_DisableClockStopSleep
 726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM2    (1)
 728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM3
 729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM6    (1)
 730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_TIM7    (1)
 731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_RTC
 732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_WWDG
 733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_SPI2
 734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART2
 735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART3  (1)
 736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_USART4  (1)
 737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPUART1 (1)
 738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C1
 739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_I2C2
 740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_CEC     (1)
 741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD1   (1)
 742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_UCPD2   (1)
 743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DBGMCU
 744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_PWR
 745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_DAC1    (1)
 746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM2  (1)
 747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB1_GRP1_PERIPH_LPTIM1  (1)
 748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note Peripheral marked with (1) are not available all devices
 749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB1_GRP1_DisableClockStopSleep(uint32_t Periphs)
 752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   CLEAR_BIT(RCC->APBSMENR1, Periphs);
 754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @}
 758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_APB2 APB2
 761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
 762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
ARM GAS  /tmp/ccV1cKci.s 			page 18


 764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Enable APB2 peripherals clock.
 766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBENR2      SYSCFGEN      LL_APB2_GRP1_EnableClock\n
 767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM1EN        LL_APB2_GRP1_EnableClock\n
 768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      SPI1EN        LL_APB2_GRP1_EnableClock\n
 769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      USART1EN      LL_APB2_GRP1_EnableClock\n
 770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM14EN       LL_APB2_GRP1_EnableClock\n
 771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM15EN       LL_APB2_GRP1_EnableClock\n (*)
 772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM16EN       LL_APB2_GRP1_EnableClock\n
 773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM17EN       LL_APB2_GRP1_EnableClock\n
 774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      ADCEN         LL_APB2_GRP1_EnableClock
 775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM1
 778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
 780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM14
 781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM15 (*)
 782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM16
 783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM17
 784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC
 785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note (*) peripheral not available on all devices
 786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClock(uint32_t Periphs)
 789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->APBENR2, Periphs);
 792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APBENR2, Periphs);
 794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   (void)tmpreg;
 795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Check if APB2 peripheral clock is enabled or not
 799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBENR2      SYSCFGEN      LL_APB2_GRP1_IsEnabledClock\n
 800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM1EN        LL_APB2_GRP1_IsEnabledClock\n
 801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      SPI1EN        LL_APB2_GRP1_IsEnabledClock\n
 802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      USART1EN      LL_APB2_GRP1_IsEnabledClock\n
 803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM14EN       LL_APB2_GRP1_IsEnabledClock\n
 804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM15EN       LL_APB2_GRP1_IsEnabledClock\n (*)
 805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM16EN       LL_APB2_GRP1_IsEnabledClock\n
 806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM17EN       LL_APB2_GRP1_IsEnabledClock\n
 807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      ADCEN         LL_APB2_GRP1_IsEnabledClock
 808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM1
 811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
 813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM14
 814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM15 (*)
 815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM16
 816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM17
 817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC
 818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note (*) peripheral not available on all devices
 819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval State of Periphs (1 or 0).
 820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
ARM GAS  /tmp/ccV1cKci.s 			page 19


 821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE uint32_t LL_APB2_GRP1_IsEnabledClock(uint32_t Periphs)
 822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   return ((READ_BIT(RCC->APBENR2, Periphs) == (Periphs)) ? 1UL : 0UL);
 824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Disable APB2 peripherals clock.
 828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBENR2      SYSCFGEN      LL_APB2_GRP1_DisableClock\n
 829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM1EN        LL_APB2_GRP1_DisableClock\n
 830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      SPI1EN        LL_APB2_GRP1_DisableClock\n
 831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      USART1EN      LL_APB2_GRP1_DisableClock\n
 832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM14EN       LL_APB2_GRP1_DisableClock\n
 833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM15EN       LL_APB2_GRP1_DisableClock\n (*)
 834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM16EN       LL_APB2_GRP1_DisableClock\n
 835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      TIM17EN       LL_APB2_GRP1_DisableClock\n
 836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBENR2      ADCEN         LL_APB2_GRP1_DisableClock
 837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM1
 840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
 842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM14
 843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM15 (*)
 844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM16
 845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM17
 846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC
 847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note (*) peripheral not available on all devices
 848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_DisableClock(uint32_t Periphs)
 851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   CLEAR_BIT(RCC->APBENR2, Periphs);
 853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Force APB2 peripherals reset.
 857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBRSTR2     SYSCFGRST     LL_APB2_GRP1_ForceReset\n
 858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     TIM1RST       LL_APB2_GRP1_ForceReset\n
 859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     SPI1RST       LL_APB2_GRP1_ForceReset\n
 860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     USART1RST     LL_APB2_GRP1_ForceReset\n
 861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     TIM14RST      LL_APB2_GRP1_ForceReset\n
 862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     TIM15RST      LL_APB2_GRP1_ForceReset\n (*)
 863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     TIM16RST      LL_APB2_GRP1_ForceReset\n
 864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     TIM17RST      LL_APB2_GRP1_ForceReset\n
 865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     ADCRST        LL_APB2_GRP1_ForceReset
 866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ALL
 868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM1
 870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
 872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM14
 873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM15 (*)
 874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM16
 875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM17
 876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC
 877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note (*) peripheral not available on all devices
ARM GAS  /tmp/ccV1cKci.s 			page 20


 878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_ForceReset(uint32_t Periphs)
 881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->APBRSTR2, Periphs);
 883:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 884:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 885:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 886:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Release APB2 peripherals reset.
 887:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBRSTR2     SYSCFGRST     LL_APB2_GRP1_ReleaseReset\n
 888:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     TIM1RST       LL_APB2_GRP1_ReleaseReset\n
 889:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     SPI1RST       LL_APB2_GRP1_ReleaseReset\n
 890:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     USART1RST     LL_APB2_GRP1_ReleaseReset\n
 891:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     TIM14RST      LL_APB2_GRP1_ReleaseReset\n
 892:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     TIM15RST      LL_APB2_GRP1_ReleaseReset\n (*)
 893:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     TIM16RST      LL_APB2_GRP1_ReleaseReset\n
 894:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     TIM17RST      LL_APB2_GRP1_ReleaseReset\n
 895:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBRSTR2     ADCRST        LL_APB2_GRP1_ReleaseReset
 896:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 897:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ALL
 898:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM1
 900:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
 902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM14
 903:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM15 (*)
 904:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM16
 905:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM17
 906:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC
 907:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note (*) peripheral not available on all devices
 908:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 909:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 910:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_ReleaseReset(uint32_t Periphs)
 911:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   CLEAR_BIT(RCC->APBRSTR2, Periphs);
 913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 914:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 915:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 916:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Enable APB2 peripheral clocks in Sleep and Stop modes
 917:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBSMENR2    SYSCFGSMEN    LL_APB2_GRP1_EnableClockStopSleep\n
 918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR2    TIM1SMEN      LL_APB2_GRP1_EnableClockStopSleep\n
 919:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR2    SPI1SMEN      LL_APB2_GRP1_EnableClockStopSleep\n
 920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR2    USART1SMEN    LL_APB2_GRP1_EnableClockStopSleep\n
 921:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR2    TIM14SMEN     LL_APB2_GRP1_EnableClockStopSleep\n
 922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR2    TIM15SMEN     LL_APB2_GRP1_EnableClockStopSleep\n (*)
 923:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR2    TIM16SMEN     LL_APB2_GRP1_EnableClockStopSleep\n
 924:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR2    TIM17SMEN     LL_APB2_GRP1_EnableClockStopSleep\n
 925:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR2    ADCSMEN       LL_APB2_GRP1_EnableClockStopSleep
 926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 927:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 928:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM1
 929:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
 931:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM14
 932:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM15 (*)
 933:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM16
 934:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM17
ARM GAS  /tmp/ccV1cKci.s 			page 21


 935:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC
 936:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note (*) peripheral not available on all devices 
 937:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 938:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 939:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_EnableClockStopSleep(uint32_t Periphs)
 940:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 941:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   __IO uint32_t tmpreg;
 942:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->APBSMENR2, Periphs);
 943:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->APBSMENR2, Periphs);
 945:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   (void)tmpreg;
 946:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 947:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 948:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 949:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Disable APB2 peripheral clocks in Sleep and Stop modes
 950:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll APBSMENR2    SYSCFGSMEN    LL_APB2_GRP1_DisableClockStopSleep\n
 951:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR2    TIM1SMEN      LL_APB2_GRP1_DisableClockStopSleep\n
 952:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR2    SPI1SMEN      LL_APB2_GRP1_DisableClockStopSleep\n
 953:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR2    USART1SMEN    LL_APB2_GRP1_DisableClockStopSleep\n
 954:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR2    TIM14SMEN     LL_APB2_GRP1_DisableClockStopSleep\n
 955:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR2    TIM15SMEN     LL_APB2_GRP1_DisableClockStopSleep\n (*)
 956:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR2    TIM16SMEN     LL_APB2_GRP1_DisableClockStopSleep\n
 957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR2    TIM17SMEN     LL_APB2_GRP1_DisableClockStopSleep\n
 958:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         APBSMENR2    ADCSMEN       LL_APB2_GRP1_DisableClockStopSleep
 959:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SYSCFG
 961:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM1
 962:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_SPI1
 963:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_USART1
 964:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM14
 965:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM15 (*)
 966:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM16
 967:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_TIM17
 968:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_APB2_GRP1_PERIPH_ADC
 969:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @note (*) peripheral not available on all devices
 970:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 971:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
 972:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_APB2_GRP1_DisableClockStopSleep(uint32_t Periphs)
 973:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 974:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   CLEAR_BIT(RCC->APBSMENR2, Periphs);
 975:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 976:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 977:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 978:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @}
 979:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 980:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 981:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /** @defgroup BUS_LL_EF_IOP IOP
 982:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @{
 983:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   */
 984:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** 
 985:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** /**
 986:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @brief  Enable IOP peripherals clock.
 987:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @rmtoll IOPENR       GPIOAEN       LL_IOP_GRP1_EnableClock\n
 988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         IOPENR       GPIOBEN       LL_IOP_GRP1_EnableClock\n
 989:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         IOPENR       GPIOCEN       LL_IOP_GRP1_EnableClock\n
 990:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         IOPENR       GPIODEN       LL_IOP_GRP1_EnableClock\n
 991:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         IOPENR       GPIOFEN       LL_IOP_GRP1_EnableClock
ARM GAS  /tmp/ccV1cKci.s 			page 22


 992:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @param  Periphs This parameter can be a combination of the following values:
 993:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOA
 994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOB
 995:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOC
 996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOD
 997:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   *         @arg @ref LL_IOP_GRP1_PERIPH_GPIOF
 998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   * @retval None
 999:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** */
1000:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** __STATIC_INLINE void LL_IOP_GRP1_EnableClock(uint32_t Periphs)
  82              		.loc 1 1000 22 view .LVU12
  83              	.LVL1:
  84              	.LBB122:
1001:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
1002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   __IO uint32_t tmpreg;
  85              		.loc 1 1002 3 view .LVU13
1003:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->IOPENR, Periphs);
  86              		.loc 1 1003 3 view .LVU14
  87              	.LBE122:
  88              	.LBE121:
 125:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* Enable the peripheral clock of GPIO Port */
  89              		.loc 2 125 1 is_stmt 0 view .LVU15
  90 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  91              	.LCFI1:
  92              		.cfi_def_cfa_offset 20
  93              		.cfi_offset 4, -20
  94              		.cfi_offset 5, -16
  95              		.cfi_offset 6, -12
  96              		.cfi_offset 7, -8
  97              		.cfi_offset 14, -4
  98              	.LBB127:
  99              	.LBB123:
 100              		.loc 1 1003 3 view .LVU16
 101 0002 0125     		movs	r5, #1
 102 0004 4F4C     		ldr	r4, .L11
 103              	.LBE123:
 104              	.LBE127:
 125:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* Enable the peripheral clock of GPIO Port */
 105              		.loc 2 125 1 view .LVU17
 106 0006 8BB0     		sub	sp, sp, #44
 107              	.LCFI2:
 108              		.cfi_def_cfa_offset 64
 109              	.LBB128:
 110              	.LBB124:
 111              		.loc 1 1003 3 view .LVU18
 112 0008 636B     		ldr	r3, [r4, #52]
 113              	.LBE124:
 114              	.LBE128:
 115              	.LBB129:
 116              	.LBB130:
 117              		.file 3 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h"
   1:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @file    stm32g0xx_ll_gpio.h
   4:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @brief   Header file of GPIO LL module.
   6:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   ******************************************************************************
   7:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @attention
ARM GAS  /tmp/ccV1cKci.s 			page 23


   8:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *
   9:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * <h2><center>&copy; Copyright (c) 2018 STMicroelectronics. 
  10:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *
  12:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * the "License"; You may not use this file except in compliance with the 
  14:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *
  17:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   ******************************************************************************
  18:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
  19:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
  20:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #ifndef STM32G0xx_LL_GPIO_H
  22:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define STM32G0xx_LL_GPIO_H
  23:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
  24:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #ifdef __cplusplus
  25:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** extern "C" {
  26:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #endif
  27:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
  28:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #include "stm32g0xx.h"
  30:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
  31:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /** @addtogroup STM32G0xx_LL_Driver
  32:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @{
  33:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
  34:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
  35:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #if defined (GPIOA) || defined (GPIOB) || defined (GPIOC) || defined (GPIOD) || defined (GPIOE) || 
  36:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
  37:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /** @defgroup GPIO_LL GPIO
  38:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @{
  39:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
  40:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /** MISRA C:2012 deviation rule has been granted for following rules:
  41:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * Rule-18.1_d - Medium: Array pointer `GPIOx' is accessed with index [..,..]
  42:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * which may be out of array bounds [..,UNKNOWN] in following APIs:
  43:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_0_7
  44:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_0_7
  45:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * LL_GPIO_SetAFPin_8_15
  46:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * LL_GPIO_GetAFPin_8_15
  47:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
  48:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
  49:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /* Private types -------------------------------------------------------------*/
  50:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /* Private variables ---------------------------------------------------------*/
  51:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /* Private constants ---------------------------------------------------------*/
  52:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /* Private macros ------------------------------------------------------------*/
  53:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
  54:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /** @defgroup GPIO_LL_Private_Macros GPIO Private Macros
  55:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @{
  56:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
  57:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
  58:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /**
  59:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @}
  60:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
  61:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #endif /*USE_FULL_LL_DRIVER*/
  62:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
  63:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /* Exported types ------------------------------------------------------------*/
  64:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #if defined(USE_FULL_LL_DRIVER)
ARM GAS  /tmp/ccV1cKci.s 			page 24


  65:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /** @defgroup GPIO_LL_ES_INIT GPIO Exported Init structures
  66:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @{
  67:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
  68:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
  69:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /**
  70:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @brief LL GPIO Init Structure definition
  71:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
  72:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** typedef struct
  73:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** {
  74:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   uint32_t Pin;          /*!< Specifies the GPIO pins to be configured.
  75:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****                               This parameter can be any value of @ref GPIO_LL_EC_PIN */
  76:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
  77:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   uint32_t Mode;         /*!< Specifies the operating mode for the selected pins.
  78:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_MODE.
  79:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
  80:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  81:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
  82:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   uint32_t Speed;        /*!< Specifies the speed for the selected pins.
  83:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_SPEED.
  84:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
  85:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  86:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
  87:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   uint32_t OutputType;   /*!< Specifies the operating output type for the selected pins.
  88:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_OUTPUT.
  89:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
  90:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  91:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
  92:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   uint32_t Pull;         /*!< Specifies the operating Pull-up/Pull down for the selected pins.
  93:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_PULL.
  94:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
  95:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
  96:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
  97:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   uint32_t Alternate;    /*!< Specifies the Peripheral to be connected to the selected pins.
  98:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****                               This parameter can be a value of @ref GPIO_LL_EC_AF.
  99:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****                               GPIO HW configuration can be modified afterwards using unitary functi
 101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** } LL_GPIO_InitTypeDef;
 102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /**
 104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @}
 105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #endif /* USE_FULL_LL_DRIVER */
 107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /* Exported constants --------------------------------------------------------*/
 109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Constants GPIO Exported Constants
 110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @{
 111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PIN PIN
 114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @{
 115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_PIN_0                      GPIO_BSRR_BS0 /*!< Select pin 0 */
 117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_PIN_1                      GPIO_BSRR_BS1 /*!< Select pin 1 */
 118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_PIN_2                      GPIO_BSRR_BS2 /*!< Select pin 2 */
 119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_PIN_3                      GPIO_BSRR_BS3 /*!< Select pin 3 */
 120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_PIN_4                      GPIO_BSRR_BS4 /*!< Select pin 4 */
 121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_PIN_5                      GPIO_BSRR_BS5 /*!< Select pin 5 */
ARM GAS  /tmp/ccV1cKci.s 			page 25


 122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_PIN_6                      GPIO_BSRR_BS6 /*!< Select pin 6 */
 123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_PIN_7                      GPIO_BSRR_BS7 /*!< Select pin 7 */
 124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_PIN_8                      GPIO_BSRR_BS8 /*!< Select pin 8 */
 125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_PIN_9                      GPIO_BSRR_BS9 /*!< Select pin 9 */
 126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_PIN_10                     GPIO_BSRR_BS10 /*!< Select pin 10 */
 127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_PIN_11                     GPIO_BSRR_BS11 /*!< Select pin 11 */
 128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_PIN_12                     GPIO_BSRR_BS12 /*!< Select pin 12 */
 129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_PIN_13                     GPIO_BSRR_BS13 /*!< Select pin 13 */
 130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_PIN_14                     GPIO_BSRR_BS14 /*!< Select pin 14 */
 131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_PIN_15                     GPIO_BSRR_BS15 /*!< Select pin 15 */
 132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_PIN_ALL                    (GPIO_BSRR_BS0 | GPIO_BSRR_BS1  | GPIO_BSRR_BS2  | \
 133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****                                            GPIO_BSRR_BS3  | GPIO_BSRR_BS4  | GPIO_BSRR_BS5  | \
 134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****                                            GPIO_BSRR_BS6  | GPIO_BSRR_BS7  | GPIO_BSRR_BS8  | \
 135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****                                            GPIO_BSRR_BS9  | GPIO_BSRR_BS10 | GPIO_BSRR_BS11 | \
 136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****                                            GPIO_BSRR_BS12 | GPIO_BSRR_BS13 | GPIO_BSRR_BS14 | \
 137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****                                            GPIO_BSRR_BS15) /*!< Select all pins */
 138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /**
 139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @}
 140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_MODE Mode
 143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @{
 144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_MODE_INPUT                 (0x00000000U) /*!< Select input mode */
 146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_MODE_OUTPUT                GPIO_MODER_MODE0_0  /*!< Select output mode */
 147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_MODE_ALTERNATE             GPIO_MODER_MODE0_1  /*!< Select alternate function mode 
 148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_MODE_ANALOG                GPIO_MODER_MODE0    /*!< Select analog mode */
 149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /**
 150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @}
 151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_OUTPUT Output Type
 154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @{
 155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_PUSHPULL            (0x00000000U) /*!< Select push-pull as output type */
 157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_OUTPUT_OPENDRAIN           GPIO_OTYPER_OT0 /*!< Select open-drain as output type */
 158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /**
 159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @}
 160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_SPEED Output Speed
 163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @{
 164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_LOW             (0x00000000U) /*!< Select I/O low output speed    */
 166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_MEDIUM          GPIO_OSPEEDR_OSPEED0_0 /*!< Select I/O medium output spe
 167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_HIGH            GPIO_OSPEEDR_OSPEED0_1 /*!< Select I/O fast output speed
 168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_SPEED_FREQ_VERY_HIGH       GPIO_OSPEEDR_OSPEED0   /*!< Select I/O high output speed
 169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /**
 170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @}
 171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_SPEED_LOW                  LL_GPIO_SPEED_FREQ_LOW
 173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_SPEED_MEDIUM               LL_GPIO_SPEED_FREQ_MEDIUM
 174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_SPEED_FAST                 LL_GPIO_SPEED_FREQ_HIGH
 175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_SPEED_HIGH                 LL_GPIO_SPEED_FREQ_VERY_HIGH
 176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_PULL Pull Up Pull Down
ARM GAS  /tmp/ccV1cKci.s 			page 26


 179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @{
 180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_PULL_NO                    (0x00000000U) /*!< Select I/O no pull */
 182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_PULL_UP                    GPIO_PUPDR_PUPD0_0 /*!< Select I/O pull up */
 183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_PULL_DOWN                  GPIO_PUPDR_PUPD0_1 /*!< Select I/O pull down */
 184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /**
 185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @}
 186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EC_AF Alternate Function
 189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @{
 190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_AF_0                       (0x0000000U) /*!< Select alternate function 0 */
 192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_AF_1                       (0x0000001U) /*!< Select alternate function 1 */
 193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_AF_2                       (0x0000002U) /*!< Select alternate function 2 */
 194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_AF_3                       (0x0000003U) /*!< Select alternate function 3 */
 195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_AF_4                       (0x0000004U) /*!< Select alternate function 4 */
 196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_AF_5                       (0x0000005U) /*!< Select alternate function 5 */
 197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_AF_6                       (0x0000006U) /*!< Select alternate function 6 */
 198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_AF_7                       (0x0000007U) /*!< Select alternate function 7 */
 199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /**
 200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @}
 201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /**
 204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @}
 205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /* Exported macro ------------------------------------------------------------*/
 208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Macros GPIO Exported Macros
 209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @{
 210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EM_WRITE_READ Common Write and read registers Macros
 213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @{
 214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /**
 217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @brief  Write a value in GPIO register
 218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  __REG__ Register to be written
 220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  __VALUE__ Value to be written in the register
 221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @retval None
 222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALU
 224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /**
 226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @brief  Read a value in GPIO register
 227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  __INSTANCE__ GPIO Instance
 228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  __REG__ Register to be read
 229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @retval Register value
 230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** #define LL_GPIO_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /**
 233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @}
 234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
ARM GAS  /tmp/ccV1cKci.s 			page 27


 236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /**
 237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @}
 238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /* Exported functions --------------------------------------------------------*/
 241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /** @defgroup GPIO_LL_Exported_Functions GPIO Exported Functions
 242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @{
 243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /** @defgroup GPIO_LL_EF_Port_Configuration Port Configuration
 246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @{
 247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /**
 250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @brief  Configure gpio mode for a dedicated pin on dedicated port.
 251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_SetPinMode
 254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  Mode This parameter can be one of the following values:
 273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @retval None
 278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Mode)
 280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** {
 281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   MODIFY_REG(GPIOx->MODER, ((Pin * Pin) * GPIO_MODER_MODE0), ((Pin * Pin) * Mode));
 282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /**
 285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @brief  Return gpio mode for a dedicated pin on dedicated port.
 286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @note   I/O mode can be Input mode, General purpose output, Alternate function mode or Analog.
 287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @rmtoll MODER        MODEy         LL_GPIO_GetPinMode
 289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
ARM GAS  /tmp/ccV1cKci.s 			page 28


 293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_INPUT
 309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_OUTPUT
 310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ALTERNATE
 311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_MODE_ANALOG
 312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinMode(GPIO_TypeDef *GPIOx, uint32_t Pin)
 314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** {
 315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->MODER, ((Pin * Pin) * GPIO_MODER_MODE0)) / (Pin * Pin));
 316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /**
 319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @brief  Configure gpio output type for several pins on dedicated port.
 320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_SetPinOutputType
 323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  PinMask This parameter can be a combination of the following values:
 325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  OutputType This parameter can be one of the following values:
 343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @retval None
 346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t PinMask, uint32_t Outpu
 348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** {
 349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OTYPER, PinMask, (PinMask * OutputType));
ARM GAS  /tmp/ccV1cKci.s 			page 29


 350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /**
 353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @brief  Return gpio output type for several pins on dedicated port.
 354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @note   Output type as to be set when gpio pin is in output or
 355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         alternate modes. Possible type are Push-pull or Open-drain.
 356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @rmtoll OTYPER       OTy           LL_GPIO_GetPinOutputType
 358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_ALL
 377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_PUSHPULL
 379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_OUTPUT_OPENDRAIN
 380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinOutputType(GPIO_TypeDef *GPIOx, uint32_t Pin)
 382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** {
 383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OTYPER, Pin) / Pin);
 384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /**
 387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @brief  Configure gpio speed for a dedicated pin on dedicated port.
 388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_SetPinSpeed
 393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
ARM GAS  /tmp/ccV1cKci.s 			page 30


 407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  Speed This parameter can be one of the following values:
 412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @retval None
 417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t  Speed)
 419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** {
 420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   MODIFY_REG(GPIOx->OSPEEDR, ((Pin * Pin) * GPIO_OSPEEDR_OSPEED0), ((Pin * Pin) * Speed));
 421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /**
 424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @brief  Return gpio speed for a dedicated pin on dedicated port.
 425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @note   I/O speed can be Low, Medium, Fast or High speed.
 426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @note   Refer to datasheet for frequency specifications and the power
 428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         supply and load conditions for each speed.
 429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @rmtoll OSPEEDR      OSPEEDy       LL_GPIO_GetPinSpeed
 430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_LOW
 450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_MEDIUM
 451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_HIGH
 452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_SPEED_FREQ_VERY_HIGH
 453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinSpeed(GPIO_TypeDef *GPIOx, uint32_t Pin)
 455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** {
 456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->OSPEEDR, ((Pin * Pin) * GPIO_OSPEEDR_OSPEED0)) / (Pin * Pin));
 457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /**
 460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @brief  Configure gpio pull-up or pull-down for a dedicated pin on a dedicated port.
 461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_SetPinPull
 463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
ARM GAS  /tmp/ccV1cKci.s 			page 31


 464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  Pull This parameter can be one of the following values:
 482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @retval None
 486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Pull)
 488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** {
 489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   MODIFY_REG(GPIOx->PUPDR, ((Pin * Pin) * GPIO_PUPDR_PUPD0), ((Pin * Pin) * Pull));
 490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /**
 493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @brief  Return gpio pull-up or pull-down for a dedicated pin on a dedicated port
 494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @rmtoll PUPDR        PUPDy         LL_GPIO_GetPinPull
 496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_8
 507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_9
 508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_10
 509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_11
 510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_12
 511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_13
 512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_14
 513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_15
 514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @retval Returned value can be one of the following values:
 515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_NO
 516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_UP
 517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PULL_DOWN
 518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** __STATIC_INLINE uint32_t LL_GPIO_GetPinPull(GPIO_TypeDef *GPIOx, uint32_t Pin)
 520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** {
ARM GAS  /tmp/ccV1cKci.s 			page 32


 521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   return (uint32_t)(READ_BIT(GPIOx->PUPDR, ((Pin * Pin) * GPIO_PUPDR_PUPD0)) / (Pin * Pin));
 522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** 
 524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** /**
 525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @brief  Configure gpio alternate function of a dedicated pin from 0 to 7 for a dedicated port.
 526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @note   Possible values are from AF0 to AF7 depending on target.
 527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @note   Warning: only one pin can be passed as parameter.
 528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @rmtoll AFRL         AFSELy        LL_GPIO_SetAFPin_0_7
 529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  GPIOx GPIO Port
 530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  Pin This parameter can be one of the following values:
 531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_0
 532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_1
 533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_2
 534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_3
 535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_4
 536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_5
 537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_6
 538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_PIN_7
 539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @param  Alternate This parameter can be one of the following values:
 540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_0
 541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_1
 542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_2
 543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_3
 544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_4
 545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_5
 546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_6
 547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   *         @arg @ref LL_GPIO_AF_7
 548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   * @retval None
 549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   */
 550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** __STATIC_INLINE void LL_GPIO_SetAFPin_0_7(GPIO_TypeDef *GPIOx, uint32_t Pin, uint32_t Alternate)
 551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** {
 552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h ****   MODIFY_REG(GPIOx->AFR[0], ((((Pin * Pin) * Pin) * Pin) * GPIO_AFRL_AFSEL0),
 118              		.loc 3 552 3 view .LVU19
 119 000a 4F49     		ldr	r1, .L11+4
 120              	.LBE130:
 121              	.LBE129:
 122              	.LBB133:
 123              	.LBB125:
 124              		.loc 1 1003 3 view .LVU20
 125 000c 2B43     		orrs	r3, r5
 126 000e 6363     		str	r3, [r4, #52]
1004:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
1005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   tmpreg = READ_BIT(RCC->IOPENR, Periphs);
 127              		.loc 1 1005 3 is_stmt 1 view .LVU21
 128              		.loc 1 1005 12 is_stmt 0 view .LVU22
 129 0010 636B     		ldr	r3, [r4, #52]
 130              	.LBE125:
 131              	.LBE133:
 132              	.LBB134:
 133              	.LBB135:
 281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 134              		.loc 3 281 3 view .LVU23
 135 0012 3020     		movs	r0, #48
 136              	.LBE135:
 137              	.LBE134:
 138              	.LBB138:
 139              	.LBB126:
ARM GAS  /tmp/ccV1cKci.s 			page 33


 140              		.loc 1 1005 12 view .LVU24
 141 0014 2B40     		ands	r3, r5
 142              		.loc 1 1005 10 view .LVU25
 143 0016 0293     		str	r3, [sp, #8]
1006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   (void)tmpreg;
 144              		.loc 1 1006 3 is_stmt 1 view .LVU26
 145 0018 029B     		ldr	r3, [sp, #8]
 146              	.LVL2:
 147              		.loc 1 1006 3 is_stmt 0 view .LVU27
 148              	.LBE126:
 149              	.LBE138:
 128:Utilities/TRACER_EMB/tracer_emb_hw.c ****   TRACER_EMB_RX_GPIO_ENABLE_CLOCK();
 150              		.loc 2 128 3 is_stmt 1 view .LVU28
 151              	.LBB139:
 152              	.LBI139:
1000:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 153              		.loc 1 1000 22 view .LVU29
 154              	.LBB140:
1002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->IOPENR, Periphs);
 155              		.loc 1 1002 3 view .LVU30
1003:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 156              		.loc 1 1003 3 view .LVU31
 157 001a 636B     		ldr	r3, [r4, #52]
 158              	.LBE140:
 159              	.LBE139:
 160              	.LBB143:
 161              	.LBB144:
 349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 162              		.loc 3 349 3 is_stmt 0 view .LVU32
 163 001c 0826     		movs	r6, #8
 164              	.LBE144:
 165              	.LBE143:
 166              	.LBB146:
 167              	.LBB141:
1003:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 168              		.loc 1 1003 3 view .LVU33
 169 001e 2B43     		orrs	r3, r5
 170 0020 6363     		str	r3, [r4, #52]
1005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   (void)tmpreg;
 171              		.loc 1 1005 3 is_stmt 1 view .LVU34
1005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   (void)tmpreg;
 172              		.loc 1 1005 12 is_stmt 0 view .LVU35
 173 0022 636B     		ldr	r3, [r4, #52]
 174              	.LBE141:
 175              	.LBE146:
 176              	.LBB147:
 177              	.LBB148:
 178              	.LBB149:
 179              		.file 4 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h"
   1:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @file    stm32g0xx_ll_lpuart.h
   4:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief   Header file of LPUART LL module.
   6:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   ******************************************************************************
   7:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @attention
   8:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *
ARM GAS  /tmp/ccV1cKci.s 			page 34


   9:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * <h2><center>&copy; Copyright (c) 2018 STMicroelectronics.
  10:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *
  12:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *
  17:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   ******************************************************************************
  18:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
  19:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
  20:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #ifndef STM32G0xx_LL_LPUART_H
  22:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define STM32G0xx_LL_LPUART_H
  23:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
  24:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #ifdef __cplusplus
  25:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** extern "C" {
  26:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #endif
  27:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
  28:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #include "stm32g0xx.h"
  30:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
  31:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @addtogroup STM32G0xx_LL_Driver
  32:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
  33:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
  34:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
  35:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #if defined (LPUART1)
  36:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
  37:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL LPUART
  38:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
  39:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
  40:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
  41:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_Private_Variables LPUART Private Variables
  44:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
  45:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
  46:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /* Array used to get the LPUART prescaler division decimal values versus @ref LPUART_LL_EC_PRESCALE
  47:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** static const uint16_t LPUART_PRESCALER_TAB[] =
  48:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
  49:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   (uint16_t)1,
  50:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   (uint16_t)2,
  51:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   (uint16_t)4,
  52:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   (uint16_t)6,
  53:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   (uint16_t)8,
  54:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   (uint16_t)10,
  55:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   (uint16_t)12,
  56:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   (uint16_t)16,
  57:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   (uint16_t)32,
  58:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   (uint16_t)64,
  59:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   (uint16_t)128,
  60:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   (uint16_t)256
  61:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** };
  62:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
  63:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
  64:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
  65:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
ARM GAS  /tmp/ccV1cKci.s 			page 35


  66:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /* Private constants ---------------------------------------------------------*/
  67:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_Private_Constants LPUART Private Constants
  68:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
  69:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
  70:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /* Defines used in Baud Rate related macros and corresponding register setting computation */
  71:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LPUART_LPUARTDIV_FREQ_MUL     256U
  72:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LPUART_BRR_MASK               0x000FFFFFU
  73:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LPUART_BRR_MIN_VALUE          0x00000300U
  74:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
  75:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
  76:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
  77:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
  78:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
  79:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /* Private macros ------------------------------------------------------------*/
  80:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #if defined(USE_FULL_LL_DRIVER)
  81:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_Private_Macros LPUART Private Macros
  82:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
  83:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
  84:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
  85:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
  86:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
  87:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #endif /*USE_FULL_LL_DRIVER*/
  88:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
  89:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /* Exported types ------------------------------------------------------------*/
  90:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #if defined(USE_FULL_LL_DRIVER)
  91:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_ES_INIT LPUART Exported Init structures
  92:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
  93:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
  94:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
  95:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
  96:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief LL LPUART Init Structure definition
  97:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
  98:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** typedef struct
  99:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   uint32_t PrescalerValue;            /*!< Specifies the Prescaler to compute the communication bau
 101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****                                            This parameter can be a value of @ref LPUART_LL_EC_PRESC
 102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****                                            This feature can be modified afterwards using unitary fu
 104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   uint32_t BaudRate;                  /*!< This field defines expected LPUART communication baud ra
 106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****                                            This feature can be modified afterwards using unitary fu
 108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   uint32_t DataWidth;                 /*!< Specifies the number of data bits transmitted or receive
 110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****                                            This parameter can be a value of @ref LPUART_LL_EC_DATAW
 111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****                                            This feature can be modified afterwards using unitary fu
 113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   uint32_t StopBits;                  /*!< Specifies the number of stop bits transmitted.
 115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****                                            This parameter can be a value of @ref LPUART_LL_EC_STOPB
 116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****                                            This feature can be modified afterwards using unitary fu
 118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   uint32_t Parity;                    /*!< Specifies the parity mode.
 120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****                                            This parameter can be a value of @ref LPUART_LL_EC_PARIT
 121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****                                            This feature can be modified afterwards using unitary fu
ARM GAS  /tmp/ccV1cKci.s 			page 36


 123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   uint32_t TransferDirection;         /*!< Specifies whether the Receive and/or Transmit mode is en
 125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****                                            This parameter can be a value of @ref LPUART_LL_EC_DIREC
 126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****                                            This feature can be modified afterwards using unitary fu
 128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   uint32_t HardwareFlowControl;       /*!< Specifies whether the hardware flow control mode is enab
 130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****                                            This parameter can be a value of @ref LPUART_LL_EC_HWCON
 131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****                                            This feature can be modified afterwards using unitary fu
 133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** } LL_LPUART_InitTypeDef;
 135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
 138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #endif /* USE_FULL_LL_DRIVER */
 140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /* Exported constants --------------------------------------------------------*/
 142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_Exported_Constants LPUART Exported Constants
 143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
 144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_CLEAR_FLAG Clear Flags Defines
 147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief    Flags defines which can be used with LL_LPUART_WriteReg function
 148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
 149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ICR_PECF                 USART_ICR_PECF                /*!< Parity error flag */
 151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ICR_FECF                 USART_ICR_FECF                /*!< Framing error flag */
 152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ICR_NCF                  USART_ICR_NECF                /*!< Noise error detected 
 153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ICR_ORECF                USART_ICR_ORECF               /*!< Overrun error flag */
 154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ICR_IDLECF               USART_ICR_IDLECF              /*!< Idle line detected fl
 155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ICR_TXFECF               USART_ICR_TXFECF              /*!< TX FIFO Empty Clear f
 156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ICR_TCCF                 USART_ICR_TCCF                /*!< Transmission complete
 157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ICR_CTSCF                USART_ICR_CTSCF               /*!< CTS flag */
 158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ICR_CMCF                 USART_ICR_CMCF                /*!< Character match flag 
 159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ICR_WUCF                 USART_ICR_WUCF                /*!< Wakeup from Stop mode
 160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
 162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_GET_FLAG Get Flags Defines
 165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief    Flags defines which can be used with LL_LPUART_ReadReg function
 166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
 167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ISR_PE                   USART_ISR_PE                  /*!< Parity error flag */
 169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ISR_FE                   USART_ISR_FE                  /*!< Framing error flag */
 170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ISR_NE                   USART_ISR_NE                  /*!< Noise detected flag *
 171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ISR_ORE                  USART_ISR_ORE                 /*!< Overrun error flag */
 172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ISR_IDLE                 USART_ISR_IDLE                /*!< Idle line detected fl
 173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ISR_RXNE_RXFNE           USART_ISR_RXNE_RXFNE          /*!< Read data register or
 174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ISR_TC                   USART_ISR_TC                  /*!< Transmission complete
 175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ISR_TXE_TXFNF            USART_ISR_TXE_TXFNF           /*!< Transmit data registe
 176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ISR_CTSIF                USART_ISR_CTSIF               /*!< CTS interrupt flag */
 177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ISR_CTS                  USART_ISR_CTS                 /*!< CTS flag */
 178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ISR_BUSY                 USART_ISR_BUSY                /*!< Busy flag */
 179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ISR_CMF                  USART_ISR_CMF                 /*!< Character match flag 
ARM GAS  /tmp/ccV1cKci.s 			page 37


 180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ISR_SBKF                 USART_ISR_SBKF                /*!< Send break flag */
 181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ISR_RWU                  USART_ISR_RWU                 /*!< Receiver wakeup from 
 182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ISR_WUF                  USART_ISR_WUF                 /*!< Wakeup from Stop mode
 183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ISR_TEACK                USART_ISR_TEACK               /*!< Transmit enable ackno
 184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ISR_REACK                USART_ISR_REACK               /*!< Receive enable acknow
 185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ISR_TXFE                 USART_ISR_TXFE                /*!< TX FIFO empty flag */
 186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ISR_RXFF                 USART_ISR_RXFF                /*!< RX FIFO full flag */
 187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ISR_RXFT                 USART_ISR_RXFT                /*!< RX FIFO threshold fla
 188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ISR_TXFT                 USART_ISR_TXFT                /*!< TX FIFO threshold fla
 189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
 191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_IT IT Defines
 194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief    IT defines which can be used with LL_LPUART_ReadReg and  LL_LPUART_WriteReg functions
 195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
 196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_CR1_IDLEIE               USART_CR1_IDLEIE              /*!< IDLE interrupt enable
 198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_CR1_RXNEIE_RXFNEIE       USART_CR1_RXNEIE_RXFNEIE      /*!< Read data register an
 199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_CR1_TCIE                 USART_CR1_TCIE                /*!< Transmission complete
 200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_CR1_TXEIE_TXFNFIE        USART_CR1_TXEIE_TXFNFIE       /*!< Transmit data registe
 201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_CR1_PEIE                 USART_CR1_PEIE                /*!< Parity error */
 202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_CR1_CMIE                 USART_CR1_CMIE                /*!< Character match inter
 203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_CR1_TXFEIE               USART_CR1_TXFEIE              /*!< TX FIFO empty interru
 204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_CR1_RXFFIE               USART_CR1_RXFFIE              /*!< RX FIFO full interrup
 205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_CR3_EIE                  USART_CR3_EIE                 /*!< Error interrupt enabl
 206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_CR3_CTSIE                USART_CR3_CTSIE               /*!< CTS interrupt enable 
 207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_CR3_WUFIE                USART_CR3_WUFIE               /*!< Wakeup from Stop mode
 208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_CR3_TXFTIE               USART_CR3_TXFTIE              /*!< TX FIFO threshold int
 209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_CR3_RXFTIE               USART_CR3_RXFTIE              /*!< RX FIFO threshold int
 210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
 212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_FIFOTHRESHOLD FIFO Threshold
 215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
 216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_FIFOTHRESHOLD_1_8        0x00000000U /*!< FIFO reaches 1/8 of its depth */
 218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_FIFOTHRESHOLD_1_4        0x00000001U /*!< FIFO reaches 1/4 of its depth */
 219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_FIFOTHRESHOLD_1_2        0x00000002U /*!< FIFO reaches 1/2 of its depth */
 220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_FIFOTHRESHOLD_3_4        0x00000003U /*!< FIFO reaches 3/4 of its depth */
 221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_FIFOTHRESHOLD_7_8        0x00000004U /*!< FIFO reaches 7/8 of its depth */
 222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_FIFOTHRESHOLD_8_8        0x00000005U /*!< FIFO becomes empty for TX and full for 
 223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
 225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_DIRECTION Direction
 228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
 229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_DIRECTION_NONE           0x00000000U                        /*!< Transmitter and 
 231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_DIRECTION_RX             USART_CR1_RE                       /*!< Transmitter is d
 232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_DIRECTION_TX             USART_CR1_TE                       /*!< Transmitter is e
 233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_DIRECTION_TX_RX          (USART_CR1_TE |USART_CR1_RE)       /*!< Transmitter and 
 234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
 236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
ARM GAS  /tmp/ccV1cKci.s 			page 38


 237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_PARITY Parity Control
 239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
 240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_PARITY_NONE              0x00000000U                        /*!< Parity control d
 242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_PARITY_EVEN              USART_CR1_PCE                      /*!< Parity control e
 243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_PARITY_ODD               (USART_CR1_PCE | USART_CR1_PS)     /*!< Parity control e
 244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
 246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_WAKEUP Wakeup
 249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
 250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_WAKEUP_IDLELINE          0x00000000U                        /*!<  LPUART wake up 
 252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_WAKEUP_ADDRESSMARK       USART_CR1_WAKE                     /*!<  LPUART wake up 
 253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
 255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_DATAWIDTH Datawidth
 258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
 259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_DATAWIDTH_7B             USART_CR1_M1                       /*!< 7 bits word leng
 261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_DATAWIDTH_8B             0x00000000U                        /*!< 8 bits word leng
 262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_DATAWIDTH_9B             USART_CR1_M0                       /*!< 9 bits word leng
 263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
 265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_PRESCALER Clock Source Prescaler
 268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
 269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_PRESCALER_DIV1           0x00000000U                                             
 271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_PRESCALER_DIV2           (USART_PRESC_PRESCALER_0)                               
 272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_PRESCALER_DIV4           (USART_PRESC_PRESCALER_1)                               
 273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_PRESCALER_DIV6           (USART_PRESC_PRESCALER_1 | USART_PRESC_PRESCALER_0)     
 274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_PRESCALER_DIV8           (USART_PRESC_PRESCALER_2)                               
 275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_PRESCALER_DIV10          (USART_PRESC_PRESCALER_2 | USART_PRESC_PRESCALER_0)     
 276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_PRESCALER_DIV12          (USART_PRESC_PRESCALER_2 | USART_PRESC_PRESCALER_1)     
 277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_PRESCALER_DIV16          (USART_PRESC_PRESCALER_2 | USART_PRESC_PRESCALER_1 | USA
 278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_PRESCALER_DIV32          (USART_PRESC_PRESCALER_3)                               
 279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_PRESCALER_DIV64          (USART_PRESC_PRESCALER_3 | USART_PRESC_PRESCALER_0)     
 280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_PRESCALER_DIV128         (USART_PRESC_PRESCALER_3 | USART_PRESC_PRESCALER_1)     
 281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_PRESCALER_DIV256         (USART_PRESC_PRESCALER_3 | USART_PRESC_PRESCALER_1 | USA
 282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
 284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_STOPBITS Stop Bits
 287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
 288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_STOPBITS_1               0x00000000U                        /*!< 1 stop bit */
 290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_STOPBITS_2               USART_CR2_STOP_1                   /*!< 2 stop bits */
 291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
 293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
ARM GAS  /tmp/ccV1cKci.s 			page 39


 294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_TXRX TX RX Pins Swap
 296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
 297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_TXRX_STANDARD            0x00000000U                        /*!< TX/RX pins are u
 299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_TXRX_SWAPPED             (USART_CR2_SWAP)                   /*!< TX and RX pins f
 300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
 302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_RXPIN_LEVEL RX Pin Active Level Inversion
 305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
 306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_RXPIN_LEVEL_STANDARD     0x00000000U                        /*!< RX pin signal wo
 308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_RXPIN_LEVEL_INVERTED     (USART_CR2_RXINV)                  /*!< RX pin signal va
 309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
 311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_TXPIN_LEVEL TX Pin Active Level Inversion
 314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
 315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_TXPIN_LEVEL_STANDARD     0x00000000U                        /*!< TX pin signal wo
 317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_TXPIN_LEVEL_INVERTED     (USART_CR2_TXINV)                  /*!< TX pin signal va
 318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
 320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_BINARY_LOGIC Binary Data Inversion
 323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
 324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_BINARY_LOGIC_POSITIVE    0x00000000U                        /*!< Logical data fro
 326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_BINARY_LOGIC_NEGATIVE    USART_CR2_DATAINV                  /*!< Logical data fro
 327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
 329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_BITORDER Bit Order
 332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
 333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_BITORDER_LSBFIRST        0x00000000U                        /*!< data is transmit
 335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_BITORDER_MSBFIRST        USART_CR2_MSBFIRST                 /*!< data is transmit
 336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
 338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_ADDRESS_DETECT Address Length Detection
 341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
 342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ADDRESS_DETECT_4B        0x00000000U                        /*!< 4-bit address de
 344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ADDRESS_DETECT_7B        USART_CR2_ADDM7                    /*!< 7-bit address de
 345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
 347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_HWCONTROL Hardware Control
 350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
ARM GAS  /tmp/ccV1cKci.s 			page 40


 351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_HWCONTROL_NONE           0x00000000U                        /*!< CTS and RTS hard
 353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_HWCONTROL_RTS            USART_CR3_RTSE                     /*!< RTS output enabl
 354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_HWCONTROL_CTS            USART_CR3_CTSE                     /*!< CTS mode enabled
 355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_HWCONTROL_RTS_CTS        (USART_CR3_RTSE | USART_CR3_CTSE)  /*!< CTS and RTS hard
 356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
 358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_WAKEUP_ON Wakeup Activation
 361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
 362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_WAKEUP_ON_ADDRESS        0x00000000U                             /*!< Wake up act
 364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_WAKEUP_ON_STARTBIT       USART_CR3_WUS_1                         /*!< Wake up act
 365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_WAKEUP_ON_RXNE           (USART_CR3_WUS_0 | USART_CR3_WUS_1)     /*!< Wake up act
 366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
 368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_DE_POLARITY Driver Enable Polarity
 371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
 372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_DE_POLARITY_HIGH         0x00000000U                        /*!< DE signal is act
 374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_DE_POLARITY_LOW          USART_CR3_DEP                      /*!< DE signal is act
 375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
 377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EC_DMA_REG_DATA DMA Register Data
 380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
 381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_DMA_REG_DATA_TRANSMIT    0x00000000U                       /*!< Get address of da
 383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_DMA_REG_DATA_RECEIVE     0x00000001U                       /*!< Get address of da
 384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
 386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
 390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /* Exported macro ------------------------------------------------------------*/
 393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_Exported_Macros LPUART Exported Macros
 394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
 395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EM_WRITE_READ Common Write and read registers Macros
 398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
 399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Write a value in LPUART register
 403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  __INSTANCE__ LPUART Instance
 404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  __REG__ Register to be written
 405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  __VALUE__ Value to be written in the register
 406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
 407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
ARM GAS  /tmp/ccV1cKci.s 			page 41


 408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VA
 409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Read a value in LPUART register
 412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  __INSTANCE__ LPUART Instance
 413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  __REG__ Register to be read
 414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval Register value
 415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
 419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EM_Exported_Macros_Helper Helper Macros
 422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
 423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Compute LPUARTDIV value according to Peripheral Clock and
 427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         expected Baud Rate (20-bit value of LPUARTDIV is returned)
 428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  __PERIPHCLK__ Peripheral Clock frequency used for LPUART Instance
 429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  __PRESCALER__ This parameter can be one of the following values:
 430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV1
 431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV2
 432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV4
 433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV6
 434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV8
 435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV10
 436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV12
 437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV16
 438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV32
 439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV64
 440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV128
 441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV256
 442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  __BAUDRATE__ Baud Rate value to achieve
 443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval LPUARTDIV value to be used for BRR register filling
 444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define __LL_LPUART_DIV(__PERIPHCLK__, __PRESCALER__, __BAUDRATE__) (uint32_t)((((((uint64_t)(__PER
 446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****                                                                                 + (uint32_t)((__BAU
 447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
 450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
 454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /* Exported functions --------------------------------------------------------*/
 457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_Exported_Functions LPUART Exported Functions
 458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
 459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EF_Configuration Configuration functions
 462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
 463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
ARM GAS  /tmp/ccV1cKci.s 			page 42


 465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  LPUART Enable
 467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          UE            LL_LPUART_Enable
 468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
 470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_Enable(USART_TypeDef *LPUARTx)
 472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR1, USART_CR1_UE);
 474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  LPUART Disable
 478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @note   When LPUART is disabled, LPUART prescalers and outputs are stopped immediately,
 479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         and current operations are discarded. The configuration of the LPUART is kept, but all 
 480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         flags, in the LPUARTx_ISR are set to their default values.
 481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @note   In order to go into low-power mode without generating errors on the line,
 482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         the TE bit must be reset before and the software must wait
 483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         for the TC bit in the LPUART_ISR to be set before resetting the UE bit.
 484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         The DMA requests are also reset when UE = 0 so the DMA channel must
 485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         be disabled before resetting the UE bit.
 486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          UE            LL_LPUART_Disable
 487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
 489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_Disable(USART_TypeDef *LPUARTx)
 491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR1, USART_CR1_UE);
 180              		.loc 4 492 3 view .LVU36
 181 0024 494F     		ldr	r7, .L11+8
 182              	.LBE149:
 183              	.LBE148:
 184              	.LBE147:
 185              	.LBB164:
 186              	.LBB142:
1005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   (void)tmpreg;
 187              		.loc 1 1005 12 view .LVU37
 188 0026 2B40     		ands	r3, r5
1005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   (void)tmpreg;
 189              		.loc 1 1005 10 view .LVU38
 190 0028 0193     		str	r3, [sp, #4]
 191              		.loc 1 1006 3 is_stmt 1 view .LVU39
 192 002a 019B     		ldr	r3, [sp, #4]
 193              	.LVL3:
 194              		.loc 1 1006 3 is_stmt 0 view .LVU40
 195              	.LBE142:
 196              	.LBE164:
 129:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 130:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* Configure Tx Pin as : Alternate function, High Speed, Push pull, Pull up */
 131:Utilities/TRACER_EMB/tracer_emb_hw.c ****   TRACER_EMB_TX_AF_FUNCTION(TRACER_EMB_TX_GPIO, TRACER_EMB_TX_PIN, TRACER_EMB_TX_AF);
 197              		.loc 2 131 3 is_stmt 1 view .LVU41
 198              	.LBB165:
 199              	.LBI129:
 550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** {
 200              		.loc 3 550 22 view .LVU42
 201              	.LBB131:
 202              		.loc 3 552 3 view .LVU43
ARM GAS  /tmp/ccV1cKci.s 			page 43


 203 002c A023     		movs	r3, #160
 204 002e DB05     		lsls	r3, r3, #23
 205 0030 1A6A     		ldr	r2, [r3, #32]
 206 0032 1140     		ands	r1, r2
 207 0034 C022     		movs	r2, #192
 208 0036 D200     		lsls	r2, r2, #3
 209 0038 0A43     		orrs	r2, r1
 210              	.LBE131:
 211              	.LBE165:
 212              	.LBB166:
 213              	.LBB136:
 281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 214              		.loc 3 281 3 is_stmt 0 view .LVU44
 215 003a 2021     		movs	r1, #32
 216              	.LBE136:
 217              	.LBE166:
 218              	.LBB167:
 219              	.LBB132:
 220              		.loc 3 552 3 view .LVU45
 221 003c 1A62     		str	r2, [r3, #32]
 222              	.LVL4:
 223              		.loc 3 552 3 view .LVU46
 224              	.LBE132:
 225              	.LBE167:
 132:Utilities/TRACER_EMB/tracer_emb_hw.c ****   LL_GPIO_SetPinMode(TRACER_EMB_TX_GPIO, TRACER_EMB_TX_PIN, LL_GPIO_MODE_ALTERNATE);
 226              		.loc 2 132 3 is_stmt 1 view .LVU47
 227              	.LBB168:
 228              	.LBI134:
 279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** {
 229              		.loc 3 279 22 view .LVU48
 230              	.LBB137:
 281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 231              		.loc 3 281 3 view .LVU49
 232 003e 1A68     		ldr	r2, [r3]
 233 0040 8243     		bics	r2, r0
 234 0042 0A43     		orrs	r2, r1
 235 0044 1A60     		str	r2, [r3]
 236              	.LVL5:
 281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 237              		.loc 3 281 3 is_stmt 0 view .LVU50
 238              	.LBE137:
 239              	.LBE168:
 133:Utilities/TRACER_EMB/tracer_emb_hw.c ****   LL_GPIO_SetPinSpeed(TRACER_EMB_TX_GPIO, TRACER_EMB_TX_PIN, LL_GPIO_SPEED_FREQ_HIGH);
 240              		.loc 2 133 3 is_stmt 1 view .LVU51
 241              	.LBB169:
 242              	.LBI169:
 418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** {
 243              		.loc 3 418 22 view .LVU52
 244              	.LBB170:
 420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 245              		.loc 3 420 3 view .LVU53
 246 0046 9A68     		ldr	r2, [r3, #8]
 247 0048 8243     		bics	r2, r0
 248 004a 1143     		orrs	r1, r2
 249 004c 9960     		str	r1, [r3, #8]
 250              	.LVL6:
 420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
ARM GAS  /tmp/ccV1cKci.s 			page 44


 251              		.loc 3 420 3 is_stmt 0 view .LVU54
 252              	.LBE170:
 253              	.LBE169:
 134:Utilities/TRACER_EMB/tracer_emb_hw.c ****   LL_GPIO_SetPinOutputType(TRACER_EMB_TX_GPIO, TRACER_EMB_TX_PIN, LL_GPIO_OUTPUT_PUSHPULL);
 254              		.loc 2 134 3 is_stmt 1 view .LVU55
 255              	.LBB171:
 256              	.LBI171:
 347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** {
 257              		.loc 3 347 22 view .LVU56
 258              	.LBB172:
 349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 259              		.loc 3 349 3 view .LVU57
 260 004e 0421     		movs	r1, #4
 261 0050 5A68     		ldr	r2, [r3, #4]
 262 0052 8A43     		bics	r2, r1
 263 0054 5A60     		str	r2, [r3, #4]
 264              	.LVL7:
 349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 265              		.loc 3 349 3 is_stmt 0 view .LVU58
 266              	.LBE172:
 267              	.LBE171:
 135:Utilities/TRACER_EMB/tracer_emb_hw.c ****   LL_GPIO_SetPinPull(TRACER_EMB_TX_GPIO, TRACER_EMB_TX_PIN, LL_GPIO_PULL_UP);
 268              		.loc 2 135 3 is_stmt 1 view .LVU59
 269              	.LBB173:
 270              	.LBI173:
 487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** {
 271              		.loc 3 487 22 view .LVU60
 272              	.LBB174:
 489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 273              		.loc 3 489 3 view .LVU61
 274 0056 1022     		movs	r2, #16
 275 0058 D968     		ldr	r1, [r3, #12]
 276 005a 8143     		bics	r1, r0
 277 005c 0A43     		orrs	r2, r1
 278 005e DA60     		str	r2, [r3, #12]
 279              	.LVL8:
 489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 280              		.loc 3 489 3 is_stmt 0 view .LVU62
 281              	.LBE174:
 282              	.LBE173:
 136:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 137:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* Configure Rx Pin as : Alternate function, High Speed, Push pull, Pull up */
 138:Utilities/TRACER_EMB/tracer_emb_hw.c ****   TRACER_EMB_RX_AF_FUNCTION(TRACER_EMB_RX_GPIO, TRACER_EMB_RX_PIN, TRACER_EMB_RX_AF);
 283              		.loc 2 138 3 is_stmt 1 view .LVU63
 284              	.LBB175:
 285              	.LBI175:
 550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** {
 286              		.loc 3 550 22 view .LVU64
 287              	.LBB176:
 288              		.loc 3 552 3 view .LVU65
 289 0060 1A6A     		ldr	r2, [r3, #32]
 290 0062 3B49     		ldr	r1, .L11+12
 291              	.LBE176:
 292              	.LBE175:
 293              	.LBB179:
 294              	.LBB180:
 281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
ARM GAS  /tmp/ccV1cKci.s 			page 45


 295              		.loc 3 281 3 is_stmt 0 view .LVU66
 296 0064 9030     		adds	r0, r0, #144
 297              	.LBE180:
 298              	.LBE179:
 299              	.LBB183:
 300              	.LBB177:
 301              		.loc 3 552 3 view .LVU67
 302 0066 1140     		ands	r1, r2
 303 0068 C022     		movs	r2, #192
 304 006a D201     		lsls	r2, r2, #7
 305 006c 0A43     		orrs	r2, r1
 306              	.LBE177:
 307              	.LBE183:
 308              	.LBB184:
 309              	.LBB181:
 281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 310              		.loc 3 281 3 view .LVU68
 311 006e 8021     		movs	r1, #128
 312              	.LBE181:
 313              	.LBE184:
 314              	.LBB185:
 315              	.LBB178:
 316              		.loc 3 552 3 view .LVU69
 317 0070 1A62     		str	r2, [r3, #32]
 318              	.LVL9:
 319              		.loc 3 552 3 view .LVU70
 320              	.LBE178:
 321              	.LBE185:
 139:Utilities/TRACER_EMB/tracer_emb_hw.c ****   LL_GPIO_SetPinMode(TRACER_EMB_RX_GPIO, TRACER_EMB_RX_PIN, LL_GPIO_MODE_ALTERNATE);
 322              		.loc 2 139 3 is_stmt 1 view .LVU71
 323              	.LBB186:
 324              	.LBI179:
 279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** {
 325              		.loc 3 279 22 view .LVU72
 326              	.LBB182:
 281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 327              		.loc 3 281 3 view .LVU73
 328 0072 1A68     		ldr	r2, [r3]
 329 0074 8243     		bics	r2, r0
 330 0076 0A43     		orrs	r2, r1
 331 0078 1A60     		str	r2, [r3]
 332              	.LVL10:
 281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 333              		.loc 3 281 3 is_stmt 0 view .LVU74
 334              	.LBE182:
 335              	.LBE186:
 140:Utilities/TRACER_EMB/tracer_emb_hw.c ****   LL_GPIO_SetPinSpeed(TRACER_EMB_RX_GPIO, TRACER_EMB_RX_PIN, LL_GPIO_SPEED_FREQ_HIGH);
 336              		.loc 2 140 3 is_stmt 1 view .LVU75
 337              	.LBB187:
 338              	.LBI187:
 418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** {
 339              		.loc 3 418 22 view .LVU76
 340              	.LBB188:
 420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 341              		.loc 3 420 3 view .LVU77
 342 007a 9A68     		ldr	r2, [r3, #8]
 343 007c 8243     		bics	r2, r0
ARM GAS  /tmp/ccV1cKci.s 			page 46


 344 007e 1143     		orrs	r1, r2
 345 0080 9960     		str	r1, [r3, #8]
 346              	.LVL11:
 420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 347              		.loc 3 420 3 is_stmt 0 view .LVU78
 348              	.LBE188:
 349              	.LBE187:
 141:Utilities/TRACER_EMB/tracer_emb_hw.c ****   LL_GPIO_SetPinOutputType(TRACER_EMB_RX_GPIO, TRACER_EMB_RX_PIN, LL_GPIO_OUTPUT_PUSHPULL);
 350              		.loc 2 141 3 is_stmt 1 view .LVU79
 351              	.LBB189:
 352              	.LBI143:
 347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** {
 353              		.loc 3 347 22 view .LVU80
 354              	.LBB145:
 349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 355              		.loc 3 349 3 view .LVU81
 356 0082 5A68     		ldr	r2, [r3, #4]
 357 0084 B243     		bics	r2, r6
 358 0086 5A60     		str	r2, [r3, #4]
 359              	.LVL12:
 349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 360              		.loc 3 349 3 is_stmt 0 view .LVU82
 361              	.LBE145:
 362              	.LBE189:
 142:Utilities/TRACER_EMB/tracer_emb_hw.c ****   LL_GPIO_SetPinPull(TRACER_EMB_RX_GPIO, TRACER_EMB_RX_PIN, LL_GPIO_PULL_UP);
 363              		.loc 2 142 3 is_stmt 1 view .LVU83
 364              	.LBB190:
 365              	.LBI190:
 487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** {
 366              		.loc 3 487 22 view .LVU84
 367              	.LBB191:
 489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 368              		.loc 3 489 3 view .LVU85
 369 0088 4022     		movs	r2, #64
 370 008a D968     		ldr	r1, [r3, #12]
 371 008c 8143     		bics	r1, r0
 372 008e 0A43     		orrs	r2, r1
 373 0090 DA60     		str	r2, [r3, #12]
 374              	.LVL13:
 489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_gpio.h **** }
 375              		.loc 3 489 3 is_stmt 0 view .LVU86
 376              	.LBE191:
 377              	.LBE190:
 143:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 144:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* Enable the peripheral clock for USART */
 145:Utilities/TRACER_EMB/tracer_emb_hw.c ****   TRACER_EMB_ENABLE_CLK_USART();
 378              		.loc 2 145 3 is_stmt 1 view .LVU87
 379 0092 FFF7FEFF 		bl	LL_APB1_GRP1_EnableClock.constprop.0
 380              	.LVL14:
 146:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 147:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* Set clock source */
 148:Utilities/TRACER_EMB/tracer_emb_hw.c ****   TRACER_EMB_SET_CLK_SOURCE_USART();
 381              		.loc 2 148 36 view .LVU88
 149:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 150:Utilities/TRACER_EMB/tracer_emb_hw.c ****   
 151:Utilities/TRACER_EMB/tracer_emb_hw.c ****   if(IS_USART_INSTANCE(TRACER_EMB_USART_INSTANCE))
 382              		.loc 2 151 3 view .LVU89
ARM GAS  /tmp/ccV1cKci.s 			page 47


 383              	.LBB192:
 152:Utilities/TRACER_EMB/tracer_emb_hw.c ****   {
 153:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /* Configure USART */
 154:Utilities/TRACER_EMB/tracer_emb_hw.c ****     
 155:Utilities/TRACER_EMB/tracer_emb_hw.c ****     LL_USART_InitTypeDef usart_initstruct;
 156:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 157:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /* Disable USART prior modifying configuration registers */
 158:Utilities/TRACER_EMB/tracer_emb_hw.c ****     LL_USART_Disable(TRACER_EMB_USART_INSTANCE);
 159:Utilities/TRACER_EMB/tracer_emb_hw.c ****     
 160:Utilities/TRACER_EMB/tracer_emb_hw.c ****     
 161:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /* Set fields of initialization structure                   */
 162:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /*  - Prescaler           : LL_USART_PRESCALER_DIV1         */
 163:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /*  - BaudRate            : TRACE_BAUDRATE                  */
 164:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /*  - DataWidth           : LL_USART_DATAWIDTH_8B           */
 165:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /*  - StopBits            : LL_USART_STOPBITS_1             */
 166:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /*  - Parity              : LL_USART_PARITY_NONE            */
 167:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /*  - TransferDirection   : LL_USART_DIRECTION_TX           */
 168:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /*  - HardwareFlowControl : LL_USART_HWCONTROL_NONE         */
 169:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /*  - OverSampling        : LL_USART_OVERSAMPLING_16        */
 170:Utilities/TRACER_EMB/tracer_emb_hw.c **** #if defined(USART_PRESC_PRESCALER)
 171:Utilities/TRACER_EMB/tracer_emb_hw.c ****     usart_initstruct.PrescalerValue      = LL_USART_PRESCALER_DIV1;
 172:Utilities/TRACER_EMB/tracer_emb_hw.c **** #endif
 173:Utilities/TRACER_EMB/tracer_emb_hw.c ****     usart_initstruct.BaudRate            = TRACER_EMB_BAUDRATE;
 174:Utilities/TRACER_EMB/tracer_emb_hw.c ****     usart_initstruct.DataWidth           = LL_USART_DATAWIDTH_8B;
 175:Utilities/TRACER_EMB/tracer_emb_hw.c ****     usart_initstruct.StopBits            = LL_USART_STOPBITS_1;
 176:Utilities/TRACER_EMB/tracer_emb_hw.c ****     usart_initstruct.Parity              = LL_USART_PARITY_NONE;
 177:Utilities/TRACER_EMB/tracer_emb_hw.c ****     usart_initstruct.TransferDirection   = LL_USART_DIRECTION_TX;
 178:Utilities/TRACER_EMB/tracer_emb_hw.c ****     usart_initstruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 179:Utilities/TRACER_EMB/tracer_emb_hw.c ****     usart_initstruct.OverSampling        = LL_USART_OVERSAMPLING_16;
 180:Utilities/TRACER_EMB/tracer_emb_hw.c ****     
 181:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /* Initialize USART instance according to parameters defined in initialization structure */
 182:Utilities/TRACER_EMB/tracer_emb_hw.c ****     LL_USART_Init(TRACER_EMB_USART_INSTANCE, &usart_initstruct);
 183:Utilities/TRACER_EMB/tracer_emb_hw.c ****     
 184:Utilities/TRACER_EMB/tracer_emb_hw.c ****     LL_USART_Enable(TRACER_EMB_USART_INSTANCE);
 185:Utilities/TRACER_EMB/tracer_emb_hw.c ****     
 186:Utilities/TRACER_EMB/tracer_emb_hw.c ****     uint32_t _temp1 = LL_USART_IsActiveFlag_TEACK(TRACER_EMB_USART_INSTANCE);
 187:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /* Polling USART initialisation */
 188:Utilities/TRACER_EMB/tracer_emb_hw.c ****     while(0u == _temp1)
 189:Utilities/TRACER_EMB/tracer_emb_hw.c ****     {
 190:Utilities/TRACER_EMB/tracer_emb_hw.c ****       _temp1 = LL_USART_IsActiveFlag_TEACK(TRACER_EMB_USART_INSTANCE);
 191:Utilities/TRACER_EMB/tracer_emb_hw.c ****     }
 192:Utilities/TRACER_EMB/tracer_emb_hw.c ****   }
 193:Utilities/TRACER_EMB/tracer_emb_hw.c **** #if (TRACER_EMB_IS_INSTANCE_LPUART_TYPE == 1UL)
 194:Utilities/TRACER_EMB/tracer_emb_hw.c ****   else
 195:Utilities/TRACER_EMB/tracer_emb_hw.c ****   {
 196:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /* Configure USART */
 197:Utilities/TRACER_EMB/tracer_emb_hw.c ****     LL_LPUART_InitTypeDef lpuart_initstruct;
 384              		.loc 2 197 5 view .LVU90
 198:Utilities/TRACER_EMB/tracer_emb_hw.c ****     
 199:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /* Disable USART prior modifying configuration registers */
 200:Utilities/TRACER_EMB/tracer_emb_hw.c ****     LL_LPUART_Disable(TRACER_EMB_USART_INSTANCE);
 385              		.loc 2 200 5 view .LVU91
 386              	.LBB152:
 387              	.LBI148:
 490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 388              		.loc 4 490 22 view .LVU92
 389              	.LBB150:
ARM GAS  /tmp/ccV1cKci.s 			page 48


 390              		.loc 4 492 3 view .LVU93
 391 0096 3B68     		ldr	r3, [r7]
 392              	.LBE150:
 393              	.LBE152:
 201:Utilities/TRACER_EMB/tracer_emb_hw.c ****     
 202:Utilities/TRACER_EMB/tracer_emb_hw.c ****     
 203:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /* Set fields of initialization structure                   */
 204:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /*  - Prescaler           : LL_USART_PRESCALER_DIV1         */
 205:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /*  - BaudRate            : TRACE_BAUDRATE                  */
 206:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /*  - DataWidth           : LL_USART_DATAWIDTH_8B           */
 207:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /*  - StopBits            : LL_USART_STOPBITS_1             */
 208:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /*  - Parity              : LL_USART_PARITY_NONE            */
 209:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /*  - TransferDirection   : LL_USART_DIRECTION_TX           */
 210:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /*  - HardwareFlowControl : LL_USART_HWCONTROL_NONE         */
 211:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /*  - OverSampling        : LL_USART_OVERSAMPLING_16        */
 212:Utilities/TRACER_EMB/tracer_emb_hw.c **** #if defined(USART_PRESC_PRESCALER)
 213:Utilities/TRACER_EMB/tracer_emb_hw.c ****     lpuart_initstruct.PrescalerValue      = LL_USART_PRESCALER_DIV1;
 214:Utilities/TRACER_EMB/tracer_emb_hw.c **** #endif
 215:Utilities/TRACER_EMB/tracer_emb_hw.c ****     lpuart_initstruct.BaudRate            = TRACER_EMB_BAUDRATE;
 394              		.loc 2 215 43 is_stmt 0 view .LVU94
 395 0098 E122     		movs	r2, #225
 396              	.LBB153:
 397              	.LBB151:
 398              		.loc 4 492 3 view .LVU95
 399 009a AB43     		bics	r3, r5
 400 009c 3B60     		str	r3, [r7]
 401              	.LVL15:
 402              		.loc 4 492 3 view .LVU96
 403              	.LBE151:
 404              	.LBE153:
 213:Utilities/TRACER_EMB/tracer_emb_hw.c **** #endif
 405              		.loc 2 213 5 is_stmt 1 view .LVU97
 213:Utilities/TRACER_EMB/tracer_emb_hw.c **** #endif
 406              		.loc 2 213 43 is_stmt 0 view .LVU98
 407 009e 0023     		movs	r3, #0
 408              		.loc 2 215 43 view .LVU99
 409 00a0 5202     		lsls	r2, r2, #9
 216:Utilities/TRACER_EMB/tracer_emb_hw.c ****     lpuart_initstruct.DataWidth           = LL_USART_DATAWIDTH_8B;
 217:Utilities/TRACER_EMB/tracer_emb_hw.c ****     lpuart_initstruct.StopBits            = LL_USART_STOPBITS_1;
 218:Utilities/TRACER_EMB/tracer_emb_hw.c ****     lpuart_initstruct.Parity              = LL_USART_PARITY_NONE;
 219:Utilities/TRACER_EMB/tracer_emb_hw.c ****     lpuart_initstruct.TransferDirection   = LL_USART_DIRECTION_TX;
 220:Utilities/TRACER_EMB/tracer_emb_hw.c ****     lpuart_initstruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 221:Utilities/TRACER_EMB/tracer_emb_hw.c ****     
 222:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /* Initialize USART instance according to parameters defined in initialization structure */
 223:Utilities/TRACER_EMB/tracer_emb_hw.c ****     LL_LPUART_Init(TRACER_EMB_USART_INSTANCE, &lpuart_initstruct);
 410              		.loc 2 223 5 view .LVU100
 411 00a2 3800     		movs	r0, r7
 412 00a4 03A9     		add	r1, sp, #12
 213:Utilities/TRACER_EMB/tracer_emb_hw.c **** #endif
 413              		.loc 2 213 43 view .LVU101
 414 00a6 0393     		str	r3, [sp, #12]
 215:Utilities/TRACER_EMB/tracer_emb_hw.c ****     lpuart_initstruct.DataWidth           = LL_USART_DATAWIDTH_8B;
 415              		.loc 2 215 5 is_stmt 1 view .LVU102
 215:Utilities/TRACER_EMB/tracer_emb_hw.c ****     lpuart_initstruct.DataWidth           = LL_USART_DATAWIDTH_8B;
 416              		.loc 2 215 43 is_stmt 0 view .LVU103
 417 00a8 0492     		str	r2, [sp, #16]
 216:Utilities/TRACER_EMB/tracer_emb_hw.c ****     lpuart_initstruct.DataWidth           = LL_USART_DATAWIDTH_8B;
ARM GAS  /tmp/ccV1cKci.s 			page 49


 418              		.loc 2 216 5 is_stmt 1 view .LVU104
 216:Utilities/TRACER_EMB/tracer_emb_hw.c ****     lpuart_initstruct.DataWidth           = LL_USART_DATAWIDTH_8B;
 419              		.loc 2 216 43 is_stmt 0 view .LVU105
 420 00aa 0593     		str	r3, [sp, #20]
 217:Utilities/TRACER_EMB/tracer_emb_hw.c ****     lpuart_initstruct.Parity              = LL_USART_PARITY_NONE;
 421              		.loc 2 217 5 is_stmt 1 view .LVU106
 217:Utilities/TRACER_EMB/tracer_emb_hw.c ****     lpuart_initstruct.Parity              = LL_USART_PARITY_NONE;
 422              		.loc 2 217 43 is_stmt 0 view .LVU107
 423 00ac 0693     		str	r3, [sp, #24]
 218:Utilities/TRACER_EMB/tracer_emb_hw.c ****     lpuart_initstruct.TransferDirection   = LL_USART_DIRECTION_TX;
 424              		.loc 2 218 5 is_stmt 1 view .LVU108
 218:Utilities/TRACER_EMB/tracer_emb_hw.c ****     lpuart_initstruct.TransferDirection   = LL_USART_DIRECTION_TX;
 425              		.loc 2 218 43 is_stmt 0 view .LVU109
 426 00ae 0793     		str	r3, [sp, #28]
 219:Utilities/TRACER_EMB/tracer_emb_hw.c ****     lpuart_initstruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 427              		.loc 2 219 5 is_stmt 1 view .LVU110
 220:Utilities/TRACER_EMB/tracer_emb_hw.c ****     
 428              		.loc 2 220 43 is_stmt 0 view .LVU111
 429 00b0 0993     		str	r3, [sp, #36]
 219:Utilities/TRACER_EMB/tracer_emb_hw.c ****     lpuart_initstruct.HardwareFlowControl = LL_USART_HWCONTROL_NONE;
 430              		.loc 2 219 43 view .LVU112
 431 00b2 0896     		str	r6, [sp, #32]
 220:Utilities/TRACER_EMB/tracer_emb_hw.c ****     
 432              		.loc 2 220 5 is_stmt 1 view .LVU113
 433              		.loc 2 223 5 view .LVU114
 434 00b4 FFF7FEFF 		bl	LL_LPUART_Init
 435              	.LVL16:
 224:Utilities/TRACER_EMB/tracer_emb_hw.c ****     
 225:Utilities/TRACER_EMB/tracer_emb_hw.c ****     LL_LPUART_Enable(TRACER_EMB_USART_INSTANCE);
 436              		.loc 2 225 5 view .LVU115
 437              	.LBB154:
 438              	.LBI154:
 471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 439              		.loc 4 471 22 view .LVU116
 440              	.LBB155:
 473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 441              		.loc 4 473 3 view .LVU117
 442 00b8 3B68     		ldr	r3, [r7]
 443 00ba 1D43     		orrs	r5, r3
 444              	.LBE155:
 445              	.LBE154:
 446              	.LBB157:
 447              	.LBB158:
 493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Indicate if LPUART is enabled
 497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          UE            LL_LPUART_IsEnabled
 498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
 500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabled(USART_TypeDef *LPUARTx)
 502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR1, USART_CR1_UE) == (USART_CR1_UE)) ? 1UL : 0UL);
 504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
ARM GAS  /tmp/ccV1cKci.s 			page 50


 507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  FIFO Mode Enable
 508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          FIFOEN        LL_LPUART_EnableFIFO
 509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
 511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableFIFO(USART_TypeDef *LPUARTx)
 513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR1, USART_CR1_FIFOEN);
 515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  FIFO Mode Disable
 519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          FIFOEN        LL_LPUART_DisableFIFO
 520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
 522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableFIFO(USART_TypeDef *LPUARTx)
 524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR1, USART_CR1_FIFOEN);
 526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Indicate if FIFO Mode is enabled
 530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          FIFOEN        LL_LPUART_IsEnabledFIFO
 531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
 533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledFIFO(USART_TypeDef *LPUARTx)
 535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR1, USART_CR1_FIFOEN) == (USART_CR1_FIFOEN)) ? 1UL : 0UL);
 537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Configure TX FIFO Threshold
 541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          TXFTCFG       LL_LPUART_SetTXFIFOThreshold
 542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  Threshold This parameter can be one of the following values:
 544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_1_8
 545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_1_4
 546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_1_2
 547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_3_4
 548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_7_8
 549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_8_8
 550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
 551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetTXFIFOThreshold(USART_TypeDef *LPUARTx, uint32_t Threshold)
 553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR3, USART_CR3_TXFTCFG, Threshold << USART_CR3_TXFTCFG_Pos);
 555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Return TX FIFO Threshold Configuration
 559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          TXFTCFG       LL_LPUART_GetTXFIFOThreshold
 560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
 562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_1_8
 563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_1_4
ARM GAS  /tmp/ccV1cKci.s 			page 51


 564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_1_2
 565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_3_4
 566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_7_8
 567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_8_8
 568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetTXFIFOThreshold(USART_TypeDef *LPUARTx)
 570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR3, USART_CR3_TXFTCFG) >> USART_CR3_TXFTCFG_Pos);
 572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Configure RX FIFO Threshold
 576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          RXFTCFG       LL_LPUART_SetRXFIFOThreshold
 577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  Threshold This parameter can be one of the following values:
 579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_1_8
 580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_1_4
 581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_1_2
 582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_3_4
 583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_7_8
 584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_8_8
 585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
 586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetRXFIFOThreshold(USART_TypeDef *LPUARTx, uint32_t Threshold)
 588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR3, USART_CR3_RXFTCFG, Threshold << USART_CR3_RXFTCFG_Pos);
 590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Return RX FIFO Threshold Configuration
 594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          RXFTCFG       LL_LPUART_GetRXFIFOThreshold
 595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
 597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_1_8
 598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_1_4
 599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_1_2
 600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_3_4
 601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_7_8
 602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_8_8
 603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetRXFIFOThreshold(USART_TypeDef *LPUARTx)
 605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR3, USART_CR3_RXFTCFG) >> USART_CR3_RXFTCFG_Pos);
 607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Configure TX and RX FIFOs Threshold
 611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          TXFTCFG       LL_LPUART_ConfigFIFOsThreshold\n
 612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         CR3          RXFTCFG       LL_LPUART_ConfigFIFOsThreshold
 613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  TXThreshold This parameter can be one of the following values:
 615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_1_8
 616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_1_4
 617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_1_2
 618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_3_4
 619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_7_8
 620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_8_8
ARM GAS  /tmp/ccV1cKci.s 			page 52


 621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  RXThreshold This parameter can be one of the following values:
 622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_1_8
 623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_1_4
 624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_1_2
 625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_3_4
 626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_7_8
 627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_FIFOTHRESHOLD_8_8
 628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
 629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_ConfigFIFOsThreshold(USART_TypeDef *LPUARTx, uint32_t TXThreshold, u
 631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR3, USART_CR3_TXFTCFG | USART_CR3_RXFTCFG, (TXThreshold << USART_CR3_TXFTCFG
 633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  LPUART enabled in STOP Mode
 637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @note   When this function is enabled, LPUART is able to wake up the MCU from Stop mode, provid
 638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         LPUART clock selection is HSI or LSE in RCC.
 639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          UESM          LL_LPUART_EnableInStopMode
 640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
 642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableInStopMode(USART_TypeDef *LPUARTx)
 644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR1, USART_CR1_UESM);
 646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  LPUART disabled in STOP Mode
 650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @note   When this function is disabled, LPUART is not able to wake up the MCU from Stop mode
 651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          UESM          LL_LPUART_DisableInStopMode
 652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
 654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableInStopMode(USART_TypeDef *LPUARTx)
 656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR1, USART_CR1_UESM);
 658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Indicate if LPUART is enabled in STOP Mode
 662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         (able to wake up MCU from Stop mode or not)
 663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          UESM          LL_LPUART_IsEnabledInStopMode
 664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
 666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledInStopMode(USART_TypeDef *LPUARTx)
 668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR1, USART_CR1_UESM) == (USART_CR1_UESM)) ? 1UL : 0UL);
 670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Receiver Enable (Receiver is enabled and begins searching for a start bit)
 674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          RE            LL_LPUART_EnableDirectionRx
 675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
 677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
ARM GAS  /tmp/ccV1cKci.s 			page 53


 678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableDirectionRx(USART_TypeDef *LPUARTx)
 679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR1, USART_CR1_RE);
 681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Receiver Disable
 685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          RE            LL_LPUART_DisableDirectionRx
 686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
 688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableDirectionRx(USART_TypeDef *LPUARTx)
 690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR1, USART_CR1_RE);
 692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Transmitter Enable
 696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          TE            LL_LPUART_EnableDirectionTx
 697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
 699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableDirectionTx(USART_TypeDef *LPUARTx)
 701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR1, USART_CR1_TE);
 703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Transmitter Disable
 707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          TE            LL_LPUART_DisableDirectionTx
 708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
 710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableDirectionTx(USART_TypeDef *LPUARTx)
 712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR1, USART_CR1_TE);
 714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Configure simultaneously enabled/disabled states
 718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         of Transmitter and Receiver
 719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          RE            LL_LPUART_SetTransferDirection\n
 720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         CR1          TE            LL_LPUART_SetTransferDirection
 721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  TransferDirection This parameter can be one of the following values:
 723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DIRECTION_NONE
 724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DIRECTION_RX
 725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DIRECTION_TX
 726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DIRECTION_TX_RX
 727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
 728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetTransferDirection(USART_TypeDef *LPUARTx, uint32_t TransferDirect
 730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR1, USART_CR1_RE | USART_CR1_TE, TransferDirection);
 732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
ARM GAS  /tmp/ccV1cKci.s 			page 54


 735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Return enabled/disabled states of Transmitter and Receiver
 736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          RE            LL_LPUART_GetTransferDirection\n
 737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         CR1          TE            LL_LPUART_GetTransferDirection
 738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
 740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DIRECTION_NONE
 741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DIRECTION_RX
 742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DIRECTION_TX
 743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DIRECTION_TX_RX
 744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetTransferDirection(USART_TypeDef *LPUARTx)
 746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR1, USART_CR1_RE | USART_CR1_TE));
 748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Configure Parity (enabled/disabled and parity mode if enabled)
 752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @note   This function selects if hardware parity control (generation and detection) is enabled 
 753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         When the parity control is enabled (Odd or Even), computed parity bit is inserted at th
 754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         (depending on data width) and parity is checked on the received data.
 755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          PS            LL_LPUART_SetParity\n
 756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         CR1          PCE           LL_LPUART_SetParity
 757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  Parity This parameter can be one of the following values:
 759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PARITY_NONE
 760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PARITY_EVEN
 761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PARITY_ODD
 762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
 763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetParity(USART_TypeDef *LPUARTx, uint32_t Parity)
 765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR1, USART_CR1_PS | USART_CR1_PCE, Parity);
 767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Return Parity configuration (enabled/disabled and parity mode if enabled)
 771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          PS            LL_LPUART_GetParity\n
 772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         CR1          PCE           LL_LPUART_GetParity
 773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
 775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PARITY_NONE
 776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PARITY_EVEN
 777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PARITY_ODD
 778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetParity(USART_TypeDef *LPUARTx)
 780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR1, USART_CR1_PS | USART_CR1_PCE));
 782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Set Receiver Wake Up method from Mute mode.
 786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          WAKE          LL_LPUART_SetWakeUpMethod
 787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  Method This parameter can be one of the following values:
 789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_WAKEUP_IDLELINE
 790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_WAKEUP_ADDRESSMARK
 791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
ARM GAS  /tmp/ccV1cKci.s 			page 55


 792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetWakeUpMethod(USART_TypeDef *LPUARTx, uint32_t Method)
 794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR1, USART_CR1_WAKE, Method);
 796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Return Receiver Wake Up method from Mute mode
 800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          WAKE          LL_LPUART_GetWakeUpMethod
 801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
 803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_WAKEUP_IDLELINE
 804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_WAKEUP_ADDRESSMARK
 805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetWakeUpMethod(USART_TypeDef *LPUARTx)
 807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR1, USART_CR1_WAKE));
 809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Set Word length (nb of data bits, excluding start and stop bits)
 813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          M             LL_LPUART_SetDataWidth
 814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  DataWidth This parameter can be one of the following values:
 816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DATAWIDTH_7B
 817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DATAWIDTH_8B
 818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DATAWIDTH_9B
 819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
 820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetDataWidth(USART_TypeDef *LPUARTx, uint32_t DataWidth)
 822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR1, USART_CR1_M, DataWidth);
 824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Return Word length (i.e. nb of data bits, excluding start and stop bits)
 828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          M             LL_LPUART_GetDataWidth
 829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
 831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DATAWIDTH_7B
 832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DATAWIDTH_8B
 833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DATAWIDTH_9B
 834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetDataWidth(USART_TypeDef *LPUARTx)
 836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR1, USART_CR1_M));
 838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Allow switch between Mute Mode and Active mode
 842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          MME           LL_LPUART_EnableMuteMode
 843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
 845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableMuteMode(USART_TypeDef *LPUARTx)
 847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR1, USART_CR1_MME);
ARM GAS  /tmp/ccV1cKci.s 			page 56


 849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Prevent Mute Mode use. Set Receiver in active mode permanently.
 853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          MME           LL_LPUART_DisableMuteMode
 854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
 856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableMuteMode(USART_TypeDef *LPUARTx)
 858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR1, USART_CR1_MME);
 860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Indicate if switch between Mute Mode and Active mode is allowed
 864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          MME           LL_LPUART_IsEnabledMuteMode
 865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
 867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledMuteMode(USART_TypeDef *LPUARTx)
 869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR1, USART_CR1_MME) == (USART_CR1_MME)) ? 1UL : 0UL);
 871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Configure Clock source prescaler for baudrate generator and oversampling
 875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll PRESC        PRESCALER     LL_LPUART_SetPrescaler
 876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  PrescalerValue This parameter can be one of the following values:
 878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV1
 879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV2
 880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV4
 881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV6
 882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV8
 883:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV10
 884:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV12
 885:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV16
 886:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV32
 887:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV64
 888:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV128
 889:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV256
 890:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
 891:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 892:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetPrescaler(USART_TypeDef *LPUARTx, uint32_t PrescalerValue)
 893:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 894:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->PRESC, USART_PRESC_PRESCALER, (uint16_t)PrescalerValue);
 895:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 896:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 897:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 898:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Retrieve the Clock source prescaler for baudrate generator and oversampling
 899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll PRESC        PRESCALER     LL_LPUART_GetPrescaler
 900:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
 902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV1
 903:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV2
 904:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV4
 905:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV6
ARM GAS  /tmp/ccV1cKci.s 			page 57


 906:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV8
 907:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV10
 908:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV12
 909:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV16
 910:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV32
 911:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV64
 912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV128
 913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV256
 914:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 915:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetPrescaler(USART_TypeDef *LPUARTx)
 916:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 917:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->PRESC, USART_PRESC_PRESCALER));
 918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 919:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 921:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Set the length of the stop bits
 922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR2          STOP          LL_LPUART_SetStopBitsLength
 923:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 924:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  StopBits This parameter can be one of the following values:
 925:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_STOPBITS_1
 926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_STOPBITS_2
 927:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
 928:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 929:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetStopBitsLength(USART_TypeDef *LPUARTx, uint32_t StopBits)
 930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 931:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR2, USART_CR2_STOP, StopBits);
 932:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 933:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 934:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 935:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Retrieve the length of the stop bits
 936:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR2          STOP          LL_LPUART_GetStopBitsLength
 937:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 938:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
 939:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_STOPBITS_1
 940:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_STOPBITS_2
 941:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 942:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetStopBitsLength(USART_TypeDef *LPUARTx)
 943:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR2, USART_CR2_STOP));
 945:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 946:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 947:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 948:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Configure Character frame format (Datawidth, Parity control, Stop Bits)
 949:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @note   Call of this function is equivalent to following function call sequence :
 950:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         - Data Width configuration using @ref LL_LPUART_SetDataWidth() function
 951:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         - Parity Control and mode configuration using @ref LL_LPUART_SetParity() function
 952:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         - Stop bits configuration using @ref LL_LPUART_SetStopBitsLength() function
 953:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          PS            LL_LPUART_ConfigCharacter\n
 954:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         CR1          PCE           LL_LPUART_ConfigCharacter\n
 955:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         CR1          M             LL_LPUART_ConfigCharacter\n
 956:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         CR2          STOP          LL_LPUART_ConfigCharacter
 957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 958:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  DataWidth This parameter can be one of the following values:
 959:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DATAWIDTH_7B
 960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DATAWIDTH_8B
 961:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DATAWIDTH_9B
 962:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  Parity This parameter can be one of the following values:
ARM GAS  /tmp/ccV1cKci.s 			page 58


 963:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PARITY_NONE
 964:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PARITY_EVEN
 965:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PARITY_ODD
 966:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  StopBits This parameter can be one of the following values:
 967:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_STOPBITS_1
 968:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_STOPBITS_2
 969:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
 970:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 971:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_ConfigCharacter(USART_TypeDef *LPUARTx, uint32_t DataWidth, uint32_t
 972:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****                                                uint32_t StopBits)
 973:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 974:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR1, USART_CR1_PS | USART_CR1_PCE | USART_CR1_M, Parity | DataWidth);
 975:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR2, USART_CR2_STOP, StopBits);
 976:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 977:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 978:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 979:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Configure TX/RX pins swapping setting.
 980:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR2          SWAP          LL_LPUART_SetTXRXSwap
 981:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 982:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  SwapConfig This parameter can be one of the following values:
 983:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_TXRX_STANDARD
 984:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_TXRX_SWAPPED
 985:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
 986:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
 987:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetTXRXSwap(USART_TypeDef *LPUARTx, uint32_t SwapConfig)
 988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 989:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR2, USART_CR2_SWAP, SwapConfig);
 990:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 991:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 992:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
 993:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Retrieve TX/RX pins swapping configuration.
 994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR2          SWAP          LL_LPUART_GetTXRXSwap
 995:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
 996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
 997:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_TXRX_STANDARD
 998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_TXRX_SWAPPED
 999:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1000:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetTXRXSwap(USART_TypeDef *LPUARTx)
1001:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR2, USART_CR2_SWAP));
1003:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1004:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Configure RX pin active level logic
1007:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR2          RXINV         LL_LPUART_SetRXPinLevel
1008:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
1010:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_RXPIN_LEVEL_STANDARD
1011:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_RXPIN_LEVEL_INVERTED
1012:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1013:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1014:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetRXPinLevel(USART_TypeDef *LPUARTx, uint32_t PinInvMethod)
1015:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1016:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR2, USART_CR2_RXINV, PinInvMethod);
1017:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1018:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1019:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
ARM GAS  /tmp/ccV1cKci.s 			page 59


1020:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Retrieve RX pin active level logic configuration
1021:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR2          RXINV         LL_LPUART_GetRXPinLevel
1022:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1023:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
1024:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_RXPIN_LEVEL_STANDARD
1025:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_RXPIN_LEVEL_INVERTED
1026:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1027:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetRXPinLevel(USART_TypeDef *LPUARTx)
1028:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1029:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR2, USART_CR2_RXINV));
1030:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1031:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1032:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1033:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Configure TX pin active level logic
1034:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR2          TXINV         LL_LPUART_SetTXPinLevel
1035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1036:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  PinInvMethod This parameter can be one of the following values:
1037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_TXPIN_LEVEL_STANDARD
1038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_TXPIN_LEVEL_INVERTED
1039:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1040:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1041:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetTXPinLevel(USART_TypeDef *LPUARTx, uint32_t PinInvMethod)
1042:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1043:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR2, USART_CR2_TXINV, PinInvMethod);
1044:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1045:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1046:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1047:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Retrieve TX pin active level logic configuration
1048:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR2          TXINV         LL_LPUART_GetTXPinLevel
1049:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1050:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
1051:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_TXPIN_LEVEL_STANDARD
1052:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_TXPIN_LEVEL_INVERTED
1053:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1054:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetTXPinLevel(USART_TypeDef *LPUARTx)
1055:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1056:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR2, USART_CR2_TXINV));
1057:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1058:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1059:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1060:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Configure Binary data logic.
1061:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *
1062:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @note   Allow to define how Logical data from the data register are send/received :
1063:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         either in positive/direct logic (1=H, 0=L) or in negative/inverse logic (1=L, 0=H)
1064:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR2          DATAINV       LL_LPUART_SetBinaryDataLogic
1065:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1066:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  DataLogic This parameter can be one of the following values:
1067:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_BINARY_LOGIC_POSITIVE
1068:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_BINARY_LOGIC_NEGATIVE
1069:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1070:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1071:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetBinaryDataLogic(USART_TypeDef *LPUARTx, uint32_t DataLogic)
1072:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1073:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR2, USART_CR2_DATAINV, DataLogic);
1074:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1075:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1076:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
ARM GAS  /tmp/ccV1cKci.s 			page 60


1077:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Retrieve Binary data configuration
1078:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR2          DATAINV       LL_LPUART_GetBinaryDataLogic
1079:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1080:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
1081:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_BINARY_LOGIC_POSITIVE
1082:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_BINARY_LOGIC_NEGATIVE
1083:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1084:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetBinaryDataLogic(USART_TypeDef *LPUARTx)
1085:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR2, USART_CR2_DATAINV));
1087:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1090:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Configure transfer bit order (either Less or Most Significant Bit First)
1091:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
1092:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
1093:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR2          MSBFIRST      LL_LPUART_SetTransferBitOrder
1094:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1095:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  BitOrder This parameter can be one of the following values:
1096:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_BITORDER_LSBFIRST
1097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_BITORDER_MSBFIRST
1098:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1099:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetTransferBitOrder(USART_TypeDef *LPUARTx, uint32_t BitOrder)
1101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR2, USART_CR2_MSBFIRST, BitOrder);
1103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Return transfer bit order (either Less or Most Significant Bit First)
1107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @note   MSB First means data is transmitted/received with the MSB first, following the start bi
1108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         LSB First means data is transmitted/received with data bit 0 first, following the start
1109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR2          MSBFIRST      LL_LPUART_GetTransferBitOrder
1110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
1112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_BITORDER_LSBFIRST
1113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_BITORDER_MSBFIRST
1114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetTransferBitOrder(USART_TypeDef *LPUARTx)
1116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR2, USART_CR2_MSBFIRST));
1118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Set Address of the LPUART node.
1122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @note   This is used in multiprocessor communication during Mute mode or Stop mode,
1123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         for wake up with address mark detection.
1124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @note   4bits address node is used when 4-bit Address Detection is selected in ADDM7.
1125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         (b7-b4 should be set to 0)
1126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         8bits address node is used when 7-bit Address Detection is selected in ADDM7.
1127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         (This is used in multiprocessor communication during Mute mode or Stop mode,
1128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         for wake up with 7-bit address mark detection.
1129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         The MSB of the character sent by the transmitter should be equal to 1.
1130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         It may also be used for character detection during normal reception,
1131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         Mute mode inactive (for example, end of block detection in ModBus protocol).
1132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         In this case, the whole received character (8-bit) is compared to the ADD[7:0]
1133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         value and CMF flag is set on match)
ARM GAS  /tmp/ccV1cKci.s 			page 61


1134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR2          ADD           LL_LPUART_ConfigNodeAddress\n
1135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         CR2          ADDM7         LL_LPUART_ConfigNodeAddress
1136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  AddressLen This parameter can be one of the following values:
1138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_ADDRESS_DETECT_4B
1139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_ADDRESS_DETECT_7B
1140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  NodeAddress 4 or 7 bit Address of the LPUART node.
1141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_ConfigNodeAddress(USART_TypeDef *LPUARTx, uint32_t AddressLen, uint3
1144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR2, USART_CR2_ADD | USART_CR2_ADDM7,
1146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****              (uint32_t)(AddressLen | (NodeAddress << USART_CR2_ADD_Pos)));
1147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Return 8 bit Address of the LPUART node as set in ADD field of CR2.
1151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @note   If 4-bit Address Detection is selected in ADDM7,
1152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         only 4bits (b3-b0) of returned value are relevant (b31-b4 are not relevant)
1153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         If 7-bit Address Detection is selected in ADDM7,
1154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         only 8bits (b7-b0) of returned value are relevant (b31-b8 are not relevant)
1155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR2          ADD           LL_LPUART_GetNodeAddress
1156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval Address of the LPUART node (Value between Min_Data=0 and Max_Data=255)
1158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetNodeAddress(USART_TypeDef *LPUARTx)
1160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR2, USART_CR2_ADD) >> USART_CR2_ADD_Pos);
1162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Return Length of Node Address used in Address Detection mode (7-bit or 4-bit)
1166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR2          ADDM7         LL_LPUART_GetNodeAddressLen
1167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
1169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_ADDRESS_DETECT_4B
1170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_ADDRESS_DETECT_7B
1171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetNodeAddressLen(USART_TypeDef *LPUARTx)
1173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR2, USART_CR2_ADDM7));
1175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Enable RTS HW Flow Control
1179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          RTSE          LL_LPUART_EnableRTSHWFlowCtrl
1180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableRTSHWFlowCtrl(USART_TypeDef *LPUARTx)
1184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR3, USART_CR3_RTSE);
1186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Disable RTS HW Flow Control
1190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          RTSE          LL_LPUART_DisableRTSHWFlowCtrl
ARM GAS  /tmp/ccV1cKci.s 			page 62


1191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableRTSHWFlowCtrl(USART_TypeDef *LPUARTx)
1195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR3, USART_CR3_RTSE);
1197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Enable CTS HW Flow Control
1201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          CTSE          LL_LPUART_EnableCTSHWFlowCtrl
1202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableCTSHWFlowCtrl(USART_TypeDef *LPUARTx)
1206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR3, USART_CR3_CTSE);
1208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Disable CTS HW Flow Control
1212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          CTSE          LL_LPUART_DisableCTSHWFlowCtrl
1213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableCTSHWFlowCtrl(USART_TypeDef *LPUARTx)
1217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR3, USART_CR3_CTSE);
1219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Configure HW Flow Control mode (both CTS and RTS)
1223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          RTSE          LL_LPUART_SetHWFlowCtrl\n
1224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         CR3          CTSE          LL_LPUART_SetHWFlowCtrl
1225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  HardwareFlowControl This parameter can be one of the following values:
1227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_HWCONTROL_NONE
1228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_HWCONTROL_RTS
1229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_HWCONTROL_CTS
1230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_HWCONTROL_RTS_CTS
1231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetHWFlowCtrl(USART_TypeDef *LPUARTx, uint32_t HardwareFlowControl)
1234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE, HardwareFlowControl);
1236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Return HW Flow Control configuration (both CTS and RTS)
1240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          RTSE          LL_LPUART_GetHWFlowCtrl\n
1241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         CR3          CTSE          LL_LPUART_GetHWFlowCtrl
1242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
1244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_HWCONTROL_NONE
1245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_HWCONTROL_RTS
1246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_HWCONTROL_CTS
1247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_HWCONTROL_RTS_CTS
ARM GAS  /tmp/ccV1cKci.s 			page 63


1248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetHWFlowCtrl(USART_TypeDef *LPUARTx)
1250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR3, USART_CR3_RTSE | USART_CR3_CTSE));
1252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Enable Overrun detection
1256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          OVRDIS        LL_LPUART_EnableOverrunDetect
1257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableOverrunDetect(USART_TypeDef *LPUARTx)
1261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR3, USART_CR3_OVRDIS);
1263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Disable Overrun detection
1267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          OVRDIS        LL_LPUART_DisableOverrunDetect
1268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableOverrunDetect(USART_TypeDef *LPUARTx)
1272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR3, USART_CR3_OVRDIS);
1274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Indicate if Overrun detection is enabled
1278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          OVRDIS        LL_LPUART_IsEnabledOverrunDetect
1279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledOverrunDetect(USART_TypeDef *LPUARTx)
1283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR3, USART_CR3_OVRDIS) != USART_CR3_OVRDIS) ? 1UL : 0UL);
1285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Select event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          WUS           LL_LPUART_SetWKUPType
1290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  Type This parameter can be one of the following values:
1292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_WAKEUP_ON_ADDRESS
1293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_WAKEUP_ON_STARTBIT
1294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_WAKEUP_ON_RXNE
1295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetWKUPType(USART_TypeDef *LPUARTx, uint32_t Type)
1298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR3, USART_CR3_WUS, Type);
1300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Return event type for Wake UP Interrupt Flag (WUS[1:0] bits)
1304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          WUS           LL_LPUART_GetWKUPType
ARM GAS  /tmp/ccV1cKci.s 			page 64


1305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
1307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_WAKEUP_ON_ADDRESS
1308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_WAKEUP_ON_STARTBIT
1309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_WAKEUP_ON_RXNE
1310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetWKUPType(USART_TypeDef *LPUARTx)
1312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR3, USART_CR3_WUS));
1314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Configure LPUART BRR register for achieving expected Baud Rate value.
1318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *
1319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @note   Compute and set LPUARTDIV value in BRR Register (full BRR content)
1320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         according to used Peripheral Clock and expected Baud Rate values
1321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @note   Peripheral clock and Baud Rate values provided as function parameters should be valid
1322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         (Baud rate value != 0).
1323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @note   Provided that LPUARTx_BRR must be > = 0x300 and LPUART_BRR is 20-bit,
1324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         a care should be taken when generating high baud rates using high PeriphClk
1325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         values. PeriphClk must be in the range [3 x BaudRate, 4096 x BaudRate].
1326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll BRR          BRR           LL_LPUART_SetBaudRate
1327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  PeriphClk Peripheral Clock
1329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  PrescalerValue This parameter can be one of the following values:
1330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV1
1331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV2
1332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV4
1333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV6
1334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV8
1335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV10
1336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV12
1337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV16
1338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV32
1339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV64
1340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV128
1341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV256
1342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  BaudRate Baud Rate
1343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetBaudRate(USART_TypeDef *LPUARTx, uint32_t PeriphClk, uint32_t Pre
1346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****                                            uint32_t BaudRate)
1347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   LPUARTx->BRR = __LL_LPUART_DIV(PeriphClk, PrescalerValue, BaudRate);
1349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Return current Baud Rate value, according to LPUARTDIV present in BRR register
1353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         (full BRR content), and to used Peripheral Clock values
1354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @note   In case of non-initialized or invalid value stored in BRR register, value 0 will be ret
1355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll BRR          BRR           LL_LPUART_GetBaudRate
1356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  PeriphClk Peripheral Clock
1358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  PrescalerValue This parameter can be one of the following values:
1359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV1
1360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV2
1361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV4
ARM GAS  /tmp/ccV1cKci.s 			page 65


1362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV6
1363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV8
1364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV10
1365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV12
1366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV16
1367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV32
1368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV64
1369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV128
1370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_PRESCALER_DIV256
1371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval Baud Rate
1372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetBaudRate(USART_TypeDef *LPUARTx, uint32_t PeriphClk, uint32_t
1374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   register uint32_t lpuartdiv;
1376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   register uint32_t brrresult;
1377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   register uint32_t periphclkpresc = (uint32_t)(PeriphClk / (LPUART_PRESCALER_TAB[(uint16_t)Prescal
1378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   lpuartdiv = LPUARTx->BRR & LPUART_BRR_MASK;
1380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   if (lpuartdiv >= LPUART_BRR_MIN_VALUE)
1382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   {
1383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****     brrresult = (uint32_t)(((uint64_t)(periphclkpresc) * LPUART_LPUARTDIV_FREQ_MUL) / lpuartdiv);
1384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   }
1385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   else
1386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   {
1387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****     brrresult = 0x0UL;
1388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   }
1389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return (brrresult);
1391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
1395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EF_Configuration_HalfDuplex Configuration functions related to Half Duplex 
1398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
1399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Enable Single Wire Half-Duplex mode
1403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          HDSEL         LL_LPUART_EnableHalfDuplex
1404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableHalfDuplex(USART_TypeDef *LPUARTx)
1408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR3, USART_CR3_HDSEL);
1410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Disable Single Wire Half-Duplex mode
1414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          HDSEL         LL_LPUART_DisableHalfDuplex
1415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableHalfDuplex(USART_TypeDef *LPUARTx)
ARM GAS  /tmp/ccV1cKci.s 			page 66


1419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR3, USART_CR3_HDSEL);
1421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Indicate if Single Wire Half-Duplex mode is enabled
1425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          HDSEL         LL_LPUART_IsEnabledHalfDuplex
1426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledHalfDuplex(USART_TypeDef *LPUARTx)
1430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR3, USART_CR3_HDSEL) == (USART_CR3_HDSEL)) ? 1UL : 0UL);
1432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
1436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EF_Configuration_DE Configuration functions related to Driver Enable featur
1439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
1440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Set DEDT (Driver Enable De-Assertion Time), Time value expressed on 5 bits ([4:0] bits)
1444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          DEDT          LL_LPUART_SetDEDeassertionTime
1445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  Time Value between Min_Data=0 and Max_Data=31
1447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetDEDeassertionTime(USART_TypeDef *LPUARTx, uint32_t Time)
1450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR1, USART_CR1_DEDT, Time << USART_CR1_DEDT_Pos);
1452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Return DEDT (Driver Enable De-Assertion Time)
1456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          DEDT          LL_LPUART_GetDEDeassertionTime
1457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval Time value expressed on 5 bits ([4:0] bits) : c
1459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetDEDeassertionTime(USART_TypeDef *LPUARTx)
1461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR1, USART_CR1_DEDT) >> USART_CR1_DEDT_Pos);
1463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Set DEAT (Driver Enable Assertion Time), Time value expressed on 5 bits ([4:0] bits).
1467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          DEAT          LL_LPUART_SetDEAssertionTime
1468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  Time Value between Min_Data=0 and Max_Data=31
1470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetDEAssertionTime(USART_TypeDef *LPUARTx, uint32_t Time)
1473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR1, USART_CR1_DEAT, Time << USART_CR1_DEAT_Pos);
1475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
ARM GAS  /tmp/ccV1cKci.s 			page 67


1476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Return DEAT (Driver Enable Assertion Time)
1479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          DEAT          LL_LPUART_GetDEAssertionTime
1480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval Time value expressed on 5 bits ([4:0] bits) : Time Value between Min_Data=0 and Max_Dat
1482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetDEAssertionTime(USART_TypeDef *LPUARTx)
1484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR1, USART_CR1_DEAT) >> USART_CR1_DEAT_Pos);
1486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Enable Driver Enable (DE) Mode
1490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          DEM           LL_LPUART_EnableDEMode
1491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableDEMode(USART_TypeDef *LPUARTx)
1495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR3, USART_CR3_DEM);
1497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Disable Driver Enable (DE) Mode
1501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          DEM           LL_LPUART_DisableDEMode
1502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableDEMode(USART_TypeDef *LPUARTx)
1506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR3, USART_CR3_DEM);
1508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Indicate if Driver Enable (DE) Mode is enabled
1512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          DEM           LL_LPUART_IsEnabledDEMode
1513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledDEMode(USART_TypeDef *LPUARTx)
1517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR3, USART_CR3_DEM) == (USART_CR3_DEM)) ? 1UL : 0UL);
1519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Select Driver Enable Polarity
1523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          DEP           LL_LPUART_SetDESignalPolarity
1524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  Polarity This parameter can be one of the following values:
1526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DE_POLARITY_HIGH
1527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DE_POLARITY_LOW
1528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_SetDESignalPolarity(USART_TypeDef *LPUARTx, uint32_t Polarity)
1531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   MODIFY_REG(LPUARTx->CR3, USART_CR3_DEP, Polarity);
ARM GAS  /tmp/ccV1cKci.s 			page 68


1533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Return Driver Enable Polarity
1537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          DEP           LL_LPUART_GetDESignalPolarity
1538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval Returned value can be one of the following values:
1540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DE_POLARITY_HIGH
1541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DE_POLARITY_LOW
1542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_GetDESignalPolarity(USART_TypeDef *LPUARTx)
1544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return (uint32_t)(READ_BIT(LPUARTx->CR3, USART_CR3_DEP));
1546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
1550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EF_FLAG_Management FLAG_Management
1553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
1554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Parity Error Flag is set or not
1558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ISR          PE            LL_LPUART_IsActiveFlag_PE
1559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_PE(USART_TypeDef *LPUARTx)
1563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_PE) == (USART_ISR_PE)) ? 1UL : 0UL);
1565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Framing Error Flag is set or not
1569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ISR          FE            LL_LPUART_IsActiveFlag_FE
1570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_FE(USART_TypeDef *LPUARTx)
1574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_FE) == (USART_ISR_FE)) ? 1UL : 0UL);
1576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Noise error detected Flag is set or not
1580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ISR          NE            LL_LPUART_IsActiveFlag_NE
1581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_NE(USART_TypeDef *LPUARTx)
1585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_NE) == (USART_ISR_NE)) ? 1UL : 0UL);
1587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
ARM GAS  /tmp/ccV1cKci.s 			page 69


1590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART OverRun Error Flag is set or not
1591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ISR          ORE           LL_LPUART_IsActiveFlag_ORE
1592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_ORE(USART_TypeDef *LPUARTx)
1596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_ORE) == (USART_ISR_ORE)) ? 1UL : 0UL);
1598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART IDLE line detected Flag is set or not
1602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ISR          IDLE          LL_LPUART_IsActiveFlag_IDLE
1603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_IDLE(USART_TypeDef *LPUARTx)
1607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_IDLE) == (USART_ISR_IDLE)) ? 1UL : 0UL);
1609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /* Legacy define */
1612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_IsActiveFlag_RXNE  LL_LPUART_IsActiveFlag_RXNE_RXFNE
1613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Read Data Register or LPUART RX FIFO Not Empty Flag is set or not
1616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ISR          RXNE_RXFNE    LL_LPUART_IsActiveFlag_RXNE_RXFNE
1617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_RXNE_RXFNE(USART_TypeDef *LPUARTx)
1621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_RXNE_RXFNE) == (USART_ISR_RXNE_RXFNE)) ? 1UL : 0UL);
1623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Transmission Complete Flag is set or not
1627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ISR          TC            LL_LPUART_IsActiveFlag_TC
1628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_TC(USART_TypeDef *LPUARTx)
1632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_TC) == (USART_ISR_TC)) ? 1UL : 0UL);
1634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /* Legacy define */
1637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_IsActiveFlag_TXE  LL_LPUART_IsActiveFlag_TXE_TXFNF
1638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Transmit Data Register Empty or LPUART TX FIFO Not Full Flag is set
1641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ISR          TXE_TXFNF     LL_LPUART_IsActiveFlag_TXE_TXFNF
1642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_TXE_TXFNF(USART_TypeDef *LPUARTx)
1646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
ARM GAS  /tmp/ccV1cKci.s 			page 70


1647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_TXE_TXFNF) == (USART_ISR_TXE_TXFNF)) ? 1UL : 0UL);
1648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART CTS interrupt Flag is set or not
1652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ISR          CTSIF         LL_LPUART_IsActiveFlag_nCTS
1653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_nCTS(USART_TypeDef *LPUARTx)
1657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_CTSIF) == (USART_ISR_CTSIF)) ? 1UL : 0UL);
1659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART CTS Flag is set or not
1663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ISR          CTS           LL_LPUART_IsActiveFlag_CTS
1664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_CTS(USART_TypeDef *LPUARTx)
1668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_CTS) == (USART_ISR_CTS)) ? 1UL : 0UL);
1670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Busy Flag is set or not
1674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ISR          BUSY          LL_LPUART_IsActiveFlag_BUSY
1675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_BUSY(USART_TypeDef *LPUARTx)
1679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_BUSY) == (USART_ISR_BUSY)) ? 1UL : 0UL);
1681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Character Match Flag is set or not
1685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ISR          CMF           LL_LPUART_IsActiveFlag_CM
1686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_CM(USART_TypeDef *LPUARTx)
1690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_CMF) == (USART_ISR_CMF)) ? 1UL : 0UL);
1692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Send Break Flag is set or not
1696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ISR          SBKF          LL_LPUART_IsActiveFlag_SBK
1697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_SBK(USART_TypeDef *LPUARTx)
1701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_SBKF) == (USART_ISR_SBKF)) ? 1UL : 0UL);
1703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
ARM GAS  /tmp/ccV1cKci.s 			page 71


1704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Receive Wake Up from mute mode Flag is set or not
1707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ISR          RWU           LL_LPUART_IsActiveFlag_RWU
1708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_RWU(USART_TypeDef *LPUARTx)
1712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_RWU) == (USART_ISR_RWU)) ? 1UL : 0UL);
1714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Wake Up from stop mode Flag is set or not
1718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ISR          WUF           LL_LPUART_IsActiveFlag_WKUP
1719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_WKUP(USART_TypeDef *LPUARTx)
1723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_WUF) == (USART_ISR_WUF)) ? 1UL : 0UL);
1725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Transmit Enable Acknowledge Flag is set or not
1729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ISR          TEACK         LL_LPUART_IsActiveFlag_TEACK
1730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_TEACK(USART_TypeDef *LPUARTx)
1734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_TEACK) == (USART_ISR_TEACK)) ? 1UL : 0UL);
 448              		.loc 4 1735 12 is_stmt 0 view .LVU118
 449 00bc 8023     		movs	r3, #128
 450              	.LBE158:
 451              	.LBE157:
 452              	.LBB160:
 453              	.LBB156:
 473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 454              		.loc 4 473 3 view .LVU119
 455 00be 3D60     		str	r5, [r7]
 456              	.LVL17:
 473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 457              		.loc 4 473 3 view .LVU120
 458              	.LBE156:
 459              	.LBE160:
 226:Utilities/TRACER_EMB/tracer_emb_hw.c ****     
 227:Utilities/TRACER_EMB/tracer_emb_hw.c ****     uint32_t _temp1 = LL_LPUART_IsActiveFlag_TEACK(TRACER_EMB_USART_INSTANCE);
 460              		.loc 2 227 5 is_stmt 1 view .LVU121
 461              	.LBB161:
 462              	.LBI157:
1733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 463              		.loc 4 1733 26 view .LVU122
 464              	.LBB159:
 465              		.loc 4 1735 3 view .LVU123
 466              		.loc 4 1735 12 is_stmt 0 view .LVU124
 467 00c0 FA69     		ldr	r2, [r7, #28]
ARM GAS  /tmp/ccV1cKci.s 			page 72


 468 00c2 9B03     		lsls	r3, r3, #14
 469              	.LVL18:
 470              	.L10:
 471              		.loc 4 1735 80 view .LVU125
 472 00c4 1A42     		tst	r2, r3
 473 00c6 01D1     		bne	.L5
 474              	.LVL19:
 475              		.loc 4 1735 80 view .LVU126
 476              	.LBE159:
 477              	.LBE161:
 228:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /* Polling USART initialisation */
 229:Utilities/TRACER_EMB/tracer_emb_hw.c ****     while(0u == _temp1)
 478              		.loc 2 229 10 is_stmt 1 view .LVU127
 230:Utilities/TRACER_EMB/tracer_emb_hw.c ****     {
 231:Utilities/TRACER_EMB/tracer_emb_hw.c ****       _temp1 = LL_LPUART_IsActiveFlag_TEACK(TRACER_EMB_USART_INSTANCE);
 479              		.loc 2 231 7 view .LVU128
 480              	.LBB162:
 481              	.LBI162:
1733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 482              		.loc 4 1733 26 view .LVU129
 483              	.LBB163:
 484              		.loc 4 1735 3 view .LVU130
 485              		.loc 4 1735 12 is_stmt 0 view .LVU131
 486 00c8 FA69     		ldr	r2, [r7, #28]
 487 00ca FBE7     		b	.L10
 488              	.LVL20:
 489              	.L5:
 490              		.loc 4 1735 12 view .LVU132
 491              	.LBE163:
 492              	.LBE162:
 493              	.LBE192:
 232:Utilities/TRACER_EMB/tracer_emb_hw.c ****     }
 233:Utilities/TRACER_EMB/tracer_emb_hw.c ****   }
 234:Utilities/TRACER_EMB/tracer_emb_hw.c **** #endif     
 235:Utilities/TRACER_EMB/tracer_emb_hw.c ****      
 236:Utilities/TRACER_EMB/tracer_emb_hw.c **** #if TRACER_EMB_DMA_MODE == 1UL
 237:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* Configure TX DMA */
 238:Utilities/TRACER_EMB/tracer_emb_hw.c ****   TRACER_EMB_ENABLE_CLK_DMA();
 494              		.loc 2 238 3 is_stmt 1 view .LVU133
 495              	.LBB193:
 496              	.LBI193:
 222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 497              		.loc 1 222 22 view .LVU134
 498              	.LBB194:
 224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   SET_BIT(RCC->AHBENR, Periphs);
 499              		.loc 1 224 3 view .LVU135
 225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 500              		.loc 1 225 3 view .LVU136
 501 00cc 0121     		movs	r1, #1
 502 00ce A26B     		ldr	r2, [r4, #56]
 503              	.LBE194:
 504              	.LBE193:
 505              	.LBB196:
 506              	.LBB197:
 507              		.file 5 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
   1:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   ******************************************************************************
ARM GAS  /tmp/ccV1cKci.s 			page 73


   3:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @file    stm32g0xx_ll_dma.h
   4:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief   Header file of DMA LL module.
   6:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   ******************************************************************************
   7:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @attention
   8:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *
   9:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * <h2><center>&copy; Copyright (c) 2018 STMicroelectronics. 
  10:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *
  12:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * the "License"; You may not use this file except in compliance with the 
  14:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *
  17:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   ******************************************************************************
  18:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
  19:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
  20:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #ifndef STM32G0xx_LL_DMA_H
  22:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define STM32G0xx_LL_DMA_H
  23:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
  24:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #ifdef __cplusplus
  25:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** extern "C" {
  26:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #endif
  27:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
  28:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #include "stm32g0xx.h"
  30:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #include "stm32g0xx_ll_dmamux.h"
  31:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
  32:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /** @addtogroup STM32G0xx_LL_Driver
  33:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @{
  34:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
  35:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
  36:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #if defined (DMA1)
  37:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
  38:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /** @defgroup DMA_LL DMA
  39:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @{
  40:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
  41:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
  42:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /* Private types -------------------------------------------------------------*/
  43:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /* Private variables ---------------------------------------------------------*/
  44:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Variables DMA Private Variables
  45:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @{
  46:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
  47:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /* Array used to get the DMA channel register offset versus channel index LL_DMA_CHANNEL_x */
  48:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** static const uint8_t CHANNEL_OFFSET_TAB[] =
  49:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
  50:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel1_BASE - DMA1_BASE),
  51:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel2_BASE - DMA1_BASE),
  52:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel3_BASE - DMA1_BASE),
  53:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel4_BASE - DMA1_BASE),
  54:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel5_BASE - DMA1_BASE),
  55:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #if defined(DMA1_Channel6_BASE)
  56:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel6_BASE - DMA1_BASE),
  57:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #endif
  58:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #if defined(DMA1_Channel7_BASE)
  59:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   (uint8_t)(DMA1_Channel7_BASE - DMA1_BASE)
ARM GAS  /tmp/ccV1cKci.s 			page 74


  60:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #endif
  61:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** };
  62:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
  63:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @}
  64:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
  65:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
  66:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /* Private constants ---------------------------------------------------------*/
  67:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /* Private macros ------------------------------------------------------------*/
  68:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /** @defgroup DMA_LL_Private_Macros DMA Private Macros
  69:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @{
  70:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
  71:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
  72:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @}
  73:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
  74:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
  75:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /* Exported types ------------------------------------------------------------*/
  76:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
  77:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /** @defgroup DMA_LL_ES_INIT DMA Exported Init structure
  78:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @{
  79:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
  80:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** typedef struct
  81:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
  82:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcAddress;  /*!< Specifies the peripheral base address for DMA transfer
  83:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         or as Source base address in case of memory to memory trans
  84:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
  85:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
  86:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
  87:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t MemoryOrM2MDstAddress;  /*!< Specifies the memory base address for DMA transfer
  88:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         or as Destination base address in case of memory to memory 
  89:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
  90:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
  91:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
  92:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t Direction;              /*!< Specifies if the data will be transferred from memory to pe
  93:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         from memory to memory or from peripheral to memory.
  94:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_DIRECTION
  95:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
  96:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
  97:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
  98:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t Mode;                   /*!< Specifies the normal or circular operation mode.
  99:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MODE
 100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         @note: The circular buffer mode cannot be used if the memor
 101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                                data transfer direction is configured on the selecte
 102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcIncMode;  /*!< Specifies whether the Peripheral address or Source address 
 106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         is incremented or not.
 107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PERIPH
 108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t MemoryOrM2MDstIncMode;  /*!< Specifies whether the Memory address or Destination address
 112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         is incremented or not.
 113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MEMORY
 114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
ARM GAS  /tmp/ccV1cKci.s 			page 75


 117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t PeriphOrM2MSrcDataSize; /*!< Specifies the Peripheral data size alignment or Source data
 118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PDATAALIGN
 120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t MemoryOrM2MDstDataSize; /*!< Specifies the Memory data size alignment or Destination dat
 124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         in case of memory to memory transfer direction.
 125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_MDATAALIGN
 126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t NbData;                 /*!< Specifies the number of data to transfer, in data unit.
 130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         The data unit is equal to the source buffer configuration s
 131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         or MemorySize parameters depending in the transfer directio
 132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         This parameter must be a value between Min_Data = 0 and Max
 133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t PeriphRequest;          /*!< Specifies the peripheral request.
 137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMAMUX_LL_EC_REQUEST
 138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t Priority;               /*!< Specifies the channel priority level.
 142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         This parameter can be a value of @ref DMA_LL_EC_PRIORITY
 143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                         This feature can be modified afterwards using unitary funct
 145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** } LL_DMA_InitTypeDef;
 147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @}
 149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /* Exported constants --------------------------------------------------------*/
 153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Constants DMA Exported Constants
 154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @{
 155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_CLEAR_FLAG Clear Flags Defines
 157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_WriteReg function
 158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @{
 159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF1                 DMA_IFCR_CGIF1        /*!< Channel 1 global flag         
 161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF1                DMA_IFCR_CTCIF1       /*!< Channel 1 transfer complete fl
 162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF1                DMA_IFCR_CHTIF1       /*!< Channel 1 half transfer flag  
 163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF1                DMA_IFCR_CTEIF1       /*!< Channel 1 transfer error flag 
 164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF2                 DMA_IFCR_CGIF2        /*!< Channel 2 global flag         
 165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF2                DMA_IFCR_CTCIF2       /*!< Channel 2 transfer complete fl
 166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF2                DMA_IFCR_CHTIF2       /*!< Channel 2 half transfer flag  
 167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF2                DMA_IFCR_CTEIF2       /*!< Channel 2 transfer error flag 
 168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF3                 DMA_IFCR_CGIF3        /*!< Channel 3 global flag         
 169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF3                DMA_IFCR_CTCIF3       /*!< Channel 3 transfer complete fl
 170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF3                DMA_IFCR_CHTIF3       /*!< Channel 3 half transfer flag  
 171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF3                DMA_IFCR_CTEIF3       /*!< Channel 3 transfer error flag 
 172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF4                 DMA_IFCR_CGIF4        /*!< Channel 4 global flag         
 173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF4                DMA_IFCR_CTCIF4       /*!< Channel 4 transfer complete fl
ARM GAS  /tmp/ccV1cKci.s 			page 76


 174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF4                DMA_IFCR_CHTIF4       /*!< Channel 4 half transfer flag  
 175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF4                DMA_IFCR_CTEIF4       /*!< Channel 4 transfer error flag 
 176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF5                 DMA_IFCR_CGIF5        /*!< Channel 5 global flag         
 177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF5                DMA_IFCR_CTCIF5       /*!< Channel 5 transfer complete fl
 178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF5                DMA_IFCR_CHTIF5       /*!< Channel 5 half transfer flag  
 179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF5                DMA_IFCR_CTEIF5       /*!< Channel 5 transfer error flag 
 180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #if defined(DMA1_Channel6)
 181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF6                 DMA_IFCR_CGIF6        /*!< Channel 6 global flag         
 182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF6                DMA_IFCR_CTCIF6       /*!< Channel 6 transfer complete fl
 183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF6                DMA_IFCR_CHTIF6       /*!< Channel 6 half transfer flag  
 184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF6                DMA_IFCR_CTEIF6       /*!< Channel 6 transfer error flag 
 185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #endif
 186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #if defined(DMA1_Channel7)
 187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CGIF7                 DMA_IFCR_CGIF7        /*!< Channel 7 global flag         
 188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CTCIF7                DMA_IFCR_CTCIF7       /*!< Channel 7 transfer complete fl
 189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CHTIF7                DMA_IFCR_CHTIF7       /*!< Channel 7 half transfer flag  
 190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_IFCR_CTEIF7                DMA_IFCR_CTEIF7       /*!< Channel 7 transfer error flag 
 191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #endif
 192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @}
 194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_GET_FLAG Get Flags Defines
 197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief    Flags defines which can be used with LL_DMA_ReadReg function
 198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @{
 199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_GIF1                   DMA_ISR_GIF1          /*!< Channel 1 global flag         
 201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF1                  DMA_ISR_TCIF1         /*!< Channel 1 transfer complete fl
 202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF1                  DMA_ISR_HTIF1         /*!< Channel 1 half transfer flag  
 203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF1                  DMA_ISR_TEIF1         /*!< Channel 1 transfer error flag 
 204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_GIF2                   DMA_ISR_GIF2          /*!< Channel 2 global flag         
 205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF2                  DMA_ISR_TCIF2         /*!< Channel 2 transfer complete fl
 206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF2                  DMA_ISR_HTIF2         /*!< Channel 2 half transfer flag  
 207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF2                  DMA_ISR_TEIF2         /*!< Channel 2 transfer error flag 
 208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_GIF3                   DMA_ISR_GIF3          /*!< Channel 3 global flag         
 209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF3                  DMA_ISR_TCIF3         /*!< Channel 3 transfer complete fl
 210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF3                  DMA_ISR_HTIF3         /*!< Channel 3 half transfer flag  
 211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF3                  DMA_ISR_TEIF3         /*!< Channel 3 transfer error flag 
 212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_GIF4                   DMA_ISR_GIF4          /*!< Channel 4 global flag         
 213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF4                  DMA_ISR_TCIF4         /*!< Channel 4 transfer complete fl
 214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF4                  DMA_ISR_HTIF4         /*!< Channel 4 half transfer flag  
 215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF4                  DMA_ISR_TEIF4         /*!< Channel 4 transfer error flag 
 216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_GIF5                   DMA_ISR_GIF5          /*!< Channel 5 global flag         
 217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF5                  DMA_ISR_TCIF5         /*!< Channel 5 transfer complete fl
 218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF5                  DMA_ISR_HTIF5         /*!< Channel 5 half transfer flag  
 219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF5                  DMA_ISR_TEIF5         /*!< Channel 5 transfer error flag 
 220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #if defined(DMA1_Channel6)
 221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_GIF6                   DMA_ISR_GIF6          /*!< Channel 6 global flag         
 222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF6                  DMA_ISR_TCIF6         /*!< Channel 6 transfer complete fl
 223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF6                  DMA_ISR_HTIF6         /*!< Channel 6 half transfer flag  
 224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF6                  DMA_ISR_TEIF6         /*!< Channel 6 transfer error flag 
 225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #endif
 226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #if defined(DMA1_Channel7)
 227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_GIF7                   DMA_ISR_GIF7          /*!< Channel 7 global flag         
 228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_TCIF7                  DMA_ISR_TCIF7         /*!< Channel 7 transfer complete fl
 229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_HTIF7                  DMA_ISR_HTIF7         /*!< Channel 7 half transfer flag  
 230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ISR_TEIF7                  DMA_ISR_TEIF7         /*!< Channel 7 transfer error flag 
ARM GAS  /tmp/ccV1cKci.s 			page 77


 231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #endif
 232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @}
 234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_IT IT Defines
 237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief    IT defines which can be used with LL_DMA_ReadReg and  LL_DMA_WriteReg functions
 238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @{
 239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_CCR_TCIE                   DMA_CCR_TCIE          /*!< Transfer complete interrupt */
 241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_CCR_HTIE                   DMA_CCR_HTIE          /*!< Half Transfer interrupt     */
 242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_CCR_TEIE                   DMA_CCR_TEIE          /*!< Transfer error interrupt    */
 243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @}
 245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_CHANNEL CHANNEL
 248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @{
 249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_CHANNEL_1                  0x00000001U /*!< DMA Channel 1 */
 251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_CHANNEL_2                  0x00000002U /*!< DMA Channel 2 */
 252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_CHANNEL_3                  0x00000003U /*!< DMA Channel 3 */
 253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_CHANNEL_4                  0x00000004U /*!< DMA Channel 4 */
 254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_CHANNEL_5                  0x00000005U /*!< DMA Channel 5 */
 255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #if defined(DMA1_Channel6)
 256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_CHANNEL_6                  0x00000006U /*!< DMA Channel 6 */
 257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #endif
 258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #if defined(DMA1_Channel7)
 259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_CHANNEL_7                  0x00000007U /*!< DMA Channel 7 */
 260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #endif
 261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #if defined(USE_FULL_LL_DRIVER)
 262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_CHANNEL_ALL                0xFFFF0000U /*!< DMA Channel all (used only for function 
 263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #endif /*USE_FULL_LL_DRIVER*/
 264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @}
 266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_DIRECTION Transfer Direction
 269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @{
 270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_DIRECTION_PERIPH_TO_MEMORY 0x00000000U             /*!< Peripheral to memory directi
 272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_PERIPH DMA_CCR_DIR             /*!< Memory to peripheral directi
 273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_DIRECTION_MEMORY_TO_MEMORY DMA_CCR_MEM2MEM         /*!< Memory to memory direction  
 274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @}
 276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MODE Transfer mode
 279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @{
 280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_MODE_NORMAL                0x00000000U             /*!< Normal Mode                 
 282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_MODE_CIRCULAR              DMA_CCR_CIRC            /*!< Circular Mode               
 283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @}
 285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PERIPH Peripheral increment mode
ARM GAS  /tmp/ccV1cKci.s 			page 78


 288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @{
 289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_PERIPH_INCREMENT           DMA_CCR_PINC            /*!< Peripheral increment mode En
 291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_PERIPH_NOINCREMENT         0x00000000U             /*!< Peripheral increment mode Di
 292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @}
 294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MEMORY Memory increment mode
 297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @{
 298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_MEMORY_INCREMENT           DMA_CCR_MINC            /*!< Memory increment mode Enable
 300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_MEMORY_NOINCREMENT         0x00000000U             /*!< Memory increment mode Disabl
 301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @}
 303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PDATAALIGN Peripheral data alignment
 306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @{
 307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_BYTE            0x00000000U             /*!< Peripheral data alignment : 
 309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_HALFWORD        DMA_CCR_PSIZE_0         /*!< Peripheral data alignment : 
 310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_PDATAALIGN_WORD            DMA_CCR_PSIZE_1         /*!< Peripheral data alignment : 
 311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @}
 313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_MDATAALIGN Memory data alignment
 316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @{
 317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_BYTE            0x00000000U             /*!< Memory data alignment : Byte
 319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_HALFWORD        DMA_CCR_MSIZE_0         /*!< Memory data alignment : Half
 320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_MDATAALIGN_WORD            DMA_CCR_MSIZE_1         /*!< Memory data alignment : Word
 321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @}
 323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /** @defgroup DMA_LL_EC_PRIORITY Transfer Priority level
 326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @{
 327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_PRIORITY_LOW               0x00000000U             /*!< Priority level : Low       *
 329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_PRIORITY_MEDIUM            DMA_CCR_PL_0            /*!< Priority level : Medium    *
 330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_PRIORITY_HIGH              DMA_CCR_PL_1            /*!< Priority level : High      *
 331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_PRIORITY_VERYHIGH          DMA_CCR_PL              /*!< Priority level : Very_High *
 332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @}
 334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @}
 338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /* Exported macro ------------------------------------------------------------*/
 341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Macros DMA Exported Macros
 342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @{
 343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
ARM GAS  /tmp/ccV1cKci.s 			page 79


 345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /** @defgroup DMA_LL_EM_WRITE_READ Common Write and read registers macros
 346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @{
 347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Write a value in DMA register
 350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
 351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  __REG__ Register to be written
 352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  __VALUE__ Value to be written in the register
 353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
 354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Read a value in DMA register
 359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  __INSTANCE__ DMA Instance
 360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  __REG__ Register to be read
 361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval Register value
 362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define LL_DMA_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @}
 366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /** @defgroup DMA_LL_EM_CONVERT_DMAxCHANNELy Convert DMAxChannely
 369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @{
 370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Convert DMAx_Channely into DMAx
 373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval DMAx
 375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define __LL_DMA_GET_INSTANCE(__CHANNEL_INSTANCE__)  (DMA1)
 377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Convert DMAx_Channely into LL_DMA_CHANNEL_y
 380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  __CHANNEL_INSTANCE__ DMAx_Channely
 381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval LL_DMA_CHANNEL_y
 382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #if defined(DMA1_Channel6) && defined(DMA1_Channel7)
 384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel5)) ? LL_DMA_CHANNEL_5 : \
 390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel6)) ? LL_DMA_CHANNEL_6 : \
 391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****  LL_DMA_CHANNEL_7)
 392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #else
 393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL(__CHANNEL_INSTANCE__)   \
 394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** (((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel1)) ? LL_DMA_CHANNEL_1 : \
 395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel2)) ? LL_DMA_CHANNEL_2 : \
 396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel3)) ? LL_DMA_CHANNEL_3 : \
 397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****  ((uint32_t)(__CHANNEL_INSTANCE__) == ((uint32_t)DMA1_Channel4)) ? LL_DMA_CHANNEL_4 : \
 398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****  LL_DMA_CHANNEL_5)
 399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #endif
 400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
ARM GAS  /tmp/ccV1cKci.s 			page 80


 402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Convert DMA Instance DMAx and LL_DMA_CHANNEL_y into DMAx_Channely
 403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  __DMA_INSTANCE__ DMAx
 404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  __CHANNEL__ LL_DMA_CHANNEL_y
 405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval DMAx_Channely
 406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #if defined(DMA1_Channel6) && defined(DMA1_Channel7)
 408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****  DMA1_Channel7)
 416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #else
 417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #define __LL_DMA_GET_CHANNEL_INSTANCE(__DMA_INSTANCE__, __CHANNEL__)   \
 418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** ((((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****  (((uint32_t)(__DMA_INSTANCE__) == ((uint32_t)DMA1)) && ((uint32_t)(__CHANNEL__) == ((uint32_t)LL_D
 422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****  DMA1_Channel5)
 423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** #endif
 424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @}
 427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @}
 431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /* Exported functions --------------------------------------------------------*/
 434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /** @defgroup DMA_LL_Exported_Functions DMA Exported Functions
 435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****  * @{
 436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****  */
 437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /** @defgroup DMA_LL_EF_Configuration Configuration
 439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @{
 440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Enable DMA channel.
 443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_EnableChannel
 444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
 454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_EnableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel-1U]))->CCR, DMA_CCR_E
ARM GAS  /tmp/ccV1cKci.s 			page 81


 459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Disable DMA channel.
 463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_DisableChannel
 464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
 474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_DisableChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   CLEAR_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel-1U]))->CCR, DMA_CCR
 479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Check if DMA channel is enabled or disabled.
 483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CCR          EN            LL_DMA_IsEnabledChannel
 484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
 494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsEnabledChannel(DMA_TypeDef *DMAx, uint32_t Channel)
 496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CC
 499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                   DMA_CCR_EN) == (DMA_CCR_EN)) ? 1UL : 0UL);
 500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Configure all parameters link to DMA transfer.
 504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_ConfigTransfer\n
 505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_ConfigTransfer\n
 506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         CCR          CIRC          LL_DMA_ConfigTransfer\n
 507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         CCR          PINC          LL_DMA_ConfigTransfer\n
 508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         CCR          MINC          LL_DMA_ConfigTransfer\n
 509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         CCR          PSIZE         LL_DMA_ConfigTransfer\n
 510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         CCR          MSIZE         LL_DMA_ConfigTransfer\n
 511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         CCR          PL            LL_DMA_ConfigTransfer
 512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
ARM GAS  /tmp/ccV1cKci.s 			page 82


 516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Configuration This parameter must be a combination of all the following values:
 522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY or @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH o
 523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL or @ref LL_DMA_MODE_CIRCULAR
 524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT or @ref LL_DMA_PERIPH_NOINCREMENT
 525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT or @ref LL_DMA_MEMORY_NOINCREMENT
 526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE or @ref LL_DMA_PDATAALIGN_HALFWORD or @ref LL_DMA_PDAT
 527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE or @ref LL_DMA_MDATAALIGN_HALFWORD or @ref LL_DMA_MDAT
 528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW or @ref LL_DMA_PRIORITY_MEDIUM or @ref LL_DMA_PRIORITY_HI
 529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
 530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ConfigTransfer(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Configurat
 532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CCR,
 535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM | DMA_CCR_CIRC | DMA_CCR_PINC | DMA_CCR_MINC | DMA_CCR_P
 536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****              Configuration);
 537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Set Data transfer direction (read from peripheral or from memory).
 541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_SetDataTransferDirection\n
 542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_SetDataTransferDirection
 543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Direction This parameter can be one of the following values:
 553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
 557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t 
 559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CCR,
 562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM, Direction);
 563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Data transfer direction (read from peripheral or from memory).
 567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CCR          DIR           LL_DMA_GetDataTransferDirection\n
 568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         CCR          MEM2MEM       LL_DMA_GetDataTransferDirection
 569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
ARM GAS  /tmp/ccV1cKci.s 			page 83


 573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetDataTransferDirection(DMA_TypeDef *DMAx, uint32_t Channel)
 584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CCR
 587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                    DMA_CCR_DIR | DMA_CCR_MEM2MEM));
 588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Set DMA mode circular or normal.
 592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @note The circular buffer mode cannot be used if the memory-to-memory
 593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * data transfer is configured on the selected Channel.
 594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_SetMode
 595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Mode This parameter can be one of the following values:
 605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
 606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
 608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Mode)
 610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CCR, DMA_
 613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****              Mode);
 614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get DMA mode circular or normal.
 618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CCR          CIRC          LL_DMA_GetMode
 619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_NORMAL
ARM GAS  /tmp/ccV1cKci.s 			page 84


 630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MODE_CIRCULAR
 631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMode(DMA_TypeDef *DMAx, uint32_t Channel)
 633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CCR
 636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                    DMA_CCR_CIRC));
 637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Set Peripheral increment mode.
 641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_SetPeriphIncMode
 642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  PeriphOrM2MSrcIncMode This parameter can be one of the following values:
 652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
 653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
 655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOr
 657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****     uint32_t dma_base_addr = (uint32_t)DMAx;
 659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****     MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CCR, DM
 660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****              PeriphOrM2MSrcIncMode);
 661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Peripheral increment mode.
 665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CCR          PINC          LL_DMA_GetPeriphIncMode
 666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_INCREMENT
 677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PERIPH_NOINCREMENT
 678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CCR
 683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                    DMA_CCR_PINC));
 684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
ARM GAS  /tmp/ccV1cKci.s 			page 85


 687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Set Memory increment mode.
 688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_SetMemoryIncMode
 689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  MemoryOrM2MDstIncMode This parameter can be one of the following values:
 699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
 700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
 701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
 702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOr
 704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CCR, DMA_
 707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****              MemoryOrM2MDstIncMode);
 708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Memory increment mode.
 712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CCR          MINC          LL_DMA_GetMemoryIncMode
 713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_INCREMENT
 724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MEMORY_NOINCREMENT
 725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemoryIncMode(DMA_TypeDef *DMAx, uint32_t Channel)
 727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CCR
 730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                    DMA_CCR_MINC));
 731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Set Peripheral size.
 735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_SetPeriphSize
 736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
ARM GAS  /tmp/ccV1cKci.s 			page 86


 744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  PeriphOrM2MSrcDataSize This parameter can be one of the following values:
 746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
 747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
 750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphOrM2M
 752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CCR, DMA_
 755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****              PeriphOrM2MSrcDataSize);
 756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Peripheral size.
 760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CCR          PSIZE         LL_DMA_GetPeriphSize
 761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_BYTE
 772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_HALFWORD
 773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PDATAALIGN_WORD
 774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphSize(DMA_TypeDef *DMAx, uint32_t Channel)
 776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CCR
 779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                    DMA_CCR_PSIZE));
 780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Set Memory size.
 784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_SetMemorySize
 785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  MemoryOrM2MDstDataSize This parameter can be one of the following values:
 795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
 796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
 798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
 799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryOrM2M
ARM GAS  /tmp/ccV1cKci.s 			page 87


 801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CCR, DMA_
 804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****              MemoryOrM2MDstDataSize);
 805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Memory size.
 809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CCR          MSIZE         LL_DMA_GetMemorySize
 810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_BYTE
 821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_HALFWORD
 822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_MDATAALIGN_WORD
 823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemorySize(DMA_TypeDef *DMAx, uint32_t Channel)
 825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CCR
 828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                    DMA_CCR_MSIZE));
 829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Set Channel priority level.
 833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CCR          PL            LL_DMA_SetChannelPriorityLevel
 834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Priority This parameter can be one of the following values:
 844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW
 845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_MEDIUM
 846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_HIGH
 847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
 848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
 849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetChannelPriorityLevel(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t P
 851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CCR, DMA_
 854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****              Priority);
 855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
ARM GAS  /tmp/ccV1cKci.s 			page 88


 858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel priority level.
 859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CCR          PL            LL_DMA_GetChannelPriorityLevel
 860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
 870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_LOW
 871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_MEDIUM
 872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_HIGH
 873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_PRIORITY_VERYHIGH
 874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetChannelPriorityLevel(DMA_TypeDef *DMAx, uint32_t Channel)
 876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CCR
 879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                    DMA_CCR_PL));
 880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 883:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Set Number of data to transfer.
 884:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @note   This action has no effect if
 885:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         channel is enabled.
 886:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CNDTR        NDT           LL_DMA_SetDataLength
 887:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 888:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 889:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 890:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 891:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 892:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 893:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 894:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 895:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 896:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  NbData Between Min_Data = 0 and Max_Data = 0x0000FFFF
 897:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
 898:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetDataLength(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t NbData)
 900:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CNDTR,
 903:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****              DMA_CNDTR_NDT, NbData);
 904:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 905:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 906:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 907:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Number of data to transfer.
 908:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @note   Once the channel is enabled, the return value indicate the
 909:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         remaining bytes to be transmitted.
 910:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CNDTR        NDT           LL_DMA_GetDataLength
 911:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 914:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
ARM GAS  /tmp/ccV1cKci.s 			page 89


 915:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 916:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 917:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 919:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
 921:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetDataLength(DMA_TypeDef *DMAx, uint32_t Channel)
 923:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 924:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 925:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CND
 926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                    DMA_CNDTR_NDT));
 927:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 928:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 929:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Configure the Source and Destination addresses.
 931:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
 932:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @note   Each peripheral using DMA provides an API to get directly the register adress (LL_PPP_D
 933:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_ConfigAddresses\n
 934:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         CMAR         MA            LL_DMA_ConfigAddresses
 935:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 936:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 937:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 938:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 939:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 940:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 941:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 942:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 943:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  SrcAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
 945:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DstAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
 946:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Direction This parameter can be one of the following values:
 947:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_PERIPH_TO_MEMORY
 948:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_PERIPH
 949:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_DIRECTION_MEMORY_TO_MEMORY
 950:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
 951:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 952:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ConfigAddresses(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t SrcAddres
 953:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                             uint32_t DstAddress, uint32_t Direction)
 954:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 955:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 956:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   /* Direction Memory to Periph */
 957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   if (Direction == LL_DMA_DIRECTION_MEMORY_TO_PERIPH)
 958:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   {
 959:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CMAR, Sr
 960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CPAR, Ds
 961:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   }
 962:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   /* Direction Periph to Memory and Memory to Memory */
 963:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   else
 964:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   {
 965:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CPAR, Sr
 966:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CMAR, Ds
 967:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   }
 968:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 969:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 970:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 971:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Set the Memory address.
ARM GAS  /tmp/ccV1cKci.s 			page 90


 972:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
 973:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
 974:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_SetMemoryAddress
 975:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 976:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
 977:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
 978:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
 979:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
 980:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
 981:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
 982:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
 983:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
 984:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
 985:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
 986:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
 987:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetMemoryAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
 988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 989:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
 990:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CMAR, Memo
 991:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 992:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
 993:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
 994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Set the Peripheral address.
 995:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
 996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
 997:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_SetPeriphAddress
 998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
 999:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1000:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1001:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1003:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1004:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1007:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  PeriphAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1008:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1010:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t PeriphAd
1011:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1012:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1013:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CPAR, Peri
1014:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1015:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1016:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1017:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Memory address.
1018:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1019:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_GetMemoryAddress
1020:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1021:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1022:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1023:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1024:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1025:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1026:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1027:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1028:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
ARM GAS  /tmp/ccV1cKci.s 			page 91


1029:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1030:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1031:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetMemoryAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1032:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1033:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1034:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CMA
1035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1036:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Peripheral address.
1039:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_PERIPH_TO_MEMORY or LL_DMA_DIRECTION_MEMO
1040:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_GetPeriphAddress
1041:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1042:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1043:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1044:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1045:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1046:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1047:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1048:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1049:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1050:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1051:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1052:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1053:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1054:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1055:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CPA
1056:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1057:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1058:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1059:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Set the Memory to Memory Source address.
1060:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1061:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1062:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_SetM2MSrcAddress
1063:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1064:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1065:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1066:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1067:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1068:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1069:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1070:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1071:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1072:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1073:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1074:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1075:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetM2MSrcAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1076:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1077:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1078:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CPAR, Memo
1079:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1080:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1081:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1082:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Set the Memory to Memory Destination address.
1083:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1084:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @note   This API must not be called when the DMA channel is enabled.
1085:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_SetM2MDstAddress
ARM GAS  /tmp/ccV1cKci.s 			page 92


1086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1087:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1090:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1091:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1092:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1093:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1094:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1095:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  MemoryAddress Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1096:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1098:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetM2MDstAddress(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t MemoryAd
1099:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CMAR, Memo
1102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get the Memory to Memory Source address.
1106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CPAR         PA            LL_DMA_GetM2MSrcAddress
1108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetM2MSrcAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
1122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CPA
1123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get the Memory to Memory Destination address.
1127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @note   Interface used for direction LL_DMA_DIRECTION_MEMORY_TO_MEMORY only.
1128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CMAR         MA            LL_DMA_GetM2MDstAddress
1129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval Between Min_Data = 0 and Max_Data = 0xFFFFFFFF
1139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetM2MDstAddress(DMA_TypeDef *DMAx, uint32_t Channel)
1141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;
ARM GAS  /tmp/ccV1cKci.s 			page 93


1143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return (READ_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CMA
1144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Set DMA request for DMA Channels on DMAMUX Channel x.
1148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @note   DMAMUX channel 0 to 6 are mapped to DMA1 channel 1 to 7.
1149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CxCR         DMAREQ_ID     LL_DMA_SetPeriphRequest
1150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Request This parameter can be one of the following values:
1160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_MEM2MEM
1161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR0
1162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR1
1163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR2
1164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR3
1165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_ADC1
1166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_AES_IN
1167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_AES_OUT
1168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DAC1_CH1
1169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DAC1_CH2
1170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C1_RX
1171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C1_TX
1172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C2_RX
1173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C2_TX
1174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_LPUART1_RX
1175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_LPUART1_TX
1176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI1_RX
1177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI1_TX
1178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI2_RX
1179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI2_TX
1180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH1
1181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH2
1182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH3
1183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH4
1184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_TRIG_COM
1185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_UP
1186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH1
1187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH2
1188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH3
1189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH4
1190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_TRIG
1191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_UP
1192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH1
1193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH2
1194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH3
1195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH4
1196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_TRIG
1197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_UP
1198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM6_UP
1199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM7_UP
ARM GAS  /tmp/ccV1cKci.s 			page 94


1200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_CH1
1201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_CH2
1202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_TRIG_COM
1203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_UP
1204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM16_CH1
1205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM16_TRIG_COM
1206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM16_UP
1207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM17_CH1
1208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM17_TRIG_COM
1209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM17_UP
1210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART1_RX
1211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART1_TX
1212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART2_RX
1213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART2_TX
1214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART3_RX
1215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART3_TX
1216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART4_RX
1217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART4_TX
1218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UCPD1_RX
1219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UCPD1_TX
1220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UCPD2_RX
1221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UCPD2_TX
1222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_SetPeriphRequest(DMA_TypeDef *DMAx, uint32_t Channel, uint32_t Request)
1225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   (void)(DMAx);
1227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   MODIFY_REG(((DMAMUX_Channel_TypeDef *)((uint32_t)DMAMUX1_Channel0 + (DMAMUX_CCR_SIZE * (Channel -
 508              		.loc 5 1227 3 is_stmt 0 view .LVU137
 509 00d0 2048     		ldr	r0, .L11+16
 510              	.LBE197:
 511              	.LBE196:
 512              	.LBB200:
 513              	.LBB195:
 225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   /* Delay after an RCC peripheral clock enabling */
 514              		.loc 1 225 3 view .LVU138
 515 00d2 0A43     		orrs	r2, r1
 516 00d4 A263     		str	r2, [r4, #56]
 227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   (void)tmpreg;
 517              		.loc 1 227 3 is_stmt 1 view .LVU139
 227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   (void)tmpreg;
 518              		.loc 1 227 12 is_stmt 0 view .LVU140
 519 00d6 A36B     		ldr	r3, [r4, #56]
 520 00d8 0B40     		ands	r3, r1
 227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h ****   (void)tmpreg;
 521              		.loc 1 227 10 view .LVU141
 522 00da 0393     		str	r3, [sp, #12]
 228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 523              		.loc 1 228 3 is_stmt 1 view .LVU142
 524 00dc 039B     		ldr	r3, [sp, #12]
 525              	.LVL21:
 228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 526              		.loc 1 228 3 is_stmt 0 view .LVU143
 527              	.LBE195:
 528              	.LBE200:
 239:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 240:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* (3) Configure the DMA functional parameters for transmission */
ARM GAS  /tmp/ccV1cKci.s 			page 95


 241:Utilities/TRACER_EMB/tracer_emb_hw.c ****   LL_DMA_ConfigTransfer(TRACER_EMB_DMA_INSTANCE, TRACER_EMB_TX_DMA_CHANNEL,
 529              		.loc 2 241 3 is_stmt 1 view .LVU144
 530              	.LBB201:
 531              	.LBI201:
 531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 532              		.loc 5 531 22 view .LVU145
 533              	.LBB202:
 533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CCR,
 534              		.loc 5 533 3 view .LVU146
 534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM | DMA_CCR_CIRC | DMA_CCR_PINC | DMA_CCR_MINC | DMA_CCR_P
 535              		.loc 5 534 3 view .LVU147
 536 00de 1E4B     		ldr	r3, .L11+20
 537 00e0 1E49     		ldr	r1, .L11+24
 538 00e2 1A68     		ldr	r2, [r3]
 539 00e4 1140     		ands	r1, r2
 540 00e6 1E4A     		ldr	r2, .L11+28
 541 00e8 0A43     		orrs	r2, r1
 542              	.LBE202:
 543              	.LBE201:
 544              	.LBB204:
 545              	.LBB198:
 546              		.loc 5 1227 3 is_stmt 0 view .LVU148
 547 00ea FF21     		movs	r1, #255
 548              	.LBE198:
 549              	.LBE204:
 550              	.LBB205:
 551              	.LBB203:
 534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM | DMA_CCR_CIRC | DMA_CCR_PINC | DMA_CCR_MINC | DMA_CCR_P
 552              		.loc 5 534 3 view .LVU149
 553 00ec 1A60     		str	r2, [r3]
 554              	.LVL22:
 534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****              DMA_CCR_DIR | DMA_CCR_MEM2MEM | DMA_CCR_CIRC | DMA_CCR_PINC | DMA_CCR_MINC | DMA_CCR_P
 555              		.loc 5 534 3 view .LVU150
 556              	.LBE203:
 557              	.LBE205:
 242:Utilities/TRACER_EMB/tracer_emb_hw.c ****                         LL_DMA_DIRECTION_MEMORY_TO_PERIPH |
 243:Utilities/TRACER_EMB/tracer_emb_hw.c ****                         LL_DMA_PRIORITY_HIGH              |
 244:Utilities/TRACER_EMB/tracer_emb_hw.c ****                         LL_DMA_MODE_NORMAL                |
 245:Utilities/TRACER_EMB/tracer_emb_hw.c ****                         LL_DMA_PERIPH_NOINCREMENT         |
 246:Utilities/TRACER_EMB/tracer_emb_hw.c ****                         LL_DMA_MEMORY_INCREMENT           |
 247:Utilities/TRACER_EMB/tracer_emb_hw.c ****                         LL_DMA_PDATAALIGN_BYTE            |
 248:Utilities/TRACER_EMB/tracer_emb_hw.c ****                         LL_DMA_MDATAALIGN_BYTE);
 249:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 250:Utilities/TRACER_EMB/tracer_emb_hw.c **** #if defined(DMAMUX_CxCR_DMAREQ_ID)
 251:Utilities/TRACER_EMB/tracer_emb_hw.c ****   LL_DMA_SetPeriphRequest(TRACER_EMB_DMA_INSTANCE, TRACER_EMB_TX_DMA_CHANNEL, TRACER_EMB_TX_DMA_REQ
 558              		.loc 2 251 3 is_stmt 1 view .LVU151
 559              	.LBB206:
 560              	.LBI196:
1224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 561              		.loc 5 1224 22 view .LVU152
 562              	.LBB199:
1226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   MODIFY_REG(((DMAMUX_Channel_TypeDef *)((uint32_t)DMAMUX1_Channel0 + (DMAMUX_CCR_SIZE * (Channel -
 563              		.loc 5 1226 3 view .LVU153
 564              		.loc 5 1227 3 view .LVU154
 565 00ee 0268     		ldr	r2, [r0]
 566 00f0 8A43     		bics	r2, r1
 567 00f2 1100     		movs	r1, r2
ARM GAS  /tmp/ccV1cKci.s 			page 96


 568 00f4 0F22     		movs	r2, #15
 569 00f6 0A43     		orrs	r2, r1
 570 00f8 0260     		str	r2, [r0]
 571              	.LVL23:
 572              		.loc 5 1227 3 is_stmt 0 view .LVU155
 573              	.LBE199:
 574              	.LBE206:
 252:Utilities/TRACER_EMB/tracer_emb_hw.c **** #endif
 253:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 254:Utilities/TRACER_EMB/tracer_emb_hw.c ****   LL_DMA_EnableIT_TC(TRACER_EMB_DMA_INSTANCE, TRACER_EMB_TX_DMA_CHANNEL);
 575              		.loc 2 254 3 is_stmt 1 view .LVU156
 576              	.LBB207:
 577              	.LBI207:
1228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get DMA request for DMA Channels on DMAMUX Channel x.
1232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @note   DMAMUX channel 0 to 6 are mapped to DMA1 channel 1 to 7.
1233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CxCR         DMAREQ_ID     LL_DMA_GetPeriphRequest
1234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
1243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval Returned value can be one of the following values:
1244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_MEM2MEM
1245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR0
1246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR1
1247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR2
1248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_GENERATOR3
1249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_ADC1
1250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_AES_IN
1251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_AES_OUT
1252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DAC1_CH1
1253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_DAC1_CH2
1254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C1_RX
1255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C1_TX
1256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C2_RX
1257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_I2C2_TX
1258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_LPUART1_RX
1259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_LPUART1_TX
1260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI1_RX
1261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI1_TX
1262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI2_RX
1263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_SPI2_TX
1264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH1
1265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH2
1266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH3
1267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_CH4
1268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_TRIG_COM
1269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM1_UP
1270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH1
1271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH2
ARM GAS  /tmp/ccV1cKci.s 			page 97


1272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH3
1273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_CH4
1274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_TRIG
1275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM2_UP
1276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH1
1277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH2
1278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH3
1279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_CH4
1280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_TRIG
1281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM3_UP
1282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM6_UP
1283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM7_UP
1284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_CH1
1285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_CH2
1286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_TRIG_COM
1287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM15_UP
1288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM16_CH1
1289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM16_TRIG_COM
1290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM16_UP
1291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM17_CH1
1292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM17_TRIG_COM
1293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_TIM17_UP
1294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART1_RX
1295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART1_TX
1296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART2_RX
1297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART2_TX
1298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART3_RX
1299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART3_TX
1300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART4_RX
1301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_USART4_TX
1302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UCPD1_RX
1303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UCPD1_TX
1304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UCPD2_RX
1305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMAMUX_REQ_UCPD2_TX
1306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_GetPeriphRequest(DMA_TypeDef *DMAx, uint32_t Channel)
1308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   (void)(DMAx);  
1310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return (READ_BIT(((DMAMUX_Channel_TypeDef *)(((uint32_t)DMAMUX1_Channel0 + (DMAMUX_CCR_SIZE * (Ch
1311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @}
1315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /** @defgroup DMA_LL_EF_FLAG_Management FLAG_Management
1318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @{
1319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 1 global interrupt flag.
1323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          GIF1          LL_DMA_IsActiveFlag_GI1
1324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI1(DMA_TypeDef *DMAx)
1328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
ARM GAS  /tmp/ccV1cKci.s 			page 98


1329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_GIF1) == (DMA_ISR_GIF1)) ? 1UL : 0UL);
1330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 2 global interrupt flag.
1334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          GIF2          LL_DMA_IsActiveFlag_GI2
1335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI2(DMA_TypeDef *DMAx)
1339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_GIF2) == (DMA_ISR_GIF2)) ? 1UL : 0UL);
1341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 3 global interrupt flag.
1345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          GIF3          LL_DMA_IsActiveFlag_GI3
1346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI3(DMA_TypeDef *DMAx)
1350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_GIF3) == (DMA_ISR_GIF3)) ? 1UL : 0UL);
1352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 4 global interrupt flag.
1356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          GIF4          LL_DMA_IsActiveFlag_GI4
1357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI4(DMA_TypeDef *DMAx)
1361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_GIF4) == (DMA_ISR_GIF4)) ? 1UL : 0UL);
1363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 5 global interrupt flag.
1367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          GIF5          LL_DMA_IsActiveFlag_GI5
1368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI5(DMA_TypeDef *DMAx)
1372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_GIF5) == (DMA_ISR_GIF5)) ? 1UL : 0UL);
1374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 6 global interrupt flag.
1378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          GIF6          LL_DMA_IsActiveFlag_GI6
1379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI6(DMA_TypeDef *DMAx)
1383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_GIF6) == (DMA_ISR_GIF6)) ? 1UL : 0UL);
1385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
ARM GAS  /tmp/ccV1cKci.s 			page 99


1386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 7 global interrupt flag.
1389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          GIF7          LL_DMA_IsActiveFlag_GI7
1390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_GI7(DMA_TypeDef *DMAx)
1394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_GIF7) == (DMA_ISR_GIF7)) ? 1UL : 0UL);
1396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 1 transfer complete flag.
1400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          TCIF1         LL_DMA_IsActiveFlag_TC1
1401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC1(DMA_TypeDef *DMAx)
1405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TCIF1) == (DMA_ISR_TCIF1)) ? 1UL : 0UL);
1407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 2 transfer complete flag.
1411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          TCIF2         LL_DMA_IsActiveFlag_TC2
1412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC2(DMA_TypeDef *DMAx)
1416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TCIF2) == (DMA_ISR_TCIF2)) ? 1UL : 0UL);
1418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 3 transfer complete flag.
1422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          TCIF3         LL_DMA_IsActiveFlag_TC3
1423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC3(DMA_TypeDef *DMAx)
1427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TCIF3) == (DMA_ISR_TCIF3)) ? 1UL : 0UL);
1429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 4 transfer complete flag.
1433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          TCIF4         LL_DMA_IsActiveFlag_TC4
1434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC4(DMA_TypeDef *DMAx)
1438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TCIF4) == (DMA_ISR_TCIF4)) ? 1UL : 0UL);
1440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
ARM GAS  /tmp/ccV1cKci.s 			page 100


1443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 5 transfer complete flag.
1444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          TCIF5         LL_DMA_IsActiveFlag_TC5
1445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC5(DMA_TypeDef *DMAx)
1449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TCIF5) == (DMA_ISR_TCIF5)) ? 1UL : 0UL);
1451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 6 transfer complete flag.
1455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          TCIF6         LL_DMA_IsActiveFlag_TC6
1456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC6(DMA_TypeDef *DMAx)
1460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TCIF6) == (DMA_ISR_TCIF6)) ? 1UL : 0UL);
1462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 7 transfer complete flag.
1466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          TCIF7         LL_DMA_IsActiveFlag_TC7
1467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TC7(DMA_TypeDef *DMAx)
1471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TCIF7) == (DMA_ISR_TCIF7)) ? 1UL : 0UL);
1473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 1 half transfer flag.
1477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          HTIF1         LL_DMA_IsActiveFlag_HT1
1478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT1(DMA_TypeDef *DMAx)
1482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_HTIF1) == (DMA_ISR_HTIF1)) ? 1UL : 0UL);
1484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 2 half transfer flag.
1488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          HTIF2         LL_DMA_IsActiveFlag_HT2
1489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT2(DMA_TypeDef *DMAx)
1493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_HTIF2) == (DMA_ISR_HTIF2)) ? 1UL : 0UL);
1495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 3 half transfer flag.
1499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          HTIF3         LL_DMA_IsActiveFlag_HT3
ARM GAS  /tmp/ccV1cKci.s 			page 101


1500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT3(DMA_TypeDef *DMAx)
1504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_HTIF3) == (DMA_ISR_HTIF3)) ? 1UL : 0UL);
1506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 4 half transfer flag.
1510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          HTIF4         LL_DMA_IsActiveFlag_HT4
1511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT4(DMA_TypeDef *DMAx)
1515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_HTIF4) == (DMA_ISR_HTIF4)) ? 1UL : 0UL);
1517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 5 half transfer flag.
1521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          HTIF5         LL_DMA_IsActiveFlag_HT5
1522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT5(DMA_TypeDef *DMAx)
1526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_HTIF5) == (DMA_ISR_HTIF5)) ? 1UL : 0UL);
1528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 6 half transfer flag.
1532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          HTIF6         LL_DMA_IsActiveFlag_HT6
1533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT6(DMA_TypeDef *DMAx)
1537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_HTIF6) == (DMA_ISR_HTIF6)) ? 1UL : 0UL);
1539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 7 half transfer flag.
1543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          HTIF7         LL_DMA_IsActiveFlag_HT7
1544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_HT7(DMA_TypeDef *DMAx)
1548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_HTIF7) == (DMA_ISR_HTIF7)) ? 1UL : 0UL);
1550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 1 transfer error flag.
1554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          TEIF1         LL_DMA_IsActiveFlag_TE1
1555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
ARM GAS  /tmp/ccV1cKci.s 			page 102


1557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE1(DMA_TypeDef *DMAx)
1559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TEIF1) == (DMA_ISR_TEIF1)) ? 1UL : 0UL);
1561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 2 transfer error flag.
1565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          TEIF2         LL_DMA_IsActiveFlag_TE2
1566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE2(DMA_TypeDef *DMAx)
1570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TEIF2) == (DMA_ISR_TEIF2)) ? 1UL : 0UL);
1572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 3 transfer error flag.
1576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          TEIF3         LL_DMA_IsActiveFlag_TE3
1577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE3(DMA_TypeDef *DMAx)
1581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TEIF3) == (DMA_ISR_TEIF3)) ? 1UL : 0UL);
1583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 4 transfer error flag.
1587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          TEIF4         LL_DMA_IsActiveFlag_TE4
1588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE4(DMA_TypeDef *DMAx)
1592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TEIF4) == (DMA_ISR_TEIF4)) ? 1UL : 0UL);
1594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 5 transfer error flag.
1598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          TEIF5         LL_DMA_IsActiveFlag_TE5
1599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE5(DMA_TypeDef *DMAx)
1603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TEIF5) == (DMA_ISR_TEIF5)) ? 1UL : 0UL);
1605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 6 transfer error flag.
1609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          TEIF6         LL_DMA_IsActiveFlag_TE6
1610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE6(DMA_TypeDef *DMAx)
ARM GAS  /tmp/ccV1cKci.s 			page 103


1614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TEIF6) == (DMA_ISR_TEIF6)) ? 1UL : 0UL);
1616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Get Channel 7 transfer error flag.
1620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll ISR          TEIF7         LL_DMA_IsActiveFlag_TE7
1621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval State of bit (1 or 0).
1623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE uint32_t LL_DMA_IsActiveFlag_TE7(DMA_TypeDef *DMAx)
1625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return ((READ_BIT(DMAx->ISR, DMA_ISR_TEIF7) == (DMA_ISR_TEIF7)) ? 1UL : 0UL);
1627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 1 global interrupt flag.
1631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CGIF1         LL_DMA_ClearFlag_GI1
1632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI1(DMA_TypeDef *DMAx)
1636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF1);
1638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 2 global interrupt flag.
1642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CGIF2         LL_DMA_ClearFlag_GI2
1643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI2(DMA_TypeDef *DMAx)
1647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF2);
1649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 3 global interrupt flag.
1653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CGIF3         LL_DMA_ClearFlag_GI3
1654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI3(DMA_TypeDef *DMAx)
1658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF3);
1660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 4 global interrupt flag.
1664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CGIF4         LL_DMA_ClearFlag_GI4
1665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI4(DMA_TypeDef *DMAx)
1669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF4);
ARM GAS  /tmp/ccV1cKci.s 			page 104


1671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 5 global interrupt flag.
1675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CGIF5         LL_DMA_ClearFlag_GI5
1676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI5(DMA_TypeDef *DMAx)
1680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF5);
1682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 6 global interrupt flag.
1686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CGIF6         LL_DMA_ClearFlag_GI6
1687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI6(DMA_TypeDef *DMAx)
1691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF6);
1693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 7 global interrupt flag.
1697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CGIF7         LL_DMA_ClearFlag_GI7
1698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_GI7(DMA_TypeDef *DMAx)
1702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CGIF7);
1704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 1  transfer complete flag.
1708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF1        LL_DMA_ClearFlag_TC1
1709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC1(DMA_TypeDef *DMAx)
1713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF1);
1715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 2  transfer complete flag.
1719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF2        LL_DMA_ClearFlag_TC2
1720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC2(DMA_TypeDef *DMAx)
1724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF2);
1726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
ARM GAS  /tmp/ccV1cKci.s 			page 105


1728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 3  transfer complete flag.
1730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF3        LL_DMA_ClearFlag_TC3
1731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC3(DMA_TypeDef *DMAx)
1735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF3);
1737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 4  transfer complete flag.
1741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF4        LL_DMA_ClearFlag_TC4
1742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC4(DMA_TypeDef *DMAx)
1746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF4);
1748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 5  transfer complete flag.
1752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF5        LL_DMA_ClearFlag_TC5
1753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC5(DMA_TypeDef *DMAx)
1757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF5);
1759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 6  transfer complete flag.
1763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF6        LL_DMA_ClearFlag_TC6
1764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC6(DMA_TypeDef *DMAx)
1768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF6);
1770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 7  transfer complete flag.
1774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CTCIF7        LL_DMA_ClearFlag_TC7
1775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TC7(DMA_TypeDef *DMAx)
1779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTCIF7);
1781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 1  half transfer flag.
ARM GAS  /tmp/ccV1cKci.s 			page 106


1785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF1        LL_DMA_ClearFlag_HT1
1786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT1(DMA_TypeDef *DMAx)
1790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF1);
1792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 2  half transfer flag.
1796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF2        LL_DMA_ClearFlag_HT2
1797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT2(DMA_TypeDef *DMAx)
1801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF2);
1803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 3  half transfer flag.
1807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF3        LL_DMA_ClearFlag_HT3
1808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT3(DMA_TypeDef *DMAx)
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF3);
1814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 4  half transfer flag.
1818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF4        LL_DMA_ClearFlag_HT4
1819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT4(DMA_TypeDef *DMAx)
1823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF4);
1825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 5  half transfer flag.
1829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF5        LL_DMA_ClearFlag_HT5
1830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT5(DMA_TypeDef *DMAx)
1834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF5);
1836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 6  half transfer flag.
1840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF6        LL_DMA_ClearFlag_HT6
1841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
ARM GAS  /tmp/ccV1cKci.s 			page 107


1842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT6(DMA_TypeDef *DMAx)
1845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF6);
1847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 7  half transfer flag.
1851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CHTIF7        LL_DMA_ClearFlag_HT7
1852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_HT7(DMA_TypeDef *DMAx)
1856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CHTIF7);
1858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 1 transfer error flag.
1862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF1        LL_DMA_ClearFlag_TE1
1863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE1(DMA_TypeDef *DMAx)
1867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF1);
1869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 2 transfer error flag.
1873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF2        LL_DMA_ClearFlag_TE2
1874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE2(DMA_TypeDef *DMAx)
1878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF2);
1880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1883:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 3 transfer error flag.
1884:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF3        LL_DMA_ClearFlag_TE3
1885:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1886:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1887:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1888:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE3(DMA_TypeDef *DMAx)
1889:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1890:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF3);
1891:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1892:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1893:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1894:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 4 transfer error flag.
1895:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF4        LL_DMA_ClearFlag_TE4
1896:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1897:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1898:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
ARM GAS  /tmp/ccV1cKci.s 			page 108


1899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE4(DMA_TypeDef *DMAx)
1900:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF4);
1902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1903:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1904:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1905:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 5 transfer error flag.
1906:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF5        LL_DMA_ClearFlag_TE5
1907:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1908:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1909:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1910:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE5(DMA_TypeDef *DMAx)
1911:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF5);
1913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1914:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1915:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1916:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 6 transfer error flag.
1917:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF6        LL_DMA_ClearFlag_TE6
1918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1919:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1921:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE6(DMA_TypeDef *DMAx)
1922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1923:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF6);
1924:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1925:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1927:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Clear Channel 7 transfer error flag.
1928:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll IFCR         CTEIF7        LL_DMA_ClearFlag_TE7
1929:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1931:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1932:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_ClearFlag_TE7(DMA_TypeDef *DMAx)
1933:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1934:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   WRITE_REG(DMAx->IFCR, DMA_IFCR_CTEIF7);
1935:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
1936:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1937:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1938:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @}
1939:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1940:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** 
1941:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /** @defgroup DMA_LL_EF_IT_Management IT_Management
1942:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @{
1943:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** /**
1945:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @brief  Enable Transfer complete interrupt.
1946:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @rmtoll CCR          TCIE          LL_DMA_EnableIT_TC
1947:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  DMAx DMAx Instance
1948:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @param  Channel This parameter can be one of the following values:
1949:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_1
1950:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_2
1951:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_3
1952:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_4
1953:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_5
1954:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_6
1955:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   *         @arg @ref LL_DMA_CHANNEL_7
ARM GAS  /tmp/ccV1cKci.s 			page 109


1956:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   * @retval None
1957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   */
1958:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** __STATIC_INLINE void LL_DMA_EnableIT_TC(DMA_TypeDef *DMAx, uint32_t Channel)
 578              		.loc 5 1958 22 view .LVU157
 579              	.LBB208:
1959:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
1960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   uint32_t dma_base_addr = (uint32_t)DMAx;    
 580              		.loc 5 1960 3 view .LVU158
1961:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CCR, DMA_CCR
 581              		.loc 5 1961 3 view .LVU159
 582 00fa 0222     		movs	r2, #2
 583 00fc 1968     		ldr	r1, [r3]
 584              	.LBE208:
 585              	.LBE207:
 586              	.LBB211:
 587              	.LBB212:
 588              		.file 6 "Drivers/CMSIS/Include/core_cm0plus.h"
   1:Drivers/CMSIS/Include/core_cm0plus.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm0plus.h ****  * @file     core_cm0plus.h
   3:Drivers/CMSIS/Include/core_cm0plus.h ****  * @brief    CMSIS Cortex-M0+ Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm0plus.h ****  * @version  V5.0.6
   5:Drivers/CMSIS/Include/core_cm0plus.h ****  * @date     28. May 2018
   6:Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm0plus.h **** /*
   8:Drivers/CMSIS/Include/core_cm0plus.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm0plus.h ****  *
  10:Drivers/CMSIS/Include/core_cm0plus.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm0plus.h ****  *
  12:Drivers/CMSIS/Include/core_cm0plus.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm0plus.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm0plus.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/core_cm0plus.h ****  *
  16:Drivers/CMSIS/Include/core_cm0plus.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm0plus.h ****  *
  18:Drivers/CMSIS/Include/core_cm0plus.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm0plus.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm0plus.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm0plus.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm0plus.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm0plus.h ****  */
  24:Drivers/CMSIS/Include/core_cm0plus.h **** 
  25:Drivers/CMSIS/Include/core_cm0plus.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm0plus.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm0plus.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
  30:Drivers/CMSIS/Include/core_cm0plus.h **** 
  31:Drivers/CMSIS/Include/core_cm0plus.h **** #ifndef __CORE_CM0PLUS_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm0plus.h **** #define __CORE_CM0PLUS_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm0plus.h **** 
  34:Drivers/CMSIS/Include/core_cm0plus.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm0plus.h **** 
  36:Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm0plus.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
  39:Drivers/CMSIS/Include/core_cm0plus.h **** 
  40:Drivers/CMSIS/Include/core_cm0plus.h **** /**
ARM GAS  /tmp/ccV1cKci.s 			page 110


  41:Drivers/CMSIS/Include/core_cm0plus.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm0plus.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm0plus.h **** 
  44:Drivers/CMSIS/Include/core_cm0plus.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm0plus.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm0plus.h **** 
  47:Drivers/CMSIS/Include/core_cm0plus.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm0plus.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm0plus.h **** 
  50:Drivers/CMSIS/Include/core_cm0plus.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm0plus.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm0plus.h ****  */
  53:Drivers/CMSIS/Include/core_cm0plus.h **** 
  54:Drivers/CMSIS/Include/core_cm0plus.h **** 
  55:Drivers/CMSIS/Include/core_cm0plus.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm0plus.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm0plus.h **** /**
  59:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup Cortex-M0+
  60:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
  61:Drivers/CMSIS/Include/core_cm0plus.h ****  */
  62:Drivers/CMSIS/Include/core_cm0plus.h **** 
  63:Drivers/CMSIS/Include/core_cm0plus.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm0plus.h ****  
  65:Drivers/CMSIS/Include/core_cm0plus.h **** /*  CMSIS CM0+ definitions */
  66:Drivers/CMSIS/Include/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION_MAIN (__CM_CMSIS_VERSION_MAIN)                  /*!< \deprecated [3
  67:Drivers/CMSIS/Include/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION_SUB  (__CM_CMSIS_VERSION_SUB)                   /*!< \deprecated [1
  68:Drivers/CMSIS/Include/core_cm0plus.h **** #define __CM0PLUS_CMSIS_VERSION      ((__CM0PLUS_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm0plus.h ****                                        __CM0PLUS_CMSIS_VERSION_SUB           )  /*!< \deprecated CM
  70:Drivers/CMSIS/Include/core_cm0plus.h **** 
  71:Drivers/CMSIS/Include/core_cm0plus.h **** #define __CORTEX_M                   (0U)                                       /*!< Cortex-M Core 
  72:Drivers/CMSIS/Include/core_cm0plus.h **** 
  73:Drivers/CMSIS/Include/core_cm0plus.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm0plus.h ****     This core does not support an FPU at all
  75:Drivers/CMSIS/Include/core_cm0plus.h **** */
  76:Drivers/CMSIS/Include/core_cm0plus.h **** #define __FPU_USED       0U
  77:Drivers/CMSIS/Include/core_cm0plus.h **** 
  78:Drivers/CMSIS/Include/core_cm0plus.h **** #if defined ( __CC_ARM )
  79:Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __TARGET_FPU_VFP
  80:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  81:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
  82:Drivers/CMSIS/Include/core_cm0plus.h **** 
  83:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  84:Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __ARM_PCS_VFP
  85:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  86:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm0plus.h **** 
  88:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __GNUC__ )
  89:Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
  90:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  91:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
  92:Drivers/CMSIS/Include/core_cm0plus.h **** 
  93:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __ICCARM__ )
  94:Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __ARMVFP__
  95:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
  96:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
  97:Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  /tmp/ccV1cKci.s 			page 111


  98:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __TI_ARM__ )
  99:Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __TI_VFP_SUPPORT__
 100:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 101:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 102:Drivers/CMSIS/Include/core_cm0plus.h **** 
 103:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __TASKING__ )
 104:Drivers/CMSIS/Include/core_cm0plus.h ****   #if defined __FPU_VFP__
 105:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 106:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 107:Drivers/CMSIS/Include/core_cm0plus.h **** 
 108:Drivers/CMSIS/Include/core_cm0plus.h **** #elif defined ( __CSMC__ )
 109:Drivers/CMSIS/Include/core_cm0plus.h ****   #if ( __CSMC__ & 0x400U)
 110:Drivers/CMSIS/Include/core_cm0plus.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 111:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 112:Drivers/CMSIS/Include/core_cm0plus.h **** 
 113:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 114:Drivers/CMSIS/Include/core_cm0plus.h **** 
 115:Drivers/CMSIS/Include/core_cm0plus.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 116:Drivers/CMSIS/Include/core_cm0plus.h **** 
 117:Drivers/CMSIS/Include/core_cm0plus.h **** 
 118:Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
 119:Drivers/CMSIS/Include/core_cm0plus.h **** }
 120:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 121:Drivers/CMSIS/Include/core_cm0plus.h **** 
 122:Drivers/CMSIS/Include/core_cm0plus.h **** #endif /* __CORE_CM0PLUS_H_GENERIC */
 123:Drivers/CMSIS/Include/core_cm0plus.h **** 
 124:Drivers/CMSIS/Include/core_cm0plus.h **** #ifndef __CMSIS_GENERIC
 125:Drivers/CMSIS/Include/core_cm0plus.h **** 
 126:Drivers/CMSIS/Include/core_cm0plus.h **** #ifndef __CORE_CM0PLUS_H_DEPENDANT
 127:Drivers/CMSIS/Include/core_cm0plus.h **** #define __CORE_CM0PLUS_H_DEPENDANT
 128:Drivers/CMSIS/Include/core_cm0plus.h **** 
 129:Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
 130:Drivers/CMSIS/Include/core_cm0plus.h ****  extern "C" {
 131:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 132:Drivers/CMSIS/Include/core_cm0plus.h **** 
 133:Drivers/CMSIS/Include/core_cm0plus.h **** /* check device defines and use defaults */
 134:Drivers/CMSIS/Include/core_cm0plus.h **** #if defined __CHECK_DEVICE_DEFINES
 135:Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __CM0PLUS_REV
 136:Drivers/CMSIS/Include/core_cm0plus.h ****     #define __CM0PLUS_REV             0x0000U
 137:Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__CM0PLUS_REV not defined in device header file; using default!"
 138:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 139:Drivers/CMSIS/Include/core_cm0plus.h **** 
 140:Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __MPU_PRESENT
 141:Drivers/CMSIS/Include/core_cm0plus.h ****     #define __MPU_PRESENT             0U
 142:Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 143:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 144:Drivers/CMSIS/Include/core_cm0plus.h **** 
 145:Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __VTOR_PRESENT
 146:Drivers/CMSIS/Include/core_cm0plus.h ****     #define __VTOR_PRESENT            0U
 147:Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__VTOR_PRESENT not defined in device header file; using default!"
 148:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 149:Drivers/CMSIS/Include/core_cm0plus.h **** 
 150:Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __NVIC_PRIO_BITS
 151:Drivers/CMSIS/Include/core_cm0plus.h ****     #define __NVIC_PRIO_BITS          2U
 152:Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 153:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 154:Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  /tmp/ccV1cKci.s 			page 112


 155:Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef __Vendor_SysTickConfig
 156:Drivers/CMSIS/Include/core_cm0plus.h ****     #define __Vendor_SysTickConfig    0U
 157:Drivers/CMSIS/Include/core_cm0plus.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 158:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 159:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 160:Drivers/CMSIS/Include/core_cm0plus.h **** 
 161:Drivers/CMSIS/Include/core_cm0plus.h **** /* IO definitions (access restrictions to peripheral registers) */
 162:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 163:Drivers/CMSIS/Include/core_cm0plus.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 164:Drivers/CMSIS/Include/core_cm0plus.h **** 
 165:Drivers/CMSIS/Include/core_cm0plus.h ****     <strong>IO Type Qualifiers</strong> are used
 166:Drivers/CMSIS/Include/core_cm0plus.h ****     \li to specify the access to peripheral variables.
 167:Drivers/CMSIS/Include/core_cm0plus.h ****     \li for automatic generation of peripheral register debug information.
 168:Drivers/CMSIS/Include/core_cm0plus.h **** */
 169:Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef __cplusplus
 170:Drivers/CMSIS/Include/core_cm0plus.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 171:Drivers/CMSIS/Include/core_cm0plus.h **** #else
 172:Drivers/CMSIS/Include/core_cm0plus.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 173:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 174:Drivers/CMSIS/Include/core_cm0plus.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 175:Drivers/CMSIS/Include/core_cm0plus.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 176:Drivers/CMSIS/Include/core_cm0plus.h **** 
 177:Drivers/CMSIS/Include/core_cm0plus.h **** /* following defines should be used for structure members */
 178:Drivers/CMSIS/Include/core_cm0plus.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 179:Drivers/CMSIS/Include/core_cm0plus.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 180:Drivers/CMSIS/Include/core_cm0plus.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 181:Drivers/CMSIS/Include/core_cm0plus.h **** 
 182:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group Cortex-M0+ */
 183:Drivers/CMSIS/Include/core_cm0plus.h **** 
 184:Drivers/CMSIS/Include/core_cm0plus.h **** 
 185:Drivers/CMSIS/Include/core_cm0plus.h **** 
 186:Drivers/CMSIS/Include/core_cm0plus.h **** /*******************************************************************************
 187:Drivers/CMSIS/Include/core_cm0plus.h ****  *                 Register Abstraction
 188:Drivers/CMSIS/Include/core_cm0plus.h ****   Core Register contain:
 189:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core Register
 190:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core NVIC Register
 191:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core SCB Register
 192:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core SysTick Register
 193:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core MPU Register
 194:Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
 195:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 196:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 197:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 198:Drivers/CMSIS/Include/core_cm0plus.h **** */
 199:Drivers/CMSIS/Include/core_cm0plus.h **** 
 200:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 201:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 202:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 203:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Core Register type definitions.
 204:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 205:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 206:Drivers/CMSIS/Include/core_cm0plus.h **** 
 207:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 208:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 209:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 210:Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 211:Drivers/CMSIS/Include/core_cm0plus.h **** {
ARM GAS  /tmp/ccV1cKci.s 			page 113


 212:Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 213:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 214:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved0:28;              /*!< bit:  0..27  Reserved */
 215:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 216:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 217:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 218:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 219:Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 220:Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 221:Drivers/CMSIS/Include/core_cm0plus.h **** } APSR_Type;
 222:Drivers/CMSIS/Include/core_cm0plus.h **** 
 223:Drivers/CMSIS/Include/core_cm0plus.h **** /* APSR Register Definitions */
 224:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 225:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 226:Drivers/CMSIS/Include/core_cm0plus.h **** 
 227:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 228:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 229:Drivers/CMSIS/Include/core_cm0plus.h **** 
 230:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 231:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 232:Drivers/CMSIS/Include/core_cm0plus.h **** 
 233:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 234:Drivers/CMSIS/Include/core_cm0plus.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 235:Drivers/CMSIS/Include/core_cm0plus.h **** 
 236:Drivers/CMSIS/Include/core_cm0plus.h **** 
 237:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 238:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 239:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 240:Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 241:Drivers/CMSIS/Include/core_cm0plus.h **** {
 242:Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 243:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 244:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 245:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 246:Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 247:Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 248:Drivers/CMSIS/Include/core_cm0plus.h **** } IPSR_Type;
 249:Drivers/CMSIS/Include/core_cm0plus.h **** 
 250:Drivers/CMSIS/Include/core_cm0plus.h **** /* IPSR Register Definitions */
 251:Drivers/CMSIS/Include/core_cm0plus.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 252:Drivers/CMSIS/Include/core_cm0plus.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 253:Drivers/CMSIS/Include/core_cm0plus.h **** 
 254:Drivers/CMSIS/Include/core_cm0plus.h **** 
 255:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 256:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 257:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 258:Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 259:Drivers/CMSIS/Include/core_cm0plus.h **** {
 260:Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 261:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 262:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 263:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 264:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 265:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved1:3;               /*!< bit: 25..27  Reserved */
 266:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 267:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 268:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
ARM GAS  /tmp/ccV1cKci.s 			page 114


 269:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 270:Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 271:Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 272:Drivers/CMSIS/Include/core_cm0plus.h **** } xPSR_Type;
 273:Drivers/CMSIS/Include/core_cm0plus.h **** 
 274:Drivers/CMSIS/Include/core_cm0plus.h **** /* xPSR Register Definitions */
 275:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 276:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 277:Drivers/CMSIS/Include/core_cm0plus.h **** 
 278:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 279:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 280:Drivers/CMSIS/Include/core_cm0plus.h **** 
 281:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 282:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 283:Drivers/CMSIS/Include/core_cm0plus.h **** 
 284:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 285:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 286:Drivers/CMSIS/Include/core_cm0plus.h **** 
 287:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 288:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 289:Drivers/CMSIS/Include/core_cm0plus.h **** 
 290:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 291:Drivers/CMSIS/Include/core_cm0plus.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 292:Drivers/CMSIS/Include/core_cm0plus.h **** 
 293:Drivers/CMSIS/Include/core_cm0plus.h **** 
 294:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 295:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Union type to access the Control Registers (CONTROL).
 296:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 297:Drivers/CMSIS/Include/core_cm0plus.h **** typedef union
 298:Drivers/CMSIS/Include/core_cm0plus.h **** {
 299:Drivers/CMSIS/Include/core_cm0plus.h ****   struct
 300:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 301:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 302:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 303:Drivers/CMSIS/Include/core_cm0plus.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 304:Drivers/CMSIS/Include/core_cm0plus.h ****   } b;                                   /*!< Structure used for bit  access */
 305:Drivers/CMSIS/Include/core_cm0plus.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:Drivers/CMSIS/Include/core_cm0plus.h **** } CONTROL_Type;
 307:Drivers/CMSIS/Include/core_cm0plus.h **** 
 308:Drivers/CMSIS/Include/core_cm0plus.h **** /* CONTROL Register Definitions */
 309:Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 310:Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 311:Drivers/CMSIS/Include/core_cm0plus.h **** 
 312:Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 313:Drivers/CMSIS/Include/core_cm0plus.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 314:Drivers/CMSIS/Include/core_cm0plus.h **** 
 315:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_CORE */
 316:Drivers/CMSIS/Include/core_cm0plus.h **** 
 317:Drivers/CMSIS/Include/core_cm0plus.h **** 
 318:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 319:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 320:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 321:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Type definitions for the NVIC Registers
 322:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 323:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 324:Drivers/CMSIS/Include/core_cm0plus.h **** 
 325:Drivers/CMSIS/Include/core_cm0plus.h **** /**
ARM GAS  /tmp/ccV1cKci.s 			page 115


 326:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 327:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 328:Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 329:Drivers/CMSIS/Include/core_cm0plus.h **** {
 330:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ISER[1U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 331:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED0[31U];
 332:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ICER[1U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 333:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RSERVED1[31U];
 334:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ISPR[1U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 335:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED2[31U];
 336:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ICPR[1U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 337:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED3[31U];
 338:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED4[64U];
 339:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t IP[8U];                 /*!< Offset: 0x300 (R/W)  Interrupt Priority Register */
 340:Drivers/CMSIS/Include/core_cm0plus.h **** }  NVIC_Type;
 341:Drivers/CMSIS/Include/core_cm0plus.h **** 
 342:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_NVIC */
 343:Drivers/CMSIS/Include/core_cm0plus.h **** 
 344:Drivers/CMSIS/Include/core_cm0plus.h **** 
 345:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 346:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 347:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 348:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Type definitions for the System Control Block Registers
 349:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 350:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 351:Drivers/CMSIS/Include/core_cm0plus.h **** 
 352:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 353:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the System Control Block (SCB).
 354:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 355:Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 356:Drivers/CMSIS/Include/core_cm0plus.h **** {
 357:Drivers/CMSIS/Include/core_cm0plus.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 358:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 359:Drivers/CMSIS/Include/core_cm0plus.h **** #if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
 360:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 361:Drivers/CMSIS/Include/core_cm0plus.h **** #else
 362:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED0;
 363:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 364:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 365:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 366:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 367:Drivers/CMSIS/Include/core_cm0plus.h ****         uint32_t RESERVED1;
 368:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t SHP[2U];                /*!< Offset: 0x01C (R/W)  System Handlers Priority Registe
 369:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 370:Drivers/CMSIS/Include/core_cm0plus.h **** } SCB_Type;
 371:Drivers/CMSIS/Include/core_cm0plus.h **** 
 372:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB CPUID Register Definitions */
 373:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 374:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 375:Drivers/CMSIS/Include/core_cm0plus.h **** 
 376:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 377:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 378:Drivers/CMSIS/Include/core_cm0plus.h **** 
 379:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 380:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 381:Drivers/CMSIS/Include/core_cm0plus.h **** 
 382:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
ARM GAS  /tmp/ccV1cKci.s 			page 116


 383:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 384:Drivers/CMSIS/Include/core_cm0plus.h **** 
 385:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 386:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 387:Drivers/CMSIS/Include/core_cm0plus.h **** 
 388:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Interrupt Control State Register Definitions */
 389:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 390:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 391:Drivers/CMSIS/Include/core_cm0plus.h **** 
 392:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 393:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 394:Drivers/CMSIS/Include/core_cm0plus.h **** 
 395:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 396:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 397:Drivers/CMSIS/Include/core_cm0plus.h **** 
 398:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 399:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 400:Drivers/CMSIS/Include/core_cm0plus.h **** 
 401:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 402:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 403:Drivers/CMSIS/Include/core_cm0plus.h **** 
 404:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 405:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 406:Drivers/CMSIS/Include/core_cm0plus.h **** 
 407:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 408:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 409:Drivers/CMSIS/Include/core_cm0plus.h **** 
 410:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 411:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 412:Drivers/CMSIS/Include/core_cm0plus.h **** 
 413:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 414:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 415:Drivers/CMSIS/Include/core_cm0plus.h **** 
 416:Drivers/CMSIS/Include/core_cm0plus.h **** #if defined (__VTOR_PRESENT) && (__VTOR_PRESENT == 1U)
 417:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Interrupt Control State Register Definitions */
 418:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_VTOR_TBLOFF_Pos                 8U                                            /*!< SCB 
 419:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_VTOR_TBLOFF_Msk                (0xFFFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 420:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 421:Drivers/CMSIS/Include/core_cm0plus.h **** 
 422:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 423:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 424:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 425:Drivers/CMSIS/Include/core_cm0plus.h **** 
 426:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 427:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 428:Drivers/CMSIS/Include/core_cm0plus.h **** 
 429:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 430:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 431:Drivers/CMSIS/Include/core_cm0plus.h **** 
 432:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 433:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 434:Drivers/CMSIS/Include/core_cm0plus.h **** 
 435:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 436:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 437:Drivers/CMSIS/Include/core_cm0plus.h **** 
 438:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB System Control Register Definitions */
 439:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
ARM GAS  /tmp/ccV1cKci.s 			page 117


 440:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 441:Drivers/CMSIS/Include/core_cm0plus.h **** 
 442:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 443:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 444:Drivers/CMSIS/Include/core_cm0plus.h **** 
 445:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 446:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 447:Drivers/CMSIS/Include/core_cm0plus.h **** 
 448:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB Configuration Control Register Definitions */
 449:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 450:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 451:Drivers/CMSIS/Include/core_cm0plus.h **** 
 452:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 453:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 454:Drivers/CMSIS/Include/core_cm0plus.h **** 
 455:Drivers/CMSIS/Include/core_cm0plus.h **** /* SCB System Handler Control and State Register Definitions */
 456:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 457:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 458:Drivers/CMSIS/Include/core_cm0plus.h **** 
 459:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_SCB */
 460:Drivers/CMSIS/Include/core_cm0plus.h **** 
 461:Drivers/CMSIS/Include/core_cm0plus.h **** 
 462:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 463:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 464:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 465:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Type definitions for the System Timer Registers.
 466:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 467:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 468:Drivers/CMSIS/Include/core_cm0plus.h **** 
 469:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 470:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the System Timer (SysTick).
 471:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 472:Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 473:Drivers/CMSIS/Include/core_cm0plus.h **** {
 474:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 475:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 476:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 477:Drivers/CMSIS/Include/core_cm0plus.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 478:Drivers/CMSIS/Include/core_cm0plus.h **** } SysTick_Type;
 479:Drivers/CMSIS/Include/core_cm0plus.h **** 
 480:Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Control / Status Register Definitions */
 481:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 482:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 483:Drivers/CMSIS/Include/core_cm0plus.h **** 
 484:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 485:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 486:Drivers/CMSIS/Include/core_cm0plus.h **** 
 487:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 488:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 489:Drivers/CMSIS/Include/core_cm0plus.h **** 
 490:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 491:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 492:Drivers/CMSIS/Include/core_cm0plus.h **** 
 493:Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Reload Register Definitions */
 494:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 495:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 496:Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  /tmp/ccV1cKci.s 			page 118


 497:Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Current Register Definitions */
 498:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 499:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 500:Drivers/CMSIS/Include/core_cm0plus.h **** 
 501:Drivers/CMSIS/Include/core_cm0plus.h **** /* SysTick Calibration Register Definitions */
 502:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 503:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 504:Drivers/CMSIS/Include/core_cm0plus.h **** 
 505:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 506:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 507:Drivers/CMSIS/Include/core_cm0plus.h **** 
 508:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 509:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 510:Drivers/CMSIS/Include/core_cm0plus.h **** 
 511:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_SysTick */
 512:Drivers/CMSIS/Include/core_cm0plus.h **** 
 513:Drivers/CMSIS/Include/core_cm0plus.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
 514:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 515:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 516:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
 517:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
 518:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 519:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 520:Drivers/CMSIS/Include/core_cm0plus.h **** 
 521:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 522:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
 523:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 524:Drivers/CMSIS/Include/core_cm0plus.h **** typedef struct
 525:Drivers/CMSIS/Include/core_cm0plus.h **** {
 526:Drivers/CMSIS/Include/core_cm0plus.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
 527:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
 528:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
 529:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
 530:Drivers/CMSIS/Include/core_cm0plus.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
 531:Drivers/CMSIS/Include/core_cm0plus.h **** } MPU_Type;
 532:Drivers/CMSIS/Include/core_cm0plus.h **** 
 533:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_RALIASES                  1U
 534:Drivers/CMSIS/Include/core_cm0plus.h **** 
 535:Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Type Register Definitions */
 536:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
 537:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
 538:Drivers/CMSIS/Include/core_cm0plus.h **** 
 539:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
 540:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
 541:Drivers/CMSIS/Include/core_cm0plus.h **** 
 542:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
 543:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
 544:Drivers/CMSIS/Include/core_cm0plus.h **** 
 545:Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Control Register Definitions */
 546:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
 547:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
 548:Drivers/CMSIS/Include/core_cm0plus.h **** 
 549:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
 550:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
 551:Drivers/CMSIS/Include/core_cm0plus.h **** 
 552:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
 553:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
ARM GAS  /tmp/ccV1cKci.s 			page 119


 554:Drivers/CMSIS/Include/core_cm0plus.h **** 
 555:Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Region Number Register Definitions */
 556:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
 557:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
 558:Drivers/CMSIS/Include/core_cm0plus.h **** 
 559:Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Region Base Address Register Definitions */
 560:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_ADDR_Pos                   8U                                            /*!< MPU 
 561:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_ADDR_Msk                  (0xFFFFFFUL << MPU_RBAR_ADDR_Pos)              /*!< MPU 
 562:Drivers/CMSIS/Include/core_cm0plus.h **** 
 563:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
 564:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
 565:Drivers/CMSIS/Include/core_cm0plus.h **** 
 566:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
 567:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
 568:Drivers/CMSIS/Include/core_cm0plus.h **** 
 569:Drivers/CMSIS/Include/core_cm0plus.h **** /* MPU Region Attribute and Size Register Definitions */
 570:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
 571:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
 572:Drivers/CMSIS/Include/core_cm0plus.h **** 
 573:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
 574:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
 575:Drivers/CMSIS/Include/core_cm0plus.h **** 
 576:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
 577:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
 578:Drivers/CMSIS/Include/core_cm0plus.h **** 
 579:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
 580:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
 581:Drivers/CMSIS/Include/core_cm0plus.h **** 
 582:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
 583:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
 584:Drivers/CMSIS/Include/core_cm0plus.h **** 
 585:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
 586:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
 587:Drivers/CMSIS/Include/core_cm0plus.h **** 
 588:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
 589:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
 590:Drivers/CMSIS/Include/core_cm0plus.h **** 
 591:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
 592:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
 593:Drivers/CMSIS/Include/core_cm0plus.h **** 
 594:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
 595:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
 596:Drivers/CMSIS/Include/core_cm0plus.h **** 
 597:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
 598:Drivers/CMSIS/Include/core_cm0plus.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
 599:Drivers/CMSIS/Include/core_cm0plus.h **** 
 600:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_MPU */
 601:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 602:Drivers/CMSIS/Include/core_cm0plus.h **** 
 603:Drivers/CMSIS/Include/core_cm0plus.h **** 
 604:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 605:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_core_register
 606:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
 607:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Cortex-M0+ Core Debug Registers (DCB registers, SHCSR, and DFSR) are only accessible ov
 608:Drivers/CMSIS/Include/core_cm0plus.h ****             Therefore they are not covered by the Cortex-M0+ header file.
 609:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 610:Drivers/CMSIS/Include/core_cm0plus.h ****  */
ARM GAS  /tmp/ccV1cKci.s 			page 120


 611:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_CoreDebug */
 612:Drivers/CMSIS/Include/core_cm0plus.h **** 
 613:Drivers/CMSIS/Include/core_cm0plus.h **** 
 614:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 615:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 616:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
 617:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
 618:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 619:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 620:Drivers/CMSIS/Include/core_cm0plus.h **** 
 621:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 622:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
 623:Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] field  Name of the register bit field.
 624:Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
 625:Drivers/CMSIS/Include/core_cm0plus.h ****   \return           Masked and shifted value.
 626:Drivers/CMSIS/Include/core_cm0plus.h **** */
 627:Drivers/CMSIS/Include/core_cm0plus.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
 628:Drivers/CMSIS/Include/core_cm0plus.h **** 
 629:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 630:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief     Mask and shift a register value to extract a bit filed value.
 631:Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] field  Name of the register bit field.
 632:Drivers/CMSIS/Include/core_cm0plus.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
 633:Drivers/CMSIS/Include/core_cm0plus.h ****   \return           Masked and shifted bit field value.
 634:Drivers/CMSIS/Include/core_cm0plus.h **** */
 635:Drivers/CMSIS/Include/core_cm0plus.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
 636:Drivers/CMSIS/Include/core_cm0plus.h **** 
 637:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} end of group CMSIS_core_bitfield */
 638:Drivers/CMSIS/Include/core_cm0plus.h **** 
 639:Drivers/CMSIS/Include/core_cm0plus.h **** 
 640:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 641:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup    CMSIS_core_register
 642:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup   CMSIS_core_base     Core Definitions
 643:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief      Definitions for base addresses, unions, and structures.
 644:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 645:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 646:Drivers/CMSIS/Include/core_cm0plus.h **** 
 647:Drivers/CMSIS/Include/core_cm0plus.h **** /* Memory mapping of Core Hardware */
 648:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
 649:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
 650:Drivers/CMSIS/Include/core_cm0plus.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
 651:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
 652:Drivers/CMSIS/Include/core_cm0plus.h **** 
 653:Drivers/CMSIS/Include/core_cm0plus.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
 654:Drivers/CMSIS/Include/core_cm0plus.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
 655:Drivers/CMSIS/Include/core_cm0plus.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
 656:Drivers/CMSIS/Include/core_cm0plus.h **** 
 657:Drivers/CMSIS/Include/core_cm0plus.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
 658:Drivers/CMSIS/Include/core_cm0plus.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
 659:Drivers/CMSIS/Include/core_cm0plus.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
 660:Drivers/CMSIS/Include/core_cm0plus.h **** #endif
 661:Drivers/CMSIS/Include/core_cm0plus.h **** 
 662:Drivers/CMSIS/Include/core_cm0plus.h **** /*@} */
 663:Drivers/CMSIS/Include/core_cm0plus.h **** 
 664:Drivers/CMSIS/Include/core_cm0plus.h **** 
 665:Drivers/CMSIS/Include/core_cm0plus.h **** 
 666:Drivers/CMSIS/Include/core_cm0plus.h **** /*******************************************************************************
 667:Drivers/CMSIS/Include/core_cm0plus.h ****  *                Hardware Abstraction Layer
ARM GAS  /tmp/ccV1cKci.s 			page 121


 668:Drivers/CMSIS/Include/core_cm0plus.h ****   Core Function Interface contains:
 669:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core NVIC Functions
 670:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core SysTick Functions
 671:Drivers/CMSIS/Include/core_cm0plus.h ****   - Core Register Access Functions
 672:Drivers/CMSIS/Include/core_cm0plus.h ****  ******************************************************************************/
 673:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 674:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
 675:Drivers/CMSIS/Include/core_cm0plus.h **** */
 676:Drivers/CMSIS/Include/core_cm0plus.h **** 
 677:Drivers/CMSIS/Include/core_cm0plus.h **** 
 678:Drivers/CMSIS/Include/core_cm0plus.h **** 
 679:Drivers/CMSIS/Include/core_cm0plus.h **** /* ##########################   NVIC functions  #################################### */
 680:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 681:Drivers/CMSIS/Include/core_cm0plus.h ****   \ingroup  CMSIS_Core_FunctionInterface
 682:Drivers/CMSIS/Include/core_cm0plus.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
 683:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
 684:Drivers/CMSIS/Include/core_cm0plus.h ****   @{
 685:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 686:Drivers/CMSIS/Include/core_cm0plus.h **** 
 687:Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef CMSIS_NVIC_VIRTUAL
 688:Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
 689:Drivers/CMSIS/Include/core_cm0plus.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
 690:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 691:Drivers/CMSIS/Include/core_cm0plus.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
 692:Drivers/CMSIS/Include/core_cm0plus.h **** #else
 693:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
 694:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
 695:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
 696:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
 697:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
 698:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
 699:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
 700:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
 701:Drivers/CMSIS/Include/core_cm0plus.h **** /*#define NVIC_GetActive              __NVIC_GetActive             not available for Cortex-M0+ */
 702:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
 703:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
 704:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
 705:Drivers/CMSIS/Include/core_cm0plus.h **** #endif /* CMSIS_NVIC_VIRTUAL */
 706:Drivers/CMSIS/Include/core_cm0plus.h **** 
 707:Drivers/CMSIS/Include/core_cm0plus.h **** #ifdef CMSIS_VECTAB_VIRTUAL
 708:Drivers/CMSIS/Include/core_cm0plus.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 709:Drivers/CMSIS/Include/core_cm0plus.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
 710:Drivers/CMSIS/Include/core_cm0plus.h ****   #endif
 711:Drivers/CMSIS/Include/core_cm0plus.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
 712:Drivers/CMSIS/Include/core_cm0plus.h **** #else
 713:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_SetVector              __NVIC_SetVector
 714:Drivers/CMSIS/Include/core_cm0plus.h ****   #define NVIC_GetVector              __NVIC_GetVector
 715:Drivers/CMSIS/Include/core_cm0plus.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
 716:Drivers/CMSIS/Include/core_cm0plus.h **** 
 717:Drivers/CMSIS/Include/core_cm0plus.h **** #define NVIC_USER_IRQ_OFFSET          16
 718:Drivers/CMSIS/Include/core_cm0plus.h **** 
 719:Drivers/CMSIS/Include/core_cm0plus.h **** 
 720:Drivers/CMSIS/Include/core_cm0plus.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
 721:Drivers/CMSIS/Include/core_cm0plus.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
 722:Drivers/CMSIS/Include/core_cm0plus.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
 723:Drivers/CMSIS/Include/core_cm0plus.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
 724:Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  /tmp/ccV1cKci.s 			page 122


 725:Drivers/CMSIS/Include/core_cm0plus.h **** 
 726:Drivers/CMSIS/Include/core_cm0plus.h **** /* Interrupt Priorities are WORD accessible only under Armv6-M                  */
 727:Drivers/CMSIS/Include/core_cm0plus.h **** /* The following MACROS handle generation of the register offset and byte masks */
 728:Drivers/CMSIS/Include/core_cm0plus.h **** #define _BIT_SHIFT(IRQn)         (  ((((uint32_t)(int32_t)(IRQn))         )      &  0x03UL) * 8UL)
 729:Drivers/CMSIS/Include/core_cm0plus.h **** #define _SHP_IDX(IRQn)           ( (((((uint32_t)(int32_t)(IRQn)) & 0x0FUL)-8UL) >>    2UL)      )
 730:Drivers/CMSIS/Include/core_cm0plus.h **** #define _IP_IDX(IRQn)            (   (((uint32_t)(int32_t)(IRQn))                >>    2UL)      )
 731:Drivers/CMSIS/Include/core_cm0plus.h **** 
 732:Drivers/CMSIS/Include/core_cm0plus.h **** #define __NVIC_SetPriorityGrouping(X) (void)(X)
 733:Drivers/CMSIS/Include/core_cm0plus.h **** #define __NVIC_GetPriorityGrouping()  (0U)
 734:Drivers/CMSIS/Include/core_cm0plus.h **** 
 735:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 736:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Enable Interrupt
 737:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
 738:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 739:Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 740:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 741:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
 742:Drivers/CMSIS/Include/core_cm0plus.h **** {
 743:Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 744:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 745:Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 746:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 747:Drivers/CMSIS/Include/core_cm0plus.h **** }
 748:Drivers/CMSIS/Include/core_cm0plus.h **** 
 749:Drivers/CMSIS/Include/core_cm0plus.h **** 
 750:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 751:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Get Interrupt Enable status
 752:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
 753:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 754:Drivers/CMSIS/Include/core_cm0plus.h ****   \return             0  Interrupt is not enabled.
 755:Drivers/CMSIS/Include/core_cm0plus.h ****   \return             1  Interrupt is enabled.
 756:Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 757:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 758:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
 759:Drivers/CMSIS/Include/core_cm0plus.h **** {
 760:Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 761:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 762:Drivers/CMSIS/Include/core_cm0plus.h ****     return((uint32_t)(((NVIC->ISER[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 763:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 764:Drivers/CMSIS/Include/core_cm0plus.h ****   else
 765:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 766:Drivers/CMSIS/Include/core_cm0plus.h ****     return(0U);
 767:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 768:Drivers/CMSIS/Include/core_cm0plus.h **** }
 769:Drivers/CMSIS/Include/core_cm0plus.h **** 
 770:Drivers/CMSIS/Include/core_cm0plus.h **** 
 771:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 772:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Disable Interrupt
 773:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
 774:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 775:Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 776:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 777:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
 778:Drivers/CMSIS/Include/core_cm0plus.h **** {
 779:Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 780:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 781:Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
ARM GAS  /tmp/ccV1cKci.s 			page 123


 782:Drivers/CMSIS/Include/core_cm0plus.h ****     __DSB();
 783:Drivers/CMSIS/Include/core_cm0plus.h ****     __ISB();
 784:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 785:Drivers/CMSIS/Include/core_cm0plus.h **** }
 786:Drivers/CMSIS/Include/core_cm0plus.h **** 
 787:Drivers/CMSIS/Include/core_cm0plus.h **** 
 788:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 789:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Get Pending Interrupt
 790:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
 791:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 792:Drivers/CMSIS/Include/core_cm0plus.h ****   \return             0  Interrupt status is not pending.
 793:Drivers/CMSIS/Include/core_cm0plus.h ****   \return             1  Interrupt status is pending.
 794:Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 795:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 796:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
 797:Drivers/CMSIS/Include/core_cm0plus.h **** {
 798:Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 799:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 800:Drivers/CMSIS/Include/core_cm0plus.h ****     return((uint32_t)(((NVIC->ISPR[0U] & (1UL << (((uint32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL)
 801:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 802:Drivers/CMSIS/Include/core_cm0plus.h ****   else
 803:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 804:Drivers/CMSIS/Include/core_cm0plus.h ****     return(0U);
 805:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 806:Drivers/CMSIS/Include/core_cm0plus.h **** }
 807:Drivers/CMSIS/Include/core_cm0plus.h **** 
 808:Drivers/CMSIS/Include/core_cm0plus.h **** 
 809:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 810:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Set Pending Interrupt
 811:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
 812:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 813:Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 814:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 815:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
 816:Drivers/CMSIS/Include/core_cm0plus.h **** {
 817:Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 818:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 819:Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->ISPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 820:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 821:Drivers/CMSIS/Include/core_cm0plus.h **** }
 822:Drivers/CMSIS/Include/core_cm0plus.h **** 
 823:Drivers/CMSIS/Include/core_cm0plus.h **** 
 824:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 825:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Clear Pending Interrupt
 826:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
 827:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Device specific interrupt number.
 828:Drivers/CMSIS/Include/core_cm0plus.h ****   \note    IRQn must not be negative.
 829:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 830:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 831:Drivers/CMSIS/Include/core_cm0plus.h **** {
 832:Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 833:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 834:Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 835:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 836:Drivers/CMSIS/Include/core_cm0plus.h **** }
 837:Drivers/CMSIS/Include/core_cm0plus.h **** 
 838:Drivers/CMSIS/Include/core_cm0plus.h **** 
ARM GAS  /tmp/ccV1cKci.s 			page 124


 839:Drivers/CMSIS/Include/core_cm0plus.h **** /**
 840:Drivers/CMSIS/Include/core_cm0plus.h ****   \brief   Set Interrupt Priority
 841:Drivers/CMSIS/Include/core_cm0plus.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
 842:Drivers/CMSIS/Include/core_cm0plus.h ****            The interrupt number can be positive to specify a device specific interrupt,
 843:Drivers/CMSIS/Include/core_cm0plus.h ****            or negative to specify a processor exception.
 844:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]      IRQn  Interrupt number.
 845:Drivers/CMSIS/Include/core_cm0plus.h ****   \param [in]  priority  Priority to set.
 846:Drivers/CMSIS/Include/core_cm0plus.h ****   \note    The priority cannot be set for every processor exception.
 847:Drivers/CMSIS/Include/core_cm0plus.h ****  */
 848:Drivers/CMSIS/Include/core_cm0plus.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
 849:Drivers/CMSIS/Include/core_cm0plus.h **** {
 850:Drivers/CMSIS/Include/core_cm0plus.h ****   if ((int32_t)(IRQn) >= 0)
 851:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 852:Drivers/CMSIS/Include/core_cm0plus.h ****     NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))
 589              		.loc 6 852 52 is_stmt 0 view .LVU160
 590 00fe C720     		movs	r0, #199
 591              	.LBE212:
 592              	.LBE211:
 593              	.LBB215:
 594              	.LBB209:
 595              		.loc 5 1961 3 view .LVU161
 596 0100 0A43     		orrs	r2, r1
 597              	.LBE209:
 598              	.LBE215:
 599              	.LBB216:
 600              	.LBB217:
 601              		.loc 6 852 52 view .LVU162
 602 0102 C221     		movs	r1, #194
 603              	.LBE217:
 604              	.LBE216:
 605              	.LBB220:
 606              	.LBB210:
 607              		.loc 5 1961 3 view .LVU163
 608 0104 1A60     		str	r2, [r3]
 609              	.LVL24:
 610              		.loc 5 1961 3 view .LVU164
 611              	.LBE210:
 612              	.LBE220:
 255:Utilities/TRACER_EMB/tracer_emb_hw.c **** #endif
 256:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 257:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* Configure the interrupt for TX */
 258:Utilities/TRACER_EMB/tracer_emb_hw.c ****   NVIC_SetPriority(TRACER_EMB_TX_DMA_IRQ, 0);
 613              		.loc 2 258 3 is_stmt 1 view .LVU165
 614              	.LBB221:
 615              	.LBI216:
 848:Drivers/CMSIS/Include/core_cm0plus.h **** {
 616              		.loc 6 848 22 view .LVU166
 617              	.LBB218:
 850:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 618              		.loc 6 850 3 view .LVU167
 619              		.loc 6 852 5 view .LVU168
 620              		.loc 6 852 52 is_stmt 0 view .LVU169
 621 0106 174B     		ldr	r3, .L11+32
 622 0108 8900     		lsls	r1, r1, #2
 623 010a 5A58     		ldr	r2, [r3, r1]
 624              	.LBE218:
 625              	.LBE221:
ARM GAS  /tmp/ccV1cKci.s 			page 125


 626              	.LBB222:
 627              	.LBB213:
 628 010c 8000     		lsls	r0, r0, #2
 629              	.LBE213:
 630              	.LBE222:
 631              	.LBB223:
 632              	.LBB219:
 633              		.loc 6 852 33 view .LVU170
 634 010e 1202     		lsls	r2, r2, #8
 635 0110 120A     		lsrs	r2, r2, #8
 636              		.loc 6 852 30 view .LVU171
 637 0112 5A50     		str	r2, [r3, r1]
 638              	.LVL25:
 639              		.loc 6 852 30 view .LVU172
 640              	.LBE219:
 641              	.LBE223:
 259:Utilities/TRACER_EMB/tracer_emb_hw.c ****   NVIC_EnableIRQ(TRACER_EMB_TX_DMA_IRQ);
 642              		.loc 2 259 3 is_stmt 1 view .LVU173
 643              	.LBB224:
 644              	.LBI224:
 741:Drivers/CMSIS/Include/core_cm0plus.h **** {
 645              		.loc 6 741 22 view .LVU174
 646              	.LBB225:
 743:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 647              		.loc 6 743 3 view .LVU175
 745:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 648              		.loc 6 745 5 view .LVU176
 745:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 649              		.loc 6 745 20 is_stmt 0 view .LVU177
 650 0114 8022     		movs	r2, #128
 651 0116 1201     		lsls	r2, r2, #4
 652 0118 1A60     		str	r2, [r3]
 653              	.LVL26:
 745:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 654              		.loc 6 745 20 view .LVU178
 655              	.LBE225:
 656              	.LBE224:
 260:Utilities/TRACER_EMB/tracer_emb_hw.c ****   
 261:Utilities/TRACER_EMB/tracer_emb_hw.c ****   NVIC_SetPriority(TRACER_EMB_USART_IRQ, 3);
 657              		.loc 2 261 3 is_stmt 1 view .LVU179
 658              	.LBB226:
 659              	.LBI211:
 848:Drivers/CMSIS/Include/core_cm0plus.h **** {
 660              		.loc 6 848 22 view .LVU180
 661              	.LBB214:
 850:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 662              		.loc 6 850 3 view .LVU181
 663              		.loc 6 852 5 view .LVU182
 664              		.loc 6 852 52 is_stmt 0 view .LVU183
 665 011a 1A58     		ldr	r2, [r3, r0]
 666              		.loc 6 852 33 view .LVU184
 667 011c 1249     		ldr	r1, .L11+36
 668 011e 1140     		ands	r1, r2
 669              		.loc 6 852 102 view .LVU185
 670 0120 C022     		movs	r2, #192
 671 0122 1202     		lsls	r2, r2, #8
 672 0124 0A43     		orrs	r2, r1
ARM GAS  /tmp/ccV1cKci.s 			page 126


 673              		.loc 6 852 30 view .LVU186
 674 0126 1A50     		str	r2, [r3, r0]
 675              	.LVL27:
 676              		.loc 6 852 30 view .LVU187
 677              	.LBE214:
 678              	.LBE226:
 262:Utilities/TRACER_EMB/tracer_emb_hw.c ****   NVIC_EnableIRQ(TRACER_EMB_USART_IRQ);
 679              		.loc 2 262 3 is_stmt 1 view .LVU188
 680              	.LBB227:
 681              	.LBI227:
 741:Drivers/CMSIS/Include/core_cm0plus.h **** {
 682              		.loc 6 741 22 view .LVU189
 683              	.LBB228:
 743:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 684              		.loc 6 743 3 view .LVU190
 745:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 685              		.loc 6 745 5 view .LVU191
 745:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 686              		.loc 6 745 20 is_stmt 0 view .LVU192
 687 0128 8022     		movs	r2, #128
 688 012a 9205     		lsls	r2, r2, #22
 689 012c 1A60     		str	r2, [r3]
 690              	.LVL28:
 745:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 691              		.loc 6 745 20 view .LVU193
 692              	.LBE228:
 693              	.LBE227:
 263:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 264:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* Disable the UART */
 265:Utilities/TRACER_EMB/tracer_emb_hw.c ****   if(NULL == fptr_rx)
 694              		.loc 2 265 3 is_stmt 1 view .LVU194
 695              		.loc 2 265 11 is_stmt 0 view .LVU195
 696 012e 0F4B     		ldr	r3, .L11+40
 697              		.loc 2 265 5 view .LVU196
 698 0130 1B68     		ldr	r3, [r3]
 699 0132 002B     		cmp	r3, #0
 700 0134 03D1     		bne	.L4
 266:Utilities/TRACER_EMB/tracer_emb_hw.c ****   {
 267:Utilities/TRACER_EMB/tracer_emb_hw.c ****     TRACER_EMB_DISABLE_CLK_USART();
 701              		.loc 2 267 5 is_stmt 1 view .LVU197
 702              	.LBB229:
 703              	.LBI229:
 533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 704              		.loc 1 533 22 view .LVU198
 705              	.LVL29:
 706              	.LBB230:
 535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 707              		.loc 1 535 3 view .LVU199
 708 0136 E36B     		ldr	r3, [r4, #60]
 709 0138 0D4A     		ldr	r2, .L11+44
 710 013a 1340     		ands	r3, r2
 711 013c E363     		str	r3, [r4, #60]
 712              	.LVL30:
 535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 713              		.loc 1 535 3 is_stmt 0 view .LVU200
 714              	.LBE230:
 715              	.LBE229:
ARM GAS  /tmp/ccV1cKci.s 			page 127


 268:Utilities/TRACER_EMB/tracer_emb_hw.c ****   }
 269:Utilities/TRACER_EMB/tracer_emb_hw.c ****   return;
 716              		.loc 2 269 3 is_stmt 1 view .LVU201
 717              	.L4:
 270:Utilities/TRACER_EMB/tracer_emb_hw.c **** }
 718              		.loc 2 270 1 is_stmt 0 view .LVU202
 719 013e 0BB0     		add	sp, sp, #44
 720              		@ sp needed
 721 0140 F0BD     		pop	{r4, r5, r6, r7, pc}
 722              	.L12:
 723 0142 C046     		.align	2
 724              	.L11:
 725 0144 00100240 		.word	1073876992
 726 0148 FFF0FFFF 		.word	-3841
 727 014c 00800040 		.word	1073774592
 728 0150 FF0FFFFF 		.word	-61441
 729 0154 0C080240 		.word	1073874956
 730 0158 44000240 		.word	1073872964
 731 015c 0F80FFFF 		.word	-32753
 732 0160 90200000 		.word	8336
 733 0164 00E100E0 		.word	-536813312
 734 0168 FF00FFFF 		.word	-65281
 735 016c 00000000 		.word	.LANCHOR0
 736 0170 FFFFEFFF 		.word	-1048577
 737              		.cfi_endproc
 738              	.LFE907:
 740              		.section	.text.HW_TRACER_EMB_DeInit,"ax",%progbits
 741              		.align	1
 742              		.global	HW_TRACER_EMB_DeInit
 743              		.syntax unified
 744              		.code	16
 745              		.thumb_func
 746              		.fpu softvfp
 748              	HW_TRACER_EMB_DeInit:
 749              	.LFB908:
 271:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 272:Utilities/TRACER_EMB/tracer_emb_hw.c **** /**
 273:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * @brief  Trace Deinit
 274:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * @retval none
 275:Utilities/TRACER_EMB/tracer_emb_hw.c ****   */
 276:Utilities/TRACER_EMB/tracer_emb_hw.c **** void HW_TRACER_EMB_DeInit(void)
 277:Utilities/TRACER_EMB/tracer_emb_hw.c **** {
 750              		.loc 2 277 1 is_stmt 1 view -0
 751              		.cfi_startproc
 752              		@ args = 0, pretend = 0, frame = 0
 753              		@ frame_needed = 0, uses_anonymous_args = 0
 754              		@ link register save eliminated.
 278:Utilities/TRACER_EMB/tracer_emb_hw.c ****   TRACER_EMB_DISABLE_CLK_USART();
 755              		.loc 2 278 3 view .LVU204
 756              	.LBB233:
 757              	.LBI233:
 533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 758              		.loc 1 533 22 view .LVU205
 759              	.LVL31:
 760              	.LBB234:
 535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 761              		.loc 1 535 3 view .LVU206
ARM GAS  /tmp/ccV1cKci.s 			page 128


 762 0000 024A     		ldr	r2, .L14
 763 0002 0349     		ldr	r1, .L14+4
 764 0004 D36B     		ldr	r3, [r2, #60]
 765              	.LBE234:
 766              	.LBE233:
 279:Utilities/TRACER_EMB/tracer_emb_hw.c ****   return;
 280:Utilities/TRACER_EMB/tracer_emb_hw.c **** }
 767              		.loc 2 280 1 is_stmt 0 view .LVU207
 768              		@ sp needed
 769              	.LBB236:
 770              	.LBB235:
 535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 771              		.loc 1 535 3 view .LVU208
 772 0006 0B40     		ands	r3, r1
 773 0008 D363     		str	r3, [r2, #60]
 774              	.LVL32:
 535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 775              		.loc 1 535 3 view .LVU209
 776              	.LBE235:
 777              	.LBE236:
 279:Utilities/TRACER_EMB/tracer_emb_hw.c ****   return;
 778              		.loc 2 279 3 is_stmt 1 view .LVU210
 779              		.loc 2 280 1 is_stmt 0 view .LVU211
 780 000a 7047     		bx	lr
 781              	.L15:
 782              		.align	2
 783              	.L14:
 784 000c 00100240 		.word	1073876992
 785 0010 FFFFEFFF 		.word	-1048577
 786              		.cfi_endproc
 787              	.LFE908:
 789              		.section	.text.HW_TRACER_EMB_RegisterRxCallback,"ax",%progbits
 790              		.align	1
 791              		.global	HW_TRACER_EMB_RegisterRxCallback
 792              		.syntax unified
 793              		.code	16
 794              		.thumb_func
 795              		.fpu softvfp
 797              	HW_TRACER_EMB_RegisterRxCallback:
 798              	.LVL33:
 799              	.LFB909:
 281:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 282:Utilities/TRACER_EMB/tracer_emb_hw.c **** /**
 283:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * @brief  Allow to update the RX callback
 284:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * @param  callbackRX
 285:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * @retval none
 286:Utilities/TRACER_EMB/tracer_emb_hw.c ****   */
 287:Utilities/TRACER_EMB/tracer_emb_hw.c **** void HW_TRACER_EMB_RegisterRxCallback(void (*callbackRX)(uint8_t, uint8_t))
 288:Utilities/TRACER_EMB/tracer_emb_hw.c **** {
 800              		.loc 2 288 1 is_stmt 1 view -0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 289:Utilities/TRACER_EMB/tracer_emb_hw.c ****   fptr_rx = callbackRX;
 804              		.loc 2 289 3 view .LVU213
 288:Utilities/TRACER_EMB/tracer_emb_hw.c ****   fptr_rx = callbackRX;
 805              		.loc 2 288 1 is_stmt 0 view .LVU214
ARM GAS  /tmp/ccV1cKci.s 			page 129


 806 0000 10B5     		push	{r4, lr}
 807              	.LCFI3:
 808              		.cfi_def_cfa_offset 8
 809              		.cfi_offset 4, -8
 810              		.cfi_offset 14, -4
 811              		.loc 2 289 11 view .LVU215
 812 0002 024B     		ldr	r3, .L17
 290:Utilities/TRACER_EMB/tracer_emb_hw.c ****   TRACER_EMB_ENABLE_CLK_USART();
 291:Utilities/TRACER_EMB/tracer_emb_hw.c **** }
 813              		.loc 2 291 1 view .LVU216
 814              		@ sp needed
 289:Utilities/TRACER_EMB/tracer_emb_hw.c ****   TRACER_EMB_ENABLE_CLK_USART();
 815              		.loc 2 289 11 view .LVU217
 816 0004 1860     		str	r0, [r3]
 290:Utilities/TRACER_EMB/tracer_emb_hw.c ****   TRACER_EMB_ENABLE_CLK_USART();
 817              		.loc 2 290 3 is_stmt 1 view .LVU218
 818 0006 FFF7FEFF 		bl	LL_APB1_GRP1_EnableClock.constprop.0
 819              	.LVL34:
 820              		.loc 2 291 1 is_stmt 0 view .LVU219
 821 000a 10BD     		pop	{r4, pc}
 822              	.L18:
 823              		.align	2
 824              	.L17:
 825 000c 00000000 		.word	.LANCHOR0
 826              		.cfi_endproc
 827              	.LFE909:
 829              		.section	.text.HW_TRACER_EMB_StartRX,"ax",%progbits
 830              		.align	1
 831              		.global	HW_TRACER_EMB_StartRX
 832              		.syntax unified
 833              		.code	16
 834              		.thumb_func
 835              		.fpu softvfp
 837              	HW_TRACER_EMB_StartRX:
 838              	.LFB910:
 292:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 293:Utilities/TRACER_EMB/tracer_emb_hw.c **** /**
 294:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * @brief  Start RX reception only when OSKernel have been started
 295:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * @retval none
 296:Utilities/TRACER_EMB/tracer_emb_hw.c ****   */
 297:Utilities/TRACER_EMB/tracer_emb_hw.c **** void HW_TRACER_EMB_StartRX(void)
 298:Utilities/TRACER_EMB/tracer_emb_hw.c **** {
 839              		.loc 2 298 1 is_stmt 1 view -0
 840              		.cfi_startproc
 841              		@ args = 0, pretend = 0, frame = 0
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 843              		@ link register save eliminated.
 299:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* Enable USART IT for RX */
 300:Utilities/TRACER_EMB/tracer_emb_hw.c ****   TRACER_EMB_ENABLE_IT_RXNE(TRACER_EMB_USART_INSTANCE);
 844              		.loc 2 300 3 view .LVU221
 845              	.LVL35:
 846              	.LBB247:
 847              	.LBI247:
1736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Receive Enable Acknowledge Flag is set or not
ARM GAS  /tmp/ccV1cKci.s 			page 130


1740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ISR          REACK         LL_LPUART_IsActiveFlag_REACK
1741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_REACK(USART_TypeDef *LPUARTx)
1745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_REACK) == (USART_ISR_REACK)) ? 1UL : 0UL);
1747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART TX FIFO Empty Flag is set or not
1751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ISR          TXFE          LL_LPUART_IsActiveFlag_TXFE
1752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_TXFE(USART_TypeDef *LPUARTx)
1756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_TXFE) == (USART_ISR_TXFE)) ? 1UL : 0UL);
1758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART RX FIFO Full Flag is set or not
1762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ISR          RXFF          LL_LPUART_IsActiveFlag_RXFF
1763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_RXFF(USART_TypeDef *LPUARTx)
1767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_RXFF) == (USART_ISR_RXFF)) ? 1UL : 0UL);
1769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART TX FIFO Threshold Flag is set or not
1773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ISR          TXFT          LL_LPUART_IsActiveFlag_TXFT
1774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_TXFT(USART_TypeDef *LPUARTx)
1778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_TXFT) == (USART_ISR_TXFT)) ? 1UL : 0UL);
1780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART RX FIFO Threshold Flag is set or not
1784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ISR          RXFT          LL_LPUART_IsActiveFlag_RXFT
1785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
1787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsActiveFlag_RXFT(USART_TypeDef *LPUARTx)
1789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->ISR, USART_ISR_RXFT) == (USART_ISR_RXFT)) ? 1UL : 0UL);
1791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Clear Parity Error Flag
1795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ICR          PECF          LL_LPUART_ClearFlag_PE
1796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
ARM GAS  /tmp/ccV1cKci.s 			page 131


1797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_ClearFlag_PE(USART_TypeDef *LPUARTx)
1800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   WRITE_REG(LPUARTx->ICR, USART_ICR_PECF);
1802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Clear Framing Error Flag
1806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ICR          FECF          LL_LPUART_ClearFlag_FE
1807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_ClearFlag_FE(USART_TypeDef *LPUARTx)
1811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   WRITE_REG(LPUARTx->ICR, USART_ICR_FECF);
1813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Clear Noise detected Flag
1817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ICR          NECF          LL_LPUART_ClearFlag_NE
1818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_ClearFlag_NE(USART_TypeDef *LPUARTx)
1822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   WRITE_REG(LPUARTx->ICR, USART_ICR_NECF);
1824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Clear OverRun Error Flag
1828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ICR          ORECF         LL_LPUART_ClearFlag_ORE
1829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_ClearFlag_ORE(USART_TypeDef *LPUARTx)
1833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   WRITE_REG(LPUARTx->ICR, USART_ICR_ORECF);
1835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Clear IDLE line detected Flag
1839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ICR          IDLECF        LL_LPUART_ClearFlag_IDLE
1840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_ClearFlag_IDLE(USART_TypeDef *LPUARTx)
1844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   WRITE_REG(LPUARTx->ICR, USART_ICR_IDLECF);
1846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Clear TX FIFO Empty Flag
1850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ICR          TXFECF        LL_LPUART_ClearFlag_TXFE
1851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
ARM GAS  /tmp/ccV1cKci.s 			page 132


1854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_ClearFlag_TXFE(USART_TypeDef *LPUARTx)
1855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   WRITE_REG(LPUARTx->ICR, USART_ICR_TXFECF);
1857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Clear Transmission Complete Flag
1861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ICR          TCCF          LL_LPUART_ClearFlag_TC
1862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_ClearFlag_TC(USART_TypeDef *LPUARTx)
1866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   WRITE_REG(LPUARTx->ICR, USART_ICR_TCCF);
1868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Clear CTS Interrupt Flag
1872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ICR          CTSCF         LL_LPUART_ClearFlag_nCTS
1873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_ClearFlag_nCTS(USART_TypeDef *LPUARTx)
1877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   WRITE_REG(LPUARTx->ICR, USART_ICR_CTSCF);
1879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Clear Character Match Flag
1883:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ICR          CMCF          LL_LPUART_ClearFlag_CM
1884:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1885:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1886:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1887:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_ClearFlag_CM(USART_TypeDef *LPUARTx)
1888:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1889:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   WRITE_REG(LPUARTx->ICR, USART_ICR_CMCF);
1890:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1891:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1892:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1893:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Clear Wake Up from stop mode Flag
1894:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll ICR          WUCF          LL_LPUART_ClearFlag_WKUP
1895:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1896:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1897:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1898:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_ClearFlag_WKUP(USART_TypeDef *LPUARTx)
1899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1900:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   WRITE_REG(LPUARTx->ICR, USART_ICR_WUCF);
1901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1903:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1904:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
1905:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1906:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1907:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EF_IT_Management IT_Management
1908:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
1909:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1910:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
ARM GAS  /tmp/ccV1cKci.s 			page 133


1911:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Enable IDLE Interrupt
1913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          IDLEIE        LL_LPUART_EnableIT_IDLE
1914:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1915:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1916:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1917:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableIT_IDLE(USART_TypeDef *LPUARTx)
1918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1919:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR1, USART_CR1_IDLEIE);
1920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1921:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /* Legacy define */
1923:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_EnableIT_RXNE  LL_LPUART_EnableIT_RXNE_RXFNE
1924:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1925:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Enable RX Not Empty and RX FIFO Not Empty Interrupt
1927:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1        RXNEIE_RXFNEIE  LL_LPUART_EnableIT_RXNE_RXFNE
1928:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1929:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1931:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableIT_RXNE_RXFNE(USART_TypeDef *LPUARTx)
 848              		.loc 4 1931 22 view .LVU222
 849              	.LBB248:
1932:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1933:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR1, USART_CR1_RXNEIE_RXFNEIE);
 850              		.loc 4 1933 3 view .LVU223
 851 0000 2022     		movs	r2, #32
 852 0002 0D4B     		ldr	r3, .L20
 853              	.LBE248:
 854              	.LBE247:
 855              	.LBB251:
 856              	.LBB252:
 857              		.loc 6 852 52 is_stmt 0 view .LVU224
 858 0004 C720     		movs	r0, #199
 859              	.LBE252:
 860              	.LBE251:
 861              	.LBB255:
 862              	.LBB249:
 863              		.loc 4 1933 3 view .LVU225
 864 0006 1968     		ldr	r1, [r3]
 865              	.LBE249:
 866              	.LBE255:
 867              	.LBB256:
 868              	.LBB253:
 869              		.loc 6 852 52 view .LVU226
 870 0008 8000     		lsls	r0, r0, #2
 871              	.LBE253:
 872              	.LBE256:
 873              	.LBB257:
 874              	.LBB250:
 875              		.loc 4 1933 3 view .LVU227
 876 000a 0A43     		orrs	r2, r1
 877 000c 1A60     		str	r2, [r3]
 878              	.LVL36:
 879              		.loc 4 1933 3 view .LVU228
 880              	.LBE250:
 881              	.LBE257:
ARM GAS  /tmp/ccV1cKci.s 			page 134


 301:Utilities/TRACER_EMB/tracer_emb_hw.c ****   TRACER_EMB_ENABLE_IT_ERROR(TRACER_EMB_USART_INSTANCE);
 882              		.loc 2 301 3 is_stmt 1 view .LVU229
 883              	.LBB258:
 884              	.LBI258:
1934:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1935:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1936:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1937:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Enable Transmission Complete Interrupt
1938:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          TCIE          LL_LPUART_EnableIT_TC
1939:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1940:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1941:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1942:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableIT_TC(USART_TypeDef *LPUARTx)
1943:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR1, USART_CR1_TCIE);
1945:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1946:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1947:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /* Legacy define */
1948:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_EnableIT_TXE  LL_LPUART_EnableIT_TXE_TXFNF
1949:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1950:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1951:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Enable TX Empty and TX FIFO Not Full Interrupt
1952:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1         TXEIE_TXFNFIE  LL_LPUART_EnableIT_TXE_TXFNF
1953:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1954:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1955:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1956:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableIT_TXE_TXFNF(USART_TypeDef *LPUARTx)
1957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1958:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR1, USART_CR1_TXEIE_TXFNFIE);
1959:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1961:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1962:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Enable Parity Error Interrupt
1963:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          PEIE          LL_LPUART_EnableIT_PE
1964:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1965:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1966:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1967:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableIT_PE(USART_TypeDef *LPUARTx)
1968:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1969:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR1, USART_CR1_PEIE);
1970:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1971:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1972:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1973:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Enable Character Match Interrupt
1974:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          CMIE          LL_LPUART_EnableIT_CM
1975:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1976:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1977:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1978:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableIT_CM(USART_TypeDef *LPUARTx)
1979:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1980:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR1, USART_CR1_CMIE);
1981:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1982:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1983:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1984:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Enable TX FIFO Empty Interrupt
1985:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          TXFEIE        LL_LPUART_EnableIT_TXFE
1986:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
ARM GAS  /tmp/ccV1cKci.s 			page 135


1987:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
1989:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableIT_TXFE(USART_TypeDef *LPUARTx)
1990:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
1991:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR1, USART_CR1_TXFEIE);
1992:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
1993:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
1994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
1995:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Enable RX FIFO Full Interrupt
1996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          RXFFIE        LL_LPUART_EnableIT_RXFF
1997:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
1998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
1999:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2000:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableIT_RXFF(USART_TypeDef *LPUARTx)
2001:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR1, USART_CR1_RXFFIE);
2003:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2004:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Enable Error Interrupt
2007:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @note   When set, Error Interrupt Enable Bit is enabling interrupt generation in case of a fram
2008:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         error, overrun error or noise flag (FE=1 or ORE=1 or NF=1 in the LPUARTx_ISR register).
2009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         - 0: Interrupt is inhibited
2010:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         - 1: An interrupt is generated when FE=1 or ORE=1 or NF=1 in the LPUARTx_ISR register.
2011:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          EIE           LL_LPUART_EnableIT_ERROR
2012:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2013:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
2014:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2015:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableIT_ERROR(USART_TypeDef *LPUARTx)
 885              		.loc 4 2015 22 view .LVU230
 886              	.LBB259:
2016:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2017:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR3, USART_CR3_EIE);
 887              		.loc 4 2017 3 view .LVU231
 888 000e 0122     		movs	r2, #1
 889 0010 9968     		ldr	r1, [r3, #8]
 890              	.LBE259:
 891              	.LBE258:
 302:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 303:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* Enable RX/TX */
 304:Utilities/TRACER_EMB/tracer_emb_hw.c ****   TRACER_EMB_ENABLEDIRECTIONRX(TRACER_EMB_USART_INSTANCE);
 305:Utilities/TRACER_EMB/tracer_emb_hw.c ****   
 306:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* Configure the interrupt for RX */
 307:Utilities/TRACER_EMB/tracer_emb_hw.c ****   NVIC_SetPriority(TRACER_EMB_USART_IRQ, 3);
 308:Utilities/TRACER_EMB/tracer_emb_hw.c ****   NVIC_EnableIRQ(TRACER_EMB_USART_IRQ);
 309:Utilities/TRACER_EMB/tracer_emb_hw.c **** }
 892              		.loc 2 309 1 is_stmt 0 view .LVU232
 893              		@ sp needed
 894              	.LBB261:
 895              	.LBB260:
 896              		.loc 4 2017 3 view .LVU233
 897 0012 0A43     		orrs	r2, r1
 898 0014 9A60     		str	r2, [r3, #8]
 899              	.LVL37:
 900              		.loc 4 2017 3 view .LVU234
 901              	.LBE260:
 902              	.LBE261:
ARM GAS  /tmp/ccV1cKci.s 			page 136


 304:Utilities/TRACER_EMB/tracer_emb_hw.c ****   
 903              		.loc 2 304 3 is_stmt 1 view .LVU235
 904              	.LBB262:
 905              	.LBI262:
 678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 906              		.loc 4 678 22 view .LVU236
 907              	.LBB263:
 680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 908              		.loc 4 680 3 view .LVU237
 909 0016 0422     		movs	r2, #4
 910 0018 1968     		ldr	r1, [r3]
 911 001a 0A43     		orrs	r2, r1
 912 001c 1A60     		str	r2, [r3]
 913              	.LVL38:
 680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 914              		.loc 4 680 3 is_stmt 0 view .LVU238
 915              	.LBE263:
 916              	.LBE262:
 307:Utilities/TRACER_EMB/tracer_emb_hw.c ****   NVIC_EnableIRQ(TRACER_EMB_USART_IRQ);
 917              		.loc 2 307 3 is_stmt 1 view .LVU239
 918              	.LBB264:
 919              	.LBI251:
 848:Drivers/CMSIS/Include/core_cm0plus.h **** {
 920              		.loc 6 848 22 view .LVU240
 921              	.LBB254:
 850:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 922              		.loc 6 850 3 view .LVU241
 923              		.loc 6 852 5 view .LVU242
 924              		.loc 6 852 52 is_stmt 0 view .LVU243
 925 001e 074B     		ldr	r3, .L20+4
 926              		.loc 6 852 33 view .LVU244
 927 0020 0749     		ldr	r1, .L20+8
 928              		.loc 6 852 52 view .LVU245
 929 0022 1A58     		ldr	r2, [r3, r0]
 930              		.loc 6 852 33 view .LVU246
 931 0024 1140     		ands	r1, r2
 932              		.loc 6 852 102 view .LVU247
 933 0026 C022     		movs	r2, #192
 934 0028 1202     		lsls	r2, r2, #8
 935 002a 0A43     		orrs	r2, r1
 936              		.loc 6 852 30 view .LVU248
 937 002c 1A50     		str	r2, [r3, r0]
 938              	.LVL39:
 939              		.loc 6 852 30 view .LVU249
 940              	.LBE254:
 941              	.LBE264:
 308:Utilities/TRACER_EMB/tracer_emb_hw.c **** }
 942              		.loc 2 308 3 is_stmt 1 view .LVU250
 943              	.LBB265:
 944              	.LBI265:
 741:Drivers/CMSIS/Include/core_cm0plus.h **** {
 945              		.loc 6 741 22 view .LVU251
 946              	.LBB266:
 743:Drivers/CMSIS/Include/core_cm0plus.h ****   {
 947              		.loc 6 743 3 view .LVU252
 745:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 948              		.loc 6 745 5 view .LVU253
ARM GAS  /tmp/ccV1cKci.s 			page 137


 745:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 949              		.loc 6 745 20 is_stmt 0 view .LVU254
 950 002e 8022     		movs	r2, #128
 951 0030 9205     		lsls	r2, r2, #22
 952 0032 1A60     		str	r2, [r3]
 953              	.LVL40:
 745:Drivers/CMSIS/Include/core_cm0plus.h ****   }
 954              		.loc 6 745 20 view .LVU255
 955              	.LBE266:
 956              	.LBE265:
 957              		.loc 2 309 1 view .LVU256
 958 0034 7047     		bx	lr
 959              	.L21:
 960 0036 C046     		.align	2
 961              	.L20:
 962 0038 00800040 		.word	1073774592
 963 003c 00E100E0 		.word	-536813312
 964 0040 FF00FFFF 		.word	-65281
 965              		.cfi_endproc
 966              	.LFE910:
 968              		.section	.text.HW_TRACER_EMB_IRQHandlerDMA,"ax",%progbits
 969              		.align	1
 970              		.global	HW_TRACER_EMB_IRQHandlerDMA
 971              		.syntax unified
 972              		.code	16
 973              		.thumb_func
 974              		.fpu softvfp
 976              	HW_TRACER_EMB_IRQHandlerDMA:
 977              	.LFB911:
 310:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 311:Utilities/TRACER_EMB/tracer_emb_hw.c **** #if TRACER_EMB_DMA_MODE == 1UL
 312:Utilities/TRACER_EMB/tracer_emb_hw.c **** /**
 313:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * @brief  Function to handle reception in DMA mode
 314:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * @retval none
 315:Utilities/TRACER_EMB/tracer_emb_hw.c ****   */
 316:Utilities/TRACER_EMB/tracer_emb_hw.c **** void HW_TRACER_EMB_IRQHandlerDMA(void)
 317:Utilities/TRACER_EMB/tracer_emb_hw.c **** {
 978              		.loc 2 317 1 is_stmt 1 view -0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 0
 981              		@ frame_needed = 0, uses_anonymous_args = 0
 982              		@ link register save eliminated.
 318:Utilities/TRACER_EMB/tracer_emb_hw.c ****   if (1UL == TRACER_EMB_TX_DMA_ACTIVE_FLAG(TRACER_EMB_DMA_INSTANCE))
 983              		.loc 2 318 3 view .LVU258
 984              	.LBB273:
 985              	.LBI273:
1437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 986              		.loc 5 1437 26 view .LVU259
 987              	.LVL41:
 988              	.LBB274:
1439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 989              		.loc 5 1439 3 view .LVU260
1439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 990              		.loc 5 1439 12 is_stmt 0 view .LVU261
 991 0000 064A     		ldr	r2, .L27
 992 0002 1368     		ldr	r3, [r2]
1439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
ARM GAS  /tmp/ccV1cKci.s 			page 138


 993              		.loc 5 1439 73 view .LVU262
 994 0004 9B04     		lsls	r3, r3, #18
 995 0006 07D5     		bpl	.L22
 996              	.LVL42:
1439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 997              		.loc 5 1439 73 view .LVU263
 998              	.LBE274:
 999              	.LBE273:
 319:Utilities/TRACER_EMB/tracer_emb_hw.c ****   {
 320:Utilities/TRACER_EMB/tracer_emb_hw.c ****     TRACER_EMB_ENABLE_IT_TC(TRACER_EMB_USART_INSTANCE);
 1000              		.loc 2 320 5 is_stmt 1 view .LVU264
 1001              	.LBB275:
 1002              	.LBI275:
1942:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 1003              		.loc 4 1942 22 view .LVU265
 1004              	.LBB276:
1944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1005              		.loc 4 1944 3 view .LVU266
 1006 0008 4023     		movs	r3, #64
 1007 000a 0549     		ldr	r1, .L27+4
 1008 000c 0868     		ldr	r0, [r1]
 1009 000e 0343     		orrs	r3, r0
 1010 0010 0B60     		str	r3, [r1]
 1011              	.LVL43:
1944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1012              		.loc 4 1944 3 is_stmt 0 view .LVU267
 1013              	.LBE276:
 1014              	.LBE275:
 321:Utilities/TRACER_EMB/tracer_emb_hw.c ****     TRACER_EMB_TX_DMA_CLEAR_FLAG(TRACER_EMB_DMA_INSTANCE);
 1015              		.loc 2 321 5 is_stmt 1 view .LVU268
 1016              	.LBB277:
 1017              	.LBI277:
1668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 1018              		.loc 5 1668 22 view .LVU269
 1019              	.LBB278:
1670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 1020              		.loc 5 1670 3 view .LVU270
 1021 0012 8023     		movs	r3, #128
 1022 0014 5B01     		lsls	r3, r3, #5
 1023 0016 5360     		str	r3, [r2, #4]
 1024              	.LVL44:
 1025              	.L22:
1670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 1026              		.loc 5 1670 3 is_stmt 0 view .LVU271
 1027              	.LBE278:
 1028              	.LBE277:
 322:Utilities/TRACER_EMB/tracer_emb_hw.c ****   }
 323:Utilities/TRACER_EMB/tracer_emb_hw.c **** }
 1029              		.loc 2 323 1 view .LVU272
 1030              		@ sp needed
 1031 0018 7047     		bx	lr
 1032              	.L28:
 1033 001a C046     		.align	2
 1034              	.L27:
 1035 001c 00000240 		.word	1073872896
 1036 0020 00800040 		.word	1073774592
 1037              		.cfi_endproc
ARM GAS  /tmp/ccV1cKci.s 			page 139


 1038              	.LFE911:
 1040              		.section	.text.HW_TRACER_EMB_IRQHandlerUSART,"ax",%progbits
 1041              		.align	1
 1042              		.global	HW_TRACER_EMB_IRQHandlerUSART
 1043              		.syntax unified
 1044              		.code	16
 1045              		.thumb_func
 1046              		.fpu softvfp
 1048              	HW_TRACER_EMB_IRQHandlerUSART:
 1049              	.LFB912:
 324:Utilities/TRACER_EMB/tracer_emb_hw.c **** #endif
 325:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 326:Utilities/TRACER_EMB/tracer_emb_hw.c **** /**
 327:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * @brief  USART/LPUART IRQ Handler
 328:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * @retval none
 329:Utilities/TRACER_EMB/tracer_emb_hw.c ****   */
 330:Utilities/TRACER_EMB/tracer_emb_hw.c **** void HW_TRACER_EMB_IRQHandlerUSART(void)
 331:Utilities/TRACER_EMB/tracer_emb_hw.c **** {
 1050              		.loc 2 331 1 is_stmt 1 view -0
 1051              		.cfi_startproc
 1052              		@ args = 0, pretend = 0, frame = 8
 1053              		@ frame_needed = 0, uses_anonymous_args = 0
 332:Utilities/TRACER_EMB/tracer_emb_hw.c ****   uint32_t _temp1, _temp2;
 1054              		.loc 2 332 3 view .LVU274
 333:Utilities/TRACER_EMB/tracer_emb_hw.c ****   uint8_t _error = 0u;
 1055              		.loc 2 333 3 view .LVU275
 1056              	.LVL45:
 334:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 335:Utilities/TRACER_EMB/tracer_emb_hw.c **** #if TRACER_EMB_IT_MODE == 1UL
 336:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* Ready to handle Tx interrupt */
 337:Utilities/TRACER_EMB/tracer_emb_hw.c ****   _temp1 = TRACER_EMB_ISACTIVEFLAG_TXE(TRACER_EMB_USART_INSTANCE);
 338:Utilities/TRACER_EMB/tracer_emb_hw.c ****   _temp2 = TRACER_EMB_ISENABLEDIT_TXE(TRACER_EMB_USART_INSTANCE);
 339:Utilities/TRACER_EMB/tracer_emb_hw.c ****   if ((1UL == _temp1) && (1UL == _temp2))
 340:Utilities/TRACER_EMB/tracer_emb_hw.c ****   {
 341:Utilities/TRACER_EMB/tracer_emb_hw.c ****     __IO uint32_t received_char;
 342:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 343:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /* Write data inside the data register */
 344:Utilities/TRACER_EMB/tracer_emb_hw.c ****     TRACER_EMB_TRANSMIT_DATA8(TRACER_EMB_USART_INSTANCE, *txData);
 345:Utilities/TRACER_EMB/tracer_emb_hw.c ****     txData++;
 346:Utilities/TRACER_EMB/tracer_emb_hw.c ****     txSize--;
 347:Utilities/TRACER_EMB/tracer_emb_hw.c ****     if (txSize == 0)
 348:Utilities/TRACER_EMB/tracer_emb_hw.c ****     {
 349:Utilities/TRACER_EMB/tracer_emb_hw.c ****       TRACER_EMB_DISABLEIT_TXE(TRACER_EMB_USART_INSTANCE);
 350:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 351:Utilities/TRACER_EMB/tracer_emb_hw.c ****       if(NULL == fptr_rx)
 352:Utilities/TRACER_EMB/tracer_emb_hw.c ****       {
 353:Utilities/TRACER_EMB/tracer_emb_hw.c ****         TRACER_EMB_DISABLE_CLK_USART();
 354:Utilities/TRACER_EMB/tracer_emb_hw.c ****       }
 355:Utilities/TRACER_EMB/tracer_emb_hw.c ****       
 356:Utilities/TRACER_EMB/tracer_emb_hw.c ****       TRACER_EMB_CALLBACK_TX();
 357:Utilities/TRACER_EMB/tracer_emb_hw.c ****     }
 358:Utilities/TRACER_EMB/tracer_emb_hw.c ****   }
 359:Utilities/TRACER_EMB/tracer_emb_hw.c **** #endif
 360:Utilities/TRACER_EMB/tracer_emb_hw.c ****   
 361:Utilities/TRACER_EMB/tracer_emb_hw.c **** #if  (TRACER_EMB_DMA_MODE == 1UL)
 362:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* Ready to handle TC interrupt */
 363:Utilities/TRACER_EMB/tracer_emb_hw.c ****   _temp1 = TRACER_EMB_ISACTIVEFLAG_TC(TRACER_EMB_USART_INSTANCE);
ARM GAS  /tmp/ccV1cKci.s 			page 140


 1057              		.loc 2 363 3 view .LVU276
 1058              	.LBB318:
 1059              	.LBI318:
1631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 1060              		.loc 4 1631 26 view .LVU277
 1061              	.LBB319:
1633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1062              		.loc 4 1633 3 view .LVU278
 1063              	.LBE319:
 1064              	.LBE318:
 1065              	.LBB321:
 1066              	.LBB322:
2018:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2019:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2020:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2021:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Enable CTS Interrupt
2022:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          CTSIE         LL_LPUART_EnableIT_CTS
2023:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2024:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
2025:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2026:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableIT_CTS(USART_TypeDef *LPUARTx)
2027:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2028:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR3, USART_CR3_CTSIE);
2029:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2030:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2031:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2032:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Enable Wake Up from Stop Mode Interrupt
2033:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          WUFIE         LL_LPUART_EnableIT_WKUP
2034:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
2036:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableIT_WKUP(USART_TypeDef *LPUARTx)
2038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2039:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR3, USART_CR3_WUFIE);
2040:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2041:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2042:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2043:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Enable TX FIFO Threshold Interrupt
2044:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          TXFTIE        LL_LPUART_EnableIT_TXFT
2045:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2046:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
2047:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2048:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableIT_TXFT(USART_TypeDef *LPUARTx)
2049:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2050:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR3, USART_CR3_TXFTIE);
2051:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2052:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2053:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2054:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Enable RX FIFO Threshold Interrupt
2055:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          RXFTIE        LL_LPUART_EnableIT_RXFT
2056:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2057:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
2058:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2059:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableIT_RXFT(USART_TypeDef *LPUARTx)
2060:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2061:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR3, USART_CR3_RXFTIE);
2062:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
ARM GAS  /tmp/ccV1cKci.s 			page 141


2063:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2064:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2065:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Disable IDLE Interrupt
2066:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          IDLEIE        LL_LPUART_DisableIT_IDLE
2067:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2068:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
2069:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2070:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableIT_IDLE(USART_TypeDef *LPUARTx)
2071:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2072:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR1, USART_CR1_IDLEIE);
2073:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2074:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2075:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /* Legacy define */
2076:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_DisableIT_RXNE  LL_LPUART_DisableIT_RXNE_RXFNE
2077:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2078:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2079:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Disable RX Not Empty and RX FIFO Not Empty Interrupt
2080:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1        RXNEIE_RXFNEIE  LL_LPUART_DisableIT_RXNE_RXFNE
2081:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2082:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
2083:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2084:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableIT_RXNE_RXFNE(USART_TypeDef *LPUARTx)
2085:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR1, USART_CR1_RXNEIE_RXFNEIE);
2087:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2090:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Disable Transmission Complete Interrupt
2091:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          TCIE          LL_LPUART_DisableIT_TC
2092:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2093:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
2094:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2095:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableIT_TC(USART_TypeDef *LPUARTx)
2096:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR1, USART_CR1_TCIE);
2098:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2099:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /* Legacy define */
2101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_DisableIT_TXE  LL_LPUART_DisableIT_TXE_TXFNF
2102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Disable TX Empty and TX FIFO Not Full Interrupt
2105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1        TXEIE_TXFNFIE  LL_LPUART_DisableIT_TXE_TXFNF
2106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
2108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableIT_TXE_TXFNF(USART_TypeDef *LPUARTx)
2110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR1, USART_CR1_TXEIE_TXFNFIE);
2112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Disable Parity Error Interrupt
2116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          PEIE          LL_LPUART_DisableIT_PE
2117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
2119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
ARM GAS  /tmp/ccV1cKci.s 			page 142


2120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableIT_PE(USART_TypeDef *LPUARTx)
2121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR1, USART_CR1_PEIE);
2123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Disable Character Match Interrupt
2127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          CMIE          LL_LPUART_DisableIT_CM
2128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
2130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableIT_CM(USART_TypeDef *LPUARTx)
2132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR1, USART_CR1_CMIE);
2134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Disable TX FIFO Empty Interrupt
2138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          TXFEIE        LL_LPUART_DisableIT_TXFE
2139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
2141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableIT_TXFE(USART_TypeDef *LPUARTx)
2143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR1, USART_CR1_TXFEIE);
2145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Disable RX FIFO Full Interrupt
2149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          RXFFIE        LL_LPUART_DisableIT_RXFF
2150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
2152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableIT_RXFF(USART_TypeDef *LPUARTx)
2154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR1, USART_CR1_RXFFIE);
2156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Disable Error Interrupt
2160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @note   When set, Error Interrupt Enable Bit is enabling interrupt generation in case of a fram
2161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         error, overrun error or noise flag (FE=1 or ORE=1 or NF=1 in the LPUARTx_ISR register).
2162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         - 0: Interrupt is inhibited
2163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         - 1: An interrupt is generated when FE=1 or ORE=1 or NF=1 in the LPUARTx_ISR register.
2164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          EIE           LL_LPUART_DisableIT_ERROR
2165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
2167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableIT_ERROR(USART_TypeDef *LPUARTx)
2169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR3, USART_CR3_EIE);
2171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Disable CTS Interrupt
2175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          CTSIE         LL_LPUART_DisableIT_CTS
2176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
ARM GAS  /tmp/ccV1cKci.s 			page 143


2177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
2178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableIT_CTS(USART_TypeDef *LPUARTx)
2180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR3, USART_CR3_CTSIE);
2182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Disable Wake Up from Stop Mode Interrupt
2186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          WUFIE         LL_LPUART_DisableIT_WKUP
2187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
2189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableIT_WKUP(USART_TypeDef *LPUARTx)
2191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR3, USART_CR3_WUFIE);
2193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Disable TX FIFO Threshold Interrupt
2197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          TXFTIE        LL_LPUART_DisableIT_TXFT
2198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
2200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableIT_TXFT(USART_TypeDef *LPUARTx)
2202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR3, USART_CR3_TXFTIE);
2204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Disable RX FIFO Threshold Interrupt
2208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          RXFTIE        LL_LPUART_DisableIT_RXFT
2209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
2211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableIT_RXFT(USART_TypeDef *LPUARTx)
2213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR3, USART_CR3_RXFTIE);
2215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART IDLE Interrupt  source is enabled or disabled.
2219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          IDLEIE        LL_LPUART_IsEnabledIT_IDLE
2220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
2222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledIT_IDLE(USART_TypeDef *LPUARTx)
2224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR1, USART_CR1_IDLEIE) == (USART_CR1_IDLEIE)) ? 1UL : 0UL);
2226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /* Legacy define */
2229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_IsEnabledIT_RXNE  LL_LPUART_IsEnabledIT_RXNE_RXFNE
2230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART RX Not Empty and LPUART RX FIFO Not Empty Interrupt is enabled or d
2233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1        RXNEIE_RXFNEIE  LL_LPUART_IsEnabledIT_RXNE_RXFNE
ARM GAS  /tmp/ccV1cKci.s 			page 144


2234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
2236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledIT_RXNE_RXFNE(USART_TypeDef *LPUARTx)
2238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR1, USART_CR1_RXNEIE_RXFNEIE) == (USART_CR1_RXNEIE_RXFNEIE)) ? 1UL : 
2240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Transmission Complete Interrupt is enabled or disabled.
2244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          TCIE          LL_LPUART_IsEnabledIT_TC
2245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
2247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledIT_TC(USART_TypeDef *LPUARTx)
2249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR1, USART_CR1_TCIE) == (USART_CR1_TCIE)) ? 1UL : 0UL);
 1067              		.loc 4 2250 12 is_stmt 0 view .LVU279
 1068 0000 4023     		movs	r3, #64
 1069              	.LBE322:
 1070              	.LBE321:
 331:Utilities/TRACER_EMB/tracer_emb_hw.c ****   uint32_t _temp1, _temp2;
 1071              		.loc 2 331 1 view .LVU280
 1072 0002 13B5     		push	{r0, r1, r4, lr}
 1073              	.LCFI4:
 1074              		.cfi_def_cfa_offset 16
 1075              		.cfi_offset 0, -16
 1076              		.cfi_offset 1, -12
 1077              		.cfi_offset 4, -8
 1078              		.cfi_offset 14, -4
 1079              	.LBB324:
 1080              	.LBB320:
1633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1081              		.loc 4 1633 12 view .LVU281
 1082 0004 2F4C     		ldr	r4, .L68
 1083 0006 E269     		ldr	r2, [r4, #28]
 1084              	.LVL46:
1633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1085              		.loc 4 1633 12 view .LVU282
 1086              	.LBE320:
 1087              	.LBE324:
 364:Utilities/TRACER_EMB/tracer_emb_hw.c ****   _temp2 = TRACER_EMB_ISENABLEDIT_TC(TRACER_EMB_USART_INSTANCE);
 1088              		.loc 2 364 3 is_stmt 1 view .LVU283
 1089              	.LBB325:
 1090              	.LBI321:
2248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 1091              		.loc 4 2248 26 view .LVU284
 1092              	.LBB323:
 1093              		.loc 4 2250 3 view .LVU285
 1094              		.loc 4 2250 12 is_stmt 0 view .LVU286
 1095 0008 2168     		ldr	r1, [r4]
 1096              		.loc 4 2250 78 view .LVU287
 1097 000a 1942     		tst	r1, r3
 1098 000c 43D1     		bne	.L30
 1099              	.LVL47:
 1100              	.L31:
 1101              		.loc 4 2250 78 view .LVU288
ARM GAS  /tmp/ccV1cKci.s 			page 145


 1102              	.LBE323:
 1103              	.LBE325:
 365:Utilities/TRACER_EMB/tracer_emb_hw.c ****   if ((1UL == _temp1) && (1UL == _temp2))
 366:Utilities/TRACER_EMB/tracer_emb_hw.c ****   {
 367:Utilities/TRACER_EMB/tracer_emb_hw.c ****     TRACER_EMB_DISABLEIT_TC(TRACER_EMB_USART_INSTANCE);
 368:Utilities/TRACER_EMB/tracer_emb_hw.c ****     TRACER_EMB_CLEARFLAG_TC(TRACER_EMB_USART_INSTANCE);
 369:Utilities/TRACER_EMB/tracer_emb_hw.c ****     LL_DMA_DisableChannel(TRACER_EMB_DMA_INSTANCE, TRACER_EMB_TX_DMA_CHANNEL);
 370:Utilities/TRACER_EMB/tracer_emb_hw.c ****     if(NULL == fptr_rx)
 371:Utilities/TRACER_EMB/tracer_emb_hw.c ****     {
 372:Utilities/TRACER_EMB/tracer_emb_hw.c ****       TRACER_EMB_DISABLE_CLK_USART();
 373:Utilities/TRACER_EMB/tracer_emb_hw.c ****     }
 374:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /* call the callback */
 375:Utilities/TRACER_EMB/tracer_emb_hw.c ****     TRACER_EMB_CALLBACK_TX();
 376:Utilities/TRACER_EMB/tracer_emb_hw.c ****   }
 377:Utilities/TRACER_EMB/tracer_emb_hw.c **** #endif
 378:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 379:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* Ready to read reception*/
 380:Utilities/TRACER_EMB/tracer_emb_hw.c ****   _temp1 = TRACER_EMB_ISACTIVEFLAG_RXNE(TRACER_EMB_USART_INSTANCE);
 1104              		.loc 2 380 3 is_stmt 1 view .LVU289
 1105              	.LBB326:
 1106              	.LBI326:
1620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 1107              		.loc 4 1620 26 view .LVU290
 1108              	.LBB327:
1622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1109              		.loc 4 1622 3 view .LVU291
 1110              	.LBE327:
 1111              	.LBE326:
 1112              	.LBB329:
 1113              	.LBB330:
2239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1114              		.loc 4 2239 12 is_stmt 0 view .LVU292
 1115 000e 2023     		movs	r3, #32
 1116              	.LBE330:
 1117              	.LBE329:
 1118              	.LBB332:
 1119              	.LBB328:
1622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1120              		.loc 4 1622 12 view .LVU293
 1121 0010 E269     		ldr	r2, [r4, #28]
 1122              	.LVL48:
1622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1123              		.loc 4 1622 12 view .LVU294
 1124              	.LBE328:
 1125              	.LBE332:
 381:Utilities/TRACER_EMB/tracer_emb_hw.c ****   _temp2 = TRACER_EMB_ISENABLEDIT_RXNE(TRACER_EMB_USART_INSTANCE);
 1126              		.loc 2 381 3 is_stmt 1 view .LVU295
 1127              	.LBB333:
 1128              	.LBI329:
2237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 1129              		.loc 4 2237 26 view .LVU296
 1130              	.LBB331:
2239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1131              		.loc 4 2239 3 view .LVU297
2239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1132              		.loc 4 2239 12 is_stmt 0 view .LVU298
 1133 0012 2168     		ldr	r1, [r4]
ARM GAS  /tmp/ccV1cKci.s 			page 146


2239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1134              		.loc 4 2239 98 view .LVU299
 1135 0014 1942     		tst	r1, r3
 1136 0016 30D1     		bne	.L33
 1137              	.LVL49:
 1138              	.L34:
2239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1139              		.loc 4 2239 98 view .LVU300
 1140              	.LBE331:
 1141              	.LBE333:
 382:Utilities/TRACER_EMB/tracer_emb_hw.c ****   if ((1UL == _temp1) && (1UL == _temp2))
 383:Utilities/TRACER_EMB/tracer_emb_hw.c ****   {
 384:Utilities/TRACER_EMB/tracer_emb_hw.c ****     __IO uint32_t received_char;
 385:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 386:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /* Read Received character. RXNE flag is cleared by reading of RDR register */
 387:Utilities/TRACER_EMB/tracer_emb_hw.c ****     received_char = TRACER_EMB_RECEIVE_DATA8(TRACER_EMB_USART_INSTANCE);
 388:Utilities/TRACER_EMB/tracer_emb_hw.c ****     if (fptr_rx != NULL)
 389:Utilities/TRACER_EMB/tracer_emb_hw.c ****     {
 390:Utilities/TRACER_EMB/tracer_emb_hw.c ****       fptr_rx(received_char, 0);
 391:Utilities/TRACER_EMB/tracer_emb_hw.c ****     }
 392:Utilities/TRACER_EMB/tracer_emb_hw.c ****   }
 393:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 394:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* Parity error    */
 395:Utilities/TRACER_EMB/tracer_emb_hw.c ****   _temp1 = TRACER_EMB_ISACTIVEFLAG_PE(TRACER_EMB_USART_INSTANCE);
 1142              		.loc 2 395 3 is_stmt 1 view .LVU301
 1143              	.LBB334:
 1144              	.LBI334:
1562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 1145              		.loc 4 1562 26 view .LVU302
 1146              	.LBB335:
1564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1147              		.loc 4 1564 3 view .LVU303
1564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1148              		.loc 4 1564 12 is_stmt 0 view .LVU304
 1149 0018 E269     		ldr	r2, [r4, #28]
 1150              	.LVL50:
1564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1151              		.loc 4 1564 12 view .LVU305
 1152              	.LBE335:
 1153              	.LBE334:
 396:Utilities/TRACER_EMB/tracer_emb_hw.c ****   _temp2 = TRACER_EMB_ISENABLEDIT_PE(TRACER_EMB_USART_INSTANCE);
 1154              		.loc 2 396 3 is_stmt 1 view .LVU306
 1155              	.LBB337:
 1156              	.LBI337:
2251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /* Legacy define */
2254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** #define LL_LPUART_IsEnabledIT_TXE  LL_LPUART_IsEnabledIT_TXE_TXFNF
2255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART TX Empty and LPUART TX FIFO Not Full Interrupt is enabled or disabl
2258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1         TXEIE_TXFNFIE  LL_LPUART_IsEnabledIT_TXE_TXFNF
2259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
2261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledIT_TXE_TXFNF(USART_TypeDef *LPUARTx)
2263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
ARM GAS  /tmp/ccV1cKci.s 			page 147


2264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR1, USART_CR1_TXEIE_TXFNFIE) == (USART_CR1_TXEIE_TXFNFIE)) ? 1UL : 0U
2265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Parity Error Interrupt is enabled or disabled.
2269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          PEIE          LL_LPUART_IsEnabledIT_PE
2270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
2272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledIT_PE(USART_TypeDef *LPUARTx)
 1157              		.loc 4 2273 26 view .LVU307
 1158              	.LBB338:
2274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR1, USART_CR1_PEIE) == (USART_CR1_PEIE)) ? 1UL : 0UL);
 1159              		.loc 4 2275 3 view .LVU308
 1160              		.loc 4 2275 12 is_stmt 0 view .LVU309
 1161 001a 2068     		ldr	r0, [r4]
 1162 001c 8021     		movs	r1, #128
 1163 001e 0300     		movs	r3, r0
 1164 0020 4900     		lsls	r1, r1, #1
 1165 0022 0B40     		ands	r3, r1
 1166              		.loc 4 2275 78 view .LVU310
 1167 0024 0842     		tst	r0, r1
 1168 0026 21D1     		bne	.L36
 1169              	.LVL51:
 1170              	.L37:
 1171              		.loc 4 2275 78 view .LVU311
 1172              	.LBE338:
 1173              	.LBE337:
 397:Utilities/TRACER_EMB/tracer_emb_hw.c ****   if ((1UL == _temp1) && (1UL == _temp2))
 398:Utilities/TRACER_EMB/tracer_emb_hw.c ****   {
 399:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /* Flags clearing */
 400:Utilities/TRACER_EMB/tracer_emb_hw.c ****     TRACER_EMB_CLEARFLAG_PE(TRACER_EMB_USART_INSTANCE);
 401:Utilities/TRACER_EMB/tracer_emb_hw.c ****     _error = 1;
 402:Utilities/TRACER_EMB/tracer_emb_hw.c ****   }
 403:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 404:Utilities/TRACER_EMB/tracer_emb_hw.c **** #if (TRACER_EMB_IS_INSTANCE_LPUART_TYPE == 0UL)
 405:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* Receiver timeout*/
 406:Utilities/TRACER_EMB/tracer_emb_hw.c ****   _temp1 = TRACER_EMB_ISACTIVEFLAG_RTO(TRACER_EMB_USART_INSTANCE);
 407:Utilities/TRACER_EMB/tracer_emb_hw.c ****   _temp2 = TRACER_EMB_ISENABLEDIT_RTO(TRACER_EMB_USART_INSTANCE);
 408:Utilities/TRACER_EMB/tracer_emb_hw.c ****   if ((1u == _temp1) && (1u == _temp2))
 409:Utilities/TRACER_EMB/tracer_emb_hw.c ****   {
 410:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /* Flags clearing */
 411:Utilities/TRACER_EMB/tracer_emb_hw.c ****     TRACER_EMB_CLEARFLAG_RTO(TRACER_EMB_USART_INSTANCE);
 412:Utilities/TRACER_EMB/tracer_emb_hw.c ****     _error = 1;
 413:Utilities/TRACER_EMB/tracer_emb_hw.c ****   }
 414:Utilities/TRACER_EMB/tracer_emb_hw.c **** #endif
 415:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 416:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* Generic Errors*/
 417:Utilities/TRACER_EMB/tracer_emb_hw.c ****   _temp1 = TRACER_EMB_ISENABLEDIT_ERROR(TRACER_EMB_USART_INSTANCE);
 1174              		.loc 2 417 3 is_stmt 1 view .LVU312
 1175              	.LBB339:
 1176              	.LBI339:
2276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Character Match Interrupt is enabled or disabled.
ARM GAS  /tmp/ccV1cKci.s 			page 148


2280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          CMIE          LL_LPUART_IsEnabledIT_CM
2281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
2283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledIT_CM(USART_TypeDef *LPUARTx)
2285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR1, USART_CR1_CMIE) == (USART_CR1_CMIE)) ? 1UL : 0UL);
2287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART TX FIFO Empty Interrupt is enabled or disabled
2291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          TXFEIE        LL_LPUART_IsEnabledIT_TXFE
2292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
2294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledIT_TXFE(USART_TypeDef *LPUARTx)
2296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR1, USART_CR1_TXFEIE) == (USART_CR1_TXFEIE)) ? 1UL : 0UL);
2298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART RX FIFO Full Interrupt is enabled or disabled
2302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR1          RXFFIE        LL_LPUART_IsEnabledIT_RXFF
2303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
2305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledIT_RXFF(USART_TypeDef *LPUARTx)
2307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR1, USART_CR1_RXFFIE) == (USART_CR1_RXFFIE)) ? 1UL : 0UL);
2309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Error Interrupt is enabled or disabled.
2313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          EIE           LL_LPUART_IsEnabledIT_ERROR
2314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
2316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledIT_ERROR(USART_TypeDef *LPUARTx)
 1177              		.loc 4 2317 26 view .LVU313
 1178              	.LBB340:
2318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR3, USART_CR3_EIE) == (USART_CR3_EIE)) ? 1UL : 0UL);
 1179              		.loc 4 2319 3 view .LVU314
 1180              		.loc 4 2319 12 is_stmt 0 view .LVU315
 1181 0028 0122     		movs	r2, #1
 1182              	.LVL52:
 1183              		.loc 4 2319 12 view .LVU316
 1184 002a A168     		ldr	r1, [r4, #8]
 1185              	.LVL53:
 1186              		.loc 4 2319 12 view .LVU317
 1187              	.LBE340:
 1188              	.LBE339:
 418:Utilities/TRACER_EMB/tracer_emb_hw.c ****   if (1u == _temp1)
 1189              		.loc 2 418 3 is_stmt 1 view .LVU318
 1190              		.loc 2 418 6 is_stmt 0 view .LVU319
 1191 002c 1142     		tst	r1, r2
 1192 002e 1AD0     		beq	.L38
ARM GAS  /tmp/ccV1cKci.s 			page 149


 419:Utilities/TRACER_EMB/tracer_emb_hw.c ****   {
 420:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /* Framing error   */
 421:Utilities/TRACER_EMB/tracer_emb_hw.c ****     _temp2 = TRACER_EMB_ISACTIVEFLAG_FE(TRACER_EMB_USART_INSTANCE);
 1193              		.loc 2 421 5 is_stmt 1 view .LVU320
 1194              	.LBB341:
 1195              	.LBI341:
1573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 1196              		.loc 4 1573 26 view .LVU321
 1197              	.LVL54:
 1198              	.LBB342:
1575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1199              		.loc 4 1575 3 view .LVU322
1575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1200              		.loc 4 1575 12 is_stmt 0 view .LVU323
 1201 0030 0221     		movs	r1, #2
 1202              	.LVL55:
1575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1203              		.loc 4 1575 12 view .LVU324
 1204 0032 E069     		ldr	r0, [r4, #28]
1575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1205              		.loc 4 1575 74 view .LVU325
 1206 0034 0842     		tst	r0, r1
 1207 0036 01D0     		beq	.L39
 1208              	.LVL56:
1575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1209              		.loc 4 1575 74 view .LVU326
 1210              	.LBE342:
 1211              	.LBE341:
 422:Utilities/TRACER_EMB/tracer_emb_hw.c ****     if (1u == _temp2)
 1212              		.loc 2 422 5 is_stmt 1 view .LVU327
 423:Utilities/TRACER_EMB/tracer_emb_hw.c ****     {
 424:Utilities/TRACER_EMB/tracer_emb_hw.c ****       /* Flags clearing */
 425:Utilities/TRACER_EMB/tracer_emb_hw.c ****       TRACER_EMB_CLEARFLAG_FE(TRACER_EMB_USART_INSTANCE);
 1213              		.loc 2 425 7 view .LVU328
 1214              	.LBB343:
 1215              	.LBI343:
1810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 1216              		.loc 4 1810 22 view .LVU329
 1217              	.LBB344:
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1218              		.loc 4 1812 3 view .LVU330
 1219              	.LBE344:
 1220              	.LBE343:
 426:Utilities/TRACER_EMB/tracer_emb_hw.c ****       _error = 1;
 1221              		.loc 2 426 14 is_stmt 0 view .LVU331
 1222 0038 1300     		movs	r3, r2
 1223              	.LVL57:
 1224              	.LBB346:
 1225              	.LBB345:
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1226              		.loc 4 1812 3 view .LVU332
 1227 003a 2162     		str	r1, [r4, #32]
 1228              	.LVL58:
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1229              		.loc 4 1812 3 view .LVU333
 1230              	.LBE345:
 1231              	.LBE346:
ARM GAS  /tmp/ccV1cKci.s 			page 150


 1232              		.loc 2 426 7 is_stmt 1 view .LVU334
 1233              	.L39:
 427:Utilities/TRACER_EMB/tracer_emb_hw.c ****     }
 428:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 429:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /* Overrun error   */
 430:Utilities/TRACER_EMB/tracer_emb_hw.c ****     _temp2 = TRACER_EMB_ISACTIVEFLAG_ORE(TRACER_EMB_USART_INSTANCE);
 1234              		.loc 2 430 5 view .LVU335
 1235              	.LBB347:
 1236              	.LBI347:
1595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 1237              		.loc 4 1595 26 view .LVU336
 1238              	.LBB348:
1597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1239              		.loc 4 1597 3 view .LVU337
1597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1240              		.loc 4 1597 12 is_stmt 0 view .LVU338
 1241 003c 0822     		movs	r2, #8
 1242 003e E169     		ldr	r1, [r4, #28]
1597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1243              		.loc 4 1597 76 view .LVU339
 1244 0040 1142     		tst	r1, r2
 1245 0042 01D0     		beq	.L40
 1246              	.LVL59:
1597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1247              		.loc 4 1597 76 view .LVU340
 1248              	.LBE348:
 1249              	.LBE347:
 431:Utilities/TRACER_EMB/tracer_emb_hw.c ****     if (1u == _temp2)
 1250              		.loc 2 431 5 is_stmt 1 view .LVU341
 432:Utilities/TRACER_EMB/tracer_emb_hw.c ****     {
 433:Utilities/TRACER_EMB/tracer_emb_hw.c ****       /* Flags clearing */
 434:Utilities/TRACER_EMB/tracer_emb_hw.c ****       TRACER_EMB_CLEARFLAG_ORE(TRACER_EMB_USART_INSTANCE);
 1251              		.loc 2 434 7 view .LVU342
 1252              	.LBB349:
 1253              	.LBI349:
1832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 1254              		.loc 4 1832 22 view .LVU343
 1255              	.LBB350:
1834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1256              		.loc 4 1834 3 view .LVU344
 1257              	.LBE350:
 1258              	.LBE349:
 435:Utilities/TRACER_EMB/tracer_emb_hw.c ****       _error = 1;
 1259              		.loc 2 435 14 is_stmt 0 view .LVU345
 1260 0044 0123     		movs	r3, #1
 1261              	.LVL60:
 1262              	.LBB352:
 1263              	.LBB351:
1834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1264              		.loc 4 1834 3 view .LVU346
 1265 0046 2262     		str	r2, [r4, #32]
 1266              	.LVL61:
1834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1267              		.loc 4 1834 3 view .LVU347
 1268              	.LBE351:
 1269              	.LBE352:
 1270              		.loc 2 435 7 is_stmt 1 view .LVU348
ARM GAS  /tmp/ccV1cKci.s 			page 151


 1271              	.L40:
 436:Utilities/TRACER_EMB/tracer_emb_hw.c ****     }
 437:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 438:Utilities/TRACER_EMB/tracer_emb_hw.c ****     /* Noise detection */
 439:Utilities/TRACER_EMB/tracer_emb_hw.c ****     _temp2 = TRACER_EMB_ISACTIVEFLAG_NE(TRACER_EMB_USART_INSTANCE);
 1272              		.loc 2 439 5 view .LVU349
 1273              	.LBB353:
 1274              	.LBI353:
1584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 1275              		.loc 4 1584 26 view .LVU350
 1276              	.LBB354:
1586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1277              		.loc 4 1586 3 view .LVU351
1586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1278              		.loc 4 1586 12 is_stmt 0 view .LVU352
 1279 0048 0422     		movs	r2, #4
 1280 004a E169     		ldr	r1, [r4, #28]
1586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1281              		.loc 4 1586 74 view .LVU353
 1282 004c 1142     		tst	r1, r2
 1283 004e 0AD0     		beq	.L38
 1284              	.LVL62:
1586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1285              		.loc 4 1586 74 view .LVU354
 1286              	.LBE354:
 1287              	.LBE353:
 440:Utilities/TRACER_EMB/tracer_emb_hw.c ****     if (1u == _temp2)
 1288              		.loc 2 440 5 is_stmt 1 view .LVU355
 441:Utilities/TRACER_EMB/tracer_emb_hw.c ****     {
 442:Utilities/TRACER_EMB/tracer_emb_hw.c ****       /* Flags clearing */
 443:Utilities/TRACER_EMB/tracer_emb_hw.c ****       TRACER_EMB_CLEARFLAG_NE(TRACER_EMB_USART_INSTANCE);
 1289              		.loc 2 443 7 view .LVU356
 1290              	.LBB355:
 1291              	.LBI355:
1821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 1292              		.loc 4 1821 22 view .LVU357
 1293              	.LBB356:
1823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1294              		.loc 4 1823 3 view .LVU358
 1295 0050 2262     		str	r2, [r4, #32]
 1296              	.LVL63:
1823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1297              		.loc 4 1823 3 is_stmt 0 view .LVU359
 1298              	.LBE356:
 1299              	.LBE355:
 444:Utilities/TRACER_EMB/tracer_emb_hw.c ****       _error = 1;
 1300              		.loc 2 444 7 is_stmt 1 view .LVU360
 445:Utilities/TRACER_EMB/tracer_emb_hw.c ****     }
 446:Utilities/TRACER_EMB/tracer_emb_hw.c ****   }
 447:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 448:Utilities/TRACER_EMB/tracer_emb_hw.c ****   if ((1u == _error) && (fptr_rx != NULL))
 1301              		.loc 2 448 3 view .LVU361
 1302              	.L41:
 1303              		.loc 2 448 34 is_stmt 0 discriminator 1 view .LVU362
 1304 0052 1D4B     		ldr	r3, .L68+4
 1305 0054 1B68     		ldr	r3, [r3]
 1306              		.loc 2 448 22 discriminator 1 view .LVU363
ARM GAS  /tmp/ccV1cKci.s 			page 152


 1307 0056 002B     		cmp	r3, #0
 1308 0058 07D0     		beq	.L29
 449:Utilities/TRACER_EMB/tracer_emb_hw.c ****   {
 450:Utilities/TRACER_EMB/tracer_emb_hw.c ****     fptr_rx(1, 1);  /* 1 indicate a reception error */
 1309              		.loc 2 450 5 is_stmt 1 view .LVU364
 1310 005a 0121     		movs	r1, #1
 1311 005c 0800     		movs	r0, r1
 1312 005e 9847     		blx	r3
 1313              	.LVL64:
 451:Utilities/TRACER_EMB/tracer_emb_hw.c ****   }
 452:Utilities/TRACER_EMB/tracer_emb_hw.c **** }
 1314              		.loc 2 452 1 is_stmt 0 view .LVU365
 1315 0060 03E0     		b	.L29
 1316              	.LVL65:
 1317              	.L44:
 400:Utilities/TRACER_EMB/tracer_emb_hw.c ****     _error = 1;
 1318              		.loc 2 400 5 is_stmt 1 view .LVU366
 1319              	.LBB357:
 1320              	.LBI357:
1799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 1321              		.loc 4 1799 22 view .LVU367
 1322              	.LBB358:
1801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1323              		.loc 4 1801 3 view .LVU368
 1324 0062 2362     		str	r3, [r4, #32]
 1325              	.LVL66:
1801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1326              		.loc 4 1801 3 is_stmt 0 view .LVU369
 1327              	.LBE358:
 1328              	.LBE357:
 401:Utilities/TRACER_EMB/tracer_emb_hw.c ****   }
 1329              		.loc 2 401 5 is_stmt 1 view .LVU370
 401:Utilities/TRACER_EMB/tracer_emb_hw.c ****   }
 1330              		.loc 2 401 5 is_stmt 0 view .LVU371
 1331 0064 E0E7     		b	.L37
 1332              	.LVL67:
 1333              	.L38:
 448:Utilities/TRACER_EMB/tracer_emb_hw.c ****   {
 1334              		.loc 2 448 3 is_stmt 1 view .LVU372
 448:Utilities/TRACER_EMB/tracer_emb_hw.c ****   {
 1335              		.loc 2 448 6 is_stmt 0 view .LVU373
 1336 0066 012B     		cmp	r3, #1
 1337 0068 F3D0     		beq	.L41
 1338              	.LVL68:
 1339              	.L29:
 1340              		.loc 2 452 1 view .LVU374
 1341              		@ sp needed
 1342 006a 13BD     		pop	{r0, r1, r4, pc}
 1343              	.LVL69:
 1344              	.L36:
 397:Utilities/TRACER_EMB/tracer_emb_hw.c ****   {
 1345              		.loc 2 397 3 is_stmt 1 view .LVU375
 1346              	.LBB359:
 1347              	.LBB336:
1564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1348              		.loc 4 1564 12 is_stmt 0 view .LVU376
 1349 006c 0123     		movs	r3, #1
ARM GAS  /tmp/ccV1cKci.s 			page 153


 1350 006e 1100     		movs	r1, r2
 1351 0070 1940     		ands	r1, r3
 1352              	.LBE336:
 1353              	.LBE359:
 397:Utilities/TRACER_EMB/tracer_emb_hw.c ****   {
 1354              		.loc 2 397 6 view .LVU377
 1355 0072 1A42     		tst	r2, r3
 1356 0074 F5D1     		bne	.L44
 333:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 1357              		.loc 2 333 11 view .LVU378
 1358 0076 0B00     		movs	r3, r1
 1359 0078 D6E7     		b	.L37
 1360              	.LVL70:
 1361              	.L33:
 382:Utilities/TRACER_EMB/tracer_emb_hw.c ****   {
 1362              		.loc 2 382 3 is_stmt 1 view .LVU379
 382:Utilities/TRACER_EMB/tracer_emb_hw.c ****   {
 1363              		.loc 2 382 6 is_stmt 0 view .LVU380
 1364 007a 1A42     		tst	r2, r3
 1365 007c CCD0     		beq	.L34
 1366              	.LBB360:
 384:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 1367              		.loc 2 384 5 is_stmt 1 view .LVU381
 387:Utilities/TRACER_EMB/tracer_emb_hw.c ****     if (fptr_rx != NULL)
 1368              		.loc 2 387 5 view .LVU382
 1369              	.LVL71:
 1370              	.LBB361:
 1371              	.LBI361:
2320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART CTS Interrupt is enabled or disabled.
2324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          CTSIE         LL_LPUART_IsEnabledIT_CTS
2325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
2327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledIT_CTS(USART_TypeDef *LPUARTx)
2329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR3, USART_CR3_CTSIE) == (USART_CR3_CTSIE)) ? 1UL : 0UL);
2331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if the LPUART Wake Up from Stop Mode Interrupt is enabled or disabled.
2335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          WUFIE         LL_LPUART_IsEnabledIT_WKUP
2336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
2338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledIT_WKUP(USART_TypeDef *LPUARTx)
2340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR3, USART_CR3_WUFIE) == (USART_CR3_WUFIE)) ? 1UL : 0UL);
2342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if LPUART TX FIFO Threshold Interrupt is enabled or disabled
2346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          TXFTIE        LL_LPUART_IsEnabledIT_TXFT
2347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
ARM GAS  /tmp/ccV1cKci.s 			page 154


2349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledIT_TXFT(USART_TypeDef *LPUARTx)
2351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR3, USART_CR3_TXFTIE) == (USART_CR3_TXFTIE)) ? 1UL : 0UL);
2353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if LPUART RX FIFO Threshold Interrupt is enabled or disabled
2357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          RXFTIE        LL_LPUART_IsEnabledIT_RXFT
2358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
2360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledIT_RXFT(USART_TypeDef *LPUARTx)
2362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR3, USART_CR3_RXFTIE) == (USART_CR3_RXFTIE)) ? 1UL : 0UL);
2364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
2368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EF_DMA_Management DMA_Management
2371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
2372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Enable DMA Mode for reception
2376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          DMAR          LL_LPUART_EnableDMAReq_RX
2377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
2379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableDMAReq_RX(USART_TypeDef *LPUARTx)
2381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR3, USART_CR3_DMAR);
2383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Disable DMA Mode for reception
2387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          DMAR          LL_LPUART_DisableDMAReq_RX
2388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
2390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableDMAReq_RX(USART_TypeDef *LPUARTx)
2392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR3, USART_CR3_DMAR);
2394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if DMA Mode is enabled for reception
2398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          DMAR          LL_LPUART_IsEnabledDMAReq_RX
2399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
2401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledDMAReq_RX(USART_TypeDef *LPUARTx)
2403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR3, USART_CR3_DMAR) == (USART_CR3_DMAR)) ? 1UL : 0UL);
2405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
ARM GAS  /tmp/ccV1cKci.s 			page 155


2406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Enable DMA Mode for transmission
2409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          DMAT          LL_LPUART_EnableDMAReq_TX
2410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
2412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableDMAReq_TX(USART_TypeDef *LPUARTx)
2414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR3, USART_CR3_DMAT);
2416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Disable DMA Mode for transmission
2420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          DMAT          LL_LPUART_DisableDMAReq_TX
2421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
2423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableDMAReq_TX(USART_TypeDef *LPUARTx)
2425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR3, USART_CR3_DMAT);
2427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Check if DMA Mode is enabled for transmission
2431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          DMAT          LL_LPUART_IsEnabledDMAReq_TX
2432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
2434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledDMAReq_TX(USART_TypeDef *LPUARTx)
2436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR3, USART_CR3_DMAT) == (USART_CR3_DMAT)) ? 1UL : 0UL);
2438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Enable DMA Disabling on Reception Error
2442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          DDRE          LL_LPUART_EnableDMADeactOnRxErr
2443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
2445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_EnableDMADeactOnRxErr(USART_TypeDef *LPUARTx)
2447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   SET_BIT(LPUARTx->CR3, USART_CR3_DDRE);
2449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Disable DMA Disabling on Reception Error
2453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          DDRE          LL_LPUART_DisableDMADeactOnRxErr
2454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval None
2456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE void LL_LPUART_DisableDMADeactOnRxErr(USART_TypeDef *LPUARTx)
2458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   CLEAR_BIT(LPUARTx->CR3, USART_CR3_DDRE);
2460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
ARM GAS  /tmp/ccV1cKci.s 			page 156


2463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Indicate if DMA Disabling on Reception Error is disabled
2464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll CR3          DDRE          LL_LPUART_IsEnabledDMADeactOnRxErr
2465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval State of bit (1 or 0).
2467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_IsEnabledDMADeactOnRxErr(USART_TypeDef *LPUARTx)
2469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return ((READ_BIT(LPUARTx->CR3, USART_CR3_DDRE) == (USART_CR3_DDRE)) ? 1UL : 0UL);
2471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Get the LPUART data register address used for DMA transfer
2475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll RDR          RDR           LL_LPUART_DMA_GetRegAddr\n
2476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll TDR          TDR           LL_LPUART_DMA_GetRegAddr
2477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  Direction This parameter can be one of the following values:
2479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DMA_REG_DATA_TRANSMIT
2480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   *         @arg @ref LL_LPUART_DMA_REG_DATA_RECEIVE
2481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval Address of data register
2482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint32_t LL_LPUART_DMA_GetRegAddr(USART_TypeDef *LPUARTx, uint32_t Direction)
2484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   register uint32_t data_reg_addr;
2486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   if (Direction == LL_LPUART_DMA_REG_DATA_TRANSMIT)
2488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   {
2489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****     /* return address of TDR register */
2490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****     data_reg_addr = (uint32_t) &(LPUARTx->TDR);
2491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   }
2492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   else
2493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   {
2494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****     /* return address of RDR register */
2495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****     data_reg_addr = (uint32_t) &(LPUARTx->RDR);
2496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   }
2497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return data_reg_addr;
2499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
2500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @}
2503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /** @defgroup LPUART_LL_EF_Data_Management Data_Management
2506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @{
2507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
2509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** /**
2510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @brief  Read Receiver Data register (Receive Data value, 8 bits)
2511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @rmtoll RDR          RDR           LL_LPUART_ReceiveData8
2512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @param  LPUARTx LPUART Instance
2513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   * @retval Time Value between Min_Data=0x00 and Max_Data=0xFF
2514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   */
2515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** __STATIC_INLINE uint8_t LL_LPUART_ReceiveData8(USART_TypeDef *LPUARTx)
 1372              		.loc 4 2515 25 view .LVU383
 1373              	.LBB362:
2516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
2517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   return (uint8_t)(READ_BIT(LPUARTx->RDR, USART_RDR_RDR) & 0xFFU);
ARM GAS  /tmp/ccV1cKci.s 			page 157


 1374              		.loc 4 2517 3 view .LVU384
 1375              		.loc 4 2517 20 is_stmt 0 view .LVU385
 1376 007e 636A     		ldr	r3, [r4, #36]
 1377              	.LVL72:
 1378              		.loc 4 2517 20 view .LVU386
 1379 0080 DBB2     		uxtb	r3, r3
 1380              	.LBE362:
 1381              	.LBE361:
 387:Utilities/TRACER_EMB/tracer_emb_hw.c ****     if (fptr_rx != NULL)
 1382              		.loc 2 387 19 view .LVU387
 1383 0082 0193     		str	r3, [sp, #4]
 388:Utilities/TRACER_EMB/tracer_emb_hw.c ****     {
 1384              		.loc 2 388 5 is_stmt 1 view .LVU388
 388:Utilities/TRACER_EMB/tracer_emb_hw.c ****     {
 1385              		.loc 2 388 17 is_stmt 0 view .LVU389
 1386 0084 104B     		ldr	r3, .L68+4
 1387 0086 1B68     		ldr	r3, [r3]
 388:Utilities/TRACER_EMB/tracer_emb_hw.c ****     {
 1388              		.loc 2 388 8 view .LVU390
 1389 0088 002B     		cmp	r3, #0
 1390 008a C5D0     		beq	.L34
 390:Utilities/TRACER_EMB/tracer_emb_hw.c ****     }
 1391              		.loc 2 390 7 is_stmt 1 view .LVU391
 1392 008c 0198     		ldr	r0, [sp, #4]
 1393 008e 0021     		movs	r1, #0
 1394 0090 C0B2     		uxtb	r0, r0
 1395 0092 9847     		blx	r3
 1396              	.LVL73:
 390:Utilities/TRACER_EMB/tracer_emb_hw.c ****     }
 1397              		.loc 2 390 7 is_stmt 0 view .LVU392
 1398 0094 C0E7     		b	.L34
 1399              	.LVL74:
 1400              	.L30:
 390:Utilities/TRACER_EMB/tracer_emb_hw.c ****     }
 1401              		.loc 2 390 7 view .LVU393
 1402              	.LBE360:
 365:Utilities/TRACER_EMB/tracer_emb_hw.c ****   {
 1403              		.loc 2 365 3 is_stmt 1 view .LVU394
 365:Utilities/TRACER_EMB/tracer_emb_hw.c ****   {
 1404              		.loc 2 365 6 is_stmt 0 view .LVU395
 1405 0096 1A42     		tst	r2, r3
 1406 0098 B9D0     		beq	.L31
 367:Utilities/TRACER_EMB/tracer_emb_hw.c ****     TRACER_EMB_CLEARFLAG_TC(TRACER_EMB_USART_INSTANCE);
 1407              		.loc 2 367 5 is_stmt 1 view .LVU396
 1408              	.LVL75:
 1409              	.LBB363:
 1410              	.LBI363:
2095:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 1411              		.loc 4 2095 22 view .LVU397
 1412              	.LBB364:
2097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1413              		.loc 4 2097 3 view .LVU398
 1414              	.LBE364:
 1415              	.LBE363:
 1416              	.LBB366:
 1417              	.LBB367:
 478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
ARM GAS  /tmp/ccV1cKci.s 			page 158


 1418              		.loc 5 478 3 is_stmt 0 view .LVU399
 1419 009a 0121     		movs	r1, #1
 1420              	.LBE367:
 1421              	.LBE366:
 1422              	.LBB370:
 1423              	.LBB365:
2097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1424              		.loc 4 2097 3 view .LVU400
 1425 009c 2268     		ldr	r2, [r4]
 1426              	.LVL76:
2097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1427              		.loc 4 2097 3 view .LVU401
 1428 009e 9A43     		bics	r2, r3
 1429 00a0 2260     		str	r2, [r4]
 1430              	.LVL77:
2097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1431              		.loc 4 2097 3 view .LVU402
 1432              	.LBE365:
 1433              	.LBE370:
 368:Utilities/TRACER_EMB/tracer_emb_hw.c ****     LL_DMA_DisableChannel(TRACER_EMB_DMA_INSTANCE, TRACER_EMB_TX_DMA_CHANNEL);
 1434              		.loc 2 368 5 is_stmt 1 view .LVU403
 1435              	.LBB371:
 1436              	.LBI371:
1865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 1437              		.loc 4 1865 22 view .LVU404
 1438              	.LBB372:
1867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1439              		.loc 4 1867 3 view .LVU405
 1440              	.LBE372:
 1441              	.LBE371:
 1442              	.LBB374:
 1443              	.LBB368:
 478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 1444              		.loc 5 478 3 is_stmt 0 view .LVU406
 1445 00a2 0A4A     		ldr	r2, .L68+8
 1446              	.LBE368:
 1447              	.LBE374:
 1448              	.LBB375:
 1449              	.LBB373:
1867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1450              		.loc 4 1867 3 view .LVU407
 1451 00a4 2362     		str	r3, [r4, #32]
 1452              	.LVL78:
1867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1453              		.loc 4 1867 3 view .LVU408
 1454              	.LBE373:
 1455              	.LBE375:
 369:Utilities/TRACER_EMB/tracer_emb_hw.c ****     if(NULL == fptr_rx)
 1456              		.loc 2 369 5 is_stmt 1 view .LVU409
 1457              	.LBB376:
 1458              	.LBI366:
 475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 1459              		.loc 5 475 22 view .LVU410
 1460              	.LBB369:
 477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   CLEAR_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel-1U]))->CCR, DMA_CCR
 1461              		.loc 5 477 3 view .LVU411
 478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
ARM GAS  /tmp/ccV1cKci.s 			page 159


 1462              		.loc 5 478 3 view .LVU412
 1463 00a6 1368     		ldr	r3, [r2]
 1464 00a8 8B43     		bics	r3, r1
 1465 00aa 1360     		str	r3, [r2]
 1466              	.LVL79:
 478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 1467              		.loc 5 478 3 is_stmt 0 view .LVU413
 1468              	.LBE369:
 1469              	.LBE376:
 370:Utilities/TRACER_EMB/tracer_emb_hw.c ****     {
 1470              		.loc 2 370 5 is_stmt 1 view .LVU414
 370:Utilities/TRACER_EMB/tracer_emb_hw.c ****     {
 1471              		.loc 2 370 13 is_stmt 0 view .LVU415
 1472 00ac 064B     		ldr	r3, .L68+4
 370:Utilities/TRACER_EMB/tracer_emb_hw.c ****     {
 1473              		.loc 2 370 7 view .LVU416
 1474 00ae 1B68     		ldr	r3, [r3]
 1475 00b0 002B     		cmp	r3, #0
 1476 00b2 04D1     		bne	.L32
 372:Utilities/TRACER_EMB/tracer_emb_hw.c ****     }
 1477              		.loc 2 372 7 is_stmt 1 view .LVU417
 1478              	.LBB377:
 1479              	.LBI377:
 533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** {
 1480              		.loc 1 533 22 view .LVU418
 1481              	.LVL80:
 1482              	.LBB378:
 535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 1483              		.loc 1 535 3 view .LVU419
 1484 00b4 064A     		ldr	r2, .L68+12
 1485 00b6 0749     		ldr	r1, .L68+16
 1486 00b8 D36B     		ldr	r3, [r2, #60]
 1487 00ba 0B40     		ands	r3, r1
 1488 00bc D363     		str	r3, [r2, #60]
 1489              	.LVL81:
 1490              	.L32:
 535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_bus.h **** }
 1491              		.loc 1 535 3 is_stmt 0 view .LVU420
 1492              	.LBE378:
 1493              	.LBE377:
 375:Utilities/TRACER_EMB/tracer_emb_hw.c ****   }
 1494              		.loc 2 375 5 is_stmt 1 view .LVU421
 1495 00be FFF7FEFF 		bl	TRACER_EMB_CALLBACK_TX
 1496              	.LVL82:
 1497 00c2 A4E7     		b	.L31
 1498              	.L69:
 1499              		.align	2
 1500              	.L68:
 1501 00c4 00800040 		.word	1073774592
 1502 00c8 00000000 		.word	.LANCHOR0
 1503 00cc 44000240 		.word	1073872964
 1504 00d0 00100240 		.word	1073876992
 1505 00d4 FFFFEFFF 		.word	-1048577
 1506              		.cfi_endproc
 1507              	.LFE912:
 1509              		.section	.text.HW_TRACER_EMB_SendData,"ax",%progbits
 1510              		.align	1
ARM GAS  /tmp/ccV1cKci.s 			page 160


 1511              		.global	HW_TRACER_EMB_SendData
 1512              		.syntax unified
 1513              		.code	16
 1514              		.thumb_func
 1515              		.fpu softvfp
 1517              	HW_TRACER_EMB_SendData:
 1518              	.LVL83:
 1519              	.LFB913:
 453:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 454:Utilities/TRACER_EMB/tracer_emb_hw.c **** /**
 455:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * @brief  USART/LPUART send data
 456:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * @param data pointer
 457:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * @param data size
 458:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * @retval none
 459:Utilities/TRACER_EMB/tracer_emb_hw.c ****   */
 460:Utilities/TRACER_EMB/tracer_emb_hw.c **** void HW_TRACER_EMB_SendData(uint8_t *pData, uint32_t Size)
 461:Utilities/TRACER_EMB/tracer_emb_hw.c **** {
 1520              		.loc 2 461 1 view -0
 1521              		.cfi_startproc
 1522              		@ args = 0, pretend = 0, frame = 0
 1523              		@ frame_needed = 0, uses_anonymous_args = 0
 462:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* enable the USART */
 463:Utilities/TRACER_EMB/tracer_emb_hw.c ****   TRACER_EMB_ENABLE_CLK_USART();
 1524              		.loc 2 463 3 view .LVU423
 461:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* enable the USART */
 1525              		.loc 2 461 1 is_stmt 0 view .LVU424
 1526 0000 70B5     		push	{r4, r5, r6, lr}
 1527              	.LCFI5:
 1528              		.cfi_def_cfa_offset 16
 1529              		.cfi_offset 4, -16
 1530              		.cfi_offset 5, -12
 1531              		.cfi_offset 6, -8
 1532              		.cfi_offset 14, -4
 461:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* enable the USART */
 1533              		.loc 2 461 1 view .LVU425
 1534 0002 0500     		movs	r5, r0
 1535 0004 0C00     		movs	r4, r1
 1536              		.loc 2 463 3 view .LVU426
 1537 0006 FFF7FEFF 		bl	LL_APB1_GRP1_EnableClock.constprop.0
 1538              	.LVL84:
 464:Utilities/TRACER_EMB/tracer_emb_hw.c ****   
 465:Utilities/TRACER_EMB/tracer_emb_hw.c **** #if TRACER_EMB_DMA_MODE == 1UL
 466:Utilities/TRACER_EMB/tracer_emb_hw.c ****   LL_DMA_ConfigAddresses(TRACER_EMB_DMA_INSTANCE, TRACER_EMB_TX_DMA_CHANNEL,
 1539              		.loc 2 466 3 is_stmt 1 view .LVU427
 1540              	.LBB391:
 1541              	.LBI391:
2483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 1542              		.loc 4 2483 26 view .LVU428
 1543              	.LBB392:
2485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** 
 1544              		.loc 4 2485 3 view .LVU429
2487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   {
 1545              		.loc 4 2487 3 view .LVU430
2490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   }
 1546              		.loc 4 2490 5 view .LVU431
 1547              	.LBE392:
 1548              	.LBE391:
ARM GAS  /tmp/ccV1cKci.s 			page 161


 1549              	.LBB394:
 1550              	.LBB395:
 586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                    DMA_CCR_DIR | DMA_CCR_MEM2MEM));
 1551              		.loc 5 586 11 is_stmt 0 view .LVU432
 1552 000a 0D4B     		ldr	r3, .L73
 1553 000c 0D48     		ldr	r0, .L73+4
 1554 000e 1A68     		ldr	r2, [r3]
 1555              	.LBE395:
 1556              	.LBE394:
 1557              	.LBB398:
 1558              	.LBB393:
2490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h ****   }
 1559              		.loc 4 2490 19 view .LVU433
 1560 0010 0D49     		ldr	r1, .L73+8
 1561              	.LVL85:
2498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1562              		.loc 4 2498 3 is_stmt 1 view .LVU434
2498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1563              		.loc 4 2498 3 is_stmt 0 view .LVU435
 1564              	.LBE393:
 1565              	.LBE398:
 1566              	.LBB399:
 1567              	.LBI394:
 583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 1568              		.loc 5 583 26 is_stmt 1 view .LVU436
 1569              	.LBB396:
 585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   return (READ_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CCR
 1570              		.loc 5 585 3 view .LVU437
 586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                    DMA_CCR_DIR | DMA_CCR_MEM2MEM));
 1571              		.loc 5 586 3 view .LVU438
 586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                    DMA_CCR_DIR | DMA_CCR_MEM2MEM));
 1572              		.loc 5 586 3 is_stmt 0 view .LVU439
 1573              	.LBE396:
 1574              	.LBE399:
 1575              	.LBB400:
 1576              	.LBI400:
 952:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                                             uint32_t DstAddress, uint32_t Direction)
 1577              		.loc 5 952 22 is_stmt 1 view .LVU440
 1578              	.LBB401:
 955:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   /* Direction Memory to Periph */
 1579              		.loc 5 955 3 view .LVU441
 957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   {
 1580              		.loc 5 957 3 view .LVU442
 1581              	.LBE401:
 1582              	.LBE400:
 1583              	.LBB404:
 1584              	.LBB397:
 586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                    DMA_CCR_DIR | DMA_CCR_MEM2MEM));
 1585              		.loc 5 586 11 is_stmt 0 view .LVU443
 1586 0012 0240     		ands	r2, r0
 1587              	.LVL86:
 586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****                    DMA_CCR_DIR | DMA_CCR_MEM2MEM));
 1588              		.loc 5 586 11 view .LVU444
 1589              	.LBE397:
 1590              	.LBE404:
 1591              	.LBB405:
 1592              	.LBB402:
ARM GAS  /tmp/ccV1cKci.s 			page 162


 957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   {
 1593              		.loc 5 957 6 view .LVU445
 1594 0014 102A     		cmp	r2, #16
 1595 0016 10D1     		bne	.L71
 959:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CPAR, Ds
 1596              		.loc 5 959 5 is_stmt 1 view .LVU446
 1597 0018 DD60     		str	r5, [r3, #12]
 960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   }
 1598              		.loc 5 960 5 view .LVU447
 1599 001a 9960     		str	r1, [r3, #8]
 1600              	.L72:
 1601              	.LVL87:
 960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   }
 1602              		.loc 5 960 5 is_stmt 0 view .LVU448
 1603              	.LBE402:
 1604              	.LBE405:
 467:Utilities/TRACER_EMB/tracer_emb_hw.c ****                          (uint32_t)pData,
 468:Utilities/TRACER_EMB/tracer_emb_hw.c ****                          TRACER_EMB_DMA_GETREGADDR(TRACER_EMB_USART_INSTANCE, LL_USART_DMA_REG_DATA
 469:Utilities/TRACER_EMB/tracer_emb_hw.c ****                          LL_DMA_GetDataTransferDirection(TRACER_EMB_DMA_INSTANCE, TRACER_EMB_TX_DMA
 470:Utilities/TRACER_EMB/tracer_emb_hw.c ****   LL_DMA_SetDataLength(TRACER_EMB_DMA_INSTANCE, TRACER_EMB_TX_DMA_CHANNEL, Size);
 1605              		.loc 2 470 3 is_stmt 1 view .LVU449
 1606              	.LBB406:
 1607              	.LBI406:
 899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 1608              		.loc 5 899 22 view .LVU450
 1609              	.LBB407:
 901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   MODIFY_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CNDTR,
 1610              		.loc 5 901 3 view .LVU451
 902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****              DMA_CNDTR_NDT, NbData);
 1611              		.loc 5 902 3 view .LVU452
 1612              	.LBE407:
 1613              	.LBE406:
 1614              	.LBB410:
 1615              	.LBB411:
2415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1616              		.loc 4 2415 3 is_stmt 0 view .LVU453
 1617 001c 8022     		movs	r2, #128
 1618              	.LBE411:
 1619              	.LBE410:
 1620              	.LBB413:
 1621              	.LBB408:
 902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****              DMA_CNDTR_NDT, NbData);
 1622              		.loc 5 902 3 view .LVU454
 1623 001e 5968     		ldr	r1, [r3, #4]
 1624              	.LBE408:
 1625              	.LBE413:
 471:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 472:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* Enable DMA TX Interrupt */
 473:Utilities/TRACER_EMB/tracer_emb_hw.c ****   TRACER_EMB_ENABLEDMAREQ_TX(TRACER_EMB_USART_INSTANCE);
 474:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 475:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* Enable DMA Channel Rx */
 476:Utilities/TRACER_EMB/tracer_emb_hw.c ****   LL_DMA_EnableChannel(TRACER_EMB_DMA_INSTANCE, TRACER_EMB_TX_DMA_CHANNEL);
 477:Utilities/TRACER_EMB/tracer_emb_hw.c **** #endif
 478:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 479:Utilities/TRACER_EMB/tracer_emb_hw.c **** #if TRACER_EMB_IT_MODE == 1UL
 480:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* keep information about the data to transfert */
 481:Utilities/TRACER_EMB/tracer_emb_hw.c ****   txData = pData;
ARM GAS  /tmp/ccV1cKci.s 			page 163


 482:Utilities/TRACER_EMB/tracer_emb_hw.c ****   txSize = Size;
 483:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 484:Utilities/TRACER_EMB/tracer_emb_hw.c ****   /* Enable the TXEIE */
 485:Utilities/TRACER_EMB/tracer_emb_hw.c ****   TRACER_EMB_ENABLE_IT_TXE(TRACER_EMB_USART_INSTANCE);
 486:Utilities/TRACER_EMB/tracer_emb_hw.c **** #endif
 487:Utilities/TRACER_EMB/tracer_emb_hw.c **** }
 1626              		.loc 2 487 1 view .LVU455
 1627              		@ sp needed
 1628              	.LBB414:
 1629              	.LBB409:
 902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****              DMA_CNDTR_NDT, NbData);
 1630              		.loc 5 902 3 view .LVU456
 1631 0020 090C     		lsrs	r1, r1, #16
 1632 0022 0904     		lsls	r1, r1, #16
 1633 0024 2143     		orrs	r1, r4
 1634 0026 5960     		str	r1, [r3, #4]
 1635              	.LVL88:
 902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****              DMA_CNDTR_NDT, NbData);
 1636              		.loc 5 902 3 view .LVU457
 1637              	.LBE409:
 1638              	.LBE414:
 473:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 1639              		.loc 2 473 3 is_stmt 1 view .LVU458
 1640              	.LBB415:
 1641              	.LBI410:
2413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 1642              		.loc 4 2413 22 view .LVU459
 1643              	.LBB412:
2415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1644              		.loc 4 2415 3 view .LVU460
 1645 0028 0849     		ldr	r1, .L73+12
 1646 002a 8868     		ldr	r0, [r1, #8]
 1647 002c 0243     		orrs	r2, r0
 1648 002e 8A60     		str	r2, [r1, #8]
 1649              	.LVL89:
2415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** }
 1650              		.loc 4 2415 3 is_stmt 0 view .LVU461
 1651              	.LBE412:
 1652              	.LBE415:
 476:Utilities/TRACER_EMB/tracer_emb_hw.c **** #endif
 1653              		.loc 2 476 3 is_stmt 1 view .LVU462
 1654              	.LBB416:
 1655              	.LBI416:
 455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** {
 1656              		.loc 5 455 22 view .LVU463
 1657              	.LBB417:
 457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   SET_BIT(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel-1U]))->CCR, DMA_CCR_E
 1658              		.loc 5 457 3 view .LVU464
 458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 1659              		.loc 5 458 3 view .LVU465
 1660 0030 0122     		movs	r2, #1
 1661 0032 1968     		ldr	r1, [r3]
 1662 0034 0A43     		orrs	r2, r1
 1663 0036 1A60     		str	r2, [r3]
 1664              	.LVL90:
 1665              	.LVL91:
 1666              	.LVL92:
ARM GAS  /tmp/ccV1cKci.s 			page 164


 458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h **** }
 1667              		.loc 5 458 3 is_stmt 0 view .LVU466
 1668              	.LBE417:
 1669              	.LBE416:
 1670              		.loc 2 487 1 view .LVU467
 1671 0038 70BD     		pop	{r4, r5, r6, pc}
 1672              	.LVL93:
 1673              	.L71:
 1674              	.LBB418:
 1675              	.LBB403:
 965:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****     WRITE_REG(((DMA_Channel_TypeDef *)(dma_base_addr + CHANNEL_OFFSET_TAB[Channel - 1U]))->CMAR, Ds
 1676              		.loc 5 965 5 is_stmt 1 view .LVU468
 1677 003a 9D60     		str	r5, [r3, #8]
 966:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h ****   }
 1678              		.loc 5 966 5 view .LVU469
 1679 003c D960     		str	r1, [r3, #12]
 1680 003e EDE7     		b	.L72
 1681              	.L74:
 1682              		.align	2
 1683              	.L73:
 1684 0040 44000240 		.word	1073872964
 1685 0044 10400000 		.word	16400
 1686 0048 28800040 		.word	1073774632
 1687 004c 00800040 		.word	1073774592
 1688              	.LBE403:
 1689              	.LBE418:
 1690              		.cfi_endproc
 1691              	.LFE913:
 1693              		.section	.text.HW_TRACER_EMB_ReadData,"ax",%progbits
 1694              		.align	1
 1695              		.global	HW_TRACER_EMB_ReadData
 1696              		.syntax unified
 1697              		.code	16
 1698              		.thumb_func
 1699              		.fpu softvfp
 1701              	HW_TRACER_EMB_ReadData:
 1702              	.LFB914:
 488:Utilities/TRACER_EMB/tracer_emb_hw.c **** 
 489:Utilities/TRACER_EMB/tracer_emb_hw.c **** /**
 490:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * @brief  USART/LPUART read data
 491:Utilities/TRACER_EMB/tracer_emb_hw.c ****   * @retval return a data
 492:Utilities/TRACER_EMB/tracer_emb_hw.c ****   */
 493:Utilities/TRACER_EMB/tracer_emb_hw.c **** uint8_t HW_TRACER_EMB_ReadData(void)
 494:Utilities/TRACER_EMB/tracer_emb_hw.c **** {
 1703              		.loc 2 494 1 view -0
 1704              		.cfi_startproc
 1705              		@ args = 0, pretend = 0, frame = 0
 1706              		@ frame_needed = 0, uses_anonymous_args = 0
 1707              		@ link register save eliminated.
 495:Utilities/TRACER_EMB/tracer_emb_hw.c ****   return TRACER_EMB_RECEIVE_DATA8(TRACER_EMB_USART_INSTANCE);
 1708              		.loc 2 495 3 view .LVU471
 1709              	.LVL94:
 1710              	.LBB419:
 1711              	.LBI419:
2515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_lpuart.h **** {
 1712              		.loc 4 2515 25 view .LVU472
 1713              	.LBB420:
ARM GAS  /tmp/ccV1cKci.s 			page 165


 1714              		.loc 4 2517 3 view .LVU473
 1715              		.loc 4 2517 20 is_stmt 0 view .LVU474
 1716 0000 014B     		ldr	r3, .L76
 1717              	.LBE420:
 1718              	.LBE419:
 496:Utilities/TRACER_EMB/tracer_emb_hw.c **** }
 1719              		.loc 2 496 1 view .LVU475
 1720              		@ sp needed
 1721              	.LBB422:
 1722              	.LBB421:
 1723              		.loc 4 2517 20 view .LVU476
 1724 0002 586A     		ldr	r0, [r3, #36]
 1725              	.LVL95:
 1726              		.loc 4 2517 20 view .LVU477
 1727              	.LBE421:
 1728              	.LBE422:
 495:Utilities/TRACER_EMB/tracer_emb_hw.c ****   return TRACER_EMB_RECEIVE_DATA8(TRACER_EMB_USART_INSTANCE);
 1729              		.loc 2 495 10 view .LVU478
 1730 0004 C0B2     		uxtb	r0, r0
 1731              		.loc 2 496 1 view .LVU479
 1732 0006 7047     		bx	lr
 1733              	.L77:
 1734              		.align	2
 1735              	.L76:
 1736 0008 00800040 		.word	1073774592
 1737              		.cfi_endproc
 1738              	.LFE914:
 1740              		.section	.bss.fptr_rx,"aw",%nobits
 1741              		.align	2
 1742              		.set	.LANCHOR0,. + 0
 1745              	fptr_rx:
 1746 0000 00000000 		.space	4
 1747              		.text
 1748              	.Letext0:
 1749              		.file 7 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 1750              		.file 8 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g071xx.h"
 1751              		.file 9 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 1752              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 1753              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash.h"
 1754              		.file 12 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 1755              		.file 13 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_usart.h"
 1756              		.file 14 "Utilities/TRACER_EMB/tracer_emb.h"
ARM GAS  /tmp/ccV1cKci.s 			page 166


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tracer_emb_hw.c
     /tmp/ccV1cKci.s:16     .text.LL_APB1_GRP1_EnableClock.constprop.0:0000000000000000 $t
     /tmp/ccV1cKci.s:23     .text.LL_APB1_GRP1_EnableClock.constprop.0:0000000000000000 LL_APB1_GRP1_EnableClock.constprop.0
     /tmp/ccV1cKci.s:60     .text.LL_APB1_GRP1_EnableClock.constprop.0:000000000000001c $d
     /tmp/ccV1cKci.s:65     .text.HW_TRACER_EMB_Init:0000000000000000 $t
     /tmp/ccV1cKci.s:72     .text.HW_TRACER_EMB_Init:0000000000000000 HW_TRACER_EMB_Init
     /tmp/ccV1cKci.s:725    .text.HW_TRACER_EMB_Init:0000000000000144 $d
     /tmp/ccV1cKci.s:741    .text.HW_TRACER_EMB_DeInit:0000000000000000 $t
     /tmp/ccV1cKci.s:748    .text.HW_TRACER_EMB_DeInit:0000000000000000 HW_TRACER_EMB_DeInit
     /tmp/ccV1cKci.s:784    .text.HW_TRACER_EMB_DeInit:000000000000000c $d
     /tmp/ccV1cKci.s:790    .text.HW_TRACER_EMB_RegisterRxCallback:0000000000000000 $t
     /tmp/ccV1cKci.s:797    .text.HW_TRACER_EMB_RegisterRxCallback:0000000000000000 HW_TRACER_EMB_RegisterRxCallback
     /tmp/ccV1cKci.s:825    .text.HW_TRACER_EMB_RegisterRxCallback:000000000000000c $d
     /tmp/ccV1cKci.s:830    .text.HW_TRACER_EMB_StartRX:0000000000000000 $t
     /tmp/ccV1cKci.s:837    .text.HW_TRACER_EMB_StartRX:0000000000000000 HW_TRACER_EMB_StartRX
     /tmp/ccV1cKci.s:962    .text.HW_TRACER_EMB_StartRX:0000000000000038 $d
     /tmp/ccV1cKci.s:969    .text.HW_TRACER_EMB_IRQHandlerDMA:0000000000000000 $t
     /tmp/ccV1cKci.s:976    .text.HW_TRACER_EMB_IRQHandlerDMA:0000000000000000 HW_TRACER_EMB_IRQHandlerDMA
     /tmp/ccV1cKci.s:1035   .text.HW_TRACER_EMB_IRQHandlerDMA:000000000000001c $d
     /tmp/ccV1cKci.s:1041   .text.HW_TRACER_EMB_IRQHandlerUSART:0000000000000000 $t
     /tmp/ccV1cKci.s:1048   .text.HW_TRACER_EMB_IRQHandlerUSART:0000000000000000 HW_TRACER_EMB_IRQHandlerUSART
     /tmp/ccV1cKci.s:1501   .text.HW_TRACER_EMB_IRQHandlerUSART:00000000000000c4 $d
     /tmp/ccV1cKci.s:1510   .text.HW_TRACER_EMB_SendData:0000000000000000 $t
     /tmp/ccV1cKci.s:1517   .text.HW_TRACER_EMB_SendData:0000000000000000 HW_TRACER_EMB_SendData
     /tmp/ccV1cKci.s:1684   .text.HW_TRACER_EMB_SendData:0000000000000040 $d
     /tmp/ccV1cKci.s:1694   .text.HW_TRACER_EMB_ReadData:0000000000000000 $t
     /tmp/ccV1cKci.s:1701   .text.HW_TRACER_EMB_ReadData:0000000000000000 HW_TRACER_EMB_ReadData
     /tmp/ccV1cKci.s:1736   .text.HW_TRACER_EMB_ReadData:0000000000000008 $d
     /tmp/ccV1cKci.s:1741   .bss.fptr_rx:0000000000000000 $d
     /tmp/ccV1cKci.s:1745   .bss.fptr_rx:0000000000000000 fptr_rx

UNDEFINED SYMBOLS
LL_LPUART_Init
TRACER_EMB_CALLBACK_TX
