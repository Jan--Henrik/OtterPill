ARM GAS  /tmp/ccjg7X18.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 4
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32g0xx_hal_adc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.LL_ADC_SetAnalogWDMonitChannels,"ax",%progbits
  16              		.align	1
  17              		.arch armv6s-m
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	LL_ADC_SetAnalogWDMonitChannels:
  24              	.LVL0:
  25              	.LFB221:
  26              		.file 1 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h"
   1:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @file    stm32g0xx_ll_adc.h
   4:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
   6:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ******************************************************************************
   7:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @attention
   8:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
   9:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * <h2><center>&copy; Copyright (c) 2018 STMicroelectronics.
  10:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * All rights reserved.</center></h2>
  11:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
  12:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * the "License"; You may not use this file except in compliance with the
  14:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * License. You may obtain a copy of the License at:
  15:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
  17:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ******************************************************************************
  18:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
  19:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  20:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  21:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #ifndef STM32G0xx_LL_ADC_H
  22:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define STM32G0xx_LL_ADC_H
  23:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  24:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #ifdef __cplusplus
  25:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** extern "C" {
  26:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #endif
  27:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  28:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  29:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #include "stm32g0xx.h"
  30:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  31:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @addtogroup STM32G0xx_LL_Driver
  32:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
ARM GAS  /tmp/ccjg7X18.s 			page 2


  33:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
  34:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  35:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #if defined (ADC1)
  36:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  37:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  38:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
  39:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
  40:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  41:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  42:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  43:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  44:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  45:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  46:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
  47:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
  48:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  49:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  50:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  51:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  52:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  53:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  54:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  55:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  56:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  57:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 0UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ1" 
  58:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  ( 4UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ2" 
  59:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  ( 8UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ3" 
  60:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ4" 
  61:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  (16UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ5" 
  62:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  (20UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ6" 
  63:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ7" 
  64:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (28UL) /* Value equivalent to bitfield "ADC_CHSELR_SQ8" 
  65:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  66:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  67:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  68:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
  69:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
  70:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - regular trigger source                                                   */
  71:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - regular trigger edge                                                     */
  72:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR1_EXTEN_0) /* Trigger edge set to rising edge 
  73:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  74:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
  75:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  76:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  77:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTSEL) << (4U 
  78:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  79:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  80:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              ((ADC_CFGR1_EXTSEL)                            << (4U 
  81:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  82:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
  83:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
  84:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
  85:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN) << (4U *
  86:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  87:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  88:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)              << (4U *
  89:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
ARM GAS  /tmp/ccjg7X18.s 			page 3


  90:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
  91:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_CFGR1_EXTSEL
  92:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Value equivalent to bitfield "ADC_CFGR1_EXTEN"
  93:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  94:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  95:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
  96:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
  97:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
  98:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - channel identifier defined by number                                     */
  99:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
 102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR1_AWD1CH)
 103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_CHSELR_CHSEL)
 104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_SEQ     (ADC_CHSELR_SQ1 << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) 
 105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)/* Value equivalent to bitfield "ADC_CHANNEL_ID_N
 106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (0x0000001FUL) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH)
 113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* channels literals definition.                                              */
 116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (                                                       
 118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (                                                       
 119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (                                                       
 120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (                                          ADC_CFGR1_AWD
 121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (                                          ADC_CFGR1_AWD
 122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (                                          ADC_CFGR1_AWD
 123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (                                          ADC_CFGR1_AWD
 124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (                     ADC_CFGR1_AWD1CH_3                
 125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (                     ADC_CFGR1_AWD1CH_3                
 126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (                     ADC_CFGR1_AWD1CH_3                
 127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (                     ADC_CFGR1_AWD1CH_3                
 128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (                     ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD
 129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (                     ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD
 130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (                     ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD
 131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (                     ADC_CFGR1_AWD1CH_3 | ADC_CFGR1_AWD
 132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR1_AWD1CH_4                                     
 133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR1_AWD1CH_4                                     
 134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR1_AWD1CH_4                                     
 135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* channels literals definition.                                              */
 138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_CHSELR_CHSEL0)
 139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_CHSELR_CHSEL1)
 140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_CHSELR_CHSEL2)
 141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_CHSELR_CHSEL3)
 142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_CHSELR_CHSEL4)
 143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_CHSELR_CHSEL5)
 144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_CHSELR_CHSEL6)
 145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_CHSELR_CHSEL7)
 146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_CHSELR_CHSEL8)
ARM GAS  /tmp/ccjg7X18.s 			page 4


 147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_CHSELR_CHSEL9)
 148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_CHSELR_CHSEL10)
 149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_CHSELR_CHSEL11)
 150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_CHSELR_CHSEL12)
 151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_CHSELR_CHSEL13)
 152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_CHSELR_CHSEL14)
 153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_CHSELR_CHSEL15)
 154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_CHSELR_CHSEL16)
 155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_CHSELR_CHSEL17)
 156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_CHSELR_CHSEL18)
 157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Internal mask for ADC channel sampling time:                               */
 159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* To select into literals LL_ADC_SAMPLINGTIME_x                              */
 160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* the relevant bits for:                                                     */
 161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* (concatenation of multiple bits used in register SMPR)                     */
 162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - ADC channels sampling time: setting channel wise, to map each channel    */
 163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*   on one of the common sampling time available.                            */
 164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - ADC channels common sampling time: set a sampling time into one of the   */
 165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*   common sampling time available.                                          */
 166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_SAMPLING_TIME_CH_MASK          (ADC_CHANNEL_ID_BITFIELD_MASK << ADC_SMPR_SMPSEL0_BITOFF
 167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_MASK         (ADC_SMPR_SMP2 | ADC_SMPR_SMP1)
 168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_SAMPLING_TIME_SMP_SHIFT_MASK   (ADC_SMPR_SMP2_BITOFFSET_POS | ADC_SMPR_SMP1_BITOFFSET_P
 169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*   selection of ADC group (ADC group regular).                              */
 176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
 177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*   selection on groups.                                                     */
 178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_BITOFFSET_POS (20UL)
 191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR1_AWD1CH | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL
 193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL) /* Position of bits ADC_AWD_CRx_REGOFFSET in ADC_
 197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET + (1UL << ADC_AWD_CRX_REGOFFSET_B
 202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)     /* Position of bits ADC_
ARM GAS  /tmp/ccjg7X18.s 			page 5


 204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_BITOFFSET_POS (20UL)
 208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* ADC registers bits positions */
 212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CFGR1_RES_BITOFFSET_POS        ( 3UL) /* Value equivalent to bitfield "ADC_CFGR1_RES" p
 213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CFGR1_AWDSGL_BITOFFSET_POS     (22UL) /* Value equivalent to bitfield "ADC_CFGR1_AWDSGL
 214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (16UL) /* Value equivalent to bitfield "ADC_TR1_HT1" pos
 215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL0_BITOFFSET_POS    ( 0UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL1_BITOFFSET_POS    ( 1UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL2_BITOFFSET_POS    ( 2UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL3_BITOFFSET_POS    ( 3UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL4_BITOFFSET_POS    ( 4UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL5_BITOFFSET_POS    ( 5UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL6_BITOFFSET_POS    ( 6UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL7_BITOFFSET_POS    ( 7UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL8_BITOFFSET_POS    ( 8UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL9_BITOFFSET_POS    ( 9UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL10_BITOFFSET_POS   (10UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL11_BITOFFSET_POS   (11UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL12_BITOFFSET_POS   (12UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL13_BITOFFSET_POS   (13UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL14_BITOFFSET_POS   (14UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL15_BITOFFSET_POS   (15UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL16_BITOFFSET_POS   (16UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL17_BITOFFSET_POS   (17UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CHSELR_CHSEL18_BITOFFSET_POS   (18UL) /* Value equivalent to bitfield "ADC_CHSELR_CHSEL
 234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_SMPR_SMP1_BITOFFSET_POS        ( 0UL) /* Value equivalent to bitfield "ADC_SMPR_SMP1" p
 235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_SMPR_SMP2_BITOFFSET_POS        ( 4UL) /* Value equivalent to bitfield "ADC_SMPR_SMP2" p
 236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_SMPR_SMPSEL0_BITOFFSET_POS     ( 8UL) /* Value equivalent to bitfield "ADC_SMPR_SMPSEL0
 237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* ADC registers bits groups */
 240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_ADSTP | ADC_CR_ADSTART | ADC_CR_A
 241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* ADC internal channels related definitions */
 244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF75AAUL)) /* Internal voltage referen
 246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define VREFINT_CAL_VREF                   ( 3000UL)                    /* Analog voltage reference
 247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Temperature sensor */
 248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF75A8UL)) /* Internal temperature sen
 249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFF75CAUL)) /* Internal temperature sen
 250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (( int32_t)   30)            /* Internal temperature sen
 251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (( int32_t)  130)            /* Internal temperature sen
 252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          ( 3000UL)                    /* Analog voltage reference
 253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
ARM GAS  /tmp/ccjg7X18.s 			page 6


 261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a register from a register basis from which an offset
 268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is applied.
 269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Pointer to register address
 272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****  ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and multimode
 290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         sharing the same ADC common instance):
 294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         disabled.
 296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** typedef struct
 298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              
 302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is conditioned to ADC state:
 313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC instance must be disabled.
 314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
ARM GAS  /tmp/ccjg7X18.s 			page 7


 318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         refer to description of each function for setting
 322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         conditioned to ADC state.
 323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** typedef struct
 325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t Clock;                       /*!< Set ADC instance clock source and prescaler.
 327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_CLOCK_
 328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @note On this STM32 serie, this parameter has some clo
 329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    ADC clock synchronous (from PCLK) with prescaler
 330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    (APB prescaler configured inside the RCC must be
 331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              
 332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              
 333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              For more details, refer to description of this functio
 335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              
 339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              
 344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
 347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              
 349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (functions with prefix "REG").
 359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is conditioned to ADC state:
 361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC instance must be disabled.
 362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         refer to description of each function for setting
 370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         conditioned to ADC state.
 371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** typedef struct
 373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
ARM GAS  /tmp/ccjg7X18.s 			page 8


 375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @note On this STM32 serie, setting trigger source to e
 377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              
 380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              
 385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                    (depending on the sequencer mode: scan length of
 391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              
 392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              
 398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              
 403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              data preserved or overwritten.
 407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              
 409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_CCRDY                  ADC_ISR_CCRDY      /*!< ADC flag ADC channel configurati
 429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
ARM GAS  /tmp/ccjg7X18.s 			page 9


 432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_FLAG_EOCAL                  ADC_ISR_EOCAL      /*!< ADC flag end of calibration */
 437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_CCRDY                    ADC_IER_CCRDYIE    /*!< ADC interruption channel configu
 447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_IT_EOCAL                    ADC_IER_EOCALIE    /*!< ADC interruption ADC end of cali
 455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* DMA transfer.                                                              */
 464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000UL) /* ADC group regular conversion data re
 466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                                        /*
 474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
 476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
ARM GAS  /tmp/ccjg7X18.s 			page 10


 489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_FREQ_MODE  ADC common - Clock frequency mode
 490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_FREQ_MODE_HIGH        (0x00000000UL)         /*!< ADC clock mode to high frequ
 493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_FREQ_MODE_LOW         (ADC_CCR_LFMEN)        /*!< ADC clock mode to low freque
 494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
 503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)         /*!< ADC measurement pathes all d
 507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)         /*!< ADC measurement path to inte
 509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)       /*!< ADC measurement path to inte
 510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CLOCK_SOURCE  ADC instance - Clock source
 515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CFGR2_CKMODE_1)                                  /*
 518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CFGR2_CKMODE_0)                                  /*
 519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CFGR2_CKMODE_1 | ADC_CFGR2_CKMODE_0)             /*
 520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC                 (0x00000000UL)                                        /*
 521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                  ADC_CFGR1_RES_0) /*!< ADC resolution 
 530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR1_RES_1                  ) /*!< ADC resolution 
 531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR1_RES_1 | ADC_CFGR1_RES_0) /*!< ADC resolution 
 532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)         /*!< ADC conversion data alignmen
 540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR1_ALIGN)      /*!< ADC conversion data alignmen
 541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
ARM GAS  /tmp/ccjg7X18.s 			page 11


 546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)                      /*!< No ADC low powe
 549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR1_WAIT)                    /*!< ADC low power m
 550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_LP_AUTOPOWEROFF             (ADC_CFGR1_AUTOFF)                  /*!< ADC low power m
 551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF    (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF) /*!< ADC low power m
 552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_FREQ  ADC group regular - Trigger frequency mode
 557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_HIGH           (0x00000000UL)            /*!< ADC trigger frequency mod
 560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_TRIGGER_FREQ_LOW            (ADC_CFGR2_LFTRIG)        /*!< ADC trigger frequency mod
 561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON  ADC instance - Sampling time common to a group of chan
 566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** * @{
 567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** */
 568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_1       (ADC_SMPR_SMP1_BITOFFSET_POS)                           
 569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_2       (ADC_SMPR_SMP2_BITOFFSET_POS | ADC_SAMPLING_TIME_CH_MASK
 570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL) /*!< ADC group regular (available on all 
 578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_BITFIELD ) /*!< A
 586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_BITFIELD ) /*!< A
 587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_BITFIELD ) /*!< A
 588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_BITFIELD ) /*!< A
 589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_BITFIELD ) /*!< A
 590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_BITFIELD ) /*!< A
 591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_BITFIELD ) /*!< A
 592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_BITFIELD ) /*!< A
 593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_BITFIELD ) /*!< A
 594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_BITFIELD ) /*!< A
 595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_BITFIELD) /*!< A
 596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_BITFIELD) /*!< A
 597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_BITFIELD) /*!< A
 598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_BITFIELD) /*!< A
 599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_BITFIELD) /*!< A
 600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_BITFIELD) /*!< A
 601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_BITFIELD) /*!< A
 602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_BITFIELD) /*!< A
ARM GAS  /tmp/ccjg7X18.s 			page 12


 603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_BITFIELD) /*!< A
 604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_13 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_12 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_14 | ADC_CHANNEL_ID_INTERNAL_CH)  /*!< A
 607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                          
 615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (                                                       
 616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH4       (                                          ADC_CFGR1_EXT
 617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #if defined(TIM2)
 618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (                     ADC_CFGR1_EXTSEL_1                
 619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #endif
 620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (                     ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXT
 621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #if defined(TIM6)
 622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO      (ADC_CFGR1_EXTSEL_2                      | ADC_CFGR1_EXT
 623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #endif
 624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #if defined(TIM15)
 625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM15_TRGO     (ADC_CFGR1_EXTSEL_2                                     
 626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #endif
 627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR1_EXTSEL_2 | ADC_CFGR1_EXTSEL_1 | ADC_CFGR1_EXT
 628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                    ADC_CFGR1_EXTEN_0) /*!< ADC group r
 636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR1_EXTEN_1                    ) /*!< ADC group r
 637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR1_EXTEN_1 | ADC_CFGR1_EXTEN_0) /*!< ADC group r
 638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** * @{
 644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** */
 645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)          /*!< ADC conversions are perform
 646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR1_CONT)        /*!< ADC conversions are perform
 647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)                        /*!< ADC conversio
 655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                   ADC_CFGR1_DMAEN)  /*!< ADC conversio
 656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN)  /*!< ADC conversio
 657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
ARM GAS  /tmp/ccjg7X18.s 			page 13


 660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** * @{
 663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** */
 664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)         /*!< ADC group regular behavior i
 665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR1_OVRMOD)     /*!< ADC group regular behavior i
 666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_MODE  ADC group regular - Sequencer configuration flexibility
 671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** * @{
 672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** */
 673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_FIXED               (0x00000000UL)         /*!< Sequencer configured to not 
 674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_CONFIGURABLE        (ADC_CFGR1_CHSELRMOD)  /*!< Sequencer configured to full
 675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
 680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (ADC_CHSELR_SQ2)       /*!< ADC group regular sequencer 
 683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (ADC_CHSELR_SQ3)       /*!< ADC group regular sequencer 
 684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (ADC_CHSELR_SQ4)       /*!< ADC group regular sequencer 
 685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (ADC_CHSELR_SQ5)       /*!< ADC group regular sequencer 
 686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (ADC_CHSELR_SQ6)       /*!< ADC group regular sequencer 
 687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (ADC_CHSELR_SQ7)       /*!< ADC group regular sequencer 
 688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (ADC_CHSELR_SQ8)       /*!< ADC group regular sequencer 
 689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (0x00000000UL)         /*!< ADC group regular sequencer 
 690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_DIRECTION  ADC group regular - Sequencer scan direction
 695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_FORWARD    (0x00000000UL)         /*!< On this STM32 serie, paramet
 698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD   (ADC_CFGR1_SCANDIR)    /*!< On this STM32 serie, paramet
 699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
 704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                                          
 707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (ADC_CFGR1_DISCEN)                                      
 708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
 713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_REG_RANK_1_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_REG_RANK_2_SQRX_BITOFFSET_POS)  /*!< ADC group regu
ARM GAS  /tmp/ccjg7X18.s 			page 14


 717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_REG_RANK_3_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_REG_RANK_4_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_REG_RANK_5_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_REG_RANK_6_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_REG_RANK_7_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_REG_RANK_8_SQRX_BITOFFSET_POS)  /*!< ADC group regu
 723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
 728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_1CYCLE_5       (0x00000000UL)                                        /*
 731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_3CYCLES_5      (ADC_SMPR_SMP1_0)                                     /*
 732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_7CYCLES_5      (ADC_SMPR_SMP1_1)                                     /*
 733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (ADC_SMPR_SMP1_1 | ADC_SMPR_SMP1_0)                   /*
 734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_19CYCLES_5     (ADC_SMPR_SMP1_2)                                     /*
 735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_39CYCLES_5     (ADC_SMPR_SMP1_2 | ADC_SMPR_SMP1_0)                   /*
 736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_79CYCLES_5     (ADC_SMPR_SMP1_2 | ADC_SMPR_SMP1_1)                   /*
 737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_160CYCLES_5    (ADC_SMPR_SMP1_2 | ADC_SMPR_SMP1_1 | ADC_SMPR_SMP1_0) /*
 738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
 743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
 746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR2_REGOFFSET) /*!<
 747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR3_REGOFFSET) /*!<
 748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
 753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
 756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK                         | ADC
 757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)         | ADC
 758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)         | ADC
 759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)         | ADC
 760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)         | ADC
 761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)         | ADC
 762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)         | ADC
 763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)         | ADC
 764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)         | ADC
 765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)         | ADC
 766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)         | ADC
 767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)         | ADC
 768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)         | ADC
 769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)         | ADC
 770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)         | ADC
 771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)         | ADC
 772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)         | ADC
 773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)         | ADC
ARM GAS  /tmp/ccjg7X18.s 			page 15


 774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)         | ADC
 775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)         | ADC
 776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT    & ADC_CHANNEL_ID_MASK) | ADC
 777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR & ADC_CHANNEL_ID_MASK) | ADC
 778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT       & ADC_CHANNEL_ID_MASK) | ADC
 779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
 784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR1_HT1              ) /*!< ADC analog watchdog thr
 787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (              ADC_TR1_LT1) /*!< ADC analog watchdog thr
 788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR1_HT1 | ADC_TR1_LT1) /*!< ADC analog watchdog bot
 789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
 794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
 797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_OVSE)  /*
 798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
 803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)         /*!< ADC oversampling discontinuo
 806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TOVS)       /*!< ADC oversampling discontinuo
 807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
 812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                                          
 815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                      ADC_CFGR2_OVSR_0)
 816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                   ADC_CFGR2_OVSR_1                   )
 817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                   ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
 818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2                                      )
 819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2                    | ADC_CFGR2_OVSR_0)
 820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1                   )
 821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
 822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
 827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                                          
 830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
ARM GAS  /tmp/ccjg7X18.s 			page 16


 831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
 832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
 833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
 834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
 835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
 836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
 837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
 838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
 844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
 845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         not timeout values.
 846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
 847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         above each literal definition.
 848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   
 851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
 852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       not timeout values.                                                  */
 853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
 854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
 855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
 856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
 857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       STM32 serie:                                                         */
 858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 82/fADC.                    */
 859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
 860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
 861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
 862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
 863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
 864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*         cycles                                                             */
 865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
 866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*         configuration.                                                     */
 867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
 868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
 870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
 871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
 872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Unit: us                                                                   */
 873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)  /*!< Delay for ADC stabilization time (ADC vol
 874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
 876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
 877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
 878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Unit: us                                                                   */
 879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US       ( 12UL)  /*!< Delay for internal voltage reference stabi
 880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
 882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
 883:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* parameter "tSTART").                                                       */
 884:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Unit: us                                                                   */
 885:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US    ( 10UL)  /*!< Delay for temperature sensor stabilization
 886:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 887:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
ARM GAS  /tmp/ccjg7X18.s 			page 17


 888:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Note: On this STM32 serie, a minimum number of ADC clock cycles            */
 889:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
 890:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
 891:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
 892:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
 893:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
 894:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES (  2UL)  /*!< Delay required between ADC end of calibr
 895:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 896:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 897:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 898:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 900:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 903:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 904:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 905:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
 906:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
 907:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 908:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 909:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 910:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
 911:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 914:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 915:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Write a value in ADC register
 916:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
 917:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __REG__ Register to be written
 918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
 919:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
 920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 921:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
 922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 923:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 924:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Read a value in ADC register
 925:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
 926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __REG__ Register to be read
 927:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Register value
 928:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 929:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
 930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 931:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
 932:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 933:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 934:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
 935:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
 936:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 937:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 938:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
 939:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
 940:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
 941:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Example:
 942:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
 943:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           will return decimal number "4".
 944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
ARM GAS  /tmp/ccjg7X18.s 			page 18


 945:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         number is returned, either defined with number
 946:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
 947:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
 948:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
 949:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
 950:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
 951:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
 952:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
 953:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
 954:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
 955:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
 956:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
 957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
 958:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
 959:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
 960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
 961:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
 962:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
 963:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
 964:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
 965:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
 966:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
 967:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
 968:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
 969:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
 970:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         
 971:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
 972:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
 973:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
 974:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
 975:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
 976:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                                
 977:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL)                                         
 978:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     ? (                                                                                            
 979:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS         
 980:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       )                                                                                            
 981:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       :                                                                                            
 982:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       (                                                                                            
 983:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****        (((__CHANNEL__) & ADC_CHSELR_CHSEL0) == ADC_CHSELR_CHSEL0) ? (0UL) :                        
 984:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         (                                                                                          
 985:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****          (((__CHANNEL__) & ADC_CHSELR_CHSEL1) == ADC_CHSELR_CHSEL1) ? (1UL) :                      
 986:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           (                                                                                        
 987:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            (((__CHANNEL__) & ADC_CHSELR_CHSEL2) == ADC_CHSELR_CHSEL2) ? (2UL) :                    
 988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****             (                                                                                      
 989:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (((__CHANNEL__) & ADC_CHSELR_CHSEL3) == ADC_CHSELR_CHSEL3) ? (3UL) :                  
 990:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****               (                                                                                    
 991:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                (((__CHANNEL__) & ADC_CHSELR_CHSEL4) == ADC_CHSELR_CHSEL4) ? (4UL) :                
 992:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                 (                                                                                  
 993:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                  (((__CHANNEL__) & ADC_CHSELR_CHSEL5) == ADC_CHSELR_CHSEL5) ? (5UL) :              
 994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                   (                                                                                
 995:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                    (((__CHANNEL__) & ADC_CHSELR_CHSEL6) == ADC_CHSELR_CHSEL6) ? (6UL) :            
 996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                     (                                                                              
 997:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                      (((__CHANNEL__) & ADC_CHSELR_CHSEL7) == ADC_CHSELR_CHSEL7) ? (7UL) :          
 998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                       (                                                                            
 999:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                        (((__CHANNEL__) & ADC_CHSELR_CHSEL8) == ADC_CHSELR_CHSEL8) ? (8UL) :        
1000:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                         (                                                                          
1001:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                          (((__CHANNEL__) & ADC_CHSELR_CHSEL9) == ADC_CHSELR_CHSEL9) ? (9UL) :      
ARM GAS  /tmp/ccjg7X18.s 			page 19


1002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                           (                                                                        
1003:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                            (((__CHANNEL__) & ADC_CHSELR_CHSEL10) == ADC_CHSELR_CHSEL10) ? (10UL) : 
1004:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                             (                                                                      
1005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                              (((__CHANNEL__) & ADC_CHSELR_CHSEL11) == ADC_CHSELR_CHSEL11) ? (11UL) 
1006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                               (                                                                    
1007:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                (((__CHANNEL__) & ADC_CHSELR_CHSEL12) == ADC_CHSELR_CHSEL12) ? (12UL
1008:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                 (                                                                  
1009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                  (((__CHANNEL__) & ADC_CHSELR_CHSEL13) == ADC_CHSELR_CHSEL13) ? (13
1010:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                   (                                                                
1011:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                    (((__CHANNEL__) & ADC_CHSELR_CHSEL14) == ADC_CHSELR_CHSEL14) ? (
1012:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                     (                                                              
1013:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                      (((__CHANNEL__) & ADC_CHSELR_CHSEL15) == ADC_CHSELR_CHSEL15) ?
1014:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                       (                                                            
1015:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                        (((__CHANNEL__) & ADC_CHSELR_CHSEL16) == ADC_CHSELR_CHSEL16)
1016:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                         (                                                          
1017:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                          (((__CHANNEL__) & ADC_CHSELR_CHSEL17) == ADC_CHSELR_CHSEL1
1018:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                           (                                                        
1019:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            (((__CHANNEL__) & ADC_CHSELR_CHSEL18) == ADC_CHSELR_CHSE
1020:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                             (0UL)                                                  
1021:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                           )                                                        
1022:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                         )                                                          
1023:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                       )                                                            
1024:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                     )                                                              
1025:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                   )                                                                
1026:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                 )                                                                  
1027:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                               )                                                                    
1028:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                             )                                                                      
1029:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                           )                                                                        
1030:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                         )                                                                          
1031:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                       )                                                                            
1032:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                     )                                                                              
1033:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                   )                                                                                
1034:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                 )                                                                                  
1035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****               )                                                                                    
1036:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****             )                                                                                      
1037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           )                                                                                        
1038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         )                                                                                          
1039:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       )                                                                                            
1040:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   )
1041:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1042:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1043:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1044:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         from number in decimal format.
1045:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Example:
1046:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1047:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1048:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1049:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1050:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1051:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1052:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1053:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1054:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1055:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1056:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1057:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1058:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
ARM GAS  /tmp/ccjg7X18.s 			page 20


1059:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1060:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1061:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1062:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1063:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1064:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1065:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1066:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1067:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1068:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1069:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT    (2)
1070:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR (2)
1071:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (2)
1072:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         
1073:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
1074:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1075:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
1076:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1077:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1078:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1079:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1080:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                         \
1081:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (                                                                            \
1082:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) |                 \
1083:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    (ADC_CHSELR_CHSEL0 << (__DECIMAL_NB__))                                     \
1084:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   )
1085:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1087:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1090:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - ADC internal channel:
1091:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1092:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1093:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1094:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1095:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1096:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1098:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1099:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         returned from ADC registers,
1100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         because internal and external channels share the same channel
1101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         parameters definitions of driver.
1103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
ARM GAS  /tmp/ccjg7X18.s 			page 21


1116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         
1127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
1128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
1130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a value defined from parameter definition of
1146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         from ADC registers.
1149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         
ARM GAS  /tmp/ccjg7X18.s 			page 22


1173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
1174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
1176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or a value from functions where a channel number is
1209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         returned from ADC registers,
1210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         because internal and external channels share the same channel
1211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         parameters definitions of driver.
1213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
1216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
1217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
1218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (                                                                            \
1223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)                                     \
1226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   )
1227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
ARM GAS  /tmp/ccjg7X18.s 			page 23


1230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         from sequencer channel and groups definition.
1232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example:
1234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
1235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
1244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
1254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
1255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
1256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT    (2)
1258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR (2)
1259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (2)
1260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         
1261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
1262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
1263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
1264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
1265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
1266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
1272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG 
1273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG 
1274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG 
1275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG 
1276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG 
1277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG 
1278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG 
1279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG 
1280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG 
1281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG 
1282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
1283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
1284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
1285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
1286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
ARM GAS  /tmp/ccjg7X18.s 			page 24


1287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
1288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
1289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
1290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG
1291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
1292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
1293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG
1294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)
1297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         different of 12 bits.
1302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
1303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
1304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *            (< ADCx param >,
1308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *            );
1310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is 
1324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         different of 12 bits.
1325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
1331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *            );
1332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
1338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
1341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1U )))
1342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
ARM GAS  /tmp/ccjg7X18.s 			page 25


1344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
1345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
1346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
1348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
1349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
1350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
1351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
1352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
1353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)       \
1356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
1357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
1360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
1361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
1362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
1363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
1364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
1366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval ADC common register instance
1367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
1369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (ADC1_COMMON)
1370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
1373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC common instance are disabled.
1374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
1375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
1376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
1378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
1379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
1380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
1381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
1382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
1384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         are disabled.
1385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
1386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is enabled.
1387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
1389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   LL_ADC_IsEnabled(ADC1)
1390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
1393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
1394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
1395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
1396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (refer to reference manual).
1397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
ARM GAS  /tmp/ccjg7X18.s 			page 26


1401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
1403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
1405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL)))
1406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
1409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a resolution to another resolution.
1410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted 
1411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
1412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
1418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
1424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
1426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
1427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)            \
1428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (((__DATA__)                                                                 \
1429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL)))  \
1430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR1_RES_BITOFFSET_POS - 1UL))     \
1431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   )
1432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
1435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
1436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
1440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
1441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                       (unit: digital value).
1442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
1448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
1450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                       __ADC_DATA__,\
1451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                      \
1452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
1453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
1454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   )
1455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
ARM GAS  /tmp/ccjg7X18.s 			page 27


1458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
1459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         reference VrefInt.
1460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
1461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         stored in system memory for each device during production.
1462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
1463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         connected to pin Vref+.
1464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
1465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
1466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, calibration data of internal voltage reference
1467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
1468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         internal voltage reference VrefInt.
1470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
1473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
1474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
1480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
1482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                   \
1483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
1484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                 \
1485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                        (__ADC_RESOLUTION__),                   \
1486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                        LL_ADC_RESOLUTION_12B)                  \
1487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   )
1488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
1493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         stored in system memory for each device during production.
1494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Calculation formula:
1495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
1496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
1497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
1498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
1499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
1500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
1501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
1502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
1503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
1504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
1505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
1506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  parameters are correct (address and data).
1507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
1508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
1509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  less accurate than calibrated values),
1510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
1511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
1514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
ARM GAS  /tmp/ccjg7X18.s 			page 28


1515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, calibration data of temperature sensor
1517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
1518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
1519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         temperature sensor.
1520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
1521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
1522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
1523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
1524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
1525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
1526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                 sensor voltage has been measured.
1527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
1535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
1536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                   __ADC_RESOLUTION__)                              \
1537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
1538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                     (__ADC_RESOLUTION__),          \
1539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                     LL_ADC_RESOLUTION_12B)         \
1540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                    * (__VREFANALOG_VOLTAGE__))                                     \
1541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                   / TEMPSENSOR_CAL_VREFANALOG)                                     \
1542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
1543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****      ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
1544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
1545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    ) + TEMPSENSOR_CAL1_TEMP                                                        \
1546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   )
1547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
1550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
1551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
1552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (refer to device datasheet).
1553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Calculation formula:
1554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
1555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
1556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
1557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                   (unit: digital value)
1558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
1559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
1560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
1561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
1562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
1563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  of the current device has characteristics in line with
1564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  datasheet typical values.
1565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
1566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
1567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
1568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
1569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
1570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
1571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
ARM GAS  /tmp/ccjg7X18.s 			page 29


1572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
1573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
1574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
1575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
1576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
1577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
1578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                       On STM32G0, refer to device datasheet parameter "Avg_Slop
1579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
1580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                       On STM32G0, refer to device datasheet parameter "V30" (co
1581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
1582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
1583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
1584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
1585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This parameter can be one of the following values:
1586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
1591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
1593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
1594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
1595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
1596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
1597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                              __ADC_RESOLUTION__)               \
1598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   ((( (                                                                        \
1599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****        (int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
1600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                   / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
1601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                  * 1000UL)                                                     \
1602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****        -                                                                       \
1603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****        (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
1604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                  * 1000UL)                                                     \
1605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       )                                                                        \
1606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                 \
1607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****    ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                     \
1608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   )
1609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
1620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
1621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
1625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
1628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
ARM GAS  /tmp/ccjg7X18.s 			page 30


1629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
1630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
1633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
1634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
1635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   These ADC registers are data registers:
1636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
1637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
1638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
1639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
1640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example:
1641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
1642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
1643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
1644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
1645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
1646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
1647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
1648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
1649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
1650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_DMA_GetRegAddr
1651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
1652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
1653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
1654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval ADC register address
1655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
1657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
1658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
1659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   (void)(Register);
1660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   
1661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Retrieve address of register DR */
1662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)&(ADCx->DR);
1663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
1664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
1670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
1675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
1677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_SetCommonClock
1682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
1685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
ARM GAS  /tmp/ccjg7X18.s 			page 31


1686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
1687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
1688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
1689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
1690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
1691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
1692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
1693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
1694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
1695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
1696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
1697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
1698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to 
1699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock  
1700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             is set to clock source asynchronous.
1701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
1702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
1703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
1705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
1706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_PRESC, CommonClock);
1707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
1708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
1711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CCR      PRESC          LL_ADC_GetCommonClock
1712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1   (1)
1716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2   (1)
1717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4   (1)
1718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6   (1)
1719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8   (1)
1720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10  (1)
1721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12  (1)
1722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16  (1)
1723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32  (1)
1724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64  (1)
1725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128 (1)
1726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256 (1)
1727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
1728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) ADC common clock asynchronous prescaler is applied to 
1729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             each ADC instance if the corresponding ADC instance clock  
1730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             is set to clock source asynchronous.
1731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (refer to function @ref LL_ADC_SetClock() ).
1732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
1734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
1735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_PRESC));
1736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
1737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Legacy feature, useless on STM32G0 (ADC common clock low frequency
1740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****             mode is automatically managed by ADC peripheral on STM32G0).
1741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****             Function kept for legacy purpose.
1742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
ARM GAS  /tmp/ccjg7X18.s 			page 32


1743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
1744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
1745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
1746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CCR      LFMEN          LL_ADC_SetCommonFrequencyMode
1747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  CommonFrequencyMode This parameter can be one of the following values:
1750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_HIGH
1751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_LOW
1752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
1753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonFrequencyMode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Commo
1755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
1756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_LFMEN, CommonFrequencyMode);
1757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
1758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Legacy feature, useless on STM32G0 (ADC common clock low frequency
1761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****             mode is automatically managed by ADC peripheral on STM32G0).
1762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****             Function kept for legacy purpose.
1763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CCR      LFMEN          LL_ADC_GetCommonFrequencyMode
1764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_HIGH
1768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_FREQ_MODE_LOW
1769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonFrequencyMode(ADC_Common_TypeDef *ADCxy_COMMON)
1771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
1772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_LFMEN));
1773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
1774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to internal
1777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
1778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   One or several values can be selected.
1779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
1782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
1783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
1784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         temperature sensor stabilization time.
1785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet.
1786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
1787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US.
1788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
1789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         For ADC conversion of internal channels,
1790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a sampling time minimum value is required.
1791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet.
1792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
1794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
1795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
1796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
1797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
1798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
1799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
ARM GAS  /tmp/ccjg7X18.s 			page 33


1800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
1801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
1804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
1807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
1808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
1809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
1811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
1813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
1814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
1817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
1818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   One or several values can be selected.
1819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
1820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
1821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
1822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
1823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
1824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
1825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
1826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
1827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
1828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
1829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
1830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
1831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
1833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
1834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
1835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
1836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
1839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
1842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
1843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC instance clock source and prescaler.
1847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
1849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled.
1850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_SetClock
1851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
1852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ClockSource This parameter can be one of the following values:
1853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
1854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
1855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
1856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
ARM GAS  /tmp/ccjg7X18.s 			page 34


1857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         
1858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be configured using
1859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             function @ref LL_ADC_SetCommonClock().\n
1860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
1861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
1862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
1863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
1864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             cycle).
1865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Refer to reference manual.
1866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
1867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetClock(ADC_TypeDef *ADCx, uint32_t ClockSource)
1869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
1870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_CKMODE, ClockSource);
1871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
1872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC instance clock source and prescaler.
1875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    CKMODE         LL_ADC_GetClock
1876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
1877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
1879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
1880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1 (2)
1881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC (1)
1882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         
1883:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) Asynchronous clock prescaler can be retrieved using
1884:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             function @ref LL_ADC_GetCommonClock().\n
1885:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (2) Caution: This parameter has some clock ratio constraints:
1886:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             This configuration must be enabled only if PCLK has a 50%
1887:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             duty clock cycle (APB prescaler configured inside the RCC
1888:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             must be bypassed and the system clock must by 50% duty
1889:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             cycle).
1890:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Refer to reference manual.
1891:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1892:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetClock(ADC_TypeDef *ADCx)
1893:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
1894:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_CKMODE));
1895:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
1896:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1897:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1898:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
1899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
1900:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
1901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         without having to perform a new calibration using
1902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
1903:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1904:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
1905:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
1906:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on going on group regular.
1907:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_SetCalibrationFactor
1908:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
1909:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
1910:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
1911:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t CalibrationFactor)
1913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
ARM GAS  /tmp/ccjg7X18.s 			page 35


1914:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
1915:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CALFACT_CALFACT,
1916:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              CalibrationFactor);
1917:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
1918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1919:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
1921:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
1922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
1923:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
1924:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT        LL_ADC_GetCalibrationFactor
1925:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
1926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
1927:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1928:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(ADC_TypeDef *ADCx)
1929:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
1930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT, ADC_CALFACT_CALFACT));
1931:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
1932:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1933:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1934:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC resolution.
1935:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
1936:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1937:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1938:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
1939:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
1940:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
1941:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_SetResolution
1942:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
1943:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
1944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1945:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1946:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1947:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1948:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
1949:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1950:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
1951:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
1952:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_RES, Resolution);
1953:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
1954:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1955:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1956:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC resolution.
1957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
1958:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1959:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    RES            LL_ADC_GetResolution
1960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
1961:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1962:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1963:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1964:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1965:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1966:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1967:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
1968:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
1969:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_RES));
1970:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
ARM GAS  /tmp/ccjg7X18.s 			page 36


1971:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1972:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1973:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
1974:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
1975:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1976:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
1977:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
1978:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
1979:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
1980:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_SetDataAlignment
1981:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
1982:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
1983:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
1984:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
1985:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
1986:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
1987:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
1988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
1989:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_ALIGN, DataAlignment);
1990:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
1991:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
1992:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
1993:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
1994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
1995:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         dependencies to ADC resolutions.
1996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    ALIGN          LL_ADC_GetDataAlignment
1997:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
1998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1999:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2000:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2001:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef *ADCx)
2003:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2004:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_ALIGN));
2005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2007:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2008:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC low power mode.
2009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2010:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2011:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2012:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           in order to reduce power consumption.
2013:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2014:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2015:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           has been retrieved by user software.
2016:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2017:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           other conversion.
2018:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2019:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2020:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2021:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           applications.
2022:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           How to use this low power mode:
2023:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Do not use with interruption or DMA since these modes
2024:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             have to clear immediately the EOC flag to free the
2025:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             IRQ vector sequencer.
2026:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2027:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
ARM GAS  /tmp/ccjg7X18.s 			page 37


2028:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2029:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2030:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC conversion start.
2031:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2032:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2033:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2034:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2036:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2039:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         of delay during which ADC was idle.
2040:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2041:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2042:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC channel.
2043:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2044:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2045:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2046:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
2047:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_SetLowPowerMode\n
2048:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_SetLowPowerMode
2049:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2050:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
2051:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2052:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2053:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2054:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2055:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2056:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2057:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
2058:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2059:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF), LowPowerMode);
2060:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2061:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2062:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2063:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC low power mode:
2064:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2065:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2066:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2067:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           in order to reduce power consumption.
2068:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2069:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2070:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           has been retrieved by user software.
2071:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2072:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           other conversion.
2073:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2074:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2075:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2076:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           applications.
2077:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           How to use this low power mode:
2078:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Do not use with interruption or DMA since these modes
2079:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             have to clear immediately the EOC flag to free the
2080:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             IRQ vector sequencer.
2081:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2082:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2083:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2084:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
ARM GAS  /tmp/ccjg7X18.s 			page 38


2085:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC conversion start.
2086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2087:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2090:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2091:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2092:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2093:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2094:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         of delay during which ADC was idle.
2095:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2096:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC channel.
2098:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    WAIT           LL_ADC_GetLowPowerMode\n
2099:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    AUTOFF         LL_ADC_GetLowPowerMode
2100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOPOWEROFF
2105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT_AUTOPOWEROFF
2106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
2108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, (ADC_CFGR1_WAIT | ADC_CFGR1_AUTOFF)));
2110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC trigger frequency mode.
2114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   ADC trigger frequency mode must be set to low frequency when
2115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a duration is exceeded before ADC conversion start trigger event
2116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (between ADC enable and ADC conversion start trigger event
2117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or between two ADC conversion start trigger event).
2118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Duration value: Refer to device datasheet, parameter "tIdle".
2119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   When ADC trigger frequency mode is set to low frequency, 
2120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         some rearm cycles are inserted before performing ADC conversion
2121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         start, inducing a delay of 2 ADC clock cycles.
2122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Usage of ADC trigger frequency mode with ADC low power mode:
2123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Low power mode auto wait: Only the first ADC conversion
2124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           start trigger inserts the rearm delay.
2125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Low power mode auto power-off: ADC trigger frequency mode
2126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           is discarded.
2127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
2131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_SetTriggerFrequencyMode
2132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  TriggerFrequencyMode This parameter can be one of the following values:
2134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
2135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
2136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetTriggerFrequencyMode(ADC_TypeDef *ADCx, uint32_t TriggerFrequencyMod
2139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_LFTRIG, TriggerFrequencyMode);
2141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
ARM GAS  /tmp/ccjg7X18.s 			page 39


2142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC trigger frequency mode.
2145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    LFTRIG         LL_ADC_GetTriggerFrequencyMode
2146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_HIGH
2149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_TRIGGER_FREQ_LOW
2150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetTriggerFrequencyMode(ADC_TypeDef *ADCx)
2152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_LFTRIG));
2154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set sampling time common to a group of channels.
2158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, sampling time scope is on ADC instance:
2160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Sampling time common to all channels.
2161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
2162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
2163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         converted:
2164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
2165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
2166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         setting).
2167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
2168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TS_temp, ...).
2169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         On this STM32 serie, ADC processing time is:
2171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
2172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
2173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
2174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
2175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
2176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
2177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is required.
2178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet.
2179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
2183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_SetSamplingTimeCommonChannels\n
2184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_SetSamplingTimeCommonChannels
2185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
2187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
2188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
2189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
2190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
ARM GAS  /tmp/ccjg7X18.s 			page 40


2199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingTimeY
2201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
2203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
2204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              SamplingTime << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
2205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get sampling time common to a group of channels.
2209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Unit: ADC clock cycles.
2210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, sampling time scope is on ADC instance:
2211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Sampling time common to all channels.
2212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (on some other STM32 families, sampling time is channel wise)
2213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
2214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
2215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         this STM32 serie.
2216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll SMPR     SMP1           LL_ADC_GetSamplingTimeCommonChannels\n
2217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll SMPR     SMP2           LL_ADC_GetSamplingTimeCommonChannels
2218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
2220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
2221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
2222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_1CYCLE_5
2224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_3CYCLES_5
2225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_7CYCLES_5
2226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
2227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_19CYCLES_5
2228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_39CYCLES_5
2229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_79CYCLES_5
2230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_160CYCLES_5
2231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonChannels(ADC_TypeDef *ADCx, uint32_t SamplingT
2233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->SMPR, ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_S
2235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                     >> (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK));
2236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
2240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
2243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
2244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
2248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         external interrupt line).
2250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting trigger source to external trigger
2251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         also set trigger polarity to rising edge 
2252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
2253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
2254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
2255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
ARM GAS  /tmp/ccjg7X18.s 			page 41


2256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, ADC trigger frequency mode must be set
2257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         in function of frequency of ADC group regular conversion trigger.
2258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of function 
2259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_SetTriggerFrequencyMode().
2260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer 
2261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         depends on timers availability on the selected device.
2262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
2266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_SetTriggerSource\n
2267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_SetTriggerSource
2268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
2270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
2272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4
2273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO   (1)
2274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
2275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO   (1)
2276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO  (1)
2277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
2279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter not available on all devices
2280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
2283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN | ADC_CFGR1_EXTSEL, TriggerSource);
2285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
2289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
2290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         external interrupt line).
2291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
2292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         internal (SW start) or external, without detail
2293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
2294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (equivalent to 
2295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
2296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
2297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer 
2298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         depends on timers availability on the selected device.
2299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTSEL         LL_ADC_REG_GetTriggerSource\n
2300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    EXTEN          LL_ADC_REG_GetTriggerSource
2301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
2304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
2305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH4
2306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO   (1)
2307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
2308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO   (1)
2309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO  (1)
2310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
2311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *
2312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter not available on all devices
ARM GAS  /tmp/ccjg7X18.s 			page 42


2313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
2315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   register __IO uint32_t TriggerSource = READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTSEL | ADC_CFGR1_EXTEN);
2317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   
2318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
2319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* corresponding to ADC_CFGR1_EXTEN {0; 1; 2; 3}.                           */
2320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   register uint32_t ShiftExten = ((TriggerSource & ADC_CFGR1_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSE
2321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   
2322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR1_EXTEN and ADC_CFGR1_EXTSEL       */
2323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
2324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((TriggerSource
2325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR1_EXTSEL)
2326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR1_EXTEN)
2327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****          );
2328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
2332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or external.
2333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
2334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
2335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
2336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
2337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
2339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
2340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
2342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR1_EXTEN)) 
2344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
2348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
2353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_SetTriggerEdge
2354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
2356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
2362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_EXTEN, ExternalTriggerEdge);
2364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
2368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
2369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    EXTEN          LL_ADC_REG_GetTriggerEdge
ARM GAS  /tmp/ccjg7X18.s 			page 43


2370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
2373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
2374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
2375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
2377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_EXTEN));
2379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer configuration flexibility.
2383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer both modes
2384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
2385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         available:
2386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - sequencer configured to fully configurable:
2387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           sequencer length and each rank
2388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           affectation to a channel are configurable.
2389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Refer to description of function
2390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
2391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
2392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           are fixed by channel HW number.
2394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Refer to description of function
2395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
2396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
2400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
2401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Configurability This parameter can be one of the following values:
2403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
2404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
2405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerConfigurable(ADC_TypeDef *ADCx, uint32_t Configurabilit
2408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD, Configurability);
2410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer configuration flexibility.
2414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer both modes
2415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" are
2416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         available:
2417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - sequencer configured to fully configurable:
2418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           sequencer length and each rank
2419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           affectation to a channel are configurable.
2420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Refer to description of function
2421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerLength().
2422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - sequencer configured to not fully configurable:
2423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           are fixed by channel HW number.
2425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Refer to description of function
2426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerChannels().
ARM GAS  /tmp/ccjg7X18.s 			page 44


2427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR     CHSELRMOD      LL_ADC_REG_SetSequencerConfigurable
2428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_FIXED
2431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_CONFIGURABLE
2432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerConfigurable(ADC_TypeDef *ADCx)
2434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CHSELRMOD));
2436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
2440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
2441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
2442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
2443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           are configurable.
2445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This function performs configuration of:
2446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
2447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
2449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Sequencer ranks are selected using
2450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
2451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
2452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
2453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           are defined by channel number.
2455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This function performs configuration of:
2456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
2457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
2458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
2459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
2462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             highest channel number).
2463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Sequencer ranks are selected using
2464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
2465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           To set scan direction differently, refer to function
2466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           @ref LL_ADC_REG_SetSequencerScanDirection().
2467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer both modes
2468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" 
2469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         are available, they can be chosen using
2470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, after calling functions
2472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or @ref LL_ADC_REG_SetSequencerRanks(),
2474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Otherwise, performing some actions (configuration update,
2477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC conversion start, ... ) will be ignored.
2478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to reference manual for more details.
2479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
2480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
2481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
ARM GAS  /tmp/ccjg7X18.s 			page 45


2484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
2485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_SetSequencerLength\n
2486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_SetSequencerLength\n
2487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_SetSequencerLength\n
2488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_SetSequencerLength\n
2489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_SetSequencerLength\n
2490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_SetSequencerLength\n
2491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_SetSequencerLength\n
2492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_SetSequencerLength
2493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
2495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
2496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
2497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
2498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
2499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
2500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
2501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
2502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
2503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
2506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, SequencerNbRanks);
2508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
2512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
2513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
2514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
2515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           are configurable.
2517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This function retrieves:
2518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
2519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
2521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Sequencer ranks are selected using
2522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
2523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
2524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
2525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
2526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           are defined by channel number.
2527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This function retrieves:
2528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
2529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
2530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
2531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
2533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
2534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             highest channel number).
2535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Sequencer ranks are selected using
2536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
2537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *          To set scan direction differently, refer to function
2538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *          @ref LL_ADC_REG_SetSequencerScanDirection().
2539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer both modes
2540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" 
ARM GAS  /tmp/ccjg7X18.s 			page 46


2541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         are available, they can be chosen using
2542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
2544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
2545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_GetSequencerLength\n
2546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_GetSequencerLength\n
2547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_GetSequencerLength\n
2548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_GetSequencerLength\n
2549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_GetSequencerLength\n
2550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_GetSequencerLength\n
2551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_GetSequencerLength\n
2552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_GetSequencerLength
2553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
2556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
2557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
2558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
2559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
2560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
2561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
2562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
2563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(ADC_TypeDef *ADCx)
2565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   register __IO uint32_t ChannelsRanks = READ_BIT(ADCx->CHSELR, ADC_CHSELR_SQ_ALL);
2567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   register uint32_t SequencerLength = LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS;
2568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   register uint32_t RankIndex;
2569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   
2570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parse register for end of sequence identifier */
2571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   for(RankIndex = 0UL; RankIndex < (32U - 4U); RankIndex+=4U)
2572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   {
2573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     if((ChannelsRanks & (ADC_CHSELR_SQ2 << RankIndex)) == (ADC_CHSELR_SQ2 << RankIndex))
2574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     {
2575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       SequencerLength = (ADC_CHSELR_SQ2 << RankIndex);
2576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       break;
2577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     }
2578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
2579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   
2580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return SequencerLength;
2581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer scan direction.
2585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, parameter relevant only is sequencer is set
2586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         to mode not fully configurable,
2587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On some other STM32 families, this setting is not available and
2589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         the default scan direction is forward.
2590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
2594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_SetSequencerScanDirection
2595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ScanDirection This parameter can be one of the following values:
2597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
ARM GAS  /tmp/ccjg7X18.s 			page 47


2598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerScanDirection(ADC_TypeDef *ADCx, uint32_t ScanDirection
2602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_SCANDIR, ScanDirection);
2604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer scan direction.
2608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, parameter relevant only is sequencer is set
2609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         to mode not fully configurable,
2610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On some other STM32 families, this setting is not available and
2612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         the default scan direction is forward.
2613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    SCANDIR        LL_ADC_REG_GetSequencerScanDirection
2614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_FORWARD
2617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DIR_BACKWARD
2618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerScanDirection(ADC_TypeDef *ADCx)
2620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_SCANDIR));
2622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
2626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         number of ranks.
2628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular 
2629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
2630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
2634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_SetSequencerDiscont\n
2635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
2637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
2639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
2642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DISCEN, SeqDiscont);
2644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
2648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
2649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         number of ranks.
2650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    DISCEN         LL_ADC_REG_GetSequencerDiscont\n
2651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
2654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
ARM GAS  /tmp/ccjg7X18.s 			page 48


2655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
2657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DISCEN));
2659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
2663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         scan sequence rank.
2664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This function performs configuration of:
2665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
2667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer is
2668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
2669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         affectation to a channel are configurable.
2670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
2671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
2674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         enabled separately.
2676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, after calling functions
2678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetSequencerLength()
2679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or @ref LL_ADC_REG_SetSequencerRanks(),
2680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         it is mandatory to wait for the assertion of CCRDY flag
2681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         using @ref LL_ADC_IsActiveFlag_CCRDY().
2682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Otherwise, performing some actions (configuration update,
2683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC conversion start, ... ) will be ignored.
2684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to reference manual for more details.
2685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
2689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_SetSequencerRanks\n
2690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_SetSequencerRanks\n
2691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_SetSequencerRanks\n
2692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_SetSequencerRanks\n
2693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_SetSequencerRanks\n
2694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_SetSequencerRanks\n
2695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_SetSequencerRanks\n
2696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_SetSequencerRanks
2697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
2699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
2700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
2701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
2702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
2703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
2704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
2705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
2706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
2707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
2708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
ARM GAS  /tmp/ccjg7X18.s 			page 49


2712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
2724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
2726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
2730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         
2731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
2732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
2733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
2737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
2739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
2740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
2741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CHSELR,
2743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
2744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK_SEQ) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) <<
2745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
2749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         scan sequence rank.
2750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer is
2751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
2752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         affectation to a channel are configurable.
2753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
2754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Usage of the returned channel number:
2757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
2758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
2759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
2760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
2761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
2763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           as parameter for another function.
2764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - To get the channel number in decimal format:
2765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           process the returned value with the helper macro
2766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CHSELR   SQ1            LL_ADC_REG_GetSequencerRanks\n
2768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ2            LL_ADC_REG_GetSequencerRanks\n
ARM GAS  /tmp/ccjg7X18.s 			page 50


2769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ3            LL_ADC_REG_GetSequencerRanks\n
2770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ4            LL_ADC_REG_GetSequencerRanks\n
2771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ5            LL_ADC_REG_GetSequencerRanks\n
2772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ6            LL_ADC_REG_GetSequencerRanks\n
2773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ7            LL_ADC_REG_GetSequencerRanks\n
2774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   SQ8            LL_ADC_REG_GetSequencerRanks
2775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
2777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
2778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
2779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
2780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
2781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
2782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
2783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
2784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
2785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
2802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
2804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT    (2)
2806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR (2)
2807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT       (2)
2808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         
2809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
2810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
2811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().\n
2812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (2) For ADC channel read back from ADC register,
2813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             comparison with internal channel parameter to be done
2814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
2815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
2817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t) ((READ_BIT(ADCx->CHSELR,
2819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK))
2820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                       >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)
2821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                      ) << (ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
2822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                     );
2823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
ARM GAS  /tmp/ccjg7X18.s 			page 51


2826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on rank corresponding to
2827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         channel number.
2828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This function performs:
2829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Set channels selected by overwriting the current sequencer
2833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           configuration.
2834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer both modes
2835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" 
2836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         are available, they can be chosen using
2837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
2839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
2840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
2841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
2844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         enabled separately.
2846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
2851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   One or several values can be selected.
2852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChannels\n
2854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChannels\n
2855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChannels\n
2856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChannels\n
2857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChannels\n
2858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChannels\n
2859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChannels\n
2860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChannels\n
2861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChannels\n
2862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChannels\n
2863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChannels\n
2864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChannels\n
2865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChannels\n
2866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChannels\n
2867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChannels\n
2868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChannels\n
2869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChannels\n
2870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChannels\n
2871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChannels
2872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
2874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
ARM GAS  /tmp/ccjg7X18.s 			page 52


2883:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2884:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2885:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2886:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2887:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2888:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2889:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
2890:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2891:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
2892:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2893:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2894:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2895:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
2896:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         
2897:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
2898:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
2899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2900:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChannels(ADC_TypeDef *ADCx, uint32_t Channel)
2903:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2904:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
2905:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2906:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
2907:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2908:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2909:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2910:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Add channel to ADC group regular sequence: channel on rank corresponding to
2911:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         channel number.
2912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This function performs:
2913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2914:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2915:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
2916:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Set channels selected by adding them to the current sequencer
2917:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           configuration.
2918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer both modes
2919:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" 
2920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         are available, they can be chosen using
2921:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
2922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
2923:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
2924:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
2925:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
2926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
2927:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
2928:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
2929:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         enabled separately.
2930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
2931:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
2932:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
2933:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2934:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
2935:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   One or several values can be selected.
2936:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
2937:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChAdd\n
2938:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChAdd\n
2939:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChAdd\n
ARM GAS  /tmp/ccjg7X18.s 			page 53


2940:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChAdd\n
2941:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChAdd\n
2942:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChAdd\n
2943:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChAdd\n
2944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChAdd\n
2945:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChAdd\n
2946:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChAdd\n
2947:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChAdd\n
2948:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChAdd\n
2949:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChAdd\n
2950:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChAdd\n
2951:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChAdd\n
2952:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChAdd\n
2953:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChAdd\n
2954:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChAdd\n
2955:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChAdd
2956:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
2957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
2958:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2959:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
2960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
2961:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
2962:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
2963:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
2964:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2965:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2966:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2967:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2968:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2969:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2970:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2971:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2972:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2973:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
2974:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
2975:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
2976:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2977:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
2978:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
2979:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
2980:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         
2981:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
2982:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
2983:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
2984:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
2985:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
2986:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChAdd(ADC_TypeDef *ADCx, uint32_t Channel)
2987:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
2988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
2989:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
2990:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
2991:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
2992:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
2993:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
2994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Remove channel to ADC group regular sequence: channel on rank corresponding to
2995:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         channel number.
2996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This function performs:
ARM GAS  /tmp/ccjg7X18.s 			page 54


2997:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
2998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
2999:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3000:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Set channels selected by removing them to the current sequencer
3001:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           configuration.
3002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer both modes
3003:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" 
3004:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         are available, they can be chosen using
3005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3007:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3008:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3010:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3011:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
3012:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3013:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         enabled separately.
3014:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3015:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3016:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3017:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3018:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
3019:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   One or several values can be selected.
3020:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3021:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_SetSequencerChRem\n
3022:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_SetSequencerChRem\n
3023:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_SetSequencerChRem\n
3024:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_SetSequencerChRem\n
3025:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_SetSequencerChRem\n
3026:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_SetSequencerChRem\n
3027:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_SetSequencerChRem\n
3028:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_SetSequencerChRem\n
3029:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_SetSequencerChRem\n
3030:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_SetSequencerChRem\n
3031:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_SetSequencerChRem\n
3032:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_SetSequencerChRem\n
3033:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_SetSequencerChRem\n
3034:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_SetSequencerChRem\n
3035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_SetSequencerChRem\n
3036:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_SetSequencerChRem\n
3037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_SetSequencerChRem\n
3038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_SetSequencerChRem\n
3039:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_SetSequencerChRem
3040:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3041:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3042:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3043:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3044:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3045:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3046:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3047:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3048:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3049:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3050:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3051:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3052:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3053:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
ARM GAS  /tmp/ccjg7X18.s 			page 55


3054:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3055:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3056:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3057:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3058:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3059:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3060:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3061:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3062:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3063:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3064:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         
3065:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
3066:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3067:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3068:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3069:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3070:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerChRem(ADC_TypeDef *ADCx, uint32_t Channel)
3071:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3072:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3073:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3074:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->CHSELR, (Channel & ADC_CHANNEL_ID_BITFIELD_MASK));
3075:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3076:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3077:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3078:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on rank corresponding to
3079:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         channel number.
3080:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This function performs:
3081:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Channels order reading into each rank of scan sequence:
3082:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           rank of each channel is fixed by channel HW number
3083:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3084:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, ADC group regular sequencer both modes
3085:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         "fully configurable" or "not fully configurable" 
3086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         are available, they can be chosen using
3087:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetSequencerConfigurable().
3088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This function can be used with setting "not fully configurable".
3089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to description of functions @ref LL_ADC_REG_SetSequencerConfigurable()
3090:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and @ref LL_ADC_REG_SetSequencerLength().
3091:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3092:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3093:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, to measure internal channels (VrefInt,
3094:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3095:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         enabled separately.
3096:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3098:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3099:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
3101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   One or several values can be retrieved.
3102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
3103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CHSELR   CHSEL0         LL_ADC_REG_GetSequencerChannels\n
3104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL1         LL_ADC_REG_GetSequencerChannels\n
3105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL2         LL_ADC_REG_GetSequencerChannels\n
3106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL3         LL_ADC_REG_GetSequencerChannels\n
3107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL4         LL_ADC_REG_GetSequencerChannels\n
3108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL5         LL_ADC_REG_GetSequencerChannels\n
3109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL6         LL_ADC_REG_GetSequencerChannels\n
3110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL7         LL_ADC_REG_GetSequencerChannels\n
ARM GAS  /tmp/ccjg7X18.s 			page 56


3111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL8         LL_ADC_REG_GetSequencerChannels\n
3112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL9         LL_ADC_REG_GetSequencerChannels\n
3113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL10        LL_ADC_REG_GetSequencerChannels\n
3114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL11        LL_ADC_REG_GetSequencerChannels\n
3115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL12        LL_ADC_REG_GetSequencerChannels\n
3116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL13        LL_ADC_REG_GetSequencerChannels\n
3117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL14        LL_ADC_REG_GetSequencerChannels\n
3118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL15        LL_ADC_REG_GetSequencerChannels\n
3119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL16        LL_ADC_REG_GetSequencerChannels\n
3120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL17        LL_ADC_REG_GetSequencerChannels\n
3121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CHSELR   CHSEL18        LL_ADC_REG_GetSequencerChannels
3122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
3124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         
3147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
3148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerChannels(ADC_TypeDef *ADCx)
3152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   register uint32_t ChannelsBitfield = (uint32_t)READ_BIT(ADCx->CHSELR, ADC_CHSELR_CHSEL);
3154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   
3155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (   (((ChannelsBitfield & ADC_CHSELR_CHSEL0) >> ADC_CHSELR_CHSEL0_BITOFFSET_POS) * LL_ADC_
3156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL1) >> ADC_CHSELR_CHSEL1_BITOFFSET_POS) * LL_ADC_
3157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL2) >> ADC_CHSELR_CHSEL2_BITOFFSET_POS) * LL_ADC_
3158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL3) >> ADC_CHSELR_CHSEL3_BITOFFSET_POS) * LL_ADC_
3159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL4) >> ADC_CHSELR_CHSEL4_BITOFFSET_POS) * LL_ADC_
3160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL5) >> ADC_CHSELR_CHSEL5_BITOFFSET_POS) * LL_ADC_
3161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL6) >> ADC_CHSELR_CHSEL6_BITOFFSET_POS) * LL_ADC_
3162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL7) >> ADC_CHSELR_CHSEL7_BITOFFSET_POS) * LL_ADC_
3163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL8) >> ADC_CHSELR_CHSEL8_BITOFFSET_POS) * LL_ADC_
3164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL9) >> ADC_CHSELR_CHSEL9_BITOFFSET_POS) * LL_ADC_
3165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL10) >> ADC_CHSELR_CHSEL10_BITOFFSET_POS) * LL_AD
3166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL11) >> ADC_CHSELR_CHSEL11_BITOFFSET_POS) * LL_AD
3167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL12) >> ADC_CHSELR_CHSEL12_BITOFFSET_POS) * LL_AD
ARM GAS  /tmp/ccjg7X18.s 			page 57


3168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL13) >> ADC_CHSELR_CHSEL13_BITOFFSET_POS) * LL_AD
3169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL14) >> ADC_CHSELR_CHSEL14_BITOFFSET_POS) * LL_AD
3170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL15) >> ADC_CHSELR_CHSEL15_BITOFFSET_POS) * LL_AD
3171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL16) >> ADC_CHSELR_CHSEL16_BITOFFSET_POS) * LL_AD
3172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL17) >> ADC_CHSELR_CHSEL17_BITOFFSET_POS) * LL_AD
3173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #if defined(ADC_CCR_VBATEN)
3174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****            | (((ChannelsBitfield & ADC_CHSELR_CHSEL18) >> ADC_CHSELR_CHSEL18_BITOFFSET_POS) * LL_AD
3175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** #endif
3176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****          );
3177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
3181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - single mode: one conversion per trigger
3183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           conversions launched successively automatically.
3185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular 
3186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
3191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_SetContinuousMode
3192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
3194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
3199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_CONT, Continuous);
3201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
3205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - single mode: one conversion per trigger
3207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           conversions launched successively automatically.
3209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    CONT           LL_ADC_REG_GetContinuousMode
3210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
3216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_CONT));
3218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
3222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         mode:
ARM GAS  /tmp/ccjg7X18.s 			page 58


3225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           when number of DMA data transfers (number of
3227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC conversions) is reached.
3228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC conversions).
3232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         mode non-circular:
3235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
3238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
3244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_SetDMATransfer\n
3245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_SetDMATransfer
3246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
3248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
3254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG, DMATransfer);
3256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
3260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         mode:
3263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           when number of DMA data transfers (number of
3265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC conversions) is reached.
3266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC conversions).
3270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         mode non-circular:
3273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
3276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    DMAEN          LL_ADC_REG_GetDMATransfer\n
3279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    DMACFG         LL_ADC_REG_GetDMATransfer
3280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
ARM GAS  /tmp/ccjg7X18.s 			page 59


3282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef *ADCx)
3287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_DMAEN | ADC_CFGR1_DMACFG));
3289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
3293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         data preserved or overwritten.
3294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
3295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         other devices without this feature have a behavior
3296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         equivalent to data overwritten.
3297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
3298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
3299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         overrun should be set to data overwritten.
3300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
3304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_SetOverrun
3305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
3307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
3312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR1, ADC_CFGR1_OVRMOD, Overrun);
3314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
3318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         data preserved or overwritten.
3319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    OVRMOD         LL_ADC_REG_GetOverrun
3320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
3326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR1, ADC_CFGR1_OVRMOD));
3328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
3332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
3335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
3336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
ARM GAS  /tmp/ccjg7X18.s 			page 60


3339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
3340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Unit: ADC clock cycles.
3341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
3342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
3343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
3344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         converted:
3345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
3346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
3347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         setting).
3348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
3349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TS_temp, ...).
3350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
3351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
3352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         this STM32 serie.
3353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
3354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
3355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is required.
3356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet.
3357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
3361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll SMPR     SMPSEL0        LL_ADC_SetChannelSamplingTime\n
3362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL1        LL_ADC_SetChannelSamplingTime\n
3363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL2        LL_ADC_SetChannelSamplingTime\n
3364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL3        LL_ADC_SetChannelSamplingTime\n
3365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL4        LL_ADC_SetChannelSamplingTime\n
3366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL5        LL_ADC_SetChannelSamplingTime\n
3367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL6        LL_ADC_SetChannelSamplingTime\n
3368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL7        LL_ADC_SetChannelSamplingTime\n
3369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL8        LL_ADC_SetChannelSamplingTime\n
3370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL9        LL_ADC_SetChannelSamplingTime\n
3371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL10       LL_ADC_SetChannelSamplingTime\n
3372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL11       LL_ADC_SetChannelSamplingTime\n
3373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL12       LL_ADC_SetChannelSamplingTime\n
3374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL13       LL_ADC_SetChannelSamplingTime\n
3375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL14       LL_ADC_SetChannelSamplingTime\n
3376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL15       LL_ADC_SetChannelSamplingTime\n
3377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL16       LL_ADC_SetChannelSamplingTime\n
3378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL17       LL_ADC_SetChannelSamplingTime\n
3379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL18       LL_ADC_SetChannelSamplingTime
3380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
3382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
ARM GAS  /tmp/ccjg7X18.s 			page 61


3396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         
3405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
3406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  SamplingTimeY This parameter can be one of the following values:
3409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
3414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
3416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR,
3418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
3419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS) & (SamplingTimeY & ADC_SAMPLING_TIME_CH_MA
3420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****             );
3421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
3425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Unit: ADC clock cycles.
3426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
3427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
3428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
3429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to reference manual for ADC processing time of
3430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         this STM32 serie.
3431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll SMPR     SMPSEL0        LL_ADC_GetChannelSamplingTime\n
3432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL1        LL_ADC_GetChannelSamplingTime\n
3433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL2        LL_ADC_GetChannelSamplingTime\n
3434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL3        LL_ADC_GetChannelSamplingTime\n
3435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL4        LL_ADC_GetChannelSamplingTime\n
3436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL5        LL_ADC_GetChannelSamplingTime\n
3437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL6        LL_ADC_GetChannelSamplingTime\n
3438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL7        LL_ADC_GetChannelSamplingTime\n
3439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL8        LL_ADC_GetChannelSamplingTime\n
3440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL9        LL_ADC_GetChannelSamplingTime\n
3441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL10       LL_ADC_GetChannelSamplingTime\n
3442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL11       LL_ADC_GetChannelSamplingTime\n
3443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL12       LL_ADC_GetChannelSamplingTime\n
3444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL13       LL_ADC_GetChannelSamplingTime\n
3445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL14       LL_ADC_GetChannelSamplingTime\n
3446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL15       LL_ADC_GetChannelSamplingTime\n
3447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL16       LL_ADC_GetChannelSamplingTime\n
3448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL17       LL_ADC_GetChannelSamplingTime\n
3449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         SMPR     SMPSEL18       LL_ADC_GetChannelSamplingTime
3450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
ARM GAS  /tmp/ccjg7X18.s 			page 62


3453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
3454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
3455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
3456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
3457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
3458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15         (1)
3468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16         (1)
3469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17         (1)
3470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT
3472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR
3473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT
3474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         
3475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On STM32G0, parameter can be set in ADC group sequencer
3476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             only if sequencer is set in mode "not fully configurable",
3477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             refer to function @ref LL_ADC_REG_SetSequencerConfigurable().
3478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_1
3480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_2
3481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel)
3483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   register __IO uint32_t smpr = READ_REG(ADCx->SMPR);
3485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   
3486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Retrieve sampling time bit corresponding to the selected channel            */
3487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* and shift it to position 0.                                                 */ 
3488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   register uint32_t smp_channel_posbit0 = ((smpr & ADC_SAMPLING_TIME_CH_MASK)
3489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                            >> ((((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHAN
3490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   
3491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Select sampling time bitfield depending on sampling time bit value 0 or 1.  */
3492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return(  (~(smp_channel_posbit0) * LL_ADC_SAMPLINGTIME_COMMON_1)
3493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****          | (smp_channel_posbit0 * LL_ADC_SAMPLINGTIME_COMMON_2)   );
3494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
3498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
3501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
3502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
3506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
3507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on ADC group regular.
3508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
3509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is enabled.
ARM GAS  /tmp/ccjg7X18.s 			page 63


3510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
3511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
3512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
3513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, there are 2 kinds of analog watchdog
3514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         instance:
3515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC resolution configured).
3520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
3521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
3522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
3523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
3524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             be selected. For example:
3525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
3526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
3527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             groups regular and injected).
3528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
3529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
3530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
3531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC resolution configured).
3533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
3537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
3538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
3539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
3540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
3541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
3542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
3546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
3547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
3548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
3549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
3550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG 
3551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG 
3552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG 
3553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG 
3554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG 
3555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG 
3556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG 
3557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG 
3558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG 
3559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG 
3560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
3561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
3562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
3563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
3564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
3565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
3566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
ARM GAS  /tmp/ccjg7X18.s 			page 64


3567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
3568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG
3569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG
3570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG
3571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG
3572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
3575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
  27              		.loc 1 3575 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
3576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
3577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
3578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
3579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   register __IO uint32_t *preg;
  31              		.loc 1 3580 3 view .LVU1
3581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   
3582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   if(AWDy == LL_ADC_AWD1)
  32              		.loc 1 3582 3 view .LVU2
  33              		.loc 1 3582 5 is_stmt 0 view .LVU3
  34 0000 094B     		ldr	r3, .L4
3575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
  35              		.loc 1 3575 1 view .LVU4
  36 0002 30B5     		push	{r4, r5, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 12
  39              		.cfi_offset 4, -12
  40              		.cfi_offset 5, -8
  41              		.cfi_offset 14, -4
3575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
  42              		.loc 1 3575 1 view .LVU5
  43 0004 0400     		movs	r4, r0
3583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   {
3584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR1, 0UL);
  44              		.loc 1 3584 10 view .LVU6
  45 0006 0C30     		adds	r0, r0, #12
  46              	.LVL1:
3582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   {
  47              		.loc 1 3582 5 view .LVU7
  48 0008 9942     		cmp	r1, r3
  49 000a 05D0     		beq	.L3
3585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
3586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   else
3587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   {
3588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     preg = __ADC_PTR_REG_OFFSET(ADCx->AWD2CR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)) >> (ADC_AWD_CRX
  50              		.loc 1 3588 5 is_stmt 1 view .LVU8
  51              		.loc 1 3588 12 is_stmt 0 view .LVU9
  52 000c CB0C     		lsrs	r3, r1, #19
  53 000e 0425     		movs	r5, #4
  54 0010 1800     		movs	r0, r3
  55 0012 A034     		adds	r4, r4, #160
  56              	.LVL2:
  57              		.loc 1 3588 12 view .LVU10
  58 0014 2840     		ands	r0, r5
ARM GAS  /tmp/ccjg7X18.s 			page 65


  59 0016 0019     		adds	r0, r0, r4
  60              	.LVL3:
  61              	.L3:
3589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
3590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   
3591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(*preg,
  62              		.loc 1 3591 3 is_stmt 1 view .LVU11
  63 0018 044C     		ldr	r4, .L4+4
  64 001a 0368     		ldr	r3, [r0]
  65 001c 0C40     		ands	r4, r1
  66 001e A343     		bics	r3, r4
  67 0020 1140     		ands	r1, r2
  68              	.LVL4:
  69              		.loc 1 3591 3 is_stmt 0 view .LVU12
  70 0022 1943     		orrs	r1, r3
3592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
3593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              AWDChannelGroup & AWDy);
3594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
  71              		.loc 1 3594 1 view .LVU13
  72              		@ sp needed
3591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
  73              		.loc 1 3591 3 view .LVU14
  74 0024 0160     		str	r1, [r0]
  75              		.loc 1 3594 1 view .LVU15
  76 0026 30BD     		pop	{r4, r5, pc}
  77              	.L5:
  78              		.align	2
  79              	.L4:
  80 0028 0000C07C 		.word	2092957696
  81 002c FFFFC77C 		.word	2093481983
  82              		.cfi_endproc
  83              	.LFE221:
  85              		.section	.text.LL_ADC_REG_IsConversionOngoing,"ax",%progbits
  86              		.align	1
  87              		.syntax unified
  88              		.code	16
  89              		.thumb_func
  90              		.fpu softvfp
  92              	LL_ADC_REG_IsConversionOngoing:
  93              	.LVL5:
  94              	.LFB244:
3595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
3598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           as parameter for another function.
3606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           process the returned value with the helper macro
3608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
3610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           one channel.
ARM GAS  /tmp/ccjg7X18.s 			page 66


3611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, there are 2 kinds of analog watchdog
3612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         instance:
3613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC resolution configured).
3618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
3619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
3620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
3621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
3622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             be selected. For example:
3623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
3624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
3625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             groups regular and injected).
3626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
3627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
3628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
3629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC resolution configured).
3631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
3635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR1    AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
3636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
3637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR1    AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
3638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
3639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
3640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
3644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
3645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         
3646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
3647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
3648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
3649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
3650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             by bitfield.
3651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
3653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG
3654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG 
3655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG 
3656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG 
3657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG 
3658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG 
3659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG 
3660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG 
3661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG 
3662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG 
3663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG 
3664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG
3665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG
3666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG
3667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG
ARM GAS  /tmp/ccjg7X18.s 			page 67


3668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG
3669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG
3670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG
3671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG
3672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG
3673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy)
3675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR1, ((AWDy & ADC_AWD_CRX_REGOFFSET_M
3677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                                                    + ((AWDy & ADC_AWD_CR12_REGOFFSE
3678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   
3679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   register uint32_t AnalogWDMonitChannels = (READ_BIT(*preg, AWDy) & AWDy & ADC_AWD_CR_ALL_CHANNEL_
3680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   
3681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* If "AnalogWDMonitChannels" == 0, then the selected AWD is disabled       */
3682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
3683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
3684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* or a single channel.                                                     */
3685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   if(AnalogWDMonitChannels != 0UL)
3686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   {
3687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     if(AWDy == LL_ADC_AWD1)
3688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     {
3689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       if((AnalogWDMonitChannels & ADC_CFGR1_AWD1SGL) == 0UL)
3690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       {
3691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         /* AWD monitoring a group of channels */
3692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         AnalogWDMonitChannels = ((  AnalogWDMonitChannels
3693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                   | (ADC_AWD_CR23_CHANNEL_MASK)
3694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                  )
3695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                  & (~(ADC_CFGR1_AWD1CH))
3696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                 );
3697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       }
3698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       else
3699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       {
3700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         /* AWD monitoring a single channel */
3701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
3702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                  | (ADC_AWD2CR_AWD2CH_0 << (AnalogWDMonitChannels >> ADC_CFGR1_AWD1
3703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                 );
3704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       }
3705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     }
3706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     else
3707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     {
3708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       if((AnalogWDMonitChannels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
3709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       {
3710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         /* AWD monitoring a group of channels */
3711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         AnalogWDMonitChannels = (  ADC_AWD_CR23_CHANNEL_MASK
3712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                  | (ADC_CFGR1_AWD1EN)
3713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                 );
3714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       }
3715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       else
3716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       {
3717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         /* AWD monitoring a single channel */
3718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         /* AWD monitoring a group of channels */
3719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****         AnalogWDMonitChannels = (  AnalogWDMonitChannels
3720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                  | (ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL)
3721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                  | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDMonitChannels) << ADC_CF
3722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                                 );
3723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****       }
3724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****     }
ARM GAS  /tmp/ccjg7X18.s 			page 68


3725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
3726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   
3727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return AnalogWDMonitChannels;
3728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
3732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         high and low.
3733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
3734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
3735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
3738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, there are 2 kinds of analog watchdog
3739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         instance:
3740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC resolution configured).
3745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
3746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
3747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
3748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
3749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             be selected. For example:
3750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
3751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
3752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             groups regular and injected).
3753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
3754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
3755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
3756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC resolution configured).
3758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
3759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
3760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
3761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
3762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Examples:
3763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
3765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
3766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
3768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
3769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
3771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
3772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
3776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
3777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
3778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
3779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
3780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
3781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
ARM GAS  /tmp/ccjg7X18.s 			page 69


3782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
3786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
3787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
3788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
3789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
3792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
3794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
3795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* "AWDy".                                                                  */
3796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
3797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_MA
3799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   
3800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(*preg,
3801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
3802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
3803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
3807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         high or low.
3808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
3809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
3810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
3813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, there are 2 kinds of analog watchdog
3814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         instance:
3815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
3816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
3817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - groups monitored: ADC group regular.
3818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC resolution configured).
3820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
3821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
3822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
3823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
3824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             be selected. For example:
3825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
3826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
3827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             groups regular and injected).
3828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
3829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
3830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
3831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
3832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *             ADC resolution configured).
3833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
3834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
3835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
3836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
3837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Examples:
3838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
ARM GAS  /tmp/ccjg7X18.s 			page 70


3839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           on 12 bits (ratio 16 and shift 4, or ratio 32 and shift 5, ...):
3840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 16.
3841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           on 14 bits (ratio 16 and shift 2, or ratio 32 and shift 3, ...):
3843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC analog watchdog thresholds must be divided by 4.
3844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - Oversampling ratio and shift selected to have ADC conversion data
3845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           on 16 bits (ratio 16 and shift none, or ratio 32 and shift 1, ...):
3846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           ADC analog watchdog thresholds match directly to ADC data register.
3847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is not conditioned to
3848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC can be disabled, enabled with or without conversion on going
3850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on ADC group regular.
3851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
3852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
3853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
3854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
3855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
3856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
3857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
3861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
3862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
3863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
3864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
3865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
3866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
3869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
3871:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
3872:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
3873:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
3874:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3875:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   register __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, (((AWDy & ADC_AWD_TRX_REGOFFSET_MA
3876:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   
3877:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(*preg,
3878:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              AWDThresholdsHighLow,
3879:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
3880:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3881:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3882:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3883:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
3884:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
3885:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         concatenated.
3886:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
3887:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
3888:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         using helper macro:
3889:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
3890:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
3891:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
3892:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
3893:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
3894:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
3895:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
ARM GAS  /tmp/ccjg7X18.s 			page 71


3896:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
3897:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
3898:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
3899:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3900:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
3901:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
3902:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
3903:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
3904:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
3905:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
3906:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
3907:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
3908:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3909:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** */
3910:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AW
3911:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3912:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
3913:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
3914:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
3915:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
3916:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
3917:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   register const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, (((AWDy & ADC_AWD_TRX_REGOFF
3918:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   
3919:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
3920:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR1_LT1))
3921:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
3922:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****                    );
3923:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3924:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3925:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3926:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
3927:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3928:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3929:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
3930:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
3931:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3932:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3933:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3934:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC oversampling scope.
3935:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3936:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3937:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3938:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
3939:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_SetOverSamplingScope
3940:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3941:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
3942:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
3943:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
3944:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3945:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3946:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
3947:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3948:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_OVSE, OvsScope);
3949:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3950:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3951:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3952:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC oversampling scope.
ARM GAS  /tmp/ccjg7X18.s 			page 72


3953:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSE           LL_ADC_GetOverSamplingScope
3954:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3955:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3956:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
3957:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
3958:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3959:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
3960:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3961:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSE));
3962:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3963:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3964:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3965:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
3966:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on the selected ADC group.
3967:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
3968:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
3969:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           are done from 1 trigger)
3970:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
3971:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           needs a trigger)
3972:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
3973:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
3974:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3975:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
3976:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_SetOverSamplingDiscont
3977:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3978:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
3979:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
3980:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
3981:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
3982:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
3983:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
3984:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
3985:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TOVS, OverSamplingDiscont);
3986:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
3987:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
3988:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
3989:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
3990:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on the selected ADC group.
3991:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
3992:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
3993:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           are done from 1 trigger)
3994:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
3995:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           needs a trigger)
3996:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    TOVS           LL_ADC_GetOverSamplingDiscont
3997:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
3998:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3999:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
4000:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
4001:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4002:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
4003:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4004:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TOVS));
4005:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4006:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4007:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4008:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Set ADC oversampling
4009:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
ARM GAS  /tmp/ccjg7X18.s 			page 73


4010:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - ratio
4011:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - shift
4012:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4013:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4014:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4015:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
4016:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
4017:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
4018:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4019:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
4020:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
4021:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
4022:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
4023:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
4024:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
4025:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
4026:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
4027:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
4028:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
4029:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
4030:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
4031:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
4032:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
4033:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
4034:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
4035:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
4036:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
4037:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
4038:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4039:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4040:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
4041:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4042:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
4043:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4044:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4045:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4046:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
4047:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
4048:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4049:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
4050:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
4051:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
4052:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
4053:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
4054:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
4055:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
4056:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
4057:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
4058:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** */
4059:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
4060:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4061:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
4062:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4063:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4064:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4065:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
4066:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
ARM GAS  /tmp/ccjg7X18.s 			page 74


4067:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4068:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
4069:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
4070:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
4071:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
4072:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
4073:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
4074:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
4075:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
4076:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
4077:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
4078:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** */
4079:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
4080:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4081:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
4082:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4083:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4084:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4085:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
4086:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4087:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4088:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
4089:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
4090:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4091:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4092:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4093:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
4094:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, there are three possibilities to enable
4095:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         the voltage regulator:
4096:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - by enabling it manually
4097:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           using function @ref LL_ADC_EnableInternalRegulator().
4098:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - by launching a calibration
4099:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           using function @ref LL_ADC_StartCalibration().
4100:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - by enabling the ADC
4101:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           using function @ref LL_ADC_Enable().
4102:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, after ADC internal voltage regulator enable,
4103:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
4104:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
4105:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet, parameter "tADCVREG_STUP".
4106:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
4107:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4108:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4109:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be ADC disabled.
4110:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
4111:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4112:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4113:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
4115:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4116:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4117:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4118:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4120:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4121:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_ADVREGEN);
4122:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4123:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
ARM GAS  /tmp/ccjg7X18.s 			page 75


4124:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4125:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
4126:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4127:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4128:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be ADC disabled.
4129:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
4130:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4131:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4132:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4133:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
4134:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4135:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
4136:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4137:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4138:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4139:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
4140:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
4141:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4142:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
4143:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
4145:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
4147:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4148:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4149:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4150:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
4151:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, after ADC enable, a delay for 
4152:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
4153:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC conversion start.
4154:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
4155:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4156:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4157:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4158:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4159:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4160:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
4161:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
4162:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4163:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4164:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
4166:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4167:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4168:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4169:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4171:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4172:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_ADEN);
4173:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4174:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4175:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4176:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
4177:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4178:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4179:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
4180:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         on group regular.
ARM GAS  /tmp/ccjg7X18.s 			page 76


4181:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
4182:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4183:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4184:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
4186:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4187:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4188:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4189:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4191:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4192:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_ADDIS);
4193:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4194:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4195:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4196:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
4197:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4198:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4199:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
4201:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
4203:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
4205:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
4207:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4208:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4209:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4210:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
4211:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
4212:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4213:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
4214:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
4216:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
4218:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4219:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4220:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4221:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
4222:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
4223:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, a minimum number of ADC clock cycles
4224:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
4225:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
4226:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   In case of usage of ADC with DMA transfer:
4227:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         On this STM32 serie, ADC DMA transfer request should be disabled
4228:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         during calibration:
4229:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Calibration factor is available in data register
4230:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         and also transfered by DMA.
4231:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         To not insert ADC calibration factor among ADC conversion data
4232:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         in array variable, DMA transfer must be disabled during
4233:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         calibration.
4234:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (DMA transfer setting backup and disable before calibration,
4235:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         DMA transfer setting restore after calibration.
4236:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         Refer to functions @ref LL_ADC_REG_GetDMATransfer(),
4237:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         @ref LL_ADC_REG_SetDMATransfer() ).
ARM GAS  /tmp/ccjg7X18.s 			page 77


4238:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4239:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4240:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be ADC disabled.
4241:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration
4242:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4243:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4244:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4245:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx)
4246:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4247:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4248:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4249:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4250:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4251:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4252:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_ADCAL);
4253:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4254:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4255:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4256:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC calibration state.
4257:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
4258:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4259:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
4260:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4261:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
4262:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4263:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
4264:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4265:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4266:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4267:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
4268:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4269:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4270:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
4271:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
4272:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4273:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4274:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4275:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
4276:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, this function is relevant for both 
4277:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
4278:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
4279:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           starts immediately.
4280:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
4281:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
4282:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *           following the ADC start conversion command.
4283:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4284:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4285:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
4286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
4287:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         without ADC disable command on going.
4288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
4289:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4290:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4291:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
4293:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4294:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
ARM GAS  /tmp/ccjg7X18.s 			page 78


4295:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4296:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4298:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4299:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_ADSTART);
4300:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4301:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4302:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4303:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
4304:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, setting of this feature is conditioned to
4305:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC state:
4306:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
4307:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         without ADC disable command on going.
4308:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
4309:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4310:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4311:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
4313:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4314:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
4315:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
4316:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
4317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
4318:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
4319:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_ADSTP);
4320:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4321:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4322:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4323:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
4324:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
4325:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4326:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
4327:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4328:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
4329:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
  95              		.loc 1 4329 1 is_stmt 1 view -0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99              		@ link register save eliminated.
4330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 100              		.loc 1 4330 3 view .LVU17
 101              		.loc 1 4330 12 is_stmt 0 view .LVU18
 102 0000 8068     		ldr	r0, [r0, #8]
 103              	.LVL6:
4331:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 104              		.loc 1 4331 1 view .LVU19
 105              		@ sp needed
4330:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 106              		.loc 1 4330 74 view .LVU20
 107 0002 4007     		lsls	r0, r0, #29
 108 0004 C00F     		lsrs	r0, r0, #31
 109              		.loc 1 4331 1 view .LVU21
 110 0006 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE244:
 114              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
ARM GAS  /tmp/ccjg7X18.s 			page 79


 115              		.align	1
 116              		.weak	HAL_ADC_MspInit
 117              		.syntax unified
 118              		.code	16
 119              		.thumb_func
 120              		.fpu softvfp
 122              	HAL_ADC_MspInit:
 123              	.LVL7:
 124              	.LFB303:
 125              		.file 2 "Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c"
   1:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
   2:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ******************************************************************************
   3:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @file    stm32g0xx_hal_adc.c
   4:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @author  MCD Application Team
   5:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief   This file provides firmware functions to manage the following 
   6:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          functionalities of the Analog to Digital Convertor (ADC)
   7:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          peripheral:
   8:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *             ++ Initialization and Configuration of ADC
  10:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *           + Operation functions
  11:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *             ++ Start, stop, get result of conversions of regular
  12:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *                group, using 3 possible modes: polling, interruption or DMA.
  13:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *           + Control functions
  14:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *             ++ Channels configuration on regular group
  15:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *             ++ Analog Watchdog configuration
  16:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *           + State functions
  17:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *             ++ ADC state machine management
  18:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *             ++ Interrupts and flags management
  19:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          Other functions (extended functions) are available in file 
  20:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          "stm32g0xx_hal_adc_ex.c".
  21:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *
  22:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   @verbatim
  23:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ==============================================================================
  24:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      ##### ADC peripheral features #####
  25:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ==============================================================================
  26:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   [..]
  27:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) 12-bit, 10-bit, 8-bit or 6-bit configurable resolution.
  28:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  29:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) Interrupt generation at the end of regular conversion and in case of 
  30:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       analog watchdog or overrun events.
  31:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
  32:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) Single and continuous conversion modes.
  33:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
  34:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) Scan mode for conversion of several channels sequentially.
  35:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
  36:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) Data alignment with in-built data coherency.
  37:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
  38:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) Programmable sampling time (common to group of channels)
  39:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
  40:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) External trigger (timer or EXTI) with configurable polarity
  41:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
  42:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) DMA request generation for transfer of conversions data of regular group.
  43:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
  44:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) ADC calibration
  45:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
  46:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) ADC conversion of regular group.
  47:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
ARM GAS  /tmp/ccjg7X18.s 			page 80


  48:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) ADC supply requirements: 1.62 V to 3.6 V.
  49:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
  50:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   (+) ADC input range: from Vref- (connected to Vssa) to Vref+ (connected to 
  51:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       Vdda or to an external voltage reference).
  52:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  53:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  54:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      ##### How to use this driver #####
  55:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ==============================================================================
  56:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
  57:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  58:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      *** Configuration of top level parameters related to ADC ***
  59:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      ============================================================
  60:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      [..]
  61:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  62:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Enable the ADC interface
  63:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         (++) As prerequisite, ADC clock must be configured at RCC top level.
  64:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              Caution: On STM32G0, ADC clock frequency max is 35MHz (refer
  65:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       to device datasheet).
  66:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       Therefore, ADC clock source from RCC and ADC clock 
  67:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       prescaler must be configured to remain below
  68:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       this maximum frequency.
  69:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  70:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         (++) Two clock settings are mandatory: 
  71:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              (+++) ADC clock (core clock, also possibly conversion clock).
  72:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  73:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              (+++) ADC clock (conversions clock).
  74:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    Four possible clock sources: synchronous clock from APB clock (same as ADC core 
  75:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    or asynchronous clock from RCC level: SYSCLK, HSI16, PLLPCLK.
  76:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  77:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              (+++) Example:
  78:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    Into HAL_ADC_MspInit() (recommended code location) or with
  79:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    other device clock parameters configuration:
  80:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                (+++) __HAL_RCC_ADC_CLK_ENABLE();                  (mandatory: core clock)
  81:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  82:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         (++) ADC clock source and clock prescaler are configured at ADC level with
  83:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              parameter "ClockPrescaler" using function HAL_ADC_Init().
  84:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  85:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) ADC pins configuration
  86:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Enable the clock for the ADC GPIOs
  87:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_ENABLE()
  88:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Configure these ADC pins in analog mode
  89:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using function HAL_GPIO_Init()
  90:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  91:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
  92:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Configure the NVIC for ADC
  93:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
  94:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler() 
  95:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               into the function of corresponding ADC interruption vector 
  96:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               ADCx_IRQHandler().
  97:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
  98:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
  99:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Configure the DMA (DMA channel, mode normal or circular, ...)
 100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using function HAL_DMA_Init().
 101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Configure the NVIC for DMA
 102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Insert the ADC interruption handler function HAL_ADC_IRQHandler() 
 104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               into the function of corresponding DMA interruption vector 
ARM GAS  /tmp/ccjg7X18.s 			page 81


 105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               DMAx_Channelx_IRQHandler().
 106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      *** Configuration of ADC, group regular, channels parameters ***
 108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      ================================================================
 109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      [..]
 110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Configure the ADC parameters (resolution, data alignment, ...)
 112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         and regular group parameters (conversion trigger, sequencer, ...)
 113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         using function HAL_ADC_Init().
 114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Configure the channels for regular group parameters (channel number, 
 116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         channel rank into sequencer, ..., into regular group)
 117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         using function HAL_ADC_ConfigChannel().
 118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Optionally, configure the analog watchdog parameters (channels
 120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         monitored, thresholds, ...)
 121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         using function HAL_ADC_AnalogWDGConfig().
 122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      *** Execution of ADC conversions ***
 124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      ====================================
 125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      [..]
 126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Optionally, perform an automatic ADC calibration to improve the
 128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         conversion accuracy
 129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         using function HAL_ADCEx_Calibration_Start().
 130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) ADC driver can be used among three modes: polling, interruption,
 132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         transfer by DMA.
 133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         (++) ADC conversion by polling:
 135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_Start()
 137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Wait for ADC conversion completion 
 138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_PollForConversion()
 139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Retrieve conversion results 
 140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_Stop()
 143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         (++) ADC conversion by interruption: 
 145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_Start_IT()
 147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback()
 149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 (this function must be implemented in user program)
 150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Retrieve conversion results 
 151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_GetValue()
 152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_Stop_IT()
 154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         (++) ADC conversion with transfer by DMA:
 156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Activate the ADC peripheral and start conversions
 157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_Start_DMA()
 158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Wait for ADC conversion completion by call of function
 159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 HAL_ADC_ConvCpltCallback() or HAL_ADC_ConvHalfCpltCallback()
 160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 (these functions must be implemented in user program)
 161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Conversion results are automatically transferred by DMA into
ARM GAS  /tmp/ccjg7X18.s 			page 82


 162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 destination variable address.
 163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           (+++) Stop conversion and disable the ADC peripheral 
 164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 using function HAL_ADC_Stop_DMA()
 165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      [..]
 167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (@) Callback functions must be implemented in user program:
 169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+@) HAL_ADC_ErrorCallback()
 170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+@) HAL_ADC_LevelOutOfWindowCallback() (callback of analog watchdog)
 171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+@) HAL_ADC_ConvCpltCallback()
 172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+@) HAL_ADC_ConvHalfCpltCallback
 173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      *** Deinitialization of ADC ***
 175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      ============================================================
 176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      [..]
 177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Disable the ADC interface
 179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (++) ADC clock can be hard reset and disabled at RCC top level.
 180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         (++) Hard reset of ADC peripherals
 181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              using macro __ADCx_FORCE_RESET(), __ADCx_RELEASE_RESET().
 182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         (++) ADC clock disable
 183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              using the equivalent macro/functions as configuration step.
 184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              (+++) Example:
 185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    Into HAL_ADC_MspDeInit() (recommended code location) or with
 186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    other device clock parameters configuration:
 187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                (+++) RCC_OscInitStructure.OscillatorType = RCC_OSCILLATORTYPE_HSI14;
 188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                (+++) RCC_OscInitStructure.HSI14State = RCC_HSI14_OFF; (if not used for system clock
 189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                (+++) HAL_RCC_OscConfig(&RCC_OscInitStructure);
 190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) ADC pins configuration
 192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Disable the clock for the ADC GPIOs
 193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using macro __HAL_RCC_GPIOx_CLK_DISABLE()
 194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Optionally, in case of usage of ADC with interruptions:
 196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Disable the NVIC for ADC
 197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(ADCx_IRQn)
 198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     (#) Optionally, in case of usage of DMA:
 200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Deinitialize the DMA
 201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using function HAL_DMA_Init().
 202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (++) Disable the NVIC for DMA
 203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               using function HAL_NVIC_EnableIRQ(DMAx_Channelx_IRQn)
 204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
 206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     *** Callback registration ***
 208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     =============================================
 209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
 210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      The compilation flag USE_HAL_ADC_REGISTER_CALLBACKS, when set to 1,
 212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      allows the user to configure dynamically the driver callbacks.
 213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      Use Functions @ref HAL_ADC_RegisterCallback()
 214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      to register an interrupt callback.
 215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
 216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      Function @ref HAL_ADC_RegisterCallback() allows to register following callbacks:
 218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
ARM GAS  /tmp/ccjg7X18.s 			page 83


 219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      This function takes as parameters the HAL peripheral handle, the Callback ID
 228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      and a pointer to the user callback function.
 229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
 230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      Use function @ref HAL_ADC_UnRegisterCallback to reset a callback to the default
 232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      weak function.
 233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
 234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      @ref HAL_ADC_UnRegisterCallback takes as parameters the HAL peripheral handle,
 236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      and the Callback ID.
 237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      This function allows to reset following callbacks:
 238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) ConvCpltCallback               : ADC conversion complete callback
 239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) ConvHalfCpltCallback           : ADC conversion DMA half-transfer callback
 240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) LevelOutOfWindowCallback       : ADC analog watchdog 1 callback
 241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) ErrorCallback                  : ADC error callback
 242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) LevelOutOfWindow2Callback      : ADC analog watchdog 2 callback
 243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) LevelOutOfWindow3Callback      : ADC analog watchdog 3 callback
 244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) EndOfSamplingCallback          : ADC end of sampling callback
 245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) MspInitCallback                : ADC Msp Init callback
 246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        (+) MspDeInitCallback              : ADC Msp DeInit callback
 247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      [..]
 248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      By default, after the @ref HAL_ADC_Init() and when the state is @ref HAL_ADC_STATE_RESET
 250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      all callbacks are set to the corresponding weak functions:
 251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      examples @ref HAL_ADC_ConvCpltCallback(), @ref HAL_ADC_ErrorCallback().
 252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      Exception done for MspInit and MspDeInit functions that are
 253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      reset to the legacy weak functions in the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit() only when
 254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      these callbacks are null (not registered beforehand).
 255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
 256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      If MspInit or MspDeInit are not null, the @ref HAL_ADC_Init()/ @ref HAL_ADC_DeInit()
 258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      keep and use the user MspInit/MspDeInit callbacks (registered beforehand) whatever the state.
 259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      [..]
 260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      Callbacks can be registered/unregistered in @ref HAL_ADC_STATE_READY state only.
 262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      Exception done MspInit/MspDeInit functions that can be registered/unregistered
 263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      in @ref HAL_ADC_STATE_READY or @ref HAL_ADC_STATE_RESET state,
 264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
 266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      Then, the user first registers the MspInit/MspDeInit user callbacks
 268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      using @ref HAL_ADC_RegisterCallback() before calling @ref HAL_ADC_DeInit()
 269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      or @ref HAL_ADC_Init() function.
 270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      [..]
 271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      When the compilation flag USE_HAL_ADC_REGISTER_CALLBACKS is set to 0 or
 273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      not defined, the callback registration feature is not available and all callbacks
 274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      are set to the corresponding weak functions.
 275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
ARM GAS  /tmp/ccjg7X18.s 			page 84


 276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   @endverbatim
 277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ******************************************************************************
 278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @attention
 279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *
 280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * <h2><center>&copy; Copyright (c) 2018 STMicroelectronics.
 281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * All rights reserved.</center></h2>
 282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *
 283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * the "License"; You may not use this file except in compliance with the
 285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * License. You may obtain a copy of the License at:
 286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *                        opensource.org/licenses/BSD-3-Clause
 287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *
 288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ******************************************************************************  
 289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Includes ------------------------------------------------------------------*/
 292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #include "stm32g0xx_hal.h"
 293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @addtogroup STM32G0xx_HAL_Driver
 295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
 296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC ADC
 299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief ADC HAL module driver
 300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
 301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #ifdef HAL_ADC_MODULE_ENABLED
 304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Private typedef -----------------------------------------------------------*/
 306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Private define ------------------------------------------------------------*/
 307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC_Private_Constants ADC Private Constants
 309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
 310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Fixed timeout values for ADC calibration, enable settling time, disable  */
 313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* settling time.                                                           */
 314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Values defined to be higher than worst cases: low clock frequency,       */
 315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* maximum prescaler.                                                       */
 316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Ex of profile low frequency : Clock source at 0.1 MHz, ADC clock         */
 317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* prescaler 4, sampling time 7.5 ADC clock cycles, resolution 12 bits.     */
 318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Unit: ms                                                                 */
 319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #define ADC_ENABLE_TIMEOUT              (2UL)
 320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #define ADC_DISABLE_TIMEOUT             (2UL)
 321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #define ADC_STOP_CONVERSION_TIMEOUT     (2UL)
 322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #define ADC_CHANNEL_CONF_RDY_TIMEOUT    (1UL)
 323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Register CHSELR bits corresponding to ranks 2 to 8 .                     */
 325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #define ADC_CHSELR_SQ2_TO_SQ8           (ADC_CHSELR_SQ2 | ADC_CHSELR_SQ3 | ADC_CHSELR_SQ4 | ADC_CHS
 326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
 328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @}
 329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Private macro -------------------------------------------------------------*/
 332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Private variables ---------------------------------------------------------*/
ARM GAS  /tmp/ccjg7X18.s 			page 85


 333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Private function prototypes -----------------------------------------------*/
 334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
 335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
 336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma);
 338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma);
 339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma);
 340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
 341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @}
 342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /* Exported functions ---------------------------------------------------------*/
 345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions ADC Exported Functions
 347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
 348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group1 Initialization and de-initialization functions
 351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief    ADC Initialization and Configuration functions
 352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *
 353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** @verbatim    
 354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  ===============================================================================
 355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               ##### Initialization and de-initialization functions #####
 356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  ===============================================================================
 357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]  This section provides functions allowing to:
 358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Initialize and configure the ADC. 
 359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) De-initialize the ADC.
 360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** @endverbatim
 361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
 362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
 365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Initialize the ADC peripheral and regular group according to  
 366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         parameters specified in structure "ADC_InitTypeDef".
 367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   As prerequisite, ADC clock must be configured at RCC top level
 368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         (refer to description of RCC configuration for ADC
 369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         in header of this file).
 370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
 371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         This function initializes the ADC MSP (HAL_ADC_MspInit()) only when
 372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         coming from ADC state reset. Following calls to this function can
 373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         be used to reconfigure some parameters of ADC_InitTypeDef  
 374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         structure on the fly, without modifying MSP configuration. If ADC  
 375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         MSP has to be modified again, HAL_ADC_DeInit() must be called
 376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         before HAL_ADC_Init().
 377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
 378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         For parameters constraints, see comments of structure 
 379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         "ADC_InitTypeDef".
 380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   This function configures the ADC within 2 scopes: scope of entire 
 381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         ADC and scope of regular group. For parameters details, see comments 
 382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         of structure "ADC_InitTypeDef".
 383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
 384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
 385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef* hadc)
 387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmpCFGR1 = 0UL;
ARM GAS  /tmp/ccjg7X18.s 			page 86


 390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmpCFGR2 = 0UL;
 391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
 392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check ADC handle */
 395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if(hadc == NULL)
 396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     return HAL_ERROR;
 398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
 401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoPowerOff));
 414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon1));
 415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon2));
 416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_TRIGGER_FREQ(hadc->Init.TriggerFrequencyMode));
 419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if(hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DiscontinuousConvMode));
 423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if(hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
 427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ADC group regular discontinuous mode can be enabled only if              */
 431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* continuous mode is disabled.                                             */
 432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (hadc->Init.ContinuousConvMode == 
 433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Actions performed only if ADC is coming from state reset:                */
 435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* - Initialization of ADC MSP                                              */
 436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if(hadc->State == HAL_ADC_STATE_RESET)
 437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Init the ADC Callback settings */
 440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->ConvCpltCallback              = HAL_ADC_ConvCpltCallback;                 /* Legacy weak 
 441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->ConvHalfCpltCallback          = HAL_ADC_ConvHalfCpltCallback;             /* Legacy weak 
 442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback      = HAL_ADC_LevelOutOfWindowCallback;         /* Legacy weak 
 443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->ErrorCallback                 = HAL_ADC_ErrorCallback;                    /* Legacy weak 
 444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback     = HAL_ADCEx_LevelOutOfWindow2Callback;      /* Legacy weak 
 445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback     = HAL_ADCEx_LevelOutOfWindow3Callback;      /* Legacy weak 
 446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->EndOfSamplingCallback         = HAL_ADCEx_EndOfSamplingCallback;          /* Legacy weak 
ARM GAS  /tmp/ccjg7X18.s 			page 87


 447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (hadc->MspInitCallback == NULL)
 449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit  */
 451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Init the low level hardware */
 454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->MspInitCallback(hadc);
 455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
 456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Init the low level hardware */
 457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     HAL_ADC_MspInit(hadc);
 458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Set ADC error code to none */
 461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     ADC_CLEAR_ERRORCODE(hadc);
 462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Initialize Lock */
 464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->Lock = HAL_UNLOCKED;
 465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if(LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Enable ADC internal voltage regulator */
 470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     LL_ADC_EnableInternalRegulator(hadc->Instance);
 471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Delay for ADC stabilization time */
 473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Wait loop initialization and execution */
 474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Note: Variable divided by 2 to compensate partially              */
 475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       CPU processing cycles, scaling in us split to not          */
 476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       exceed 32 bits register capacity and handle low frequency. */
 477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     wait_loop_index = ((LL_ADC_DELAY_INTERNAL_REGUL_STAB_US / 10UL) * (SystemCoreClock / (100000UL 
 478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     while(wait_loop_index != 0UL)
 479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       wait_loop_index--;
 481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Verification that ADC voltage regulator is correctly enabled, whether    */
 485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* or not ADC is coming from state reset (if any potential problem of       */
 486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* clocking, voltage regulator would not be enabled).                       */
 487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if(LL_ADC_IsInternalRegulatorEnabled(hadc->Instance) == 0UL)
 488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update ADC state machine to error */
 490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Set ADC error code to ADC peripheral internal error */
 493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Configuration of ADC parameters if previous preliminary actions are      */ 
 499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* correctly completed and if there is no conversion on going on regular    */
 500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* group (ADC may already be enabled at this point if HAL_ADC_Init() is     */
 501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* called to update a parameter on the fly).                                */
 502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   tmp_adc_reg_is_conversion_on_going = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
ARM GAS  /tmp/ccjg7X18.s 			page 88


 504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if(   ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
 505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      && (tmp_adc_reg_is_conversion_on_going == 0UL)
 506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     )
 507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Set ADC state */
 509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     ADC_STATE_CLR_SET(hadc->State,
 510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Configuration of common ADC parameters                                 */
 514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Parameters update conditioned to ADC state:                            */
 516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Parameters that can be updated only when ADC is disabled:              */
 517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - Internal voltage regulator (no parameter in HAL ADC init structure) */
 518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - Clock configuration                                                 */
 519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - ADC resolution                                                      */
 520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Note: If low power mode AutoPowerOff is enabled, ADC enable            */
 521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       and disable phases are performed automatically by hardware       */
 522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       (in this case, flag ADC_FLAG_RDY is not set).                    */
 523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Some parameters of this register are not reset, since they are set   */
 526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* by other functions and must be kept in case of usage of this         */
 527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* function on the fly (update of a parameter of ADC_InitTypeDef        */
 528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* without needing to reconfigure all other ADC groups/channels         */
 529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* parameters):                                                         */
 530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*   - internal measurement paths: Vbat, temperature sensor, Vref       */
 531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*     (set into HAL_ADC_ConfigChannel() )                              */
 532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Configuration of ADC resolution                                      */
 534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR1,
 535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_RES        ,
 536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  hadc->Init.Resolution );
 537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Configuration of ADC clock mode: clock source AHB or HSI with        */
 539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* selectable prescaler.                                                */
 540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       MODIFY_REG(hadc->Instance->CFGR2                       ,
 541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR2_CKMODE                            ,
 542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  hadc->Init.ClockPrescaler & ADC_CFGR2_CKMODE );
 543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV1) &&
 545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV4))
 547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         MODIFY_REG(ADC1_COMMON->CCR                         ,
 549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CCR_PRESC                            ,
 550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    hadc->Init.ClockPrescaler & ADC_CCR_PRESC );
 551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - discontinuous mode                                                  */
 556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - LowPowerAutoWait mode                                               */
 557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - LowPowerAutoPowerOff mode                                           */
 558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - continuous conversion mode                                          */
 559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - overrun                                                             */
 560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - external trigger to start conversion                                */
ARM GAS  /tmp/ccjg7X18.s 			page 89


 561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - external trigger polarity                                           */
 562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - data alignment                                                      */
 563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - resolution                                                          */
 564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - scan direction                                                      */
 565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - DMA continuous request                                              */
 566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmpCFGR1 |= (ADC_CFGR1_AUTOWAIT((uint32_t)hadc->Init.LowPowerAutoWait)        |
 567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)     |
 568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)    |
 569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                            |
 570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  hadc->Init.DataAlign                                             |
 571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_SCAN_SEQ_MODE(hadc->Init.ScanConvMode)                       |
 572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests)  );
 573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update setting of discontinuous mode only if continuous mode is disabled */
 575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (hadc->Init.DiscontinuousConvMode == ENABLE)
 576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (hadc->Init.ContinuousConvMode == DISABLE)
 578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Enable the selected ADC group regular discontinuous mode */
 580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         tmpCFGR1 |= ADC_CFGR1_DISCEN;
 581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       else
 583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* ADC regular group discontinuous was intended to be enabled,        */
 585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* but ADC regular group modes continuous and sequencer discontinuous */
 586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* cannot be enabled simultaneously.                                  */
 587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update ADC state machine to error */
 589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Set ADC error code to ADC peripheral internal error */
 592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Enable external trigger if trigger selection is different of software  */
 597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* start.                                                                 */
 598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Note: This configuration keeps the hardware feature of parameter       */
 599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
 600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       software start.                                                  */
 601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       tmpCFGR1 |= ( (hadc->Init.ExternalTrigConv & ADC_CFGR1_EXTSEL) |
 604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      hadc->Init.ExternalTrigConvEdge );
 605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Configuration of ADC:                                                  */
 608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - oversampling enable                                                 */
 609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - oversampling ratio                                                  */
 610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - oversampling shift                                                  */
 611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - oversampling discontinuous mode (triggered mode)                    */
 612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*  - trigger frequency mode                                              */
 613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmpCFGR2 |= ( hadc->Init.Oversampling.Ratio         |
 614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                   hadc->Init.Oversampling.RightBitShift |
 615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                   hadc->Init.Oversampling.TriggeredMode |
 616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                   hadc->Init.TriggerFrequencyMode
 617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                   );
ARM GAS  /tmp/ccjg7X18.s 			page 90


 618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (hadc->Init.OversamplingMode == ENABLE)
 620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(tmpCFGR2, ADC_CFGR2_OVSE);
 622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update ADC configuration register with previous settings */
 625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR1,
 626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                ADC_CFGR1_DISCEN  |
 627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                ADC_CFGR1_AUTOFF  |
 628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                ADC_CFGR1_WAIT    |
 629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                ADC_CFGR1_CONT    |
 630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                ADC_CFGR1_OVRMOD  |
 631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                ADC_CFGR1_EXTSEL  |
 632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                ADC_CFGR1_EXTEN   |
 633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                ADC_CFGR1_ALIGN   |
 634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                ADC_CFGR1_SCANDIR |
 635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                ADC_CFGR1_DMACFG     ,
 636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                tmpCFGR1              );
 637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     MODIFY_REG(hadc->Instance->CFGR2,
 639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                ADC_CFGR2_LFTRIG |
 640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                ADC_CFGR2_OVSE   |
 641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                ADC_CFGR2_OVSR   |
 642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                ADC_CFGR2_OVSS   |
 643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                ADC_CFGR2_TOVS       ,
 644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                tmpCFGR2              );
 645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Channel sampling time configuration */
 647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     LL_ADC_SetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_1, hadc->Init.S
 648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     LL_ADC_SetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_2, hadc->Init.S
 649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Configuration of regular group sequencer:                              */
 651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* - if scan mode is disabled, regular channels sequence length is set to */
 652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*   0x00: 1 channel converted (channel on regular rank 1)                */
 653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*   Parameter "NbrOfConversion" is discarded.                            */
 654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*   Note: Scan mode is not present by hardware on this device, but       */
 655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*   emulated by software for alignment over all STM32 devices.           */
 656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* - if scan mode is enabled, regular channels sequence length is set to  */
 657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*   parameter "NbrOfConversion".                                         */
 658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*   Channels must be configured into each rank using function            */
 659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*   "HAL_ADC_ConfigChannel()".                                           */
 660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if(hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)
 661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set sequencer scan length by clearing ranks above rank 1             */
 663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* and do not modify rank 1 value.                                      */
 664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->Instance->CHSELR,
 665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               ADC_CHSELR_SQ2_TO_SQ8);
 666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else if(hadc->Init.ScanConvMode == ADC_SCAN_ENABLE)
 668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Count number of ranks available in HAL ADC handle variable */
 670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       uint32_t ADCGroupRegularSequencerRanksCount;
 671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Parse all ranks from 1 to 8 */
 673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       for(ADCGroupRegularSequencerRanksCount = 0UL; ADCGroupRegularSequencerRanksCount < (8UL); ADC
 674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
ARM GAS  /tmp/ccjg7X18.s 			page 91


 675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Check each sequencer rank until value of end of sequence */
 676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if(((hadc->ADCGroupRegularSequencerRanks >> (ADCGroupRegularSequencerRanksCount * 4UL)) & A
 677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
 679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if(ADCGroupRegularSequencerRanksCount == 1UL)
 683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Set ADC group regular sequencer:                                   */
 685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Set sequencer scan length by clearing ranks above rank 1           */
 686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* and do not modify rank 1 value.                                    */
 687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         SET_BIT(hadc->Instance->CHSELR,
 688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 ADC_CHSELR_SQ2_TO_SQ8);
 689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       else
 691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Set ADC group regular sequencer:                                   */
 693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /*  - Set ADC group regular sequencer to value memorized              */
 694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /*    in HAL ADC handle                                               */
 695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /*    Note: This value maybe be initialized at a unknown value,       */
 696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /*          therefore afer the first call of "HAL_ADC_Init()",        */
 697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /*          each rank corresponding to parameter "NbrOfConversion"    */
 698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /*          must be set using "HAL_ADC_ConfigChannel()".              */
 699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /*  - Set sequencer scan length by clearing ranks above maximum rank  */
 700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /*    and do not modify other ranks value.                            */
 701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         MODIFY_REG(hadc->Instance->CHSELR,
 702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ_ALL,
 703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    (ADC_CHSELR_SQ2_TO_SQ8 << (((hadc->Init.NbrOfConversion - 1UL) * ADC_REGULAR_RAN
 704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                   );
 705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check back that ADC registers have effectively been configured to      */
 709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* ensure of no potential problem of ADC core peripheral clocking.        */
 710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check through register CFGR1 (excluding analog watchdog configuration: */
 711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* set into separate dedicated function, and bits of ADC resolution set   */
 712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* out of temporary variable 'tmpCFGR1').                                 */
 713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((hadc->Instance->CFGR1 & ~(ADC_CFGR1_AWD1CH | ADC_CFGR1_AWD1EN | ADC_CFGR1_AWD1SGL | ADC_CF
 714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          == tmpCFGR1)
 715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC error code to none */
 717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
 718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set the ADC state */
 720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
 723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
 725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Update ADC state machine to error */
 727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
 728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_ERROR_INTERNAL);
 730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
ARM GAS  /tmp/ccjg7X18.s 			page 92


 732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       tmp_hal_status = HAL_ERROR;
 735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
 739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update ADC state machine to error */
 741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
 744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return function status */
 747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
 748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
 751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Deinitialize the ADC peripheral registers to their default reset
 752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         values, with deinitialization of the ADC MSP.
 753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   For devices with several ADCs: reset of ADC common registers is done 
 754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         only if all ADCs sharing the same common group are disabled.
 755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         (function "HAL_ADC_MspDeInit()" is also called under the same conditions:
 756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         all ADC instances use the same core clock at RCC level, disabling
 757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         If this is not the case, reset of these common parameters reset is  
 759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         bypassed without error reporting: it can be the intended behavior in
 760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         case of reset of a single ADC while the other ADCs sharing the same 
 761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         common group is still running.
 762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   By default, HAL_ADC_DeInit() set ADC in mode deep power-down:
 763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         this saves more power by reducing leakage currents 
 764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         and is particularly interesting before entering MCU low-power modes.
 765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
 766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
 767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_DeInit(ADC_HandleTypeDef* hadc)
 769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check ADC handle */
 773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if(hadc == NULL)
 774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     return HAL_ERROR;
 776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
 779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Set ADC state */
 782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_BUSY_INTERNAL);
 783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Stop potential conversion on going, on regular group */
 785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
 786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
ARM GAS  /tmp/ccjg7X18.s 			page 93


 789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Disable the ADC peripheral */
 791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
 792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
 794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
 795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Change ADC state */
 797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->State = HAL_ADC_STATE_READY;
 798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Note: HAL ADC deInit is done independently of ADC conversion stop        */
 802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*       and disable return status. In case of status fail, attempt to      */
 803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*       perform deinitialization anyway and it is up user code in          */
 804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*       in HAL_ADC_MspDeInit() to reset the ADC peripheral using           */
 805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*       system RCC hard reset.                                             */
 806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ========== Reset ADC registers ========== */
 808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register IER */
 809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_AWD3  | ADC_IT_AWD2 |
 810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_IT_AWD1  | ADC_IT_OVR  |
 811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_IT_EOS   | ADC_IT_EOC  |
 812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_IT_EOSMP | ADC_IT_RDY   ) );
 813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register ISR */
 815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_AWD3  | ADC_FLAG_AWD2 |
 816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_FLAG_AWD1  | ADC_FLAG_OVR  |
 817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_FLAG_EOS   | ADC_FLAG_EOC  |
 818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_FLAG_EOSMP | ADC_FLAG_RDY   ) );
 819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register CR */
 821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Bits ADC_CR_ADCAL, ADC_CR_ADSTP, ADC_CR_ADSTART are in access mode     */
 822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* "read-set": no direct reset applicable.                                */
 823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register CFGR1 */
 825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->CFGR1 &= ~(ADC_CFGR1_AWD1CH   | ADC_CFGR1_AWD1EN  | ADC_CFGR1_AWD1SGL | ADC_CFGR1
 826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                              ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT   | ADC_CFGR1_OV
 827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                              ADC_CFGR1_EXTEN   | ADC_CFGR1_EXTSEL | ADC_CFGR1_ALIGN  | ADC_CFGR1_RE
 828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                              ADC_CFGR1_SCANDIR | ADC_CFGR1_DMACFG | ADC_CFGR1_DMAEN                
 829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register CFGR2 */
 831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Note: Update of ADC clock mode is conditioned to ADC state disabled:   */
 832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*       already done above.                                              */
 833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->CFGR2 &= ~ADC_CFGR2_CKMODE;
 834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register SMPR */
 836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->SMPR &= ~ADC_SMPR_SMP1;
 837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register TR1 */
 839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->TR1 &= ~(ADC_TR1_HT1 | ADC_TR1_LT1);
 840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register CHSELR */
 842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->Instance->CHSELR &= ~(ADC_CHSELR_SQ_ALL);
 843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register DR */
 845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* bits in access mode read only, no direct reset applicable */
ARM GAS  /tmp/ccjg7X18.s 			page 94


 846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset register CCR */
 848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ADC1_COMMON->CCR &= ~(ADC_CCR_VBATEN | ADC_CCR_TSEN | ADC_CCR_VREFEN | ADC_CCR_PRESC);
 849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ========== Hard reset ADC peripheral ========== */
 851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Performs a global reset of the entire ADC peripheral: ADC state is     */
 852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* forced to a similar state after device power-on.                       */
 853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* If needed, copy-paste and uncomment the following reset code into      */
 854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* function "void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)":              */
 855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*                                                                        */
 856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*  __HAL_RCC_ADC1_FORCE_RESET()                                          */
 857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*  __HAL_RCC_ADC1_RELEASE_RESET()                                        */
 858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (hadc->MspDeInitCallback == NULL)
 861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit  */
 863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* DeInit the low level hardware */
 866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->MspDeInitCallback(hadc);
 867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
 868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* DeInit the low level hardware */
 869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_ADC_MspDeInit(hadc);
 870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Reset HAL ADC handle variable */
 873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->ADCGroupRegularSequencerRanks = 0x00000000UL;
 874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Set ADC error code to none */
 876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ADC_CLEAR_ERRORCODE(hadc);
 877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Set ADC state */
 879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->State = HAL_ADC_STATE_RESET;
 880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Process unlocked */
 882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
 883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return function status */
 885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
 886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
 889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Initialize the ADC MSP.
 890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
 891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
 892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** __weak void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
 894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 126              		.loc 2 894 1 is_stmt 1 view -0
 127              		.cfi_startproc
 128              		@ args = 0, pretend = 0, frame = 0
 129              		@ frame_needed = 0, uses_anonymous_args = 0
 130              		@ link register save eliminated.
 895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   UNUSED(hadc);
 131              		.loc 2 896 3 view .LVU23
ARM GAS  /tmp/ccjg7X18.s 			page 95


 897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             function HAL_ADC_MspInit must be implemented in the user file.
 900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****    */ 
 901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 132              		.loc 2 901 1 is_stmt 0 view .LVU24
 133              		@ sp needed
 134 0000 7047     		bx	lr
 135              		.cfi_endproc
 136              	.LFE303:
 138              		.global	__aeabi_uidiv
 139              		.section	.text.HAL_ADC_Init,"ax",%progbits
 140              		.align	1
 141              		.global	HAL_ADC_Init
 142              		.syntax unified
 143              		.code	16
 144              		.thumb_func
 145              		.fpu softvfp
 147              	HAL_ADC_Init:
 148              	.LVL8:
 149              	.LFB301:
 387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 150              		.loc 2 387 1 is_stmt 1 view -0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 16
 153              		@ frame_needed = 0, uses_anonymous_args = 0
 388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmpCFGR1 = 0UL;
 154              		.loc 2 388 3 view .LVU26
 389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmpCFGR2 = 0UL;
 155              		.loc 2 389 3 view .LVU27
 390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_adc_reg_is_conversion_on_going;
 156              		.loc 2 390 3 view .LVU28
 391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 157              		.loc 2 391 3 view .LVU29
 392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 158              		.loc 2 392 3 view .LVU30
 392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 159              		.loc 2 392 17 is_stmt 0 view .LVU31
 160 0000 0023     		movs	r3, #0
 387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 161              		.loc 2 387 1 view .LVU32
 162 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 163              	.LCFI1:
 164              		.cfi_def_cfa_offset 20
 165              		.cfi_offset 4, -20
 166              		.cfi_offset 5, -16
 167              		.cfi_offset 6, -12
 168              		.cfi_offset 7, -8
 169              		.cfi_offset 14, -4
 170 0004 85B0     		sub	sp, sp, #20
 171              	.LCFI2:
 172              		.cfi_def_cfa_offset 40
 387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 173              		.loc 2 387 1 view .LVU33
 174 0006 0400     		movs	r4, r0
 397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 175              		.loc 2 397 12 view .LVU34
ARM GAS  /tmp/ccjg7X18.s 			page 96


 176 0008 0125     		movs	r5, #1
 392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 177              		.loc 2 392 17 view .LVU35
 178 000a 0393     		str	r3, [sp, #12]
 395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 179              		.loc 2 395 3 is_stmt 1 view .LVU36
 395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 180              		.loc 2 395 5 is_stmt 0 view .LVU37
 181 000c 9842     		cmp	r0, r3
 182 000e 00D1     		bne	.LCB121
 183 0010 BAE0     		b	.L9	@long jump
 184              	.LCB121:
 401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_CLOCKPRESCALER(hadc->Init.ClockPrescaler));
 185              		.loc 2 401 3 is_stmt 1 view .LVU38
 402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_RESOLUTION(hadc->Init.Resolution));
 186              		.loc 2 402 3 view .LVU39
 403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(hadc->Init.DataAlign));
 187              		.loc 2 403 3 view .LVU40
 404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_SCAN_MODE(hadc->Init.ScanConvMode));
 188              		.loc 2 404 3 view .LVU41
 405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 189              		.loc 2 405 3 view .LVU42
 406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 190              		.loc 2 406 3 view .LVU43
 407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EXTTRIG(hadc->Init.ExternalTrigConv));
 191              		.loc 2 407 3 view .LVU44
 408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 192              		.loc 2 408 3 view .LVU45
 409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 193              		.loc 2 409 3 view .LVU46
 410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_OVERRUN(hadc->Init.Overrun));
 194              		.loc 2 410 3 view .LVU47
 411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoWait));
 195              		.loc 2 411 3 view .LVU48
 412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.LowPowerAutoPowerOff));
 196              		.loc 2 412 3 view .LVU49
 413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon1));
 197              		.loc 2 413 3 view .LVU50
 414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(hadc->Init.SamplingTimeCommon2));
 198              		.loc 2 414 3 view .LVU51
 415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.OversamplingMode));
 199              		.loc 2 415 3 view .LVU52
 416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 200              		.loc 2 416 3 view .LVU53
 418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 201              		.loc 2 418 3 view .LVU54
 420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 202              		.loc 2 420 3 view .LVU55
 426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 203              		.loc 2 426 7 view .LVU56
 432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 204              		.loc 2 432 3 view .LVU57
 436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 205              		.loc 2 436 3 view .LVU58
 436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 206              		.loc 2 436 10 is_stmt 0 view .LVU59
 207 0012 856D     		ldr	r5, [r0, #88]
ARM GAS  /tmp/ccjg7X18.s 			page 97


 436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 208              		.loc 2 436 5 view .LVU60
 209 0014 9D42     		cmp	r5, r3
 210 0016 05D1     		bne	.L10
 457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 211              		.loc 2 457 5 is_stmt 1 view .LVU61
 212 0018 FFF7FEFF 		bl	HAL_ADC_MspInit
 213              	.LVL9:
 461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 214              		.loc 2 461 5 view .LVU62
 464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 215              		.loc 2 464 16 is_stmt 0 view .LVU63
 216 001c 2300     		movs	r3, r4
 217 001e 5433     		adds	r3, r3, #84
 461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 218              		.loc 2 461 5 view .LVU64
 219 0020 E565     		str	r5, [r4, #92]
 464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 220              		.loc 2 464 5 is_stmt 1 view .LVU65
 464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 221              		.loc 2 464 16 is_stmt 0 view .LVU66
 222 0022 1D70     		strb	r5, [r3]
 223              	.L10:
 467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 224              		.loc 2 467 3 is_stmt 1 view .LVU67
 225              	.LBB76:
 226              	.LBB77:
4146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 227              		.loc 1 4146 12 is_stmt 0 view .LVU68
 228 0024 8023     		movs	r3, #128
 229              	.LBE77:
 230              	.LBE76:
 467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 231              		.loc 2 467 6 view .LVU69
 232 0026 2668     		ldr	r6, [r4]
 233              	.LVL10:
 234              	.LBB79:
 235              	.LBI76:
4144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 236              		.loc 1 4144 26 is_stmt 1 view .LVU70
 237              	.LBB78:
4146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 238              		.loc 1 4146 3 view .LVU71
4146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 239              		.loc 1 4146 12 is_stmt 0 view .LVU72
 240 0028 5B05     		lsls	r3, r3, #21
 241 002a B268     		ldr	r2, [r6, #8]
4146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 242              		.loc 1 4146 76 view .LVU73
 243 002c 1A42     		tst	r2, r3
 244 002e 00D1     		bne	.LCB173
 245 0030 ADE0     		b	.L11	@long jump
 246              	.LCB173:
 247              	.LVL11:
 248              	.L16:
4146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 249              		.loc 1 4146 76 view .LVU74
ARM GAS  /tmp/ccjg7X18.s 			page 98


 250              	.LBE78:
 251              	.LBE79:
 487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 252              		.loc 2 487 3 is_stmt 1 view .LVU75
 253              	.LBB80:
 254              	.LBI80:
4144:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 255              		.loc 1 4144 26 view .LVU76
 256              	.LBB81:
4146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 257              		.loc 1 4146 3 view .LVU77
4146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 258              		.loc 1 4146 12 is_stmt 0 view .LVU78
 259 0032 B368     		ldr	r3, [r6, #8]
 260              	.LBE81:
 261              	.LBE80:
 388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmpCFGR1 = 0UL;
 262              		.loc 2 388 21 view .LVU79
 263 0034 0025     		movs	r5, #0
 264              	.LBB83:
 265              	.LBB82:
4146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 266              		.loc 1 4146 76 view .LVU80
 267 0036 DB00     		lsls	r3, r3, #3
 268 0038 07D4     		bmi	.L12
 269              	.LVL12:
4146:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 270              		.loc 1 4146 76 view .LVU81
 271              	.LBE82:
 272              	.LBE83:
 490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 273              		.loc 2 490 5 is_stmt 1 view .LVU82
 274 003a 1023     		movs	r3, #16
 493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 275              		.loc 2 493 5 is_stmt 0 view .LVU83
 276 003c 0125     		movs	r5, #1
 490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 277              		.loc 2 490 5 view .LVU84
 278 003e A26D     		ldr	r2, [r4, #88]
 279 0040 1343     		orrs	r3, r2
 280 0042 A365     		str	r3, [r4, #88]
 493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 281              		.loc 2 493 5 is_stmt 1 view .LVU85
 282 0044 E36D     		ldr	r3, [r4, #92]
 283 0046 2B43     		orrs	r3, r5
 284 0048 E365     		str	r3, [r4, #92]
 495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 285              		.loc 2 495 5 view .LVU86
 286              	.LVL13:
 287              	.L12:
 502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 288              		.loc 2 502 3 view .LVU87
 502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 289              		.loc 2 502 40 is_stmt 0 view .LVU88
 290 004a 3000     		movs	r0, r6
 291 004c FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 292              	.LVL14:
ARM GAS  /tmp/ccjg7X18.s 			page 99


 504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      && (tmp_adc_reg_is_conversion_on_going == 0UL)
 293              		.loc 2 504 3 is_stmt 1 view .LVU89
 504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      && (tmp_adc_reg_is_conversion_on_going == 0UL)
 294              		.loc 2 504 23 is_stmt 0 view .LVU90
 295 0050 1023     		movs	r3, #16
 504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      && (tmp_adc_reg_is_conversion_on_going == 0UL)
 296              		.loc 2 504 15 view .LVU91
 297 0052 A26D     		ldr	r2, [r4, #88]
 504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      && (tmp_adc_reg_is_conversion_on_going == 0UL)
 298              		.loc 2 504 23 view .LVU92
 299 0054 1A40     		ands	r2, r3
 300 0056 1043     		orrs	r0, r2
 301              	.LVL15:
 504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      && (tmp_adc_reg_is_conversion_on_going == 0UL)
 302              		.loc 2 504 23 view .LVU93
 303 0058 0190     		str	r0, [sp, #4]
 504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      && (tmp_adc_reg_is_conversion_on_going == 0UL)
 304              		.loc 2 504 5 view .LVU94
 305 005a 00D0     		beq	.LCB227
 306 005c E5E0     		b	.L17	@long jump
 307              	.LCB227:
 509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       HAL_ADC_STATE_REG_BUSY,
 308              		.loc 2 509 5 is_stmt 1 view .LVU95
 309 005e A36D     		ldr	r3, [r4, #88]
 310 0060 744A     		ldr	r2, .L43
 311 0062 1A40     		ands	r2, r3
 312 0064 0223     		movs	r3, #2
 313 0066 1343     		orrs	r3, r2
 314 0068 A365     		str	r3, [r4, #88]
 523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 315              		.loc 2 523 5 view .LVU96
 523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 316              		.loc 2 523 9 is_stmt 0 view .LVU97
 317 006a 2368     		ldr	r3, [r4]
 318              	.LVL16:
 319              	.LBB84:
 320              	.LBI84:
4204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 321              		.loc 1 4204 26 is_stmt 1 view .LVU98
 322              	.LBB85:
4206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 323              		.loc 1 4206 3 view .LVU99
4206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 324              		.loc 1 4206 12 is_stmt 0 view .LVU100
 325 006c 9A68     		ldr	r2, [r3, #8]
 326              	.LVL17:
4206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 327              		.loc 1 4206 12 view .LVU101
 328              	.LBE85:
 329              	.LBE84:
 523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 330              		.loc 2 523 8 view .LVU102
 331 006e D207     		lsls	r2, r2, #31
 332 0070 20D4     		bmi	.L19
 534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_RES        ,
 333              		.loc 2 534 7 is_stmt 1 view .LVU103
 334 0072 1821     		movs	r1, #24
ARM GAS  /tmp/ccjg7X18.s 			page 100


 335 0074 DA68     		ldr	r2, [r3, #12]
 336 0076 8A43     		bics	r2, r1
 337 0078 A168     		ldr	r1, [r4, #8]
 338 007a 0A43     		orrs	r2, r1
 339 007c DA60     		str	r2, [r3, #12]
 540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR2_CKMODE                            ,
 340              		.loc 2 540 7 view .LVU104
 341 007e 6168     		ldr	r1, [r4, #4]
 342 0080 1A69     		ldr	r2, [r3, #16]
 343 0082 8E0F     		lsrs	r6, r1, #30
 344 0084 9200     		lsls	r2, r2, #2
 345 0086 B607     		lsls	r6, r6, #30
 346 0088 9208     		lsrs	r2, r2, #2
 347 008a 3243     		orrs	r2, r6
 544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 348              		.loc 2 544 69 is_stmt 0 view .LVU105
 349 008c 8026     		movs	r6, #128
 540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR2_CKMODE                            ,
 350              		.loc 2 540 7 view .LVU106
 351 008e 1A61     		str	r2, [r3, #16]
 544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 352              		.loc 2 544 7 is_stmt 1 view .LVU107
 544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV2) &&
 353              		.loc 2 544 69 is_stmt 0 view .LVU108
 354 0090 4A00     		lsls	r2, r1, #1
 355 0092 5208     		lsrs	r2, r2, #1
 356 0094 F605     		lsls	r6, r6, #23
 357 0096 B242     		cmp	r2, r6
 358 0098 0CD0     		beq	.L19
 545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ((hadc->Init.ClockPrescaler) != ADC_CLOCK_SYNC_PCLK_DIV4))
 359              		.loc 2 545 69 view .LVU109
 360 009a 8022     		movs	r2, #128
 361 009c 1206     		lsls	r2, r2, #24
 362 009e 9142     		cmp	r1, r2
 363 00a0 08D0     		beq	.L19
 548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CCR_PRESC                            ,
 364              		.loc 2 548 9 is_stmt 1 view .LVU110
 365 00a2 654E     		ldr	r6, .L43+4
 366 00a4 654F     		ldr	r7, .L43+8
 367 00a6 3268     		ldr	r2, [r6]
 368 00a8 3A40     		ands	r2, r7
 369 00aa F027     		movs	r7, #240
 370 00ac BF03     		lsls	r7, r7, #14
 371 00ae 3940     		ands	r1, r7
 372 00b0 1143     		orrs	r1, r2
 373 00b2 3160     		str	r1, [r6]
 374              	.L19:
 566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)     |
 375              		.loc 2 566 5 view .LVU111
 566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)     |
 376              		.loc 2 566 18 is_stmt 0 view .LVU112
 377 00b4 227E     		ldrb	r2, [r4, #24]
 567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)    |
 378              		.loc 2 567 18 view .LVU113
 379 00b6 677E     		ldrb	r7, [r4, #25]
 566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)     |
 380              		.loc 2 566 18 view .LVU114
ARM GAS  /tmp/ccjg7X18.s 			page 101


 381 00b8 9203     		lsls	r2, r2, #14
 567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode)    |
 382              		.loc 2 567 18 view .LVU115
 383 00ba FF03     		lsls	r7, r7, #15
 568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                            |
 384              		.loc 2 568 18 view .LVU116
 385 00bc A17E     		ldrb	r1, [r4, #26]
 566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_AUTOOFF((uint32_t)hadc->Init.LowPowerAutoPowerOff)     |
 386              		.loc 2 566 83 view .LVU117
 387 00be 3A43     		orrs	r2, r7
 569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  hadc->Init.DataAlign                                             |
 388              		.loc 2 569 18 view .LVU118
 389 00c0 276B     		ldr	r7, [r4, #48]
 568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_OVERRUN(hadc->Init.Overrun)                            |
 390              		.loc 2 568 18 view .LVU119
 391 00c2 8C46     		mov	ip, r1
 392 00c4 4E03     		lsls	r6, r1, #13
 569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  hadc->Init.DataAlign                                             |
 393              		.loc 2 569 18 view .LVU120
 394 00c6 002F     		cmp	r7, #0
 395 00c8 01D0     		beq	.L21
 396 00ca 8027     		movs	r7, #128
 397 00cc 7F01     		lsls	r7, r7, #5
 398              	.L21:
 399 00ce E168     		ldr	r1, [r4, #12]
 400 00d0 0A43     		orrs	r2, r1
 571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests)  );
 401              		.loc 2 571 18 view .LVU121
 402 00d2 2169     		ldr	r1, [r4, #16]
 403 00d4 3243     		orrs	r2, r6
 404 00d6 1000     		movs	r0, r2
 405 00d8 0029     		cmp	r1, #0
 406 00da 00DB     		blt	.LCB313
 407 00dc 6BE0     		b	.L36	@long jump
 408              	.LCB313:
 571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests)  );
 409              		.loc 2 571 18 discriminator 1 view .LVU122
 410 00de 4E00     		lsls	r6, r1, #1
 411 00e0 7608     		lsrs	r6, r6, #1
 412              	.L22:
 572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 413              		.loc 2 572 18 view .LVU123
 414 00e2 2200     		movs	r2, r4
 415 00e4 2C32     		adds	r2, r2, #44
 416 00e6 1278     		ldrb	r2, [r2]
 417 00e8 5200     		lsls	r2, r2, #1
 571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests)  );
 418              		.loc 2 571 83 view .LVU124
 419 00ea 0243     		orrs	r2, r0
 420 00ec 1743     		orrs	r7, r2
 575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 421              		.loc 2 575 19 view .LVU125
 422 00ee 621C     		adds	r2, r4, #1
 575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 423              		.loc 2 575 8 view .LVU126
 424 00f0 D27F     		ldrb	r2, [r2, #31]
 571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests)  );
ARM GAS  /tmp/ccjg7X18.s 			page 102


 425              		.loc 2 571 83 view .LVU127
 426 00f2 3E43     		orrs	r6, r7
 427              	.LVL18:
 575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 428              		.loc 2 575 5 is_stmt 1 view .LVU128
 575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 429              		.loc 2 575 8 is_stmt 0 view .LVU129
 430 00f4 012A     		cmp	r2, #1
 431 00f6 05D1     		bne	.L23
 577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 432              		.loc 2 577 7 is_stmt 1 view .LVU130
 577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 433              		.loc 2 577 10 is_stmt 0 view .LVU131
 434 00f8 6046     		mov	r0, ip
 435 00fa 0028     		cmp	r0, #0
 436 00fc 5ED1     		bne	.L24
 580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 437              		.loc 2 580 9 is_stmt 1 view .LVU132
 580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 438              		.loc 2 580 18 is_stmt 0 view .LVU133
 439 00fe 8022     		movs	r2, #128
 440 0100 5202     		lsls	r2, r2, #9
 441 0102 1643     		orrs	r6, r2
 442              	.LVL19:
 443              	.L23:
 601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 444              		.loc 2 601 5 is_stmt 1 view .LVU134
 601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 445              		.loc 2 601 19 is_stmt 0 view .LVU135
 446 0104 626A     		ldr	r2, [r4, #36]
 601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 447              		.loc 2 601 8 view .LVU136
 448 0106 002A     		cmp	r2, #0
 449 0108 05D0     		beq	.L25
 603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      hadc->Init.ExternalTrigConvEdge );
 450              		.loc 2 603 7 is_stmt 1 view .LVU137
 603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      hadc->Init.ExternalTrigConvEdge );
 451              		.loc 2 603 50 is_stmt 0 view .LVU138
 452 010a E027     		movs	r7, #224
 603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      hadc->Init.ExternalTrigConvEdge );
 453              		.loc 2 603 70 view .LVU139
 454 010c A06A     		ldr	r0, [r4, #40]
 603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      hadc->Init.ExternalTrigConvEdge );
 455              		.loc 2 603 50 view .LVU140
 456 010e 7F00     		lsls	r7, r7, #1
 457 0110 3A40     		ands	r2, r7
 603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      hadc->Init.ExternalTrigConvEdge );
 458              		.loc 2 603 70 view .LVU141
 459 0112 0243     		orrs	r2, r0
 603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                      hadc->Init.ExternalTrigConvEdge );
 460              		.loc 2 603 16 view .LVU142
 461 0114 1643     		orrs	r6, r2
 462              	.LVL20:
 463              	.L25:
 613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                   hadc->Init.Oversampling.RightBitShift |
 464              		.loc 2 613 5 is_stmt 1 view .LVU143
 619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
ARM GAS  /tmp/ccjg7X18.s 			page 103


 465              		.loc 2 619 19 is_stmt 0 view .LVU144
 466 0116 2700     		movs	r7, r4
 613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                   hadc->Init.Oversampling.RightBitShift |
 467              		.loc 2 613 57 view .LVU145
 468 0118 606C     		ldr	r0, [r4, #68]
 469 011a 226C     		ldr	r2, [r4, #64]
 619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 470              		.loc 2 619 19 view .LVU146
 471 011c 3C37     		adds	r7, r7, #60
 613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                   hadc->Init.Oversampling.RightBitShift |
 472              		.loc 2 613 57 view .LVU147
 473 011e 0243     		orrs	r2, r0
 614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                   hadc->Init.Oversampling.TriggeredMode |
 474              		.loc 2 614 57 view .LVU148
 475 0120 A06C     		ldr	r0, [r4, #72]
 619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 476              		.loc 2 619 8 view .LVU149
 477 0122 3F78     		ldrb	r7, [r7]
 614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                   hadc->Init.Oversampling.TriggeredMode |
 478              		.loc 2 614 57 view .LVU150
 479 0124 0243     		orrs	r2, r0
 615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                   hadc->Init.TriggerFrequencyMode
 480              		.loc 2 615 57 view .LVU151
 481 0126 E06C     		ldr	r0, [r4, #76]
 482 0128 0243     		orrs	r2, r0
 483              	.LVL21:
 619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 484              		.loc 2 619 5 is_stmt 1 view .LVU152
 619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 485              		.loc 2 619 8 is_stmt 0 view .LVU153
 486 012a 012F     		cmp	r7, #1
 487 012c 00D1     		bne	.L26
 621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 488              		.loc 2 621 7 is_stmt 1 view .LVU154
 489 012e 3A43     		orrs	r2, r7
 490              	.LVL22:
 491              	.L26:
 625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                ADC_CFGR1_DISCEN  |
 492              		.loc 2 625 5 view .LVU155
 493 0130 DF68     		ldr	r7, [r3, #12]
 494 0132 4348     		ldr	r0, .L43+12
 495 0134 0740     		ands	r7, r0
 496 0136 3743     		orrs	r7, r6
 497 0138 DF60     		str	r7, [r3, #12]
 638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                ADC_CFGR2_LFTRIG |
 498              		.loc 2 638 5 view .LVU156
 499 013a 1F69     		ldr	r7, [r3, #16]
 500 013c 4148     		ldr	r0, .L43+16
 501 013e 0740     		ands	r7, r0
 502 0140 3A43     		orrs	r2, r7
 503              	.LVL23:
 504              	.LBB86:
 505              	.LBB87:
2202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 506              		.loc 1 2202 3 is_stmt 0 view .LVU157
 507 0142 0727     		movs	r7, #7
 508              	.LBE87:
ARM GAS  /tmp/ccjg7X18.s 			page 104


 509              	.LBE86:
 638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                ADC_CFGR2_LFTRIG |
 510              		.loc 2 638 5 view .LVU158
 511 0144 1A61     		str	r2, [r3, #16]
 647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     LL_ADC_SetSamplingTimeCommonChannels(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_2, hadc->Init.S
 512              		.loc 2 647 5 is_stmt 1 view .LVU159
 513              	.LVL24:
 514              	.LBB90:
 515              	.LBI86:
2200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 516              		.loc 1 2200 22 view .LVU160
 517              	.LBB88:
2202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 518              		.loc 1 2202 3 view .LVU161
 519 0146 5A69     		ldr	r2, [r3, #20]
 520 0148 606B     		ldr	r0, [r4, #52]
 521 014a BA43     		bics	r2, r7
 522 014c 0243     		orrs	r2, r0
 523              	.LBE88:
 524              	.LBE90:
 525              	.LBB91:
 526              	.LBB92:
 527 014e 7020     		movs	r0, #112
 528              	.LBE92:
 529              	.LBE91:
 530              	.LBB94:
 531              	.LBB89:
 532 0150 5A61     		str	r2, [r3, #20]
 533              	.LVL25:
2202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 534              		.loc 1 2202 3 is_stmt 0 view .LVU162
 535              	.LBE89:
 536              	.LBE94:
 648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 537              		.loc 2 648 5 is_stmt 1 view .LVU163
 538              	.LBB95:
 539              	.LBI91:
2200:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 540              		.loc 1 2200 22 view .LVU164
 541              	.LBB93:
2202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 542              		.loc 1 2202 3 view .LVU165
 543 0152 5F69     		ldr	r7, [r3, #20]
 544 0154 A26B     		ldr	r2, [r4, #56]
 545 0156 8743     		bics	r7, r0
 546 0158 1201     		lsls	r2, r2, #4
 547 015a 3A43     		orrs	r2, r7
 548 015c 5A61     		str	r2, [r3, #20]
 549              	.LVL26:
2202:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_SMPR_SMP1 << (SamplingTimeY & ADC_SAMPLING_TIME_SMP_SHIFT_MASK),
 550              		.loc 1 2202 3 is_stmt 0 view .LVU166
 551              	.LBE93:
 552              	.LBE95:
 660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 553              		.loc 2 660 5 is_stmt 1 view .LVU167
 660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 554              		.loc 2 660 7 is_stmt 0 view .LVU168
ARM GAS  /tmp/ccjg7X18.s 			page 105


 555 015e 0029     		cmp	r1, #0
 556 0160 34D1     		bne	.L27
 664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****               ADC_CHSELR_SQ2_TO_SQ8);
 557              		.loc 2 664 7 is_stmt 1 view .LVU169
 558 0162 1022     		movs	r2, #16
 559 0164 996A     		ldr	r1, [r3, #40]
 560 0166 5242     		rsbs	r2, r2, #0
 561              	.L42:
 562              	.LBB96:
 701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ_ALL,
 563              		.loc 2 701 9 is_stmt 0 view .LVU170
 564 0168 0A43     		orrs	r2, r1
 565 016a 9A62     		str	r2, [r3, #40]
 566              	.L28:
 567              	.LBE96:
 713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          == tmpCFGR1)
 568              		.loc 2 713 5 is_stmt 1 view .LVU171
 713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          == tmpCFGR1)
 569              		.loc 2 713 24 is_stmt 0 view .LVU172
 570 016c DB68     		ldr	r3, [r3, #12]
 713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          == tmpCFGR1)
 571              		.loc 2 713 32 view .LVU173
 572 016e 364A     		ldr	r2, .L43+20
 573 0170 1340     		ands	r3, r2
 713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          == tmpCFGR1)
 574              		.loc 2 713 8 view .LVU174
 575 0172 B342     		cmp	r3, r6
 576 0174 4DD1     		bne	.L32
 717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 577              		.loc 2 717 7 is_stmt 1 view .LVU175
 578 0176 0023     		movs	r3, #0
 720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 579              		.loc 2 720 7 is_stmt 0 view .LVU176
 580 0178 0322     		movs	r2, #3
 717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 581              		.loc 2 717 7 view .LVU177
 582 017a E365     		str	r3, [r4, #92]
 720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 583              		.loc 2 720 7 is_stmt 1 view .LVU178
 584 017c A36D     		ldr	r3, [r4, #88]
 585 017e 9343     		bics	r3, r2
 586 0180 1A00     		movs	r2, r3
 587 0182 0123     		movs	r3, #1
 588 0184 1343     		orrs	r3, r2
 589 0186 A365     		str	r3, [r4, #88]
 590              	.LVL27:
 591              	.L9:
 748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 592              		.loc 2 748 1 is_stmt 0 view .LVU179
 593 0188 2800     		movs	r0, r5
 594 018a 05B0     		add	sp, sp, #20
 595              		@ sp needed
 596              	.LVL28:
 748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 597              		.loc 2 748 1 view .LVU180
 598 018c F0BD     		pop	{r4, r5, r6, r7, pc}
 599              	.LVL29:
ARM GAS  /tmp/ccjg7X18.s 			page 106


 600              	.L11:
 470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 601              		.loc 2 470 5 is_stmt 1 view .LVU181
 602              	.LBB97:
 603              	.LBI97:
4114:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 604              		.loc 1 4114 22 view .LVU182
 605              	.LBB98:
4119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 606              		.loc 1 4119 3 view .LVU183
 607 018e B268     		ldr	r2, [r6, #8]
 608 0190 2E49     		ldr	r1, .L43+24
 609 0192 0A40     		ands	r2, r1
 610 0194 1343     		orrs	r3, r2
 611 0196 B360     		str	r3, [r6, #8]
 612              	.LVL30:
4119:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 613              		.loc 1 4119 3 is_stmt 0 view .LVU184
 614              	.LBE98:
 615              	.LBE97:
 477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     while(wait_loop_index != 0UL)
 616              		.loc 2 477 5 is_stmt 1 view .LVU185
 477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     while(wait_loop_index != 0UL)
 617              		.loc 2 477 88 is_stmt 0 view .LVU186
 618 0198 2D4B     		ldr	r3, .L43+28
 619 019a 2E49     		ldr	r1, .L43+32
 620 019c 1868     		ldr	r0, [r3]
 621 019e FFF7FEFF 		bl	__aeabi_uidiv
 622              	.LVL31:
 477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     while(wait_loop_index != 0UL)
 623              		.loc 2 477 69 view .LVU187
 624 01a2 4000     		lsls	r0, r0, #1
 477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     while(wait_loop_index != 0UL)
 625              		.loc 2 477 21 view .LVU188
 626 01a4 0390     		str	r0, [sp, #12]
 478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 627              		.loc 2 478 5 is_stmt 1 view .LVU189
 628              	.L14:
 478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 629              		.loc 2 478 10 view .LVU190
 478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 630              		.loc 2 478 27 is_stmt 0 view .LVU191
 631 01a6 039B     		ldr	r3, [sp, #12]
 478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 632              		.loc 2 478 10 view .LVU192
 633 01a8 002B     		cmp	r3, #0
 634 01aa 00D1     		bne	.LCB546
 635 01ac 41E7     		b	.L16	@long jump
 636              	.LCB546:
 480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 637              		.loc 2 480 7 is_stmt 1 view .LVU193
 480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 638              		.loc 2 480 22 is_stmt 0 view .LVU194
 639 01ae 039B     		ldr	r3, [sp, #12]
 640 01b0 013B     		subs	r3, r3, #1
 641 01b2 0393     		str	r3, [sp, #12]
 642 01b4 F7E7     		b	.L14
ARM GAS  /tmp/ccjg7X18.s 			page 107


 643              	.LVL32:
 644              	.L36:
 571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                  ADC_CFGR1_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests)  );
 645              		.loc 2 571 18 view .LVU195
 646 01b6 8026     		movs	r6, #128
 647 01b8 B603     		lsls	r6, r6, #14
 648 01ba 92E7     		b	.L22
 649              	.LVL33:
 650              	.L24:
 589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 651              		.loc 2 589 9 is_stmt 1 view .LVU196
 652 01bc 2027     		movs	r7, #32
 653 01be A06D     		ldr	r0, [r4, #88]
 654 01c0 0743     		orrs	r7, r0
 655 01c2 A765     		str	r7, [r4, #88]
 592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 656              		.loc 2 592 9 view .LVU197
 657 01c4 E76D     		ldr	r7, [r4, #92]
 658 01c6 3A43     		orrs	r2, r7
 659 01c8 E265     		str	r2, [r4, #92]
 660 01ca 9BE7     		b	.L23
 661              	.LVL34:
 662              	.L27:
 667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 663              		.loc 2 667 10 view .LVU198
 667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 664              		.loc 2 667 12 is_stmt 0 view .LVU199
 665 01cc 8022     		movs	r2, #128
 666 01ce 9203     		lsls	r2, r2, #14
 667 01d0 9142     		cmp	r1, r2
 668 01d2 CBD1     		bne	.L28
 669              	.LBB99:
 676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 670              		.loc 2 676 97 view .LVU200
 671 01d4 0F27     		movs	r7, #15
 676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 672              		.loc 2 676 18 view .LVU201
 673 01d6 216E     		ldr	r1, [r4, #96]
 674              	.L30:
 675              	.LVL35:
 676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 676              		.loc 2 676 9 is_stmt 1 view .LVU202
 676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 677              		.loc 2 676 50 is_stmt 0 view .LVU203
 678 01d8 0800     		movs	r0, r1
 679 01da 019A     		ldr	r2, [sp, #4]
 680 01dc 9200     		lsls	r2, r2, #2
 681 01de D040     		lsrs	r0, r0, r2
 682 01e0 0200     		movs	r2, r0
 676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 683              		.loc 2 676 97 view .LVU204
 684 01e2 3A40     		ands	r2, r7
 676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 685              		.loc 2 676 11 view .LVU205
 686 01e4 0F2A     		cmp	r2, #15
 687 01e6 0ED0     		beq	.L29
 673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
ARM GAS  /tmp/ccjg7X18.s 			page 108


 688              		.loc 2 673 97 is_stmt 1 discriminator 2 view .LVU206
 673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 689              		.loc 2 673 131 is_stmt 0 discriminator 2 view .LVU207
 690 01e8 019A     		ldr	r2, [sp, #4]
 691 01ea 0132     		adds	r2, r2, #1
 692 01ec 0192     		str	r2, [sp, #4]
 693              	.LVL36:
 673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 694              		.loc 2 673 53 is_stmt 1 discriminator 2 view .LVU208
 673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 695              		.loc 2 673 7 is_stmt 0 discriminator 2 view .LVU209
 696 01ee 082A     		cmp	r2, #8
 697 01f0 F2D1     		bne	.L30
 698              	.LVL37:
 699              	.L31:
 701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ_ALL,
 700              		.loc 2 701 9 is_stmt 1 view .LVU210
 701 01f2 1C20     		movs	r0, #28
 702 01f4 9A6A     		ldr	r2, [r3, #40]
 703 01f6 E269     		ldr	r2, [r4, #28]
 704 01f8 013A     		subs	r2, r2, #1
 705 01fa 9200     		lsls	r2, r2, #2
 706 01fc 0240     		ands	r2, r0
 707 01fe 2C38     		subs	r0, r0, #44
 708 0200 9040     		lsls	r0, r0, r2
 709 0202 0200     		movs	r2, r0
 710 0204 B0E7     		b	.L42
 711              	.L29:
 682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 712              		.loc 2 682 7 view .LVU211
 682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 713              		.loc 2 682 9 is_stmt 0 view .LVU212
 714 0206 019A     		ldr	r2, [sp, #4]
 715 0208 012A     		cmp	r2, #1
 716 020a F2D1     		bne	.L31
 687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 ADC_CHSELR_SQ2_TO_SQ8);
 717              		.loc 2 687 9 is_stmt 1 view .LVU213
 718 020c 996A     		ldr	r1, [r3, #40]
 719 020e 113A     		subs	r2, r2, #17
 720 0210 AAE7     		b	.L42
 721              	.LVL38:
 722              	.L32:
 687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                 ADC_CHSELR_SQ2_TO_SQ8);
 723              		.loc 2 687 9 is_stmt 0 view .LVU214
 724              	.LBE99:
 727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 725              		.loc 2 727 7 is_stmt 1 view .LVU215
 726 0212 1222     		movs	r2, #18
 727 0214 A36D     		ldr	r3, [r4, #88]
 732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 728              		.loc 2 732 7 is_stmt 0 view .LVU216
 729 0216 0125     		movs	r5, #1
 730              	.LVL39:
 727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_BUSY_INTERNAL,
 731              		.loc 2 727 7 view .LVU217
 732 0218 9343     		bics	r3, r2
 733 021a 1A00     		movs	r2, r3
ARM GAS  /tmp/ccjg7X18.s 			page 109


 734 021c 1023     		movs	r3, #16
 735 021e 1343     		orrs	r3, r2
 736 0220 A365     		str	r3, [r4, #88]
 732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 737              		.loc 2 732 7 is_stmt 1 view .LVU218
 738 0222 E36D     		ldr	r3, [r4, #92]
 739 0224 2B43     		orrs	r3, r5
 740 0226 E365     		str	r3, [r4, #92]
 734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 741              		.loc 2 734 7 view .LVU219
 742              	.LVL40:
 734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 743              		.loc 2 734 7 is_stmt 0 view .LVU220
 744 0228 AEE7     		b	.L9
 745              	.LVL41:
 746              	.L17:
 741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 747              		.loc 2 741 5 is_stmt 1 view .LVU221
 748 022a A26D     		ldr	r2, [r4, #88]
 743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 749              		.loc 2 743 20 is_stmt 0 view .LVU222
 750 022c 0125     		movs	r5, #1
 751              	.LVL42:
 741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 752              		.loc 2 741 5 view .LVU223
 753 022e 1343     		orrs	r3, r2
 754 0230 A365     		str	r3, [r4, #88]
 743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 755              		.loc 2 743 5 is_stmt 1 view .LVU224
 756              	.LVL43:
 743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 757              		.loc 2 743 5 is_stmt 0 view .LVU225
 758 0232 A9E7     		b	.L9
 759              	.L44:
 760              		.align	2
 761              	.L43:
 762 0234 FDFEFFFF 		.word	-259
 763 0238 08270140 		.word	1073817352
 764 023c FFFFC3FF 		.word	-3932161
 765 0240 1902FEFF 		.word	-130535
 766 0244 02FCFFDF 		.word	-536871934
 767 0248 E7FF3F83 		.word	-2092957721
 768 024c E8FFFF6F 		.word	1879048168
 769 0250 00000000 		.word	SystemCoreClock
 770 0254 400D0300 		.word	200000
 771              		.cfi_endproc
 772              	.LFE301:
 774              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 775              		.align	1
 776              		.weak	HAL_ADC_MspDeInit
 777              		.syntax unified
 778              		.code	16
 779              		.thumb_func
 780              		.fpu softvfp
 782              	HAL_ADC_MspDeInit:
 783              	.LFB332:
 784              		.cfi_startproc
ARM GAS  /tmp/ccjg7X18.s 			page 110


 785              		@ args = 0, pretend = 0, frame = 0
 786              		@ frame_needed = 0, uses_anonymous_args = 0
 787              		@ link register save eliminated.
 788              		@ sp needed
 789 0000 7047     		bx	lr
 790              		.cfi_endproc
 791              	.LFE332:
 793              		.section	.text.HAL_ADC_PollForConversion,"ax",%progbits
 794              		.align	1
 795              		.global	HAL_ADC_PollForConversion
 796              		.syntax unified
 797              		.code	16
 798              		.thumb_func
 799              		.fpu softvfp
 801              	HAL_ADC_PollForConversion:
 802              	.LVL44:
 803              	.LFB307:
 902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
 904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  DeInitialize the ADC MSP.
 905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
 906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   All ADC instances use the same core clock at RCC level, disabling
 907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         the core clock reset all ADC instances).
 908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
 909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
 910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** __weak void HAL_ADC_MspDeInit(ADC_HandleTypeDef* hadc)
 911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
 913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   UNUSED(hadc);
 914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
 916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             function HAL_ADC_MspDeInit must be implemented in the user file.
 917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****    */ 
 918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
 921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
 922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Register a User ADC Callback
 923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         To be used instead of the weak predefined callback
 924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
 925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *                the configuration information for the specified ADC.
 926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be registered
 927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         This parameter can be one of the following values:
 928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
 929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
 930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
 931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
 932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
 933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
 934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
 935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
 936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
 937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
 938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
 939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param  pCallback pointer to the Callback function
 940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
 941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
ARM GAS  /tmp/ccjg7X18.s 			page 111


 942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_RegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Callb
 943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
 945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (pCallback == NULL)
 947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update the error code */
 949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     return HAL_ERROR;
 952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0UL)
 955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     switch (CallbackID)
 957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
 959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ConvCpltCallback = pCallback;
 960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 962:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
 963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = pCallback;
 964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
 967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = pCallback;
 968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
 971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ErrorCallback = pCallback;
 972:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
 975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = pCallback;
 976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
 979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = pCallback;
 980:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 981:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
 983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->EndOfSamplingCallback = pCallback;
 984:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
 987:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
 988:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
 991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
 992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
 993:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       default :
 995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update the error code */
 996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
 997:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Return error status */
ARM GAS  /tmp/ccjg7X18.s 			page 112


 999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         status = HAL_ERROR;
1000:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1001:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1002:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1003:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     switch (CallbackID)
1006:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->MspInitCallback = pCallback;
1009:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1011:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->MspDeInitCallback = pCallback;
1013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1015:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       default :
1016:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update the error code */
1017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1018:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1019:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Return error status */
1020:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         status = HAL_ERROR;
1021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1022:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
1025:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update the error code */
1027:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1028:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
1029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Return error status */
1030:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     status =  HAL_ERROR;
1031:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1033:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return status;
1034:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
1035:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1036:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1037:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Unregister a ADC Callback
1038:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         ADC callback is redirected to the weak predefined callback
1039:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param  hadc Pointer to a ADC_HandleTypeDef structure that contains
1040:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *                the configuration information for the specified ADC.
1041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param  CallbackID ID of the callback to be unregistered
1042:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         This parameter can be one of the following values:
1043:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_COMPLETE_CB_ID      ADC conversion complete callback ID
1044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_CONVERSION_HALF_CB_ID          ADC conversion DMA half-transfer call
1045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID    ADC analog watchdog 1 callback ID
1046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_ERROR_CB_ID                    ADC error callback ID
1047:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID    ADC analog watchdog 2 callback ID
1048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID    ADC analog watchdog 3 callback ID
1049:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_END_OF_SAMPLING_CB_ID          ADC end of sampling callback ID
1050:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID                  ADC Msp Init callback ID
1051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID                ADC Msp DeInit callback ID
1052:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPINIT_CB_ID MspInit callback ID
1053:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          @arg @ref HAL_ADC_MSPDEINIT_CB_ID MspDeInit callback ID
1054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
1055:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
ARM GAS  /tmp/ccjg7X18.s 			page 113


1056:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_UnRegisterCallback(ADC_HandleTypeDef *hadc, HAL_ADC_CallbackIDTypeDef Cal
1057:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
1058:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef status = HAL_OK;
1059:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1060:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if ((hadc->State & HAL_ADC_STATE_READY) != 0)
1061:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     switch (CallbackID)
1063:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1064:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_CONVERSION_COMPLETE_CB_ID :
1065:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ConvCpltCallback = HAL_ADC_ConvCpltCallback;
1066:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1067:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_CONVERSION_HALF_CB_ID :
1069:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ConvHalfCpltCallback = HAL_ADC_ConvHalfCpltCallback;
1070:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1071:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1072:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_1_CB_ID :
1073:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->LevelOutOfWindowCallback = HAL_ADC_LevelOutOfWindowCallback;
1074:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1075:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1076:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_ERROR_CB_ID :
1077:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ErrorCallback = HAL_ADC_ErrorCallback;
1078:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1079:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1080:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_2_CB_ID :
1081:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->LevelOutOfWindow2Callback = HAL_ADCEx_LevelOutOfWindow2Callback;
1082:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1083:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1084:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_LEVEL_OUT_OF_WINDOW_3_CB_ID :
1085:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->LevelOutOfWindow3Callback = HAL_ADCEx_LevelOutOfWindow3Callback;
1086:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1087:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1088:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_END_OF_SAMPLING_CB_ID :
1089:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->EndOfSamplingCallback = HAL_ADCEx_EndOfSamplingCallback;
1090:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1091:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1093:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit; /* Legacy weak MspInit              */
1094:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1095:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1096:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1097:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit; /* Legacy weak MspDeInit            */
1098:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1099:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       default :
1101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update the error code */
1102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
1104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Return error status */
1105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         status =  HAL_ERROR;
1106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else if (HAL_ADC_STATE_RESET == hadc->State)
1110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     switch (CallbackID)
1112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
ARM GAS  /tmp/ccjg7X18.s 			page 114


1113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_MSPINIT_CB_ID :
1114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->MspInitCallback = HAL_ADC_MspInit;                   /* Legacy weak MspInit          
1115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
1117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       case HAL_ADC_MSPDEINIT_CB_ID :
1118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->MspDeInitCallback = HAL_ADC_MspDeInit;               /* Legacy weak MspDeInit        
1119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
1121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       default :
1122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update the error code */
1123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
1125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Return error status */
1126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         status =  HAL_ERROR;
1127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         break;
1128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
1131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update the error code */
1133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->ErrorCode |= HAL_ADC_ERROR_INVALID_CALLBACK;
1134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
1135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Return error status */
1136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     status =  HAL_ERROR;
1137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return status;
1140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
1141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @}
1146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group2 ADC Input and Output operation functions
1149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  *  @brief    ADC IO operation functions 
1150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  *
1151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** @verbatim   
1152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  ===============================================================================
1153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                       ##### IO operation functions #####
1154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  ===============================================================================
1155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]  This section provides functions allowing to:
1156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Start conversion of regular group.
1157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Stop conversion of regular group.
1158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Poll for conversion complete on regular group.
1159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Poll for conversion event.
1160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Get result of regular channel conversion.
1161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Start conversion of regular group and enable interruptions.
1162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Stop conversion of regular group and disable interruptions.
1163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Handle ADC interrupt request
1164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Start conversion of regular group and enable DMA transfer.
1165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Stop conversion of regular group and disable ADC DMA transfer.
1166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** @endverbatim
1167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
1168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  /tmp/ccjg7X18.s 			page 115


1170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group.
1172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Interruptions enabled in this function: None.
1173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
1175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start(ADC_HandleTypeDef* hadc)
1177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
1178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Process locked */
1187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_LOCK(hadc);
1188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
1189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Enable the ADC peripheral */
1190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
1192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state                                                        */
1196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC error code */
1203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Reset all ADC error code fields */
1204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Process unlocked */
1211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* trigger event.                                                       */
1219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Start ADC group regular conversion */
1220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
1223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Process unlocked */
1225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
ARM GAS  /tmp/ccjg7X18.s 			page 116


1227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
1229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return function status */
1234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
1235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
1236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in 
1239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC peripheral.
1240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note:  ADC peripheral disable is forcing stop of potential 
1241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         conversion on injected group. If injected group is under use, it
1242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         should be preliminarily stopped using HAL_ADCEx_InjectedStop function.
1243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status.
1245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop(ADC_HandleTypeDef* hadc)
1247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
1248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Process locked */
1254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_LOCK(hadc);
1255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC group regular */
1257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
1258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
1265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state */
1269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
1271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Process unlocked */
1276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return function status */
1279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
1280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
1281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Wait for regular group conversion to be completed.
ARM GAS  /tmp/ccjg7X18.s 			page 117


1284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   ADC conversion flags EOS (end of sequence) and EOC (end of
1285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         conversion) are cleared by this function, with an exception:
1286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         if low power feature "LowPowerAutoWait" is enabled, flags are 
1287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         not cleared to not interfere with this feature until data register
1288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         is read using function HAL_ADC_GetValue().
1289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   This function cannot be used in a particular setup: ADC configured 
1290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         in DMA mode and polling for end of each conversion (ADC init
1291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SINGLE_CONV).
1292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         In this case, DMA resets the flag EOC and polling cannot be
1293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         performed on each conversion. Nevertheless, polling can still 
1294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         be performed on the complete sequence (ADC init
1295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         parameter "EOCSelection" set to ADC_EOC_SEQ_CONV).
1296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
1299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForConversion(ADC_HandleTypeDef* hadc, uint32_t Timeout)
1301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 804              		.loc 2 1301 1 is_stmt 1 view -0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 0
 807              		@ frame_needed = 0, uses_anonymous_args = 0
1302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 808              		.loc 2 1302 3 view .LVU227
1303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_Flag_End;
 809              		.loc 2 1303 3 view .LVU228
1304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 810              		.loc 2 1306 3 view .LVU229
1307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* If end of conversion selected to end of sequence conversions */
1309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 811              		.loc 2 1309 3 view .LVU230
1301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 812              		.loc 2 1301 1 is_stmt 0 view .LVU231
 813 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 814              	.LCFI3:
 815              		.cfi_def_cfa_offset 24
 816              		.cfi_offset 3, -24
 817              		.cfi_offset 4, -20
 818              		.cfi_offset 5, -16
 819              		.cfi_offset 6, -12
 820              		.cfi_offset 7, -8
 821              		.cfi_offset 14, -4
 822              		.loc 2 1309 17 view .LVU232
 823 0002 4669     		ldr	r6, [r0, #20]
1301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 824              		.loc 2 1301 1 view .LVU233
 825 0004 0400     		movs	r4, r0
 826 0006 0D00     		movs	r5, r1
 827              		.loc 2 1309 6 view .LVU234
 828 0008 082E     		cmp	r6, #8
 829 000a 0AD0     		beq	.L47
1310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_Flag_End = ADC_FLAG_EOS;
1312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
ARM GAS  /tmp/ccjg7X18.s 			page 118


1313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* If end of conversion selected to end of unitary conversion */
1314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else /* ADC_EOC_SINGLE_CONV */
1315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Verification that ADC configuration is compliant with polling for      */
1317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* each conversion:                                                       */
1318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Particular case is ADC configured in DMA mode and ADC sequencer with   */
1319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* several ranks and polling for end of each conversion.                  */
1320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* For code simplicity sake, this particular case is generalized to       */
1321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* ADC configured in DMA mode and and polling for end of each conversion. */
1322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((hadc->Instance->CFGR1 & ADC_CFGR1_DMAEN) != 0UL)
 830              		.loc 2 1322 5 is_stmt 1 view .LVU235
 831              		.loc 2 1322 14 is_stmt 0 view .LVU236
 832 000c 0368     		ldr	r3, [r0]
 833              		.loc 2 1322 32 view .LVU237
 834 000e 0120     		movs	r0, #1
 835              	.LVL45:
 836              		.loc 2 1322 24 view .LVU238
 837 0010 DB68     		ldr	r3, [r3, #12]
1323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Update ADC state machine to error */
1325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       return HAL_ERROR;
1328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
1330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       tmp_Flag_End = (ADC_FLAG_EOC);
 838              		.loc 2 1331 20 view .LVU239
 839 0012 0426     		movs	r6, #4
1322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 840              		.loc 2 1322 8 view .LVU240
 841 0014 0342     		tst	r3, r0
 842 0016 04D0     		beq	.L47
1325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 843              		.loc 2 1325 7 is_stmt 1 view .LVU241
 844 0018 2023     		movs	r3, #32
 845 001a A26D     		ldr	r2, [r4, #88]
 846 001c 1343     		orrs	r3, r2
 847 001e A365     		str	r3, [r4, #88]
1327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 848              		.loc 2 1327 7 view .LVU242
 849              	.LVL46:
 850              	.L48:
1332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Get tick count */
1336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   tickstart = HAL_GetTick();
1337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Wait until End of unitary conversion or sequence conversions flag is raised */
1339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   while((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
1340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
1343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if(((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
1345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
ARM GAS  /tmp/ccjg7X18.s 			page 119


1346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update ADC state machine to timeout */
1347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
1349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Process unlocked */
1350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
1351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
1352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         return HAL_TIMEOUT;
1353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Update ADC state machine */
1358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Determine whether any further conversion upcoming on group regular       */
1361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* by external trigger, continuous mode or scan sequence on going.          */
1362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if(   (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
1363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      && (hadc->Init.ContinuousConvMode == DISABLE)
1364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     )
1365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check whether end of sequence is reached */
1367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) )
1368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit             */
1370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* ADSTART==0 (no conversion on going)                                  */
1371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Disable ADC end of single conversion interrupt on group regular */
1374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Note: Overrun interrupt was enabled with EOC interrupt in          */
1375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* HAL_Start_IT(), but is not disabled here because can be used       */
1376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* by overrun IRQ process below.                                      */
1377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
1378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
1379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Set ADC state */
1380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         ADC_STATE_CLR_SET(hadc->State,
1381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY,
1382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                           HAL_ADC_STATE_READY);
1383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       else
1385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Change ADC state to error state */
1387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
1389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Set ADC error code to ADC peripheral internal error */
1390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
1391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Clear end of conversion flag of regular group if low power feature       */
1396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* "LowPowerAutoWait " is disabled, to not interfere with this feature      */
1397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* until data register is read using function HAL_ADC_GetValue().           */
1398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (hadc->Init.LowPowerAutoWait == DISABLE)
1399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear regular group conversion flag */
1401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS));
1402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
ARM GAS  /tmp/ccjg7X18.s 			page 120


1403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return function status */
1405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return HAL_OK;
1406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 851              		.loc 2 1406 1 is_stmt 0 view .LVU243
 852              		@ sp needed
 853              	.LVL47:
 854              		.loc 2 1406 1 view .LVU244
 855 0020 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 856              	.LVL48:
 857              	.L47:
1336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 858              		.loc 2 1336 3 is_stmt 1 view .LVU245
1336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 859              		.loc 2 1336 15 is_stmt 0 view .LVU246
 860 0022 FFF7FEFF 		bl	HAL_GetTick
 861              	.LVL49:
1336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 862              		.loc 2 1336 15 view .LVU247
 863 0026 0700     		movs	r7, r0
 864              	.LVL50:
1339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 865              		.loc 2 1339 3 is_stmt 1 view .LVU248
 866              	.L49:
1339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 867              		.loc 2 1339 14 is_stmt 0 view .LVU249
 868 0028 2068     		ldr	r0, [r4]
 869              	.L50:
1339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 870              		.loc 2 1339 8 is_stmt 1 view .LVU250
1339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 871              		.loc 2 1339 24 is_stmt 0 view .LVU251
 872 002a 0368     		ldr	r3, [r0]
1339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 873              		.loc 2 1339 8 view .LVU252
 874 002c 1E42     		tst	r6, r3
 875 002e 25D0     		beq	.L52
1358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 876              		.loc 2 1358 3 is_stmt 1 view .LVU253
 877 0030 8023     		movs	r3, #128
 878 0032 A26D     		ldr	r2, [r4, #88]
 879 0034 9B00     		lsls	r3, r3, #2
 880 0036 1343     		orrs	r3, r2
 881 0038 A365     		str	r3, [r4, #88]
1362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      && (hadc->Init.ContinuousConvMode == DISABLE)
 882              		.loc 2 1362 3 view .LVU254
 883              	.LVL51:
 884              	.LBB102:
 885              	.LBI102:
2341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 886              		.loc 1 2341 26 view .LVU255
 887              	.LBB103:
2343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 888              		.loc 1 2343 3 view .LVU256
2343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 889              		.loc 1 2343 12 is_stmt 0 view .LVU257
 890 003a C023     		movs	r3, #192
ARM GAS  /tmp/ccjg7X18.s 			page 121


 891 003c C268     		ldr	r2, [r0, #12]
 892 003e 1B01     		lsls	r3, r3, #4
2343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 893              		.loc 1 2343 106 view .LVU258
 894 0040 1A42     		tst	r2, r3
 895 0042 14D1     		bne	.L53
 896              	.LVL52:
2343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 897              		.loc 1 2343 106 view .LVU259
 898              	.LBE103:
 899              	.LBE102:
1363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     )
 900              		.loc 2 1363 6 view .LVU260
 901 0044 A37E     		ldrb	r3, [r4, #26]
 902 0046 002B     		cmp	r3, #0
 903 0048 11D1     		bne	.L53
1367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 904              		.loc 2 1367 5 is_stmt 1 view .LVU261
1367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 905              		.loc 2 1367 9 is_stmt 0 view .LVU262
 906 004a 0368     		ldr	r3, [r0]
1367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 907              		.loc 2 1367 7 view .LVU263
 908 004c 1B07     		lsls	r3, r3, #28
 909 004e 0ED5     		bpl	.L53
1371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 910              		.loc 2 1371 7 is_stmt 1 view .LVU264
1371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 911              		.loc 2 1371 11 is_stmt 0 view .LVU265
 912 0050 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 913              	.LVL53:
1371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 914              		.loc 2 1371 10 view .LVU266
 915 0054 0028     		cmp	r0, #0
 916 0056 23D1     		bne	.L54
1377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 917              		.loc 2 1377 9 is_stmt 1 view .LVU267
 918 0058 0C21     		movs	r1, #12
 919 005a 2268     		ldr	r2, [r4]
 920 005c 5368     		ldr	r3, [r2, #4]
 921 005e 8B43     		bics	r3, r1
 922 0060 5360     		str	r3, [r2, #4]
1380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                           HAL_ADC_STATE_REG_BUSY,
 923              		.loc 2 1380 9 view .LVU268
 924 0062 A36D     		ldr	r3, [r4, #88]
 925 0064 144A     		ldr	r2, .L67
 926 0066 1A40     		ands	r2, r3
 927 0068 0123     		movs	r3, #1
 928 006a 1343     		orrs	r3, r2
 929 006c A365     		str	r3, [r4, #88]
 930              	.L53:
1398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 931              		.loc 2 1398 3 view .LVU269
1398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 932              		.loc 2 1398 17 is_stmt 0 view .LVU270
 933 006e 207E     		ldrb	r0, [r4, #24]
1398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
ARM GAS  /tmp/ccjg7X18.s 			page 122


 934              		.loc 2 1398 6 view .LVU271
 935 0070 0028     		cmp	r0, #0
 936 0072 1ED1     		bne	.L56
1401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 937              		.loc 2 1401 5 is_stmt 1 view .LVU272
 938 0074 0C22     		movs	r2, #12
 939 0076 2368     		ldr	r3, [r4]
 940 0078 1A60     		str	r2, [r3]
 941 007a D1E7     		b	.L48
 942              	.L52:
1342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 943              		.loc 2 1342 5 view .LVU273
1342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 944              		.loc 2 1342 7 is_stmt 0 view .LVU274
 945 007c 6B1C     		adds	r3, r5, #1
 946 007e D4D0     		beq	.L50
1344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 947              		.loc 2 1344 7 is_stmt 1 view .LVU275
1344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 948              		.loc 2 1344 12 is_stmt 0 view .LVU276
 949 0080 FFF7FEFF 		bl	HAL_GetTick
 950              	.LVL54:
1344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 951              		.loc 2 1344 26 view .LVU277
 952 0084 C01B     		subs	r0, r0, r7
1344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 953              		.loc 2 1344 9 view .LVU278
 954 0086 A842     		cmp	r0, r5
 955 0088 01D8     		bhi	.L51
1344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 956              		.loc 2 1344 50 discriminator 1 view .LVU279
 957 008a 002D     		cmp	r5, #0
 958 008c CCD1     		bne	.L49
 959              	.L51:
1347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 960              		.loc 2 1347 9 is_stmt 1 view .LVU280
 961 008e 0423     		movs	r3, #4
 962 0090 A26D     		ldr	r2, [r4, #88]
1350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 963              		.loc 2 1350 9 is_stmt 0 view .LVU281
 964 0092 5434     		adds	r4, r4, #84
 965              	.LVL55:
1347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 966              		.loc 2 1347 9 view .LVU282
 967 0094 1343     		orrs	r3, r2
 968 0096 6360     		str	r3, [r4, #4]
1350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 969              		.loc 2 1350 9 is_stmt 1 view .LVU283
1350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 970              		.loc 2 1350 9 view .LVU284
 971 0098 0023     		movs	r3, #0
1352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 972              		.loc 2 1352 16 is_stmt 0 view .LVU285
 973 009a 0320     		movs	r0, #3
1350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 974              		.loc 2 1350 9 view .LVU286
 975 009c 2370     		strb	r3, [r4]
ARM GAS  /tmp/ccjg7X18.s 			page 123


1350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 976              		.loc 2 1350 9 is_stmt 1 view .LVU287
1352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 977              		.loc 2 1352 9 view .LVU288
1352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 978              		.loc 2 1352 16 is_stmt 0 view .LVU289
 979 009e BFE7     		b	.L48
 980              	.LVL56:
 981              	.L54:
1387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 982              		.loc 2 1387 9 is_stmt 1 view .LVU290
 983 00a0 2023     		movs	r3, #32
 984 00a2 A26D     		ldr	r2, [r4, #88]
 985 00a4 1343     		orrs	r3, r2
 986 00a6 A365     		str	r3, [r4, #88]
1390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 987              		.loc 2 1390 9 view .LVU291
 988 00a8 0123     		movs	r3, #1
 989 00aa E26D     		ldr	r2, [r4, #92]
 990 00ac 1343     		orrs	r3, r2
 991 00ae E365     		str	r3, [r4, #92]
 992 00b0 DDE7     		b	.L53
 993              	.L56:
1405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 994              		.loc 2 1405 10 is_stmt 0 view .LVU292
 995 00b2 0020     		movs	r0, #0
 996 00b4 B4E7     		b	.L48
 997              	.L68:
 998 00b6 C046     		.align	2
 999              	.L67:
 1000 00b8 FEFEFFFF 		.word	-258
 1001              		.cfi_endproc
 1002              	.LFE307:
 1004              		.section	.text.HAL_ADC_PollForEvent,"ax",%progbits
 1005              		.align	1
 1006              		.global	HAL_ADC_PollForEvent
 1007              		.syntax unified
 1008              		.code	16
 1009              		.thumb_func
 1010              		.fpu softvfp
 1012              	HAL_ADC_PollForEvent:
 1013              	.LVL57:
 1014              	.LFB308:
1407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Poll for ADC event.
1410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param EventType the ADC event type.
1412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          This parameter can be one of the following values:
1413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *            @arg @ref ADC_EOSMP_EVENT  ADC End of Sampling event
1414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *            @arg @ref ADC_AWD1_EVENT   ADC Analog watchdog 1 event (main analog watchdog, presen
1415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *            @arg @ref ADC_AWD2_EVENT   ADC Analog watchdog 2 event (additional analog watchdog, 
1416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *            @arg @ref ADC_AWD3_EVENT   ADC Analog watchdog 3 event (additional analog watchdog, 
1417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *            @arg @ref ADC_OVR_EVENT    ADC Overrun event
1418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param Timeout Timeout value in millisecond.
1419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   The relevant flag is cleared if found to be set, except for ADC_FLAG_OVR.
1420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         Indeed, the latter is reset only if hadc->Init.Overrun field is set  
ARM GAS  /tmp/ccjg7X18.s 			page 124


1421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         to ADC_OVR_DATA_OVERWRITTEN. Otherwise, data register may be potentially overwritten 
1422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         by a new converted data as soon as OVR is cleared.
1423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         To reset OVR flag once the preserved data is retrieved, the user can resort
1424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         to macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR); 
1425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
1426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_PollForEvent(ADC_HandleTypeDef* hadc, uint32_t EventType, uint32_t Timeou
1428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 1015              		.loc 2 1428 1 is_stmt 1 view -0
 1016              		.cfi_startproc
 1017              		@ args = 0, pretend = 0, frame = 0
 1018              		@ frame_needed = 0, uses_anonymous_args = 0
1429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart; 
 1019              		.loc 2 1429 3 view .LVU294
1430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1020              		.loc 2 1432 3 view .LVU295
1433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EVENT_TYPE(EventType));
 1021              		.loc 2 1433 3 view .LVU296
1434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Get tick count */
1436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   tickstart = HAL_GetTick();
 1022              		.loc 2 1436 3 view .LVU297
1428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart; 
 1023              		.loc 2 1428 1 is_stmt 0 view .LVU298
 1024 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1025              	.LCFI4:
 1026              		.cfi_def_cfa_offset 24
 1027              		.cfi_offset 3, -24
 1028              		.cfi_offset 4, -20
 1029              		.cfi_offset 5, -16
 1030              		.cfi_offset 6, -12
 1031              		.cfi_offset 7, -8
 1032              		.cfi_offset 14, -4
1428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart; 
 1033              		.loc 2 1428 1 view .LVU299
 1034 0002 0400     		movs	r4, r0
 1035 0004 0D00     		movs	r5, r1
 1036 0006 1600     		movs	r6, r2
 1037              		.loc 2 1436 15 view .LVU300
 1038 0008 FFF7FEFF 		bl	HAL_GetTick
 1039              	.LVL58:
 1040              		.loc 2 1436 15 view .LVU301
 1041 000c 0700     		movs	r7, r0
 1042              	.LVL59:
1437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check selected event flag */
1439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   while(__HAL_ADC_GET_FLAG(hadc, EventType) == 0UL)
 1043              		.loc 2 1439 3 is_stmt 1 view .LVU302
 1044              	.L70:
 1045              		.loc 2 1439 9 is_stmt 0 view .LVU303
 1046 000e 2368     		ldr	r3, [r4]
 1047              	.L71:
 1048              		.loc 2 1439 8 is_stmt 1 view .LVU304
 1049              		.loc 2 1439 9 is_stmt 0 view .LVU305
 1050 0010 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccjg7X18.s 			page 125


 1051 0012 2A40     		ands	r2, r5
 1052              		.loc 2 1439 8 view .LVU306
 1053 0014 AA42     		cmp	r2, r5
 1054 0016 15D1     		bne	.L74
1440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check if timeout is disabled (set to infinite wait) */
1442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if(Timeout != HAL_MAX_DELAY)
1443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if(((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
1445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update ADC state machine to timeout */
1447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
1448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
1449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Process unlocked */
1450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         __HAL_UNLOCK(hadc);
1451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
1452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         return HAL_TIMEOUT;
1453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   switch(EventType)
 1055              		.loc 2 1457 3 is_stmt 1 view .LVU307
 1056 0018 8022     		movs	r2, #128
 1057 001a 5200     		lsls	r2, r2, #1
 1058 001c 9542     		cmp	r5, r2
 1059 001e 37D0     		beq	.L75
 1060 0020 22D8     		bhi	.L76
 1061 0022 022D     		cmp	r5, #2
 1062 0024 28D0     		beq	.L77
 1063 0026 802D     		cmp	r5, #128
 1064 0028 2ED0     		beq	.L78
 1065              	.L79:
1458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* End Of Sampling event */
1460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   case ADC_EOSMP_EVENT:
1461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Set ADC state */
1462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      
1464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear the End Of Sampling flag */
1465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP);
1466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        
1467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     break;  
1468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Analog watchdog (level out of window) event */
1470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Note: In case of several analog watchdog enabled, if needed to know      */
1471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* which one triggered and on which ADCx, test ADC state of analog watchdog */
1472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* flags HAL_ADC_STATE_AWD1/2/3 using function "HAL_ADC_GetState()".        */
1473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* For example:                                                             */
1474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "          */
1475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD2) != 0UL) "          */
1476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*  " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD3) != 0UL) "          */
1477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check analog watchdog 1 flag */
1479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   case ADC_AWD_EVENT:
1480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Set ADC state */
1481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
ARM GAS  /tmp/ccjg7X18.s 			page 126


1482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
1483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
1484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
1485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
1486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     break;
1487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check analog watchdog 2 flag */
1489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   case ADC_AWD2_EVENT:
1490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Set ADC state */
1491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
1492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
1494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
1495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
1496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     break;
1497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check analog watchdog 3 flag */
1499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   case ADC_AWD3_EVENT:
1500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Set ADC state */
1501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
1502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */
1504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
1505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
1506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     break;
1507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Overrun event */
1509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   default: /* Case ADC_OVR_EVENT */
1510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* If overrun is set to overwrite previous data, overrun event is not     */
1511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* considered as an error.                                                */
1512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
1513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* overrun ")                                                             */
1514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
 1066              		.loc 2 1514 5 view .LVU308
 1067              		.loc 2 1514 8 is_stmt 0 view .LVU309
 1068 002a 206B     		ldr	r0, [r4, #48]
 1069 002c 0028     		cmp	r0, #0
 1070 002e 33D1     		bne	.L81
1515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state */
1517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
 1071              		.loc 2 1517 7 is_stmt 1 view .LVU310
 1072 0030 8023     		movs	r3, #128
 1073 0032 A26D     		ldr	r2, [r4, #88]
 1074 0034 DB00     		lsls	r3, r3, #3
 1075 0036 1343     		orrs	r3, r2
 1076 0038 A365     		str	r3, [r4, #88]
1518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
1519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC error code to overrun */
1520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 1077              		.loc 2 1520 7 view .LVU311
 1078 003a 0223     		movs	r3, #2
 1079 003c E26D     		ldr	r2, [r4, #92]
 1080 003e 1343     		orrs	r3, r2
 1081 0040 E365     		str	r3, [r4, #92]
 1082 0042 10E0     		b	.L73
 1083              	.L74:
ARM GAS  /tmp/ccjg7X18.s 			page 127


1442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1084              		.loc 2 1442 5 view .LVU312
1442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1085              		.loc 2 1442 7 is_stmt 0 view .LVU313
 1086 0044 721C     		adds	r2, r6, #1
 1087 0046 E3D0     		beq	.L71
1444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1088              		.loc 2 1444 7 is_stmt 1 view .LVU314
1444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1089              		.loc 2 1444 12 is_stmt 0 view .LVU315
 1090 0048 FFF7FEFF 		bl	HAL_GetTick
 1091              	.LVL60:
1444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1092              		.loc 2 1444 26 view .LVU316
 1093 004c C01B     		subs	r0, r0, r7
1444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1094              		.loc 2 1444 9 view .LVU317
 1095 004e B042     		cmp	r0, r6
 1096 0050 01D8     		bhi	.L72
1444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1097              		.loc 2 1444 50 discriminator 1 view .LVU318
 1098 0052 002E     		cmp	r6, #0
 1099 0054 DBD1     		bne	.L70
 1100              	.L72:
1447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 1101              		.loc 2 1447 9 is_stmt 1 view .LVU319
 1102 0056 0423     		movs	r3, #4
 1103 0058 A26D     		ldr	r2, [r4, #88]
1452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 1104              		.loc 2 1452 16 is_stmt 0 view .LVU320
 1105 005a 0320     		movs	r0, #3
1447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 1106              		.loc 2 1447 9 view .LVU321
 1107 005c 1343     		orrs	r3, r2
 1108 005e A365     		str	r3, [r4, #88]
1450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 1109              		.loc 2 1450 9 is_stmt 1 view .LVU322
1450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 1110              		.loc 2 1450 9 view .LVU323
 1111 0060 0023     		movs	r3, #0
 1112 0062 5434     		adds	r4, r4, #84
 1113              	.LVL61:
1450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 1114              		.loc 2 1450 9 is_stmt 0 view .LVU324
 1115 0064 2370     		strb	r3, [r4]
1450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 1116              		.loc 2 1450 9 is_stmt 1 view .LVU325
1452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 1117              		.loc 2 1452 9 view .LVU326
 1118              	.LVL62:
 1119              	.L73:
1521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
1523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Clear ADC Overrun flag only if Overrun is set to ADC_OVR_DATA_OVERWRITTEN
1525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          otherwise, data register is potentially overwritten by new converted data as soon
1526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          as OVR is cleared. */
ARM GAS  /tmp/ccjg7X18.s 			page 128


1527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
1528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     break;
1530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return function status */
1533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return HAL_OK;
1534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 1120              		.loc 2 1534 1 is_stmt 0 view .LVU327
 1121              		@ sp needed
 1122              	.LVL63:
 1123              	.LVL64:
 1124              	.LVL65:
 1125              		.loc 2 1534 1 view .LVU328
 1126 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1127              	.LVL66:
 1128              	.L76:
1457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1129              		.loc 2 1457 3 view .LVU329
 1130 0068 8022     		movs	r2, #128
 1131 006a 9200     		lsls	r2, r2, #2
 1132 006c 9542     		cmp	r5, r2
 1133 006e DCD1     		bne	.L79
1501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 1134              		.loc 2 1501 5 is_stmt 1 view .LVU330
 1135 0070 8022     		movs	r2, #128
 1136 0072 A16D     		ldr	r1, [r4, #88]
 1137 0074 D202     		lsls	r2, r2, #11
 1138 0076 02E0     		b	.L86
 1139              	.L77:
1462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      
 1140              		.loc 2 1462 5 view .LVU331
 1141 0078 8022     		movs	r2, #128
 1142 007a A16D     		ldr	r1, [r4, #88]
 1143 007c 1201     		lsls	r2, r2, #4
 1144              	.L86:
1491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 1145              		.loc 2 1491 5 is_stmt 0 view .LVU332
 1146 007e 0A43     		orrs	r2, r1
 1147 0080 A265     		str	r2, [r4, #88]
1494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 1148              		.loc 2 1494 5 is_stmt 1 view .LVU333
 1149 0082 1D60     		str	r5, [r3]
1496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 1150              		.loc 2 1496 5 view .LVU334
 1151              	.L85:
1533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 1152              		.loc 2 1533 10 is_stmt 0 view .LVU335
 1153 0084 0020     		movs	r0, #0
 1154 0086 EEE7     		b	.L73
 1155              	.L78:
1481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 1156              		.loc 2 1481 5 is_stmt 1 view .LVU336
 1157 0088 8022     		movs	r2, #128
 1158 008a A16D     		ldr	r1, [r4, #88]
 1159 008c 5202     		lsls	r2, r2, #9
 1160 008e F6E7     		b	.L86
ARM GAS  /tmp/ccjg7X18.s 			page 129


 1161              	.L75:
1491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 1162              		.loc 2 1491 5 view .LVU337
 1163 0090 8022     		movs	r2, #128
 1164 0092 A16D     		ldr	r1, [r4, #88]
 1165 0094 9202     		lsls	r2, r2, #10
 1166 0096 F2E7     		b	.L86
 1167              	.L81:
1527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 1168              		.loc 2 1527 7 view .LVU338
 1169 0098 1022     		movs	r2, #16
 1170 009a 1A60     		str	r2, [r3]
 1171 009c F2E7     		b	.L85
 1172              		.cfi_endproc
 1173              	.LFE308:
 1175              		.section	.text.HAL_ADC_GetValue,"ax",%progbits
 1176              		.align	1
 1177              		.global	HAL_ADC_GetValue
 1178              		.syntax unified
 1179              		.code	16
 1180              		.thumb_func
 1181              		.fpu softvfp
 1183              	HAL_ADC_GetValue:
 1184              	.LVL67:
 1185              	.LFB313:
1535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group with interruption.
1538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Interruptions enabled in this function according to initialization
1539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         setting : EOC (end of conversion), EOS (end of sequence), 
1540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         OVR overrun.
1541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   To guarantee a proper reset of all interruptions once all the needed
1543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         conversions are obtained, HAL_ADC_Stop_IT() must be called to ensure 
1544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         a correct stop of the IT-based conversions.
1545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   By default, HAL_ADC_Start_IT() does not enable the End Of Sampling 
1546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         interruption. If required (e.g. in case of oversampling with trigger
1547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         mode), the user must:
1548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          1. first clear the EOSMP flag if set with macro __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EO
1549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          2. then enable the EOSMP interrupt with macro __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOSMP) 
1550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          before calling HAL_ADC_Start_IT().
1551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
1553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_IT(ADC_HandleTypeDef* hadc)
1555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
1556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Process locked */
1565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_LOCK(hadc);
1566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
ARM GAS  /tmp/ccjg7X18.s 			page 130


1567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Enable the ADC peripheral */
1568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
1570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state                                                        */
1574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
1579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC error code */
1582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Reset all ADC error code fields */
1583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Clear ADC group regular conversion flag and overrun flag               */
1586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
1587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Process unlocked */
1590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Disable all interruptions before enabling the desired ones */
1595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Enable ADC end of conversion interrupt */
1598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       switch(hadc->Init.EOCSelection)
1599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         case ADC_EOC_SEQ_CONV:
1601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOS);
1602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
1603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* case ADC_EOC_SINGLE_CONV */
1604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         default:
1605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_EOC);
1606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
1607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Enable ADC overrun interrupt */
1610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If hadc->Init.Overrun is set to ADC_OVR_DATA_PRESERVED, only then is
1611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          ADC_IT_OVR enabled; otherwise data overwrite is considered as normal
1612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          behavior and no CPU time is lost for a non-processed interruption */
1613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
1614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);  
1616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* trigger event.                                                       */
1622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Start ADC group regular conversion */
1623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
ARM GAS  /tmp/ccjg7X18.s 			page 131


1624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
1626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Process unlocked */
1628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
1631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
1633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return function status */
1638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
1639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
1640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in 
1643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         case of auto_injection mode), disable interrution of 
1644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         end-of-conversion, disable ADC peripheral.
1645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status.
1647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_IT(ADC_HandleTypeDef* hadc)
1649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
1650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Process locked */
1656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_LOCK(hadc);
1657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* 1. Stop potential conversion on going, on ADC group regular */
1659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
1660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Disable ADC end of conversion interrupt for regular group */
1665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
1667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
1668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = ADC_Disable(hadc);
1670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
1671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state */
1675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
1677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
ARM GAS  /tmp/ccjg7X18.s 			page 132


1681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Process unlocked */
1682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return function status */
1685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
1686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
1687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Enable ADC, start conversion of regular group and transfer result through DMA.
1690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Interruptions enabled in this function:
1691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         overrun (if applicable), DMA half transfer, DMA transfer complete. 
1692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         Each of these interruptions has its dedicated callback function.
1693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param pData Destination Buffer address.
1695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param Length Number of data to be transferred from ADC peripheral to memory
1696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status.
1697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef* hadc, uint32_t* pData, uint32_t Length)
1699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
1700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Perform ADC enable and conversion start if no conversion is on going */
1706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Process locked */
1709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_LOCK(hadc);
1710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
1711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Specific case for first call occurrence of this function (DMA transfer */
1712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* not activated and ADC disabled), DMA transfer must be activated        */
1713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* with ADC disabled.                                                     */
1714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((hadc->Instance->CFGR1 & ADC_CFGR1_DMAEN) == 0UL)
1715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (LL_ADC_IsEnabled(hadc->Instance) != 0UL)
1717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Disable ADC */
1719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         LL_ADC_Disable(hadc->Instance);
1720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Enable ADC DMA mode */
1723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->Instance->CFGR1 |= ADC_CFGR1_DMAEN;
1724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
1726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Enable the ADC peripheral */
1727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = ADC_Enable(hadc);
1728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
1729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Start conversion if ADC is effectively enabled */
1730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state                                                        */
1733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* - Clear state bitfield related to regular group conversion results   */
1734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* - Set state bitfield related to regular operation                    */
1735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
1737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY);
ARM GAS  /tmp/ccjg7X18.s 			page 133


1738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC error code */
1740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Reset all ADC error code fields */
1741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_CLEAR_ERRORCODE(hadc);
1742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set the DMA transfer complete callback */
1744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
1745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set the DMA half transfer complete callback */
1747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
1748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set the DMA error callback */
1750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
1751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC   */
1754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* start (in case of SW start):                                         */
1755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Clear regular group conversion flag and overrun flag */
1757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* (To ensure of no unknown state from potential previous ADC           */
1758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* operations)                                                          */
1759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
1760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Process unlocked */
1762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Unlock before starting ADC conversions: in case of potential         */
1763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
1764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_UNLOCK(hadc);
1765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Enable ADC overrun interrupt */
1767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
1768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Start the DMA channel */
1770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)
1771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Enable conversion of regular group.                                  */
1773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If software start has been selected, conversion starts immediately.  */
1774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If external trigger has been selected, conversion will start at next */
1775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* trigger event.                                                       */
1776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Start ADC group regular conversion */
1777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
1778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
1781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = HAL_BUSY;
1783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return function status */
1786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
1787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
1788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Stop ADC conversion of regular group (and injected group in 
1791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable 
1792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         ADC peripheral.
1793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status.
ARM GAS  /tmp/ccjg7X18.s 			page 134


1795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_Stop_DMA(ADC_HandleTypeDef* hadc)
1797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
1798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
1799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Process locked */
1804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_LOCK(hadc);
1805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* 1. Stop potential ADC group regular conversion on going */
1807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   tmp_hal_status = ADC_ConversionStop(hadc);
1808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (tmp_hal_status == HAL_OK)
1811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
1813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* while DMA transfer is on going)                                        */
1814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if(hadc->DMA_Handle->State == HAL_DMA_STATE_BUSY)
1815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
1817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
1818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Check if DMA channel effectively disabled */
1819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (tmp_hal_status != HAL_OK)
1820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update ADC state machine to error */
1822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
1826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Disable ADC overrun interrupt */
1827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
1829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* 2. Disable the ADC peripheral */
1830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed, to keep  */
1831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* in memory a potential failing status.                                  */
1832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       tmp_hal_status = ADC_Disable(hadc);
1835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
1837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (void)ADC_Disable(hadc);
1839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
1841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check if ADC is effectively disabled */
1842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (tmp_hal_status == HAL_OK)
1843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state */
1845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       ADC_STATE_CLR_SET(hadc->State,
1846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
1847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY);
1848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
1850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Disable ADC DMA (ADC DMA configuration of continuous requests is kept) */
1851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     CLEAR_BIT(hadc->Instance->CFGR1, ADC_CFGR1_DMAEN);
ARM GAS  /tmp/ccjg7X18.s 			page 135


1852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Process unlocked */
1855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
1856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return function status */
1858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
1859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
1860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Get ADC regular group conversion result.
1863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Reading register DR automatically clears ADC flag EOC
1864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         (ADC group regular end of unitary conversion).
1865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   This function does not clear ADC flag EOS 
1866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         (ADC group regular end of sequence conversion).
1867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         Occurrence of flag EOS rising:
1868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          - If sequencer is composed of 1 rank, flag EOS is equivalent
1869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *            to flag EOC.
1870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *          - If sequencer is composed of several ranks, during the scan
1871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *            sequence flag EOC only is raised, at the end of the scan sequence
1872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *            both flags EOC and EOS are raised.
1873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         To clear this flag, either use function:
1874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
1875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         model polling: @ref HAL_ADC_PollForConversion()
1876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_EOS).
1877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval ADC group regular conversion data
1879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** uint32_t HAL_ADC_GetValue(ADC_HandleTypeDef* hadc)
1881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 1186              		.loc 2 1881 1 view -0
 1187              		.cfi_startproc
 1188              		@ args = 0, pretend = 0, frame = 0
 1189              		@ frame_needed = 0, uses_anonymous_args = 0
 1190              		@ link register save eliminated.
1882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
1883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1191              		.loc 2 1883 3 view .LVU340
1884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Note: EOC flag is not cleared here by software because automatically     */
1886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*       cleared by hardware when reading register DR.                      */
1887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return ADC converted value */ 
1889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return hadc->Instance->DR;
 1192              		.loc 2 1889 3 view .LVU341
 1193              		.loc 2 1889 14 is_stmt 0 view .LVU342
 1194 0000 0368     		ldr	r3, [r0]
1890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 1195              		.loc 2 1890 1 view .LVU343
 1196              		@ sp needed
1889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 1197              		.loc 2 1889 24 view .LVU344
 1198 0002 186C     		ldr	r0, [r3, #64]
 1199              	.LVL68:
 1200              		.loc 2 1890 1 view .LVU345
 1201 0004 7047     		bx	lr
 1202              		.cfi_endproc
ARM GAS  /tmp/ccjg7X18.s 			page 136


 1203              	.LFE313:
 1205              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 1206              		.align	1
 1207              		.weak	HAL_ADC_ConvCpltCallback
 1208              		.syntax unified
 1209              		.code	16
 1210              		.thumb_func
 1211              		.fpu softvfp
 1213              	HAL_ADC_ConvCpltCallback:
 1214              	.LFB334:
 1215              		.cfi_startproc
 1216              		@ args = 0, pretend = 0, frame = 0
 1217              		@ frame_needed = 0, uses_anonymous_args = 0
 1218              		@ link register save eliminated.
 1219              		@ sp needed
 1220 0000 7047     		bx	lr
 1221              		.cfi_endproc
 1222              	.LFE334:
 1224              		.section	.text.HAL_ADC_ConvHalfCpltCallback,"ax",%progbits
 1225              		.align	1
 1226              		.weak	HAL_ADC_ConvHalfCpltCallback
 1227              		.syntax unified
 1228              		.code	16
 1229              		.thumb_func
 1230              		.fpu softvfp
 1232              	HAL_ADC_ConvHalfCpltCallback:
 1233              	.LFB336:
 1234              		.cfi_startproc
 1235              		@ args = 0, pretend = 0, frame = 0
 1236              		@ frame_needed = 0, uses_anonymous_args = 0
 1237              		@ link register save eliminated.
 1238              		@ sp needed
 1239 0000 7047     		bx	lr
 1240              		.cfi_endproc
 1241              	.LFE336:
 1243              		.section	.text.ADC_DMAHalfConvCplt,"ax",%progbits
 1244              		.align	1
 1245              		.syntax unified
 1246              		.code	16
 1247              		.thumb_func
 1248              		.fpu softvfp
 1250              	ADC_DMAHalfConvCplt:
 1251              	.LVL69:
 1252              	.LFB327:
1891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
1892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
1893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Handle ADC interrupt request.
1894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
1895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
1896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
1897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** void HAL_ADC_IRQHandler(ADC_HandleTypeDef* hadc)
1898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
1899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
1900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
1901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
1902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
ARM GAS  /tmp/ccjg7X18.s 			page 137


1904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
1905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
1906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ========== Check End of Sampling flag for ADC group regular ========== */
1908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if(((tmp_isr & ADC_FLAG_EOSMP) == ADC_FLAG_EOSMP) && ((tmp_ier & ADC_IT_EOSMP) == ADC_IT_EOSMP))
1909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update state machine on end of sampling status if not in error state */
1911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
1912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state */
1914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOSMP);
1915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
1917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* End Of Sampling callback */
1918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->EndOfSamplingCallback(hadc);
1920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
1921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     HAL_ADCEx_EndOfSamplingCallback(hadc);
1922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
1924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear regular group conversion flag */
1925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOSMP );
1926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ====== Check ADC group regular end of unitary conversion sequence conversions ===== */
1929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if((((tmp_isr & ADC_FLAG_EOC) == ADC_FLAG_EOC) && ((tmp_ier & ADC_IT_EOC) == ADC_IT_EOC)) ||
1930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS))  )
1931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update state machine on conversion status if not in error state */
1933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) == 0UL)
1934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC state */
1936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
1937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
1939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
1940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
1941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* to disable interruption.                                               */
1942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if(   (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
1943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        && (hadc->Init.ContinuousConvMode == DISABLE)
1944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       )
1945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
1946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If End of Sequence is reached, disable interrupts */
1947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) )
1948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
1949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit           */
1950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* ADSTART==0 (no conversion on going)                                */
1951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
1952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
1953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Disable ADC end of single conversion interrupt on group regular */
1954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Note: Overrun interrupt was enabled with EOC interrupt in        */
1955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* HAL_Start_IT(), but is not disabled here because can be used     */
1956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* by overrun IRQ process below.                                    */
1957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
1958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           
1959:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Set ADC state */
1960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State,
ARM GAS  /tmp/ccjg7X18.s 			page 138


1961:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
1962:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                             HAL_ADC_STATE_READY);
1963:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
1964:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else
1965:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
1966:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Change ADC state to error state */
1967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1968:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           
1969:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
1970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
1971:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
1972:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
1973:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
1974:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
1975:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Conversion complete callback */
1976:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Note: Into callback function "HAL_ADC_ConvCpltCallback()",             */
1977:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       to determine if conversion has been triggered from EOC or EOS,   */
1978:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       possibility to use:                                              */
1979:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*        " if( __HAL_ADC_GET_FLAG(&hadc, ADC_FLAG_EOS)) "                */
1980:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
1981:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
1982:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
1983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
1984:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
1985:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
1986:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear regular group conversion flag */
1987:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Note: in case of overrun set to ADC_OVR_DATA_PRESERVED, end of         */
1988:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       conversion flags clear induces the release of the preserved data.*/
1989:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       Therefore, if the preserved data value is needed, it must be     */
1990:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /*       read preliminarily into HAL_ADC_ConvCpltCallback().              */
1991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS) );
1992:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
1993:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
1994:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ========== Check Analog watchdog 1 flag ========== */
1995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD1) == ADC_FLAG_AWD1) && ((tmp_ier & ADC_IT_AWD1) == ADC_IT_AWD1))    
1996:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
1997:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Set ADC state */
1998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
1999:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
2000:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Level out of window 1 callback */
2001:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2002:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->LevelOutOfWindowCallback(hadc);
2003:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
2004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     HAL_ADC_LevelOutOfWindowCallback(hadc);
2005:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2006:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
2007:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */ 
2008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD1);
2009:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2010:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2011:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ========== Check analog watchdog 2 flag ========== */
2012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD2) == ADC_FLAG_AWD2) && ((tmp_ier & ADC_IT_AWD2) == ADC_IT_AWD2))    
2013:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2014:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Set ADC state */
2015:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD2);
2016:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
2017:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Level out of window 2 callback */
ARM GAS  /tmp/ccjg7X18.s 			page 139


2018:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2019:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->LevelOutOfWindow2Callback(hadc);
2020:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
2021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow2Callback(hadc);
2022:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2023:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
2024:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */ 
2025:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD2);
2026:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2027:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2028:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ========== Check analog watchdog 3 flag ========== */
2029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_AWD3) == ADC_FLAG_AWD3) && ((tmp_ier & ADC_IT_AWD3) == ADC_IT_AWD3))    
2030:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2031:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Set ADC state */
2032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_AWD3);
2033:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
2034:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Level out of window 3 callback */
2035:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2036:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->LevelOutOfWindow3Callback(hadc);
2037:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
2038:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     HAL_ADCEx_LevelOutOfWindow3Callback(hadc);
2039:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2040:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
2041:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */ 
2042:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD3);
2043:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2044:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2045:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ========== Check Overrun flag ========== */
2046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_OVR) == ADC_FLAG_OVR) && ((tmp_ier & ADC_IT_OVR) == ADC_IT_OVR)) 
2047:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2048:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* If overrun is set to overwrite previous data (default setting),        */
2049:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* overrun event is not considered as an error.                           */
2050:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* (cf ref manual "Managing conversions without using the DMA and without */
2051:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* overrun ")                                                             */
2052:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Exception for usage with DMA overrun event always considered as an     */
2053:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* error.                                                                 */
2054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (hadc->Init.Overrun == ADC_OVR_DATA_PRESERVED)
2055:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2056:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       overrun_error = 1UL;
2057:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2058:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
2059:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2060:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Check DMA configuration */
2061:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (LL_ADC_REG_GetDMATransfer(hadc->Instance) != LL_ADC_REG_DMA_TRANSFER_NONE)
2062:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2063:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         overrun_error = 1UL;
2064:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2065:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2066:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
2067:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (overrun_error == 1UL)
2068:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2069:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Change ADC state to error state */
2070:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_REG_OVR);
2071:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
2072:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC error code to overrun */
2073:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
2074:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
ARM GAS  /tmp/ccjg7X18.s 			page 140


2075:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Error callback */
2076:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Note: In case of overrun, ADC conversion data is preserved until     */
2077:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       flag OVR is reset.                                             */
2078:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       Therefore, old ADC conversion data can be retrieved in         */
2079:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       function "HAL_ADC_ErrorCallback()".                            */
2080:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2081:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
2082:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
2083:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2084:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2085:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2086:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
2087:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear ADC overrun flag */
2088:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
2089:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2090:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2091:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ========== Check channel configuration ready flag ========== */
2092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (((tmp_isr & ADC_FLAG_CCRDY) == ADC_FLAG_CCRDY) && ((tmp_ier & ADC_IT_CCRDY) == ADC_IT_CCRDY))
2093:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2094:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Level out of window 1 callback */
2095:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     HAL_ADCEx_ChannelConfigReadyCallback(hadc);
2096:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
2097:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Clear ADC analog watchdog flag */ 
2098:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_CCRDY);
2099:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2101:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2102:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2103:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Conversion complete callback in non-blocking mode.
2104:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2105:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
2106:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2107:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** __weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc)
2108:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2109:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2110:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   UNUSED(hadc);
2111:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2112:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2113:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             function HAL_ADC_ConvCpltCallback must be implemented in the user file.
2114:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****    */
2115:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2116:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2117:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2118:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Conversion DMA half-transfer callback in non-blocking mode.
2119:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2120:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
2121:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2122:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** __weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef* hadc)
2123:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2124:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2125:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   UNUSED(hadc);
2126:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2127:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2128:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             function HAL_ADC_ConvHalfCpltCallback must be implemented in the user file.
2129:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2130:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2131:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
ARM GAS  /tmp/ccjg7X18.s 			page 141


2132:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2133:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Analog watchdog 1 callback in non-blocking mode.
2134:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2135:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
2136:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2137:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** __weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef* hadc)
2138:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2139:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2140:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   UNUSED(hadc);
2141:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2142:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2143:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             function HAL_ADC_LevelOutOfWindowCallback must be implemented in the user file.
2144:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2145:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2146:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2147:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2148:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  ADC error callback in non-blocking mode
2149:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         (ADC conversion with interruption or transfer by DMA).
2150:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   In case of error due to overrun when using ADC with DMA transfer 
2151:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         (HAL ADC handle parameter "ErrorCode" to state "HAL_ADC_ERROR_OVR"):
2152:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         - Reinitialize the DMA using function "HAL_ADC_Stop_DMA()".
2153:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         - If needed, restart a new ADC conversion using function
2154:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *           "HAL_ADC_Start_DMA()"
2155:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *           (this function is also clearing overrun flag)
2156:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2157:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
2158:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2159:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** __weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
2160:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2161:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Prevent unused argument(s) compilation warning */
2162:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   UNUSED(hadc);
2163:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2164:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* NOTE : This function should not be modified. When the callback is needed,
2165:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             function HAL_ADC_ErrorCallback must be implemented in the user file.
2166:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2167:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2168:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2169:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2170:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @}
2171:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2172:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2173:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group3 Peripheral Control functions
2174:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  *  @brief    Peripheral Control functions 
2175:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  *
2176:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** @verbatim   
2177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  ===============================================================================
2178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****              ##### Peripheral Control functions #####
2179:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  ===============================================================================  
2180:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]  This section provides functions allowing to:
2181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Configure channels on regular group
2182:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Configure the analog watchdog
2183:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
2184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** @endverbatim
2185:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
2186:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2188:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
ARM GAS  /tmp/ccjg7X18.s 			page 142


2189:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Configure a channel to be assigned to ADC group regular.
2190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   In case of usage of internal measurement channels:
2191:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         Vbat/VrefInt/TempSensor.
2192:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         These internal paths can be disabled using function 
2193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         HAL_ADC_DeInit().
2194:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2195:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         This function initializes channel into ADC group regular,
2196:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         following calls to this function can be used to reconfigure
2197:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         some parameters of structure "ADC_ChannelConfTypeDef" on the fly,
2198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         without resetting the ADC.
2199:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state:
2200:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         Refer to comments of structure "ADC_ChannelConfTypeDef".
2201:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2202:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param sConfig Structure of ADC channel assigned to ADC group regular.
2203:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
2204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2205:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef* hadc, ADC_ChannelConfTypeDef* sConfig)
2206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
2209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
2210:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2211:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
2212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(sConfig->Channel));
2214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLING_TIME_COMMON(sConfig->SamplingTime));
2215:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)          ||
2217:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD)   )
2218:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2219:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_RANK_SEQ_FIXED(sConfig->Rank));
2220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2221:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
2222:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_NB_CONV(hadc->Init.NbrOfConversion));
2224:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
2225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
2226:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2227:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2228:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Process locked */
2229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_LOCK(hadc);
2230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2231:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2232:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2233:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* conversion on going on regular group:                                    */
2234:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*  - Channel number                                                        */
2235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*  - Channel sampling time                                                 */
2236:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*  - Management of internal measurement channels: VrefInt/TempSensor/Vbat  */
2237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2238:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2239:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Configure channel: depending on rank setting, add it or remove it from */
2240:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* ADC sequencer.                                                         */
2241:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* If sequencer set to not fully configurable with channel rank set to    */
2242:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* none, remove the channel from the sequencer.                           */
2243:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Otherwise (sequencer set to fully configurable or to to not fully      */
2244:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* configurable with channel rank to be set), configure the selected      */
2245:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* channel.                                                               */
ARM GAS  /tmp/ccjg7X18.s 			page 143


2246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if(sConfig->Rank != ADC_RANK_NONE)
2247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Regular sequence configuration */
2249:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Note: ADC channel configuration requires few ADC clock cycles        */
2250:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       to be ready. Processing of ADC settings in this function       */
2251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       induce that a specific wait time is not necessary.             */
2252:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       For more details on ADC channel configuration ready,           */
2253:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       refer to function "LL_ADC_IsActiveFlag_CCRDY()".               */
2254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)         ||
2255:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD)  )
2256:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Sequencer set to not fully configurable:                           */
2258:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Set the channel by enabling the corresponding bitfield.            */
2259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         LL_ADC_REG_SetSequencerChAdd(hadc->Instance, sConfig->Channel);
2260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2261:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       else
2262:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Sequencer set to fully configurable:                               */
2264:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Set the channel by entering it into the selected rank.             */
2265:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
2266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Memorize the channel set into variable in HAL ADC handle */
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         MODIFY_REG(hadc->ADCGroupRegularSequencerRanks,
2268:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
2269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfig->Channel) << (sConfig->Rank & 0x1FUL));
2270:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
2271:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* If the selected rank is below ADC group regular sequencer length,  */
2272:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* apply the configuration in ADC register.                           */
2273:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Note: Otherwise, configuration is not applied.                     */
2274:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /*       To apply it, parameter'NbrOfConversion' must be increased.   */        
2275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if(((sConfig->Rank >> 2UL) + 1UL) <= hadc->Init.NbrOfConversion)
2276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_REG_SetSequencerRanks(hadc->Instance, sConfig->Rank, sConfig->Channel);
2278:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
2281:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set sampling time of the selected ADC channel */
2282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfig->Channel, sConfig->SamplingTime);
2283:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
2284:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Management of internal measurement channels: VrefInt/TempSensor/Vbat */
2285:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* internal measurement paths enable: If internal channel selected,     */
2286:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* enable dedicated internal buffers and path.                          */
2287:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Note: these internal measurement paths can be disabled using         */
2288:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       HAL_ADC_DeInit() or removing the channel from sequencer with   */
2289:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       channel configuration parameter "Rank".                        */
2290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if(__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
2291:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc-
2293:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
2294:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* If the requested internal measurement path has already been enabled,   */
2295:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* bypass the configuration processing.                                   */
2296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) && ((tmp_config_internal_channel & LL_ADC_
2297:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_INTE
2299:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           
2300:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Delay for temperature sensor stabilization time */
2301:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Wait loop initialization and execution */
2302:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Note: Variable divided by 2 to compensate partially              */
ARM GAS  /tmp/ccjg7X18.s 			page 144


2303:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /*       CPU processing cycles, scaling in us split to not          */
2304:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /*       exceed 32 bits register capacity and handle low frequency. */
2305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * (SystemCoreClock / (100000U
2306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           while(wait_loop_index != 0UL)
2307:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
2308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             wait_loop_index--;
2309:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
2310:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else if ((sConfig->Channel == ADC_CHANNEL_VBAT) && ((tmp_config_internal_channel & LL_ADC_P
2312:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_INTE
2314:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else if ((sConfig->Channel == ADC_CHANNEL_VREFINT) && ((tmp_config_internal_channel & LL_AD
2316:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), LL_ADC_PATH_INTE
2318:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2319:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else
2320:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2321:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* nothing to do */
2322:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2323:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2324:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2325:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
2326:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2327:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Regular sequencer configuration */
2328:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Note: Case of sequencer set to fully configurable:                   */
2329:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       Sequencer rank cannot be disabled, only affected to            */
2330:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       another channel.                                               */
2331:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*       To remove a rank, use parameter 'NbrOfConversion".             */
2332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if((hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED)         ||
2333:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD)  )
2334:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2335:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Sequencer set to not fully configurable:                           */
2336:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Reset the channel by disabling the corresponding bitfield.         */
2337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         LL_ADC_REG_SetSequencerChRem(hadc->Instance, sConfig->Channel);
2338:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2339:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
2340:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Management of internal measurement channels: Vbat/VrefInt/TempSensor.  */
2341:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If internal channel selected, enable dedicated internal buffers and    */
2342:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* paths.                                                                 */
2343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if(__LL_ADC_IS_CHANNEL_INTERNAL(sConfig->Channel))
2344:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc-
2346:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
2347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
2348:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), ~LL_ADC_PATH_INT
2350:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else if (sConfig->Channel == ADC_CHANNEL_VBAT)
2352:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), ~LL_ADC_PATH_INT
2354:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else if (sConfig->Channel == ADC_CHANNEL_VREFINT)
2356:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance), ~LL_ADC_PATH_INT
2358:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2359:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else
ARM GAS  /tmp/ccjg7X18.s 			page 145


2360:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2361:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* nothing to do */
2362:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2363:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2364:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2365:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2366:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2367:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* If a conversion is on going on regular group, no update on regular       */
2368:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* channel could be done on neither of the channel configuration structure  */
2369:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* parameters.                                                              */
2370:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
2371:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2372:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Update ADC state machine to error */
2373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2374:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
2375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmp_hal_status = HAL_ERROR;
2376:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2377:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2378:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Process unlocked */
2379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2380:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2381:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return function status */
2382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
2383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2384:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2385:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2386:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Configure the analog watchdog.
2387:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Possibility to update parameters on the fly:
2388:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         This function initializes the selected analog watchdog, successive  
2389:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         calls to this function can be used to reconfigure some parameters 
2390:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         of structure "ADC_AnalogWDGConfTypeDef" on the fly, without resetting 
2391:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         the ADC.
2392:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         The setting of these parameters is conditioned to ADC state.
2393:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         For parameters constraints, see comments of structure 
2394:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         "ADC_AnalogWDGConfTypeDef".
2395:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   On this STM32 serie, analog watchdog thresholds can be modified
2396:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         while ADC conversion is on going.
2397:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         In this case, some constraints must be taken into account:
2398:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         the programmed threshold values are effective from the next
2399:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         ADC EOC (end of unitary conversion).
2400:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         Considering that registers write delay may happen due to
2401:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         bus activity, this might cause an uncertainty on the
2402:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         effective timing of the new programmed threshold values.
2403:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2404:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param AnalogWDGConfig Structure of ADC analog watchdog configuration
2405:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status
2406:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2407:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef HAL_ADC_AnalogWDGConfig(ADC_HandleTypeDef* hadc, ADC_AnalogWDGConfTypeDef* Analog
2408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
2411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
2412:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2413:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
2414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
2416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
ARM GAS  /tmp/ccjg7X18.s 			page 146


2417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
2418:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if(AnalogWDGConfig->WatchdogMode == ADC_ANALOGWATCHDOG_SINGLE_REG)
2420:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_CHANNEL(AnalogWDGConfig->Channel));
2422:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2423:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2424:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Verify thresholds range */
2425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (hadc->Init.OversamplingMode == ENABLE)
2426:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2427:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Case of oversampling enabled: depending on ratio and shift configuration,
2428:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        analog watchdog thresholds can be higher than ADC resolution.
2429:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        Verify if thresholds are within maximum thresholds range. */
2430:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->HighThreshold));
2431:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_RESOLUTION_12B, AnalogWDGConfig->LowThreshold));
2432:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2433:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
2434:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2435:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Verify if thresholds are within the selected ADC resolution */
2436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->HighThreshold));
2437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
2438:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2439:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2440:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Process locked */
2441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_LOCK(hadc);
2442:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2443:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Parameters update conditioned to ADC state:                              */
2444:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2445:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* conversion on going on ADC group regular:                                */
2446:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*  - Analog watchdog channels                                              */
2447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2448:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2449:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Analog watchdog configuration */
2450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if(AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
2451:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2452:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Configuration of analog watchdog:                                    */
2453:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*  - Set the analog watchdog enable mode: one or overall group of      */
2454:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /*    channels.                                                         */
2455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       switch(AnalogWDGConfig->WatchdogMode)
2456:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2457:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
2458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, __LL_ADC_ANALOGWD_CHANNEL_GR
2459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
2460:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
2461:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
2462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_ALL_CHANNELS_REG)
2463:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
2464:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
2465:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
2466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, LL_ADC_AWD1, LL_ADC_AWD_DISABLE);
2467:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
2468:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2469:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
2470:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Update state, clear previous result related to AWD1 */
2471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD1);
2472:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
2473:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Clear flag ADC analog watchdog */
ARM GAS  /tmp/ccjg7X18.s 			page 147


2474:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
2475:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
2476:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* (in case left enabled by previous ADC operations).                 */
2477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       LL_ADC_ClearFlag_AWD1(hadc->Instance);
2478:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
2479:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Configure ADC analog watchdog interrupt */
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if(AnalogWDGConfig->ITMode == ENABLE)
2481:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2482:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         LL_ADC_EnableIT_AWD1(hadc->Instance);
2483:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2484:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       else
2485:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         LL_ADC_DisableIT_AWD1(hadc->Instance);
2487:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2488:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2489:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Case of ADC_ANALOGWATCHDOG_2 or ADC_ANALOGWATCHDOG_3 */
2490:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
2491:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       switch(AnalogWDGConfig->WatchdogMode)
2493:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2494:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_SINGLE_REG:
2495:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Update AWD by bitfield to keep the possibility to monitor        */
2496:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* several channels by successive calls of this function.           */
2497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
2498:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD2CR, (1UL << __LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig-
2500:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
2501:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           else
2502:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             SET_BIT(hadc->Instance->AWD3CR, (1UL << __LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDGConfig-
2504:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
2505:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
2506:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           
2507:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         case ADC_ANALOGWATCHDOG_ALL_REG:
2508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
2509:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
2510:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           
2511:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         default: /* ADC_ANALOGWATCHDOG_NONE */
2512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_SetAnalogWDMonitChannels(hadc->Instance, AnalogWDGConfig->WatchdogNumber, LL_ADC_A
2513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
2514:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2515:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
2516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_2)
2517:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2518:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update state, clear previous result related to AWD2 */
2519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD2);
2520:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
2521:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
2522:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
2523:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
2524:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
2525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD2(hadc->Instance);
2526:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
2527:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
2528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if(AnalogWDGConfig->ITMode == ENABLE)
2529:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2530:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_EnableIT_AWD2(hadc->Instance);
ARM GAS  /tmp/ccjg7X18.s 			page 148


2531:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2532:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else
2533:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_DisableIT_AWD2(hadc->Instance);
2535:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2536:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2537:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* (AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_3) */
2538:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       else
2539:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2540:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update state, clear previous result related to AWD3 */
2541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_AWD3);
2542:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
2543:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Clear flag ADC analog watchdog */
2544:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Note: Flag cleared Clear the ADC Analog watchdog flag to be ready  */
2545:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* to use for HAL_ADC_IRQHandler() or HAL_ADC_PollForEvent()          */
2546:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* (in case left enabled by previous ADC operations).                 */
2547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         LL_ADC_ClearFlag_AWD3(hadc->Instance);
2548:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
2549:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Configure ADC analog watchdog interrupt */
2550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if(AnalogWDGConfig->ITMode == ENABLE)
2551:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_EnableIT_AWD3(hadc->Instance);
2553:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2554:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else
2555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_DisableIT_AWD3(hadc->Instance);
2557:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2558:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2560:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
2561:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
2563:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Analog watchdog thresholds configuration */
2564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if(AnalogWDGConfig->WatchdogNumber == ADC_ANALOGWATCHDOG_1)
2565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2566:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Shift the offset with respect to the selected ADC resolution:        */
2567:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
2568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* are set to 0.                                                        */ 
2569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmpAWDHighThresholdShifted = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->HighThre
2570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
2571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2572:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Case of ADC_ANALOGWATCHDOG_2 and ADC_ANALOGWATCHDOG_3 */
2573:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else
2574:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2575:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* No need to shift the offset with respect to the selected ADC resolution: */
2576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Thresholds have to be left-aligned on bit 11, the LSB (right bits)   */
2577:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* are set to 0.                                                        */
2578:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmpAWDHighThresholdShifted = AnalogWDGConfig->HighThreshold;
2579:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = AnalogWDGConfig->LowThreshold;
2580:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2581:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2582:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Set ADC analog watchdog thresholds value of both thresholds high and low */
2583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   LL_ADC_ConfigAnalogWDThresholds(hadc->Instance, AnalogWDGConfig->WatchdogNumber, tmpAWDHighThresh
2584:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2585:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Process unlocked */
2586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __HAL_UNLOCK(hadc);
2587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
ARM GAS  /tmp/ccjg7X18.s 			page 149


2588:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return function status */
2589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return tmp_hal_status;
2590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2591:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2593:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2594:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @}
2595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2596:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2597:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC_Exported_Functions_Group4 Peripheral State functions
2598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  *  @brief    ADC Peripheral State functions
2599:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  *
2600:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** @verbatim
2601:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  ===============================================================================
2602:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             ##### Peripheral state and errors functions #####
2603:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****  ===============================================================================
2604:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     [..]
2605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     This subsection provides functions to get in run-time the status of the  
2606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     peripheral.
2607:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Check the ADC state
2608:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       (+) Check the ADC error code
2609:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2610:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** @endverbatim
2611:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
2612:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2614:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Return the ADC handle state.
2616:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   ADC state machine is managed by bitfields, ADC status must be 
2617:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         compared with states bits.
2618:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         For example:                                                         
2619:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_REG_BUSY) != 0UL) "
2620:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *           " if ((HAL_ADC_GetState(hadc1) & HAL_ADC_STATE_AWD1) != 0UL) "
2621:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2622:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval ADC handle state (bitfield on 32 bits)
2623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2624:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** uint32_t HAL_ADC_GetState(ADC_HandleTypeDef* hadc)
2625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2626:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
2627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2629:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return ADC handle state */
2630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return hadc->State;
2631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2632:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2633:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Return the ADC error code.
2635:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2636:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval ADC error code (bitfield on 32 bits)
2637:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2638:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** uint32_t HAL_ADC_GetError(ADC_HandleTypeDef *hadc)
2639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2640:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
2641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2642:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return hadc->ErrorCode;
2644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
ARM GAS  /tmp/ccjg7X18.s 			page 150


2645:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2646:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2647:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @}
2648:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2651:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @}
2652:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2654:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /** @defgroup ADC_Private_Functions ADC Private Functions
2655:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @{
2656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2657:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2658:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Stop ADC conversion.
2660:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
2661:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         stopped to disable the ADC.
2662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param  hadc ADC handle
2663:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status.
2664:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef ADC_ConversionStop(ADC_HandleTypeDef* hadc)
2666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
2668:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
2670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
2671:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Verification if ADC is not already stopped on regular group to bypass    */
2673:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* this function if not needed.                                             */
2674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
2675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2676:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Stop potential conversion on going on regular group */
2677:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Software is allowed to set ADSTP only when ADSTART=1 and ADDIS=0 */
2678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (LL_ADC_IsDisableOngoing(hadc->Instance) == 0UL)
2679:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2680:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Stop ADC group regular conversion */
2681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       LL_ADC_REG_StopConversion(hadc->Instance);
2682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2683:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
2684:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Wait for conversion effectively stopped */
2685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Get tick count */
2686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tickstart = HAL_GetTick();
2687:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
2688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     while((hadc->Instance->CR & ADC_CR_ADSTART) != 0UL)
2689:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
2691:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2692:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update ADC state machine to error */
2693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2694:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
2695:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Set ADC error code to ADC peripheral internal error */
2696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2697:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
2698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         return HAL_ERROR;
2699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2701:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
ARM GAS  /tmp/ccjg7X18.s 			page 151


2702:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****    
2704:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return HAL status */
2705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return HAL_OK;
2706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2707:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2708:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Enable the selected ADC.
2710:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC must be disabled
2711:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         and voltage regulator must be enabled (done into HAL_ADC_Init()).
2712:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2713:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status.
2714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef ADC_Enable(ADC_HandleTypeDef* hadc)
2716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
2718:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* ADC enable and wait for ADC ready (in case of ADC is disabled or         */
2720:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* enabling phase not yet completed: flag ADC ready not yet set).           */
2721:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Timeout implemented to not be stuck if ADC cannot be enabled (possible   */
2722:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* causes: ADC clock not running, ...).                                     */
2723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
2724:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2725:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check if conditions to enable the ADC are fulfilled */
2726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((hadc->Instance->CR & (ADC_CR_ADCAL | ADC_CR_ADSTP | ADC_CR_ADSTART | ADC_CR_ADDIS | ADC_CR
2727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2728:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Update ADC state machine to error */
2729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
2731:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
2732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2733:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
2734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       return HAL_ERROR;
2735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2736:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
2737:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Enable the ADC peripheral */
2738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     LL_ADC_Enable(hadc->Instance);
2739:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
2740:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* If low power mode AutoPowerOff is enabled, power-on/off phases are     */
2741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* performed automatically by hardware and flag ADC ready is not set.     */
2742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if (hadc->Init.LowPowerAutoPowerOff != ENABLE)
2743:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Wait for ADC effectively enabled */
2745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       tickstart = HAL_GetTick();
2746:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
2747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       while(__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_RDY) == 0UL)
2748:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2749:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /*  If ADEN bit is set less than 4 ADC clock cycles after the ADCAL bit 
2750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             has been cleared (after a calibration), ADEN bit is reset by the 
2751:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             calibration logic.
2752:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             The workaround is to continue setting ADEN until ADRDY is becomes 1.
2753:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             Additionally, ADC_ENABLE_TIMEOUT is defined to encompass this
2754:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****             4 ADC clock cycle duration */
2755:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Note: Test of ADC enabled required due to hardware constraint to     */
2756:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /*       not enable ADC if already enabled.                             */
2757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if(LL_ADC_IsEnabled(hadc->Instance) == 0UL)
2758:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
ARM GAS  /tmp/ccjg7X18.s 			page 152


2759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           LL_ADC_Enable(hadc->Instance);
2760:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2761:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
2762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if((HAL_GetTick() - tickstart) > ADC_ENABLE_TIMEOUT)
2763:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Update ADC state machine to error */
2765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2766:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           
2767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
2768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           
2770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           return HAL_ERROR;
2771:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2772:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2774:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****    
2776:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return HAL status */
2777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return HAL_OK;
2778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2780:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2781:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  Disable the selected ADC.
2782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @note   Prerequisite condition to use this function: ADC conversions must be
2783:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   *         stopped.
2784:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hadc ADC handle
2785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval HAL status.
2786:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** HAL_StatusTypeDef ADC_Disable(ADC_HandleTypeDef* hadc)
2788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
2790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
2791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2792:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Verification if ADC is not already disabled:                             */
2793:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Note: forbidden to disable ADC (set bit ADC_CR_ADDIS) if ADC is already  */
2794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /*       disabled.                                                          */
2795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if (   (LL_ADC_IsEnabled(hadc->Instance) != 0UL)
2796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
2797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      )
2798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2799:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Check if conditions to disable the ADC are fulfilled */
2800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if((hadc->Instance->CR & (ADC_CR_ADSTART | ADC_CR_ADEN)) == ADC_CR_ADEN)
2801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2802:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Disable the ADC peripheral */
2803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       LL_ADC_Disable(hadc->Instance);
2804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
2805:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2806:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
2807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2808:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Update ADC state machine to error */
2809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
2811:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Set ADC error code to ADC peripheral internal error */
2812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2813:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
2814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       return HAL_ERROR;
2815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
ARM GAS  /tmp/ccjg7X18.s 			page 153


2816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
2817:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Wait for ADC effectively disabled */
2818:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Get tick count */
2819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tickstart = HAL_GetTick();
2820:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
2821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     while((hadc->Instance->CR & ADC_CR_ADEN) != 0UL)
2822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if((HAL_GetTick() - tickstart) > ADC_DISABLE_TIMEOUT)
2824:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Update ADC state machine to error */
2826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
2827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
2828:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Set ADC error code to ADC peripheral internal error */
2829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2830:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
2831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         return HAL_ERROR;
2832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2835:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Return HAL status */
2837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   return HAL_OK;
2838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2840:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2841:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  DMA transfer complete callback. 
2842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
2843:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
2844:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
2846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
2847:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
2849:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2850:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Update state machine on conversion status if not in error state */
2851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   if ((hadc->State & (HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA)) == 0UL)
2852:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2853:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Set ADC state */
2854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
2855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
2856:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Determine whether any further conversion upcoming on group regular     */
2857:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* by external trigger, continuous mode or scan sequence on going         */
2858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* to disable interruption.                                               */
2859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if(   (LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance) != 0UL)
2860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        && (hadc->Init.ContinuousConvMode == DISABLE)
2861:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       )
2862:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2863:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* If End of Sequence is reached, disable interrupts */
2864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       if( __HAL_ADC_GET_FLAG(hadc, ADC_FLAG_EOS) )
2865:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
2866:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* Allowed to modify bits ADC_IT_EOC/ADC_IT_EOS only if bit           */
2867:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         /* ADSTART==0 (no conversion on going)                                */
2868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2870:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Disable ADC end of single conversion interrupt on group regular */
2871:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Note: Overrun interrupt was enabled with EOC interrupt in        */
2872:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* HAL_Start_IT(), but is not disabled here because can be used     */
ARM GAS  /tmp/ccjg7X18.s 			page 154


2873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* by overrun IRQ process below.                                    */
2874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC | ADC_IT_EOS);
2875:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           
2876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Set ADC state */
2877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           ADC_STATE_CLR_SET(hadc->State,
2878:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
2879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                             HAL_ADC_STATE_READY);
2880:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2881:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         else
2882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
2883:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Change ADC state to error state */
2884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           
2886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           /* Set ADC error code to ADC peripheral internal error */
2887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
2888:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
2889:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
2890:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2891:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
2892:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     /* Conversion complete callback */
2893:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2894:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     hadc->ConvCpltCallback(hadc);
2895:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
2896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     HAL_ADC_ConvCpltCallback(hadc);
2897:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   else /* DMA and-or internal error occurred */
2900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
2901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
2902:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2903:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Call HAL ADC Error Callback function */
2904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->ErrorCallback(hadc);
2906:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
2907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       HAL_ADC_ErrorCallback(hadc);
2908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2909:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2910:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     else
2911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
2912:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       /* Call ADC DMA error callback */
2913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       hadc->DMA_Handle->XferErrorCallback(hdma);
2914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
2915:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
2916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
2917:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2918:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2919:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  DMA half transfer complete callback. 
2920:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
2921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
2922:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2923:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
2924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 1253              		.loc 2 2924 1 is_stmt 1 view -0
 1254              		.cfi_startproc
 1255              		@ args = 0, pretend = 0, frame = 0
 1256              		@ frame_needed = 0, uses_anonymous_args = 0
2925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
ARM GAS  /tmp/ccjg7X18.s 			page 155


2926:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1257              		.loc 2 2926 3 view .LVU347
2927:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2928:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Half conversion callback */
2929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->ConvHalfCpltCallback(hadc);
2931:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
2932:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_ADC_ConvHalfCpltCallback(hadc);
 1258              		.loc 2 2932 3 view .LVU348
2924:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1259              		.loc 2 2924 1 is_stmt 0 view .LVU349
 1260 0000 10B5     		push	{r4, lr}
 1261              	.LCFI5:
 1262              		.cfi_def_cfa_offset 8
 1263              		.cfi_offset 4, -8
 1264              		.cfi_offset 14, -4
 1265              		.loc 2 2932 3 view .LVU350
 1266 0002 806A     		ldr	r0, [r0, #40]
 1267              	.LVL70:
 1268              		.loc 2 2932 3 view .LVU351
 1269 0004 FFF7FEFF 		bl	HAL_ADC_ConvHalfCpltCallback
 1270              	.LVL71:
2933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2934:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 1271              		.loc 2 2934 1 view .LVU352
 1272              		@ sp needed
 1273 0008 10BD     		pop	{r4, pc}
 1274              		.cfi_endproc
 1275              	.LFE327:
 1277              		.section	.text.HAL_ADC_LevelOutOfWindowCallback,"ax",%progbits
 1278              		.align	1
 1279              		.weak	HAL_ADC_LevelOutOfWindowCallback
 1280              		.syntax unified
 1281              		.code	16
 1282              		.thumb_func
 1283              		.fpu softvfp
 1285              	HAL_ADC_LevelOutOfWindowCallback:
 1286              	.LFB338:
 1287              		.cfi_startproc
 1288              		@ args = 0, pretend = 0, frame = 0
 1289              		@ frame_needed = 0, uses_anonymous_args = 0
 1290              		@ link register save eliminated.
 1291              		@ sp needed
 1292 0000 7047     		bx	lr
 1293              		.cfi_endproc
 1294              	.LFE338:
 1296              		.section	.text.HAL_ADC_ErrorCallback,"ax",%progbits
 1297              		.align	1
 1298              		.weak	HAL_ADC_ErrorCallback
 1299              		.syntax unified
 1300              		.code	16
 1301              		.thumb_func
 1302              		.fpu softvfp
 1304              	HAL_ADC_ErrorCallback:
 1305              	.LFB340:
 1306              		.cfi_startproc
 1307              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccjg7X18.s 			page 156


 1308              		@ frame_needed = 0, uses_anonymous_args = 0
 1309              		@ link register save eliminated.
 1310              		@ sp needed
 1311 0000 7047     		bx	lr
 1312              		.cfi_endproc
 1313              	.LFE340:
 1315              		.section	.text.ADC_DMAError,"ax",%progbits
 1316              		.align	1
 1317              		.syntax unified
 1318              		.code	16
 1319              		.thumb_func
 1320              		.fpu softvfp
 1322              	ADC_DMAError:
 1323              	.LVL72:
 1324              	.LFB328:
2935:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
2936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** /**
2937:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @brief  DMA error callback.
2938:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @param hdma pointer to DMA handle.
2939:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   * @retval None
2940:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   */
2941:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** static void ADC_DMAError(DMA_HandleTypeDef *hdma)
2942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 1325              		.loc 2 2942 1 is_stmt 1 view -0
 1326              		.cfi_startproc
 1327              		@ args = 0, pretend = 0, frame = 0
 1328              		@ frame_needed = 0, uses_anonymous_args = 0
2943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
2944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   ADC_HandleTypeDef* hadc = ( ADC_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 1329              		.loc 2 2944 3 view .LVU354
2945:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2946:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Set ADC state */
2947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
 1330              		.loc 2 2947 3 is_stmt 0 view .LVU355
 1331 0000 4023     		movs	r3, #64
2944:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 1332              		.loc 2 2944 22 view .LVU356
 1333 0002 806A     		ldr	r0, [r0, #40]
 1334              	.LVL73:
 1335              		.loc 2 2947 3 is_stmt 1 view .LVU357
2942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1336              		.loc 2 2942 1 is_stmt 0 view .LVU358
 1337 0004 10B5     		push	{r4, lr}
 1338              	.LCFI6:
 1339              		.cfi_def_cfa_offset 8
 1340              		.cfi_offset 4, -8
 1341              		.cfi_offset 14, -4
 1342              		.loc 2 2947 3 view .LVU359
 1343 0006 826D     		ldr	r2, [r0, #88]
2948:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2949:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Set ADC error code to DMA error */
2950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_DMA);
2951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
2952:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Error callback */
2953:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
2954:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   hadc->ErrorCallback(hadc);
2955:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #else
ARM GAS  /tmp/ccjg7X18.s 			page 157


2956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_ADC_ErrorCallback(hadc);
2957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
2958:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 1344              		.loc 2 2958 1 view .LVU360
 1345              		@ sp needed
2947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 1346              		.loc 2 2947 3 view .LVU361
 1347 0008 1343     		orrs	r3, r2
 1348 000a 8365     		str	r3, [r0, #88]
2950:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 1349              		.loc 2 2950 3 is_stmt 1 view .LVU362
 1350 000c 0423     		movs	r3, #4
 1351 000e C26D     		ldr	r2, [r0, #92]
 1352 0010 1343     		orrs	r3, r2
 1353 0012 C365     		str	r3, [r0, #92]
2956:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1354              		.loc 2 2956 3 view .LVU363
 1355 0014 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1356              	.LVL74:
 1357              		.loc 2 2958 1 is_stmt 0 view .LVU364
 1358 0018 10BD     		pop	{r4, pc}
 1359              		.cfi_endproc
 1360              	.LFE328:
 1362              		.section	.text.ADC_DMAConvCplt,"ax",%progbits
 1363              		.align	1
 1364              		.syntax unified
 1365              		.code	16
 1366              		.thumb_func
 1367              		.fpu softvfp
 1369              	ADC_DMAConvCplt:
 1370              	.LVL75:
 1371              	.LFB326:
2846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1372              		.loc 2 2846 1 is_stmt 1 view -0
 1373              		.cfi_startproc
 1374              		@ args = 0, pretend = 0, frame = 0
 1375              		@ frame_needed = 0, uses_anonymous_args = 0
2848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 1376              		.loc 2 2848 3 view .LVU366
2851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1377              		.loc 2 2851 20 is_stmt 0 view .LVU367
 1378 0000 5023     		movs	r3, #80
2846:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Retrieve ADC handle corresponding to current DMA handle */
 1379              		.loc 2 2846 1 view .LVU368
 1380 0002 10B5     		push	{r4, lr}
 1381              	.LCFI7:
 1382              		.cfi_def_cfa_offset 8
 1383              		.cfi_offset 4, -8
 1384              		.cfi_offset 14, -4
2848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 1385              		.loc 2 2848 22 view .LVU369
 1386 0004 846A     		ldr	r4, [r0, #40]
 1387              	.LVL76:
2851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1388              		.loc 2 2851 3 is_stmt 1 view .LVU370
2851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1389              		.loc 2 2851 12 is_stmt 0 view .LVU371
ARM GAS  /tmp/ccjg7X18.s 			page 158


 1390 0006 A26D     		ldr	r2, [r4, #88]
2851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1391              		.loc 2 2851 6 view .LVU372
 1392 0008 1A42     		tst	r2, r3
 1393 000a 2CD1     		bne	.L95
2854:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 1394              		.loc 2 2854 5 is_stmt 1 view .LVU373
 1395 000c A26D     		ldr	r2, [r4, #88]
 1396 000e B133     		adds	r3, r3, #177
 1397 0010 FF33     		adds	r3, r3, #255
 1398 0012 1343     		orrs	r3, r2
 1399 0014 A365     		str	r3, [r4, #88]
2859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        && (hadc->Init.ContinuousConvMode == DISABLE)
 1400              		.loc 2 2859 5 view .LVU374
 1401              	.LBB106:
 1402              	.LBB107:
2343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1403              		.loc 1 2343 12 is_stmt 0 view .LVU375
 1404 0016 C023     		movs	r3, #192
 1405              	.LBE107:
 1406              	.LBE106:
2859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        && (hadc->Init.ContinuousConvMode == DISABLE)
 1407              		.loc 2 2859 12 view .LVU376
 1408 0018 2068     		ldr	r0, [r4]
 1409              	.LVL77:
 1410              	.LBB109:
 1411              	.LBI106:
2341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 1412              		.loc 1 2341 26 is_stmt 1 view .LVU377
 1413              	.LBB108:
2343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1414              		.loc 1 2343 3 view .LVU378
2343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1415              		.loc 1 2343 12 is_stmt 0 view .LVU379
 1416 001a 1B01     		lsls	r3, r3, #4
 1417 001c C268     		ldr	r2, [r0, #12]
2343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1418              		.loc 1 2343 106 view .LVU380
 1419 001e 1A42     		tst	r2, r3
 1420 0020 14D1     		bne	.L96
 1421              	.LVL78:
2343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1422              		.loc 1 2343 106 view .LVU381
 1423              	.LBE108:
 1424              	.LBE109:
2860:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       )
 1425              		.loc 2 2860 8 view .LVU382
 1426 0022 A37E     		ldrb	r3, [r4, #26]
 1427 0024 002B     		cmp	r3, #0
 1428 0026 11D1     		bne	.L96
2864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1429              		.loc 2 2864 7 is_stmt 1 view .LVU383
2864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1430              		.loc 2 2864 11 is_stmt 0 view .LVU384
 1431 0028 0368     		ldr	r3, [r0]
2864:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1432              		.loc 2 2864 9 view .LVU385
ARM GAS  /tmp/ccjg7X18.s 			page 159


 1433 002a 1B07     		lsls	r3, r3, #28
 1434 002c 0ED5     		bpl	.L96
2868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 1435              		.loc 2 2868 9 is_stmt 1 view .LVU386
2868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 1436              		.loc 2 2868 13 is_stmt 0 view .LVU387
 1437 002e FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 1438              	.LVL79:
2868:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 1439              		.loc 2 2868 12 view .LVU388
 1440 0032 0028     		cmp	r0, #0
 1441 0034 0ED1     		bne	.L97
2874:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           
 1442              		.loc 2 2874 11 is_stmt 1 view .LVU389
 1443 0036 0C21     		movs	r1, #12
 1444 0038 2268     		ldr	r2, [r4]
 1445 003a 5368     		ldr	r3, [r2, #4]
 1446 003c 8B43     		bics	r3, r1
 1447 003e 5360     		str	r3, [r2, #4]
2877:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
 1448              		.loc 2 2877 11 view .LVU390
 1449 0040 A36D     		ldr	r3, [r4, #88]
 1450 0042 0E4A     		ldr	r2, .L103
 1451 0044 1A40     		ands	r2, r3
 1452 0046 0123     		movs	r3, #1
 1453 0048 1343     		orrs	r3, r2
 1454 004a A365     		str	r3, [r4, #88]
 1455              	.L96:
2896:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1456              		.loc 2 2896 5 view .LVU391
 1457 004c 2000     		movs	r0, r4
 1458 004e FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1459              	.LVL80:
 1460              	.L94:
2916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1461              		.loc 2 2916 1 is_stmt 0 view .LVU392
 1462              		@ sp needed
 1463              	.LVL81:
2916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1464              		.loc 2 2916 1 view .LVU393
 1465 0052 10BD     		pop	{r4, pc}
 1466              	.LVL82:
 1467              	.L97:
2884:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           
 1468              		.loc 2 2884 11 is_stmt 1 view .LVU394
 1469 0054 2023     		movs	r3, #32
 1470 0056 A26D     		ldr	r2, [r4, #88]
 1471 0058 1343     		orrs	r3, r2
 1472 005a A365     		str	r3, [r4, #88]
2887:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 1473              		.loc 2 2887 11 view .LVU395
 1474 005c 0123     		movs	r3, #1
 1475 005e E26D     		ldr	r2, [r4, #92]
 1476 0060 1343     		orrs	r3, r2
 1477 0062 E365     		str	r3, [r4, #92]
 1478 0064 F2E7     		b	.L96
 1479              	.LVL83:
ARM GAS  /tmp/ccjg7X18.s 			page 160


 1480              	.L95:
2901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1481              		.loc 2 2901 5 view .LVU396
2901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1482              		.loc 2 2901 14 is_stmt 0 view .LVU397
 1483 0066 A36D     		ldr	r3, [r4, #88]
2901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1484              		.loc 2 2901 8 view .LVU398
 1485 0068 DB06     		lsls	r3, r3, #27
 1486 006a 03D5     		bpl	.L99
2907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1487              		.loc 2 2907 7 is_stmt 1 view .LVU399
 1488 006c 2000     		movs	r0, r4
 1489              	.LVL84:
2907:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1490              		.loc 2 2907 7 is_stmt 0 view .LVU400
 1491 006e FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1492              	.LVL85:
 1493 0072 EEE7     		b	.L94
 1494              	.LVL86:
 1495              	.L99:
2913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 1496              		.loc 2 2913 7 is_stmt 1 view .LVU401
2913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 1497              		.loc 2 2913 23 is_stmt 0 view .LVU402
 1498 0074 236D     		ldr	r3, [r4, #80]
2913:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 1499              		.loc 2 2913 7 view .LVU403
 1500 0076 5B6B     		ldr	r3, [r3, #52]
 1501 0078 9847     		blx	r3
 1502              	.LVL87:
2916:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1503              		.loc 2 2916 1 view .LVU404
 1504 007a EAE7     		b	.L94
 1505              	.L104:
 1506              		.align	2
 1507              	.L103:
 1508 007c FEFEFFFF 		.word	-258
 1509              		.cfi_endproc
 1510              	.LFE326:
 1512              		.section	.text.HAL_ADC_IRQHandler,"ax",%progbits
 1513              		.align	1
 1514              		.global	HAL_ADC_IRQHandler
 1515              		.syntax unified
 1516              		.code	16
 1517              		.thumb_func
 1518              		.fpu softvfp
 1520              	HAL_ADC_IRQHandler:
 1521              	.LVL88:
 1522              	.LFB314:
1898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1523              		.loc 2 1898 1 is_stmt 1 view -0
 1524              		.cfi_startproc
 1525              		@ args = 0, pretend = 0, frame = 0
 1526              		@ frame_needed = 0, uses_anonymous_args = 0
1899:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_isr = hadc->Instance->ISR;
 1527              		.loc 2 1899 3 view .LVU406
ARM GAS  /tmp/ccjg7X18.s 			page 161


1900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1528              		.loc 2 1900 3 view .LVU407
1898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1529              		.loc 2 1898 1 is_stmt 0 view .LVU408
 1530 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1531              	.LCFI8:
 1532              		.cfi_def_cfa_offset 24
 1533              		.cfi_offset 3, -24
 1534              		.cfi_offset 4, -20
 1535              		.cfi_offset 5, -16
 1536              		.cfi_offset 6, -12
 1537              		.cfi_offset 7, -8
 1538              		.cfi_offset 14, -4
1900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1539              		.loc 2 1900 26 view .LVU409
 1540 0002 0368     		ldr	r3, [r0]
1898:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t overrun_error = 0UL; /* flag set if overrun occurrence has to be considered as an error 
 1541              		.loc 2 1898 1 view .LVU410
 1542 0004 0400     		movs	r4, r0
1900:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_ier = hadc->Instance->IER;
 1543              		.loc 2 1900 12 view .LVU411
 1544 0006 1E68     		ldr	r6, [r3]
 1545              	.LVL89:
1901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 1546              		.loc 2 1901 3 is_stmt 1 view .LVU412
1901:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 1547              		.loc 2 1901 12 is_stmt 0 view .LVU413
 1548 0008 5D68     		ldr	r5, [r3, #4]
 1549              	.LVL90:
1904:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_EOC_SELECTION(hadc->Init.EOCSelection));
 1550              		.loc 2 1904 3 is_stmt 1 view .LVU414
1905:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 1551              		.loc 2 1905 3 view .LVU415
1908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1552              		.loc 2 1908 3 view .LVU416
1908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1553              		.loc 2 1908 16 is_stmt 0 view .LVU417
 1554 000a 0223     		movs	r3, #2
1908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1555              		.loc 2 1908 5 view .LVU418
 1556 000c 1E42     		tst	r6, r3
 1557 000e 0FD0     		beq	.L106
1908:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1558              		.loc 2 1908 53 discriminator 1 view .LVU419
 1559 0010 1D42     		tst	r5, r3
 1560 0012 0DD0     		beq	.L106
1911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1561              		.loc 2 1911 5 is_stmt 1 view .LVU420
1911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1562              		.loc 2 1911 14 is_stmt 0 view .LVU421
 1563 0014 836D     		ldr	r3, [r0, #88]
1911:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1564              		.loc 2 1911 8 view .LVU422
 1565 0016 DB06     		lsls	r3, r3, #27
 1566 0018 04D4     		bmi	.L107
1914:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 1567              		.loc 2 1914 7 is_stmt 1 view .LVU423
ARM GAS  /tmp/ccjg7X18.s 			page 162


 1568 001a 8023     		movs	r3, #128
 1569 001c 826D     		ldr	r2, [r0, #88]
 1570 001e 1B01     		lsls	r3, r3, #4
 1571 0020 1343     		orrs	r3, r2
 1572 0022 8365     		str	r3, [r0, #88]
 1573              	.L107:
1921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1574              		.loc 2 1921 5 view .LVU424
 1575 0024 2000     		movs	r0, r4
 1576              	.LVL91:
1921:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1577              		.loc 2 1921 5 is_stmt 0 view .LVU425
 1578 0026 FFF7FEFF 		bl	HAL_ADCEx_EndOfSamplingCallback
 1579              	.LVL92:
1925:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1580              		.loc 2 1925 5 is_stmt 1 view .LVU426
 1581 002a 0222     		movs	r2, #2
 1582 002c 2368     		ldr	r3, [r4]
 1583 002e 1A60     		str	r2, [r3]
 1584              	.L106:
1929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS))  )
 1585              		.loc 2 1929 3 view .LVU427
1929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS))  )
 1586              		.loc 2 1929 17 is_stmt 0 view .LVU428
 1587 0030 0423     		movs	r3, #4
1929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS))  )
 1588              		.loc 2 1929 5 view .LVU429
 1589 0032 1E42     		tst	r6, r3
 1590 0034 01D0     		beq	.L108
1929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS))  )
 1591              		.loc 2 1929 50 discriminator 1 view .LVU430
 1592 0036 1D42     		tst	r5, r3
 1593 0038 04D1     		bne	.L109
 1594              	.L108:
1930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1595              		.loc 2 1930 17 discriminator 3 view .LVU431
 1596 003a 0823     		movs	r3, #8
1929:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      (((tmp_isr & ADC_FLAG_EOS) == ADC_FLAG_EOS) && ((tmp_ier & ADC_IT_EOS) == ADC_IT_EOS))  )
 1597              		.loc 2 1929 93 discriminator 3 view .LVU432
 1598 003c 1E42     		tst	r6, r3
 1599 003e 2AD0     		beq	.L110
1930:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1600              		.loc 2 1930 50 view .LVU433
 1601 0040 1D42     		tst	r5, r3
 1602 0042 28D0     		beq	.L110
 1603              	.L109:
1933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1604              		.loc 2 1933 5 is_stmt 1 view .LVU434
1933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1605              		.loc 2 1933 14 is_stmt 0 view .LVU435
 1606 0044 A36D     		ldr	r3, [r4, #88]
1933:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1607              		.loc 2 1933 8 view .LVU436
 1608 0046 DB06     		lsls	r3, r3, #27
 1609 0048 04D4     		bmi	.L111
1936:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 1610              		.loc 2 1936 7 is_stmt 1 view .LVU437
ARM GAS  /tmp/ccjg7X18.s 			page 163


 1611 004a 8023     		movs	r3, #128
 1612 004c A26D     		ldr	r2, [r4, #88]
 1613 004e 9B00     		lsls	r3, r3, #2
 1614 0050 1343     		orrs	r3, r2
 1615 0052 A365     		str	r3, [r4, #88]
 1616              	.L111:
1942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        && (hadc->Init.ContinuousConvMode == DISABLE)
 1617              		.loc 2 1942 5 view .LVU438
 1618              	.LBB114:
 1619              	.LBB115:
2343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1620              		.loc 1 2343 12 is_stmt 0 view .LVU439
 1621 0054 C023     		movs	r3, #192
 1622              	.LBE115:
 1623              	.LBE114:
1942:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****        && (hadc->Init.ContinuousConvMode == DISABLE)
 1624              		.loc 2 1942 12 view .LVU440
 1625 0056 2068     		ldr	r0, [r4]
 1626              	.LVL93:
 1627              	.LBB117:
 1628              	.LBI114:
2341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 1629              		.loc 1 2341 26 is_stmt 1 view .LVU441
 1630              	.LBB116:
2343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1631              		.loc 1 2343 3 view .LVU442
2343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1632              		.loc 1 2343 12 is_stmt 0 view .LVU443
 1633 0058 1B01     		lsls	r3, r3, #4
 1634 005a C268     		ldr	r2, [r0, #12]
2343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1635              		.loc 1 2343 106 view .LVU444
 1636 005c 1A42     		tst	r2, r3
 1637 005e 14D1     		bne	.L112
 1638              	.LVL94:
2343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1639              		.loc 1 2343 106 view .LVU445
 1640              	.LBE116:
 1641              	.LBE117:
1943:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       )
 1642              		.loc 2 1943 8 view .LVU446
 1643 0060 A37E     		ldrb	r3, [r4, #26]
 1644 0062 002B     		cmp	r3, #0
 1645 0064 11D1     		bne	.L112
1947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1646              		.loc 2 1947 7 is_stmt 1 view .LVU447
1947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1647              		.loc 2 1947 11 is_stmt 0 view .LVU448
 1648 0066 0368     		ldr	r3, [r0]
1947:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1649              		.loc 2 1947 9 view .LVU449
 1650 0068 1B07     		lsls	r3, r3, #28
 1651 006a 0ED5     		bpl	.L112
1951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 1652              		.loc 2 1951 9 is_stmt 1 view .LVU450
1951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 1653              		.loc 2 1951 13 is_stmt 0 view .LVU451
ARM GAS  /tmp/ccjg7X18.s 			page 164


 1654 006c FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 1655              	.LVL95:
1951:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 1656              		.loc 2 1951 12 view .LVU452
 1657 0070 0028     		cmp	r0, #0
 1658 0072 66D1     		bne	.L113
1957:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           
 1659              		.loc 2 1957 11 is_stmt 1 view .LVU453
 1660 0074 0C21     		movs	r1, #12
 1661 0076 2268     		ldr	r2, [r4]
 1662 0078 5368     		ldr	r3, [r2, #4]
 1663 007a 8B43     		bics	r3, r1
 1664 007c 5360     		str	r3, [r2, #4]
1960:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                             HAL_ADC_STATE_REG_BUSY,
 1665              		.loc 2 1960 11 view .LVU454
 1666 007e A36D     		ldr	r3, [r4, #88]
 1667 0080 344A     		ldr	r2, .L175
 1668 0082 1A40     		ands	r2, r3
 1669 0084 0123     		movs	r3, #1
 1670 0086 1343     		orrs	r3, r2
 1671 0088 A365     		str	r3, [r4, #88]
 1672              	.L112:
1983:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1673              		.loc 2 1983 5 view .LVU455
 1674 008a 2000     		movs	r0, r4
 1675 008c FFF7FEFF 		bl	HAL_ADC_ConvCpltCallback
 1676              	.LVL96:
1991:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1677              		.loc 2 1991 5 view .LVU456
 1678 0090 0C22     		movs	r2, #12
 1679 0092 2368     		ldr	r3, [r4]
 1680 0094 1A60     		str	r2, [r3]
 1681              	.L110:
1995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1682              		.loc 2 1995 3 view .LVU457
1995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1683              		.loc 2 1995 17 is_stmt 0 view .LVU458
 1684 0096 8027     		movs	r7, #128
1995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1685              		.loc 2 1995 6 view .LVU459
 1686 0098 3E42     		tst	r6, r7
 1687 009a 0BD0     		beq	.L114
1995:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1688              		.loc 2 1995 52 discriminator 1 view .LVU460
 1689 009c 3D42     		tst	r5, r7
 1690 009e 09D0     		beq	.L114
1998:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 1691              		.loc 2 1998 5 is_stmt 1 view .LVU461
 1692 00a0 8023     		movs	r3, #128
 1693 00a2 A26D     		ldr	r2, [r4, #88]
 1694 00a4 5B02     		lsls	r3, r3, #9
 1695 00a6 1343     		orrs	r3, r2
 1696 00a8 A365     		str	r3, [r4, #88]
2004:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1697              		.loc 2 2004 5 view .LVU462
 1698 00aa 2000     		movs	r0, r4
 1699 00ac FFF7FEFF 		bl	HAL_ADC_LevelOutOfWindowCallback
ARM GAS  /tmp/ccjg7X18.s 			page 165


 1700              	.LVL97:
2008:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1701              		.loc 2 2008 5 view .LVU463
 1702 00b0 2368     		ldr	r3, [r4]
 1703 00b2 1F60     		str	r7, [r3]
 1704              	.L114:
2012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1705              		.loc 2 2012 3 view .LVU464
2012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1706              		.loc 2 2012 17 is_stmt 0 view .LVU465
 1707 00b4 8027     		movs	r7, #128
 1708 00b6 7F00     		lsls	r7, r7, #1
2012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1709              		.loc 2 2012 6 view .LVU466
 1710 00b8 3E42     		tst	r6, r7
 1711 00ba 0BD0     		beq	.L115
2012:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1712              		.loc 2 2012 52 discriminator 1 view .LVU467
 1713 00bc 3D42     		tst	r5, r7
 1714 00be 09D0     		beq	.L115
2015:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 1715              		.loc 2 2015 5 is_stmt 1 view .LVU468
 1716 00c0 8023     		movs	r3, #128
 1717 00c2 A26D     		ldr	r2, [r4, #88]
 1718 00c4 9B02     		lsls	r3, r3, #10
 1719 00c6 1343     		orrs	r3, r2
 1720 00c8 A365     		str	r3, [r4, #88]
2021:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1721              		.loc 2 2021 5 view .LVU469
 1722 00ca 2000     		movs	r0, r4
 1723 00cc FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow2Callback
 1724              	.LVL98:
2025:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1725              		.loc 2 2025 5 view .LVU470
 1726 00d0 2368     		ldr	r3, [r4]
 1727 00d2 1F60     		str	r7, [r3]
 1728              	.L115:
2029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1729              		.loc 2 2029 3 view .LVU471
2029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1730              		.loc 2 2029 17 is_stmt 0 view .LVU472
 1731 00d4 8027     		movs	r7, #128
 1732 00d6 BF00     		lsls	r7, r7, #2
2029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1733              		.loc 2 2029 6 view .LVU473
 1734 00d8 3E42     		tst	r6, r7
 1735 00da 0BD0     		beq	.L116
2029:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1736              		.loc 2 2029 52 discriminator 1 view .LVU474
 1737 00dc 3D42     		tst	r5, r7
 1738 00de 09D0     		beq	.L116
2032:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 1739              		.loc 2 2032 5 is_stmt 1 view .LVU475
 1740 00e0 8023     		movs	r3, #128
 1741 00e2 A26D     		ldr	r2, [r4, #88]
 1742 00e4 DB02     		lsls	r3, r3, #11
 1743 00e6 1343     		orrs	r3, r2
ARM GAS  /tmp/ccjg7X18.s 			page 166


 1744 00e8 A365     		str	r3, [r4, #88]
2038:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1745              		.loc 2 2038 5 view .LVU476
 1746 00ea 2000     		movs	r0, r4
 1747 00ec FFF7FEFF 		bl	HAL_ADCEx_LevelOutOfWindow3Callback
 1748              	.LVL99:
2042:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1749              		.loc 2 2042 5 view .LVU477
 1750 00f0 2368     		ldr	r3, [r4]
 1751 00f2 1F60     		str	r7, [r3]
 1752              	.L116:
2046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1753              		.loc 2 2046 3 view .LVU478
2046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1754              		.loc 2 2046 17 is_stmt 0 view .LVU479
 1755 00f4 1023     		movs	r3, #16
2046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1756              		.loc 2 2046 6 view .LVU480
 1757 00f6 1E42     		tst	r6, r3
 1758 00f8 17D0     		beq	.L117
2046:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1759              		.loc 2 2046 50 discriminator 1 view .LVU481
 1760 00fa 1D42     		tst	r5, r3
 1761 00fc 15D0     		beq	.L117
2054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1762              		.loc 2 2054 5 is_stmt 1 view .LVU482
2054:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1763              		.loc 2 2054 8 is_stmt 0 view .LVU483
 1764 00fe 236B     		ldr	r3, [r4, #48]
 1765 0100 002B     		cmp	r3, #0
 1766 0102 03D0     		beq	.L118
2061:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1767              		.loc 2 2061 7 is_stmt 1 view .LVU484
2061:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1768              		.loc 2 2061 11 is_stmt 0 view .LVU485
 1769 0104 2368     		ldr	r3, [r4]
 1770              	.LVL100:
 1771              	.LBB118:
 1772              	.LBI118:
3286:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 1773              		.loc 1 3286 26 is_stmt 1 view .LVU486
 1774              	.LBB119:
3288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1775              		.loc 1 3288 3 view .LVU487
3288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1776              		.loc 1 3288 21 is_stmt 0 view .LVU488
 1777 0106 DB68     		ldr	r3, [r3, #12]
 1778              	.LVL101:
3288:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1779              		.loc 1 3288 21 view .LVU489
 1780              	.LBE119:
 1781              	.LBE118:
2061:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1782              		.loc 2 2061 10 view .LVU490
 1783 0108 9B07     		lsls	r3, r3, #30
 1784 010a 0BD0     		beq	.L119
 1785              	.L118:
ARM GAS  /tmp/ccjg7X18.s 			page 167


 1786              	.LVL102:
2070:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 1787              		.loc 2 2070 7 is_stmt 1 view .LVU491
 1788 010c 8023     		movs	r3, #128
 1789 010e A26D     		ldr	r2, [r4, #88]
 1790 0110 DB00     		lsls	r3, r3, #3
 1791 0112 1343     		orrs	r3, r2
 1792 0114 A365     		str	r3, [r4, #88]
2073:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 1793              		.loc 2 2073 7 view .LVU492
 1794 0116 0223     		movs	r3, #2
 1795 0118 E26D     		ldr	r2, [r4, #92]
2083:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1796              		.loc 2 2083 7 is_stmt 0 view .LVU493
 1797 011a 2000     		movs	r0, r4
2073:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 1798              		.loc 2 2073 7 view .LVU494
 1799 011c 1343     		orrs	r3, r2
 1800 011e E365     		str	r3, [r4, #92]
2083:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 1801              		.loc 2 2083 7 is_stmt 1 view .LVU495
 1802 0120 FFF7FEFF 		bl	HAL_ADC_ErrorCallback
 1803              	.LVL103:
 1804              	.L119:
2088:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1805              		.loc 2 2088 5 view .LVU496
 1806 0124 1022     		movs	r2, #16
 1807 0126 2368     		ldr	r3, [r4]
 1808 0128 1A60     		str	r2, [r3]
 1809              	.L117:
2092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1810              		.loc 2 2092 3 view .LVU497
2092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1811              		.loc 2 2092 17 is_stmt 0 view .LVU498
 1812 012a 8027     		movs	r7, #128
 1813 012c BF01     		lsls	r7, r7, #6
2092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1814              		.loc 2 2092 6 view .LVU499
 1815 012e 3E42     		tst	r6, r7
 1816 0130 06D0     		beq	.L105
2092:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1817              		.loc 2 2092 54 discriminator 1 view .LVU500
 1818 0132 3D42     		tst	r5, r7
 1819 0134 04D0     		beq	.L105
2095:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 1820              		.loc 2 2095 5 is_stmt 1 view .LVU501
 1821 0136 2000     		movs	r0, r4
 1822 0138 FFF7FEFF 		bl	HAL_ADCEx_ChannelConfigReadyCallback
 1823              	.LVL104:
2098:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1824              		.loc 2 2098 5 view .LVU502
 1825 013c 2368     		ldr	r3, [r4]
 1826 013e 1F60     		str	r7, [r3]
 1827              	.L105:
2100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1828              		.loc 2 2100 1 is_stmt 0 view .LVU503
 1829              		@ sp needed
ARM GAS  /tmp/ccjg7X18.s 			page 168


 1830              	.LVL105:
 1831              	.LVL106:
 1832              	.LVL107:
2100:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 1833              		.loc 2 2100 1 view .LVU504
 1834 0140 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1835              	.LVL108:
 1836              	.L113:
1967:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           
 1837              		.loc 2 1967 11 is_stmt 1 view .LVU505
 1838 0142 2023     		movs	r3, #32
 1839 0144 A26D     		ldr	r2, [r4, #88]
 1840 0146 1343     		orrs	r3, r2
 1841 0148 A365     		str	r3, [r4, #88]
1970:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 1842              		.loc 2 1970 11 view .LVU506
 1843 014a 0123     		movs	r3, #1
 1844 014c E26D     		ldr	r2, [r4, #92]
 1845 014e 1343     		orrs	r3, r2
 1846 0150 E365     		str	r3, [r4, #92]
 1847 0152 9AE7     		b	.L112
 1848              	.L176:
 1849              		.align	2
 1850              	.L175:
 1851 0154 FEFEFFFF 		.word	-258
 1852              		.cfi_endproc
 1853              	.LFE314:
 1855              		.section	.text.HAL_ADC_ConfigChannel,"ax",%progbits
 1856              		.align	1
 1857              		.global	HAL_ADC_ConfigChannel
 1858              		.syntax unified
 1859              		.code	16
 1860              		.thumb_func
 1861              		.fpu softvfp
 1863              	HAL_ADC_ConfigChannel:
 1864              	.LVL109:
 1865              	.LFB319:
2206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1866              		.loc 2 2206 1 view -0
 1867              		.cfi_startproc
 1868              		@ args = 0, pretend = 0, frame = 24
 1869              		@ frame_needed = 0, uses_anonymous_args = 0
2209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 1870              		.loc 2 2209 17 is_stmt 0 view .LVU508
 1871 0000 0023     		movs	r3, #0
2206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1872              		.loc 2 2206 1 view .LVU509
 1873 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 1874              	.LCFI9:
 1875              		.cfi_def_cfa_offset 20
 1876              		.cfi_offset 4, -20
 1877              		.cfi_offset 5, -16
 1878              		.cfi_offset 6, -12
 1879              		.cfi_offset 7, -8
 1880              		.cfi_offset 14, -4
 1881 0004 87B0     		sub	sp, sp, #28
 1882              	.LCFI10:
ARM GAS  /tmp/ccjg7X18.s 			page 169


 1883              		.cfi_def_cfa_offset 48
2209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 1884              		.loc 2 2209 17 view .LVU510
 1885 0006 0593     		str	r3, [sp, #20]
2229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 1886              		.loc 2 2229 3 view .LVU511
 1887 0008 0300     		movs	r3, r0
 1888 000a 5433     		adds	r3, r3, #84
 1889 000c 1A78     		ldrb	r2, [r3]
2206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1890              		.loc 2 2206 1 view .LVU512
 1891 000e 0500     		movs	r5, r0
2207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 1892              		.loc 2 2207 3 is_stmt 1 view .LVU513
 1893              	.LVL110:
2208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   __IO uint32_t wait_loop_index = 0UL;
 1894              		.loc 2 2208 3 view .LVU514
2209:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 1895              		.loc 2 2209 3 view .LVU515
2212:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_CHANNEL(sConfig->Channel));
 1896              		.loc 2 2212 3 view .LVU516
2213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_SAMPLING_TIME_COMMON(sConfig->SamplingTime));
 1897              		.loc 2 2213 3 view .LVU517
2214:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 1898              		.loc 2 2214 3 view .LVU518
2216:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD)   )
 1899              		.loc 2 2216 3 view .LVU519
2223:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 1900              		.loc 2 2223 5 view .LVU520
2225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 1901              		.loc 2 2225 5 view .LVU521
2229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 1902              		.loc 2 2229 3 view .LVU522
2229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 1903              		.loc 2 2229 3 view .LVU523
2206:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1904              		.loc 2 2206 1 is_stmt 0 view .LVU524
 1905 0010 0E00     		movs	r6, r1
2229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 1906              		.loc 2 2229 3 view .LVU525
 1907 0012 0220     		movs	r0, #2
 1908              	.LVL111:
2229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 1909              		.loc 2 2229 3 view .LVU526
 1910 0014 012A     		cmp	r2, #1
 1911 0016 00D1     		bne	.LCB1714
 1912 0018 C0E0     		b	.L178	@long jump
 1913              	.LCB1714:
2229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 1914              		.loc 2 2229 3 is_stmt 1 discriminator 2 view .LVU527
 1915 001a 0124     		movs	r4, #1
 1916 001c 1C70     		strb	r4, [r3]
2229:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 1917              		.loc 2 2229 3 discriminator 2 view .LVU528
2237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1918              		.loc 2 2237 3 discriminator 2 view .LVU529
2237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
ARM GAS  /tmp/ccjg7X18.s 			page 170


 1919              		.loc 2 2237 7 is_stmt 0 discriminator 2 view .LVU530
 1920 001e 2868     		ldr	r0, [r5]
 1921 0020 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 1922              	.LVL112:
2237:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 1923              		.loc 2 2237 6 discriminator 2 view .LVU531
 1924 0024 0028     		cmp	r0, #0
 1925 0026 00D0     		beq	.LCB1724
 1926 0028 F6E0     		b	.L179	@long jump
 1927              	.LCB1724:
2246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1928              		.loc 2 2246 5 is_stmt 1 view .LVU532
 1929 002a 8022     		movs	r2, #128
2246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1930              		.loc 2 2246 15 is_stmt 0 view .LVU533
 1931 002c 7368     		ldr	r3, [r6, #4]
 1932 002e 1206     		lsls	r2, r2, #24
 1933 0030 0193     		str	r3, [sp, #4]
 1934 0032 0423     		movs	r3, #4
 1935 0034 9446     		mov	ip, r2
 1936 0036 2F69     		ldr	r7, [r5, #16]
2246:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 1937              		.loc 2 2246 7 view .LVU534
 1938 0038 019A     		ldr	r2, [sp, #4]
 1939 003a 9F43     		bics	r7, r3
 1940 003c 3368     		ldr	r3, [r6]
 1941 003e 022A     		cmp	r2, #2
 1942 0040 00D1     		bne	.LCB1739
 1943 0042 BFE0     		b	.L180	@long jump
 1944              	.LCB1739:
2254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD)  )
 1945              		.loc 2 2254 7 is_stmt 1 view .LVU535
 1946 0044 5903     		lsls	r1, r3, #13
 1947 0046 490B     		lsrs	r1, r1, #13
 1948 0048 2A68     		ldr	r2, [r5]
 1949 004a 0291     		str	r1, [sp, #8]
2254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD)  )
 1950              		.loc 2 2254 9 is_stmt 0 view .LVU536
 1951 004c 6745     		cmp	r7, ip
 1952 004e 0FD1     		bne	.L181
2259:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 1953              		.loc 2 2259 9 is_stmt 1 view .LVU537
 1954              	.LVL113:
 1955              	.LBB144:
 1956              	.LBI144:
2986:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 1957              		.loc 1 2986 22 view .LVU538
 1958              	.LBB145:
2990:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1959              		.loc 1 2990 3 view .LVU539
 1960 0050 906A     		ldr	r0, [r2, #40]
 1961              	.LVL114:
 1962              	.L214:
2990:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 1963              		.loc 1 2990 3 is_stmt 0 view .LVU540
 1964              	.LBE145:
 1965              	.LBE144:
ARM GAS  /tmp/ccjg7X18.s 			page 171


 1966              	.LBB146:
 1967              	.LBB147:
2742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 1968              		.loc 1 2742 3 view .LVU541
 1969 0052 0143     		orrs	r1, r0
 1970 0054 9162     		str	r1, [r2, #40]
 1971              	.L182:
 1972              	.LBE147:
 1973              	.LBE146:
2282:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 1974              		.loc 2 2282 7 is_stmt 1 view .LVU542
 1975              	.LVL115:
 1976              	.LBB149:
 1977              	.LBI149:
3413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 1978              		.loc 1 3413 22 view .LVU543
 1979              	.LBB150:
3417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
 1980              		.loc 1 3417 3 view .LVU544
 1981 0056 B168     		ldr	r1, [r6, #8]
 1982 0058 5469     		ldr	r4, [r2, #20]
 1983 005a 1802     		lsls	r0, r3, #8
 1984 005c 714E     		ldr	r6, .L218
 1985              	.LVL116:
3417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
 1986              		.loc 1 3417 3 is_stmt 0 view .LVU545
 1987 005e 0140     		ands	r1, r0
 1988 0060 3140     		ands	r1, r6
 1989 0062 8443     		bics	r4, r0
 1990 0064 2143     		orrs	r1, r4
 1991 0066 5161     		str	r1, [r2, #20]
 1992              	.LVL117:
3417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (Channel << ADC_SMPR_SMPSEL0_BITOFFSET_POS),
 1993              		.loc 1 3417 3 view .LVU546
 1994              	.LBE150:
 1995              	.LBE149:
2290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1996              		.loc 2 2290 7 is_stmt 1 view .LVU547
2290:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 1997              		.loc 2 2290 9 is_stmt 0 view .LVU548
 1998 0068 002B     		cmp	r3, #0
 1999 006a 64DB     		blt	.L185
 2000              	.L217:
2207:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmp_config_internal_channel;
 2001              		.loc 2 2207 21 view .LVU549
 2002 006c 0020     		movs	r0, #0
 2003              	.LBB151:
 2004              	.LBB152:
1813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 2005              		.loc 1 1813 1 view .LVU550
 2006 006e 92E0     		b	.L186
 2007              	.LVL118:
 2008              	.L181:
1813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 2009              		.loc 1 1813 1 view .LVU551
 2010              	.LBE152:
 2011              	.LBE151:
ARM GAS  /tmp/ccjg7X18.s 			page 172


2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2012              		.loc 2 2267 9 is_stmt 1 view .LVU552
 2013 0070 1F21     		movs	r1, #31
 2014 0072 019F     		ldr	r7, [sp, #4]
 2015 0074 0F40     		ands	r7, r1
 2016 0076 BC46     		mov	ip, r7
 2017 0078 0F27     		movs	r7, #15
 2018 007a 6146     		mov	r1, ip
 2019 007c 8F40     		lsls	r7, r7, r1
 2020 007e F943     		mvns	r1, r7
 2021 0080 0391     		str	r1, [sp, #12]
 2022 0082 296E     		ldr	r1, [r5, #96]
 2023 0084 B943     		bics	r1, r7
 2024 0086 0F00     		movs	r7, r1
 2025 0088 0299     		ldr	r1, [sp, #8]
 2026 008a 0029     		cmp	r1, #0
 2027 008c 14D1     		bne	.L183
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2028              		.loc 2 2267 9 is_stmt 0 discriminator 1 view .LVU553
 2029 008e 980E     		lsrs	r0, r3, #26
 2030 0090 1F31     		adds	r1, r1, #31
 2031 0092 0840     		ands	r0, r1
 2032              	.L184:
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2033              		.loc 2 2267 9 discriminator 80 view .LVU554
 2034 0094 6146     		mov	r1, ip
 2035 0096 8840     		lsls	r0, r0, r1
2275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2036              		.loc 2 2275 28 discriminator 80 view .LVU555
 2037 0098 0199     		ldr	r1, [sp, #4]
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2038              		.loc 2 2267 9 discriminator 80 view .LVU556
 2039 009a 0743     		orrs	r7, r0
2275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2040              		.loc 2 2275 28 discriminator 80 view .LVU557
 2041 009c 8908     		lsrs	r1, r1, #2
2275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2042              		.loc 2 2275 11 discriminator 80 view .LVU558
 2043 009e E869     		ldr	r0, [r5, #28]
2275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2044              		.loc 2 2275 36 discriminator 80 view .LVU559
 2045 00a0 0131     		adds	r1, r1, #1
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2046              		.loc 2 2267 9 discriminator 80 view .LVU560
 2047 00a2 2F66     		str	r7, [r5, #96]
2275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2048              		.loc 2 2275 9 is_stmt 1 discriminator 80 view .LVU561
2275:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2049              		.loc 2 2275 11 is_stmt 0 discriminator 80 view .LVU562
 2050 00a4 8142     		cmp	r1, r0
 2051 00a6 D6D8     		bhi	.L182
2277:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 2052              		.loc 2 2277 11 is_stmt 1 view .LVU563
 2053              	.LVL119:
 2054              	.LBB156:
 2055              	.LBI146:
2736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
ARM GAS  /tmp/ccjg7X18.s 			page 173


 2056              		.loc 1 2736 22 view .LVU564
 2057              	.LBB148:
2742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 2058              		.loc 1 2742 3 view .LVU565
 2059 00a8 6446     		mov	r4, ip
 2060 00aa 9900     		lsls	r1, r3, #2
 2061 00ac 090F     		lsrs	r1, r1, #28
 2062 00ae A140     		lsls	r1, r1, r4
 2063 00b0 906A     		ldr	r0, [r2, #40]
 2064 00b2 039C     		ldr	r4, [sp, #12]
 2065 00b4 2040     		ands	r0, r4
 2066 00b6 CCE7     		b	.L214
 2067              	.LVL120:
 2068              	.L183:
2742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CHSELR_SQ1 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
 2069              		.loc 1 2742 3 is_stmt 0 view .LVU566
 2070              	.LBE148:
 2071              	.LBE156:
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2072              		.loc 2 2267 9 discriminator 2 view .LVU567
 2073 00b8 2342     		tst	r3, r4
 2074 00ba EBD1     		bne	.L184
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2075              		.loc 2 2267 9 discriminator 4 view .LVU568
 2076 00bc 0221     		movs	r1, #2
 2077 00be 2000     		movs	r0, r4
 2078 00c0 0B42     		tst	r3, r1
 2079 00c2 E7D1     		bne	.L184
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2080              		.loc 2 2267 9 discriminator 6 view .LVU569
 2081 00c4 0800     		movs	r0, r1
 2082 00c6 4918     		adds	r1, r1, r1
 2083 00c8 0B42     		tst	r3, r1
 2084 00ca E3D1     		bne	.L184
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2085              		.loc 2 2267 9 discriminator 8 view .LVU570
 2086 00cc 0130     		adds	r0, r0, #1
 2087 00ce 1907     		lsls	r1, r3, #28
 2088 00d0 E0D4     		bmi	.L184
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2089              		.loc 2 2267 9 discriminator 10 view .LVU571
 2090 00d2 0130     		adds	r0, r0, #1
 2091 00d4 D906     		lsls	r1, r3, #27
 2092 00d6 DDD4     		bmi	.L184
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2093              		.loc 2 2267 9 discriminator 12 view .LVU572
 2094 00d8 0130     		adds	r0, r0, #1
 2095 00da 9906     		lsls	r1, r3, #26
 2096 00dc DAD4     		bmi	.L184
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2097              		.loc 2 2267 9 discriminator 14 view .LVU573
 2098 00de 0130     		adds	r0, r0, #1
 2099 00e0 5906     		lsls	r1, r3, #25
 2100 00e2 D7D4     		bmi	.L184
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2101              		.loc 2 2267 9 discriminator 16 view .LVU574
 2102 00e4 0130     		adds	r0, r0, #1
ARM GAS  /tmp/ccjg7X18.s 			page 174


 2103 00e6 1906     		lsls	r1, r3, #24
 2104 00e8 D4D4     		bmi	.L184
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2105              		.loc 2 2267 9 discriminator 18 view .LVU575
 2106 00ea 0130     		adds	r0, r0, #1
 2107 00ec D905     		lsls	r1, r3, #23
 2108 00ee D1D4     		bmi	.L184
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2109              		.loc 2 2267 9 discriminator 20 view .LVU576
 2110 00f0 0130     		adds	r0, r0, #1
 2111 00f2 9905     		lsls	r1, r3, #22
 2112 00f4 CED4     		bmi	.L184
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2113              		.loc 2 2267 9 discriminator 22 view .LVU577
 2114 00f6 0130     		adds	r0, r0, #1
 2115 00f8 5905     		lsls	r1, r3, #21
 2116 00fa CBD4     		bmi	.L184
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2117              		.loc 2 2267 9 discriminator 24 view .LVU578
 2118 00fc 0130     		adds	r0, r0, #1
 2119 00fe 1905     		lsls	r1, r3, #20
 2120 0100 C8D4     		bmi	.L184
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2121              		.loc 2 2267 9 discriminator 26 view .LVU579
 2122 0102 0130     		adds	r0, r0, #1
 2123 0104 D904     		lsls	r1, r3, #19
 2124 0106 C5D4     		bmi	.L184
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2125              		.loc 2 2267 9 discriminator 28 view .LVU580
 2126 0108 0130     		adds	r0, r0, #1
 2127 010a 9904     		lsls	r1, r3, #18
 2128 010c C2D4     		bmi	.L184
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2129              		.loc 2 2267 9 discriminator 30 view .LVU581
 2130 010e 0130     		adds	r0, r0, #1
 2131 0110 5904     		lsls	r1, r3, #17
 2132 0112 BFD4     		bmi	.L184
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2133              		.loc 2 2267 9 discriminator 32 view .LVU582
 2134 0114 0130     		adds	r0, r0, #1
 2135 0116 1904     		lsls	r1, r3, #16
 2136 0118 BCD4     		bmi	.L184
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2137              		.loc 2 2267 9 discriminator 34 view .LVU583
 2138 011a 0130     		adds	r0, r0, #1
 2139 011c D903     		lsls	r1, r3, #15
 2140 011e B9D4     		bmi	.L184
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2141              		.loc 2 2267 9 discriminator 36 view .LVU584
 2142 0120 0130     		adds	r0, r0, #1
 2143 0122 9903     		lsls	r1, r3, #14
 2144 0124 B6D4     		bmi	.L184
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2145              		.loc 2 2267 9 discriminator 38 view .LVU585
 2146 0126 8021     		movs	r1, #128
 2147 0128 1800     		movs	r0, r3
 2148 012a C902     		lsls	r1, r1, #11
ARM GAS  /tmp/ccjg7X18.s 			page 175


 2149 012c 0840     		ands	r0, r1
 2150 012e 0B42     		tst	r3, r1
 2151 0130 B0D0     		beq	.L184
2267:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                    ADC_CHSELR_SQ1 << (sConfig->Rank & 0x1FUL),
 2152              		.loc 2 2267 9 view .LVU586
 2153 0132 1220     		movs	r0, #18
 2154 0134 AEE7     		b	.L184
 2155              	.LVL121:
 2156              	.L185:
2292:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 2157              		.loc 2 2292 9 is_stmt 1 view .LVU587
 2158              	.LBB157:
 2159              	.LBI157:
1832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2160              		.loc 1 1832 26 view .LVU588
 2161              	.LBB158:
1834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2162              		.loc 1 1834 3 view .LVU589
1834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2163              		.loc 1 1834 10 is_stmt 0 view .LVU590
 2164 0136 E024     		movs	r4, #224
1834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2165              		.loc 1 1834 21 view .LVU591
 2166 0138 3B4A     		ldr	r2, .L218+4
 2167              	.LBE158:
 2168              	.LBE157:
2296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2169              		.loc 2 2296 12 view .LVU592
 2170 013a 3C48     		ldr	r0, .L218+8
 2171              	.LBB160:
 2172              	.LBB159:
1834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2173              		.loc 1 1834 21 view .LVU593
 2174 013c 1168     		ldr	r1, [r2]
1834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2175              		.loc 1 1834 10 view .LVU594
 2176 013e 6404     		lsls	r4, r4, #17
 2177 0140 0C40     		ands	r4, r1
 2178              	.LVL122:
1834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2179              		.loc 1 1834 10 view .LVU595
 2180              	.LBE159:
 2181              	.LBE160:
2296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2182              		.loc 2 2296 9 is_stmt 1 view .LVU596
2296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2183              		.loc 2 2296 12 is_stmt 0 view .LVU597
 2184 0142 8342     		cmp	r3, r0
 2185 0144 17D1     		bne	.L187
2296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2186              		.loc 2 2296 91 discriminator 1 view .LVU598
 2187 0146 8023     		movs	r3, #128
 2188 0148 1B04     		lsls	r3, r3, #16
2296:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2189              		.loc 2 2296 58 discriminator 1 view .LVU599
 2190 014a 1942     		tst	r1, r3
 2191 014c 8ED1     		bne	.L217
ARM GAS  /tmp/ccjg7X18.s 			page 176


2298:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           
 2192              		.loc 2 2298 11 is_stmt 1 view .LVU600
 2193              	.LVL123:
 2194              	.LBB161:
 2195              	.LBI161:
1810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2196              		.loc 1 1810 22 view .LVU601
 2197              	.LBB162:
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2198              		.loc 1 1812 3 view .LVU602
 2199 014e 1168     		ldr	r1, [r2]
 2200 0150 3748     		ldr	r0, .L218+12
 2201 0152 0140     		ands	r1, r0
 2202 0154 2143     		orrs	r1, r4
 2203 0156 1943     		orrs	r1, r3
 2204              	.LBE162:
 2205              	.LBE161:
2305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           while(wait_loop_index != 0UL)
 2206              		.loc 2 2305 71 is_stmt 0 view .LVU603
 2207 0158 364B     		ldr	r3, .L218+16
 2208              	.LBB164:
 2209              	.LBB163:
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2210              		.loc 1 1812 3 view .LVU604
 2211 015a 1160     		str	r1, [r2]
 2212              	.LVL124:
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2213              		.loc 1 1812 3 view .LVU605
 2214              	.LBE163:
 2215              	.LBE164:
2305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           while(wait_loop_index != 0UL)
 2216              		.loc 2 2305 11 is_stmt 1 view .LVU606
2305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           while(wait_loop_index != 0UL)
 2217              		.loc 2 2305 71 is_stmt 0 view .LVU607
 2218 015c 1868     		ldr	r0, [r3]
 2219 015e 3649     		ldr	r1, .L218+20
 2220 0160 FFF7FEFF 		bl	__aeabi_uidiv
 2221              	.LVL125:
2305:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           while(wait_loop_index != 0UL)
 2222              		.loc 2 2305 27 view .LVU608
 2223 0164 0590     		str	r0, [sp, #20]
2306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
 2224              		.loc 2 2306 11 is_stmt 1 view .LVU609
 2225              	.L189:
2306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
 2226              		.loc 2 2306 16 view .LVU610
2306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
 2227              		.loc 2 2306 33 is_stmt 0 view .LVU611
 2228 0166 059B     		ldr	r3, [sp, #20]
2306:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
 2229              		.loc 2 2306 16 view .LVU612
 2230 0168 002B     		cmp	r3, #0
 2231 016a 00D1     		bne	.LCB2040
 2232 016c 7EE7     		b	.L217	@long jump
 2233              	.LCB2040:
2308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2234              		.loc 2 2308 13 is_stmt 1 view .LVU613
ARM GAS  /tmp/ccjg7X18.s 			page 177


2308:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2235              		.loc 2 2308 28 is_stmt 0 view .LVU614
 2236 016e 059B     		ldr	r3, [sp, #20]
 2237 0170 013B     		subs	r3, r3, #1
 2238 0172 0593     		str	r3, [sp, #20]
 2239 0174 F7E7     		b	.L189
 2240              	.L187:
2311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2241              		.loc 2 2311 14 is_stmt 1 view .LVU615
2311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2242              		.loc 2 2311 17 is_stmt 0 view .LVU616
 2243 0176 3148     		ldr	r0, .L218+24
 2244 0178 8342     		cmp	r3, r0
 2245 017a 11D1     		bne	.L191
2311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2246              		.loc 2 2311 90 discriminator 1 view .LVU617
 2247 017c 8026     		movs	r6, #128
 2248 017e 0800     		movs	r0, r1
 2249 0180 7604     		lsls	r6, r6, #17
 2250 0182 3040     		ands	r0, r6
2311:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2251              		.loc 2 2311 57 discriminator 1 view .LVU618
 2252 0184 3142     		tst	r1, r6
 2253 0186 00D0     		beq	.LCB2058
 2254 0188 70E7     		b	.L217	@long jump
 2255              	.LCB2058:
2313:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 2256              		.loc 2 2313 11 is_stmt 1 view .LVU619
 2257              	.LVL126:
 2258              	.LBB165:
 2259              	.LBI165:
1810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2260              		.loc 1 1810 22 view .LVU620
 2261              	.LBB166:
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2262              		.loc 1 1812 3 view .LVU621
 2263 018a 1168     		ldr	r1, [r2]
 2264 018c 284B     		ldr	r3, .L218+12
 2265 018e 1940     		ands	r1, r3
 2266 0190 2143     		orrs	r1, r4
 2267 0192 0E43     		orrs	r6, r1
 2268 0194 1660     		str	r6, [r2]
 2269              	.LVL127:
 2270              	.L186:
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2271              		.loc 1 1812 3 is_stmt 0 view .LVU622
 2272              	.LBE166:
 2273              	.LBE165:
2379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 2274              		.loc 2 2379 3 is_stmt 1 view .LVU623
2379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 2275              		.loc 2 2379 3 view .LVU624
 2276 0196 0023     		movs	r3, #0
 2277 0198 5435     		adds	r5, r5, #84
 2278              	.LVL128:
2379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 2279              		.loc 2 2379 3 is_stmt 0 view .LVU625
ARM GAS  /tmp/ccjg7X18.s 			page 178


 2280 019a 2B70     		strb	r3, [r5]
2379:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 2281              		.loc 2 2379 3 is_stmt 1 view .LVU626
2382:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 2282              		.loc 2 2382 3 view .LVU627
 2283              	.LVL129:
 2284              	.L178:
2383:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2285              		.loc 2 2383 1 is_stmt 0 view .LVU628
 2286 019c 07B0     		add	sp, sp, #28
 2287              		@ sp needed
 2288 019e F0BD     		pop	{r4, r5, r6, r7, pc}
 2289              	.LVL130:
 2290              	.L191:
2315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2291              		.loc 2 2315 14 is_stmt 1 view .LVU629
2315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2292              		.loc 2 2315 17 is_stmt 0 view .LVU630
 2293 01a0 2748     		ldr	r0, .L218+28
 2294 01a2 8342     		cmp	r3, r0
 2295 01a4 00D0     		beq	.LCB2115
 2296 01a6 61E7     		b	.L217	@long jump
 2297              	.LCB2115:
2315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2298              		.loc 2 2315 93 discriminator 1 view .LVU631
 2299 01a8 8023     		movs	r3, #128
 2300 01aa 0800     		movs	r0, r1
 2301 01ac DB03     		lsls	r3, r3, #15
 2302 01ae 1840     		ands	r0, r3
2315:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2303              		.loc 2 2315 60 discriminator 1 view .LVU632
 2304 01b0 1942     		tst	r1, r3
 2305 01b2 00D0     		beq	.LCB2121
 2306 01b4 5AE7     		b	.L217	@long jump
 2307              	.LCB2121:
2317:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 2308              		.loc 2 2317 11 is_stmt 1 view .LVU633
 2309              	.LVL131:
 2310              	.LBB167:
 2311              	.LBI167:
1810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2312              		.loc 1 1810 22 view .LVU634
 2313              	.LBB168:
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2314              		.loc 1 1812 3 view .LVU635
 2315 01b6 1168     		ldr	r1, [r2]
 2316 01b8 1D4E     		ldr	r6, .L218+12
 2317 01ba 3140     		ands	r1, r6
 2318 01bc 2143     		orrs	r1, r4
 2319 01be 0B43     		orrs	r3, r1
 2320 01c0 1360     		str	r3, [r2]
1813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 2321              		.loc 1 1813 1 is_stmt 0 view .LVU636
 2322 01c2 E8E7     		b	.L186
 2323              	.LVL132:
 2324              	.L180:
1813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
ARM GAS  /tmp/ccjg7X18.s 			page 179


 2325              		.loc 1 1813 1 view .LVU637
 2326              	.LBE168:
 2327              	.LBE167:
2332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD)  )
 2328              		.loc 2 2332 7 is_stmt 1 view .LVU638
2332:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****          (hadc->Init.ScanConvMode == ADC_SCAN_SEQ_FIXED_BACKWARD)  )
 2329              		.loc 2 2332 9 is_stmt 0 view .LVU639
 2330 01c4 6745     		cmp	r7, ip
 2331 01c6 05D1     		bne	.L192
2337:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 2332              		.loc 2 2337 9 is_stmt 1 view .LVU640
 2333 01c8 2868     		ldr	r0, [r5]
 2334              	.LVL133:
 2335              	.LBB169:
 2336              	.LBI169:
3070:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2337              		.loc 1 3070 22 view .LVU641
 2338              	.LBB170:
3074:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2339              		.loc 1 3074 3 view .LVU642
 2340 01ca 5903     		lsls	r1, r3, #13
 2341 01cc 826A     		ldr	r2, [r0, #40]
 2342 01ce 490B     		lsrs	r1, r1, #13
 2343 01d0 8A43     		bics	r2, r1
 2344 01d2 8262     		str	r2, [r0, #40]
 2345              	.LVL134:
 2346              	.L192:
3074:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2347              		.loc 1 3074 3 is_stmt 0 view .LVU643
 2348              	.LBE170:
 2349              	.LBE169:
2343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2350              		.loc 2 2343 7 is_stmt 1 view .LVU644
2343:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2351              		.loc 2 2343 9 is_stmt 0 view .LVU645
 2352 01d4 002B     		cmp	r3, #0
 2353 01d6 00DB     		blt	.LCB2172
 2354 01d8 48E7     		b	.L217	@long jump
 2355              	.LCB2172:
2345:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 2356              		.loc 2 2345 9 is_stmt 1 view .LVU646
 2357              	.LVL135:
 2358              	.LBB171:
 2359              	.LBI171:
1832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2360              		.loc 1 1832 26 view .LVU647
 2361              	.LBB172:
1834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2362              		.loc 1 1834 3 view .LVU648
1834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2363              		.loc 1 1834 21 is_stmt 0 view .LVU649
 2364 01da 134A     		ldr	r2, .L218+4
 2365              	.LBE172:
 2366              	.LBE171:
2347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2367              		.loc 2 2347 12 view .LVU650
 2368 01dc 1348     		ldr	r0, .L218+8
ARM GAS  /tmp/ccjg7X18.s 			page 180


 2369              	.LBB174:
 2370              	.LBB173:
1834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2371              		.loc 1 1834 21 view .LVU651
 2372 01de 1168     		ldr	r1, [r2]
 2373              	.LVL136:
1834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2374              		.loc 1 1834 21 view .LVU652
 2375              	.LBE173:
 2376              	.LBE174:
2347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2377              		.loc 2 2347 9 is_stmt 1 view .LVU653
2347:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2378              		.loc 2 2347 12 is_stmt 0 view .LVU654
 2379 01e0 8342     		cmp	r3, r0
 2380 01e2 08D1     		bne	.L193
2349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 2381              		.loc 2 2349 11 is_stmt 1 view .LVU655
 2382              	.LVL137:
 2383              	.LBB175:
 2384              	.LBI175:
1810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2385              		.loc 1 1810 22 view .LVU656
 2386              	.LBB176:
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2387              		.loc 1 1812 3 view .LVU657
 2388              	.LBE176:
 2389              	.LBE175:
2349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 2390              		.loc 2 2349 11 is_stmt 0 view .LVU658
 2391 01e4 A023     		movs	r3, #160
 2392              	.LBB178:
 2393              	.LBB177:
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2394              		.loc 1 1812 3 view .LVU659
 2395 01e6 1068     		ldr	r0, [r2]
 2396              	.LBE177:
 2397              	.LBE178:
2349:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 2398              		.loc 2 2349 11 view .LVU660
 2399 01e8 5B04     		lsls	r3, r3, #17
 2400              	.LVL138:
 2401              	.L215:
2353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 2402              		.loc 2 2353 11 view .LVU661
 2403 01ea 1940     		ands	r1, r3
 2404              	.LVL139:
 2405              	.LBB179:
 2406              	.LBB153:
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2407              		.loc 1 1812 3 view .LVU662
 2408 01ec 104B     		ldr	r3, .L218+12
 2409              	.L216:
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2410              		.loc 1 1812 3 view .LVU663
 2411 01ee 0340     		ands	r3, r0
 2412 01f0 1943     		orrs	r1, r3
ARM GAS  /tmp/ccjg7X18.s 			page 181


 2413 01f2 1160     		str	r1, [r2]
 2414 01f4 3AE7     		b	.L217
 2415              	.LVL140:
 2416              	.L193:
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2417              		.loc 1 1812 3 view .LVU664
 2418              	.LBE153:
 2419              	.LBE179:
2351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2420              		.loc 2 2351 14 is_stmt 1 view .LVU665
2351:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2421              		.loc 2 2351 17 is_stmt 0 view .LVU666
 2422 01f6 1148     		ldr	r0, .L218+24
 2423 01f8 8342     		cmp	r3, r0
 2424 01fa 03D1     		bne	.L194
2353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 2425              		.loc 2 2353 11 is_stmt 1 view .LVU667
 2426              	.LVL141:
 2427              	.LBB180:
 2428              	.LBI151:
1810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2429              		.loc 1 1810 22 view .LVU668
 2430              	.LBB154:
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2431              		.loc 1 1812 3 view .LVU669
 2432              	.LBE154:
 2433              	.LBE180:
2353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 2434              		.loc 2 2353 11 is_stmt 0 view .LVU670
 2435 01fc C023     		movs	r3, #192
 2436              	.LBB181:
 2437              	.LBB155:
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2438              		.loc 1 1812 3 view .LVU671
 2439 01fe 1068     		ldr	r0, [r2]
 2440              	.LBE155:
 2441              	.LBE181:
2353:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 2442              		.loc 2 2353 11 view .LVU672
 2443 0200 1B04     		lsls	r3, r3, #16
 2444 0202 F2E7     		b	.L215
 2445              	.LVL142:
 2446              	.L194:
2355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2447              		.loc 2 2355 14 is_stmt 1 view .LVU673
2355:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2448              		.loc 2 2355 17 is_stmt 0 view .LVU674
 2449 0204 0E48     		ldr	r0, .L218+28
 2450 0206 8342     		cmp	r3, r0
 2451 0208 00D0     		beq	.LCB2261
 2452 020a 2FE7     		b	.L217	@long jump
 2453              	.LCB2261:
2357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 2454              		.loc 2 2357 11 is_stmt 1 view .LVU675
 2455              	.LVL143:
 2456              	.LBB182:
 2457              	.LBI182:
ARM GAS  /tmp/ccjg7X18.s 			page 182


1810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2458              		.loc 1 1810 22 view .LVU676
 2459              	.LBB183:
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2460              		.loc 1 1812 3 view .LVU677
 2461              	.LBE183:
 2462              	.LBE182:
2357:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 2463              		.loc 2 2357 11 is_stmt 0 view .LVU678
 2464 020c C020     		movs	r0, #192
 2465 020e 4004     		lsls	r0, r0, #17
 2466 0210 0140     		ands	r1, r0
 2467              	.LVL144:
 2468              	.LBB185:
 2469              	.LBB184:
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2470              		.loc 1 1812 3 view .LVU679
 2471 0212 1368     		ldr	r3, [r2]
 2472 0214 0648     		ldr	r0, .L218+12
 2473 0216 EAE7     		b	.L216
 2474              	.LVL145:
 2475              	.L179:
1812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2476              		.loc 1 1812 3 view .LVU680
 2477              	.LBE184:
 2478              	.LBE185:
2373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 2479              		.loc 2 2373 5 is_stmt 1 view .LVU681
 2480 0218 2023     		movs	r3, #32
 2481 021a AA6D     		ldr	r2, [r5, #88]
2375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 2482              		.loc 2 2375 20 is_stmt 0 view .LVU682
 2483 021c 2000     		movs	r0, r4
2373:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 2484              		.loc 2 2373 5 view .LVU683
 2485 021e 1343     		orrs	r3, r2
 2486 0220 AB65     		str	r3, [r5, #88]
2375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 2487              		.loc 2 2375 5 is_stmt 1 view .LVU684
 2488              	.LVL146:
2375:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 2489              		.loc 2 2375 5 is_stmt 0 view .LVU685
 2490 0222 B8E7     		b	.L186
 2491              	.L219:
 2492              		.align	2
 2493              	.L218:
 2494 0224 00FFFF07 		.word	134217472
 2495 0228 08270140 		.word	1073817352
 2496 022c 001000B0 		.word	-1342173184
 2497 0230 FFFF3FFE 		.word	-29360129
 2498 0234 00000000 		.word	SystemCoreClock
 2499 0238 400D0300 		.word	200000
 2500 023c 004000B8 		.word	-1207943168
 2501 0240 002000B4 		.word	-1275060224
 2502              		.cfi_endproc
 2503              	.LFE319:
 2505              		.section	.text.HAL_ADC_AnalogWDGConfig,"ax",%progbits
ARM GAS  /tmp/ccjg7X18.s 			page 183


 2506              		.align	1
 2507              		.global	HAL_ADC_AnalogWDGConfig
 2508              		.syntax unified
 2509              		.code	16
 2510              		.thumb_func
 2511              		.fpu softvfp
 2513              	HAL_ADC_AnalogWDGConfig:
 2514              	.LVL147:
 2515              	.LFB320:
2408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2516              		.loc 2 2408 1 is_stmt 1 view -0
 2517              		.cfi_startproc
 2518              		@ args = 0, pretend = 0, frame = 8
 2519              		@ frame_needed = 0, uses_anonymous_args = 0
2409:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmpAWDHighThresholdShifted;
 2520              		.loc 2 2409 3 view .LVU687
2410:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tmpAWDLowThresholdShifted;
 2521              		.loc 2 2410 3 view .LVU688
2411:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 2522              		.loc 2 2411 3 view .LVU689
2414:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_NUMBER(AnalogWDGConfig->WatchdogNumber));
 2523              		.loc 2 2414 3 view .LVU690
2415:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG_MODE(AnalogWDGConfig->WatchdogMode));
 2524              		.loc 2 2415 3 view .LVU691
2416:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(AnalogWDGConfig->ITMode));
 2525              		.loc 2 2416 3 view .LVU692
2417:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 2526              		.loc 2 2417 3 view .LVU693
2419:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 2527              		.loc 2 2419 3 view .LVU694
2421:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 2528              		.loc 2 2421 5 view .LVU695
2425:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 2529              		.loc 2 2425 3 view .LVU696
2436:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), AnalogWDGConfig->LowThreshold));
 2530              		.loc 2 2436 5 view .LVU697
2437:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 2531              		.loc 2 2437 5 view .LVU698
2441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 2532              		.loc 2 2441 3 view .LVU699
2441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 2533              		.loc 2 2441 3 view .LVU700
 2534 0000 0300     		movs	r3, r0
2408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2535              		.loc 2 2408 1 is_stmt 0 view .LVU701
 2536 0002 F7B5     		push	{r0, r1, r2, r4, r5, r6, r7, lr}
 2537              	.LCFI11:
 2538              		.cfi_def_cfa_offset 32
 2539              		.cfi_offset 0, -32
 2540              		.cfi_offset 1, -28
 2541              		.cfi_offset 2, -24
 2542              		.cfi_offset 4, -20
 2543              		.cfi_offset 5, -16
 2544              		.cfi_offset 6, -12
 2545              		.cfi_offset 7, -8
 2546              		.cfi_offset 14, -4
2441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
ARM GAS  /tmp/ccjg7X18.s 			page 184


 2547              		.loc 2 2441 3 view .LVU702
 2548 0004 5433     		adds	r3, r3, #84
 2549 0006 0093     		str	r3, [sp]
 2550 0008 1B78     		ldrb	r3, [r3]
2408:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 2551              		.loc 2 2408 1 view .LVU703
 2552 000a 0400     		movs	r4, r0
 2553 000c 0D00     		movs	r5, r1
2441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 2554              		.loc 2 2441 3 view .LVU704
 2555 000e 0220     		movs	r0, #2
 2556              	.LVL148:
2441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 2557              		.loc 2 2441 3 view .LVU705
 2558 0010 012B     		cmp	r3, #1
 2559 0012 5BD0     		beq	.L221
2441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 2560              		.loc 2 2441 3 is_stmt 1 discriminator 2 view .LVU706
 2561 0014 0126     		movs	r6, #1
 2562 0016 009B     		ldr	r3, [sp]
 2563 0018 A44F     		ldr	r7, .L283
 2564 001a 1E70     		strb	r6, [r3]
2441:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 2565              		.loc 2 2441 3 discriminator 2 view .LVU707
2447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 2566              		.loc 2 2447 3 discriminator 2 view .LVU708
2447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 2567              		.loc 2 2447 7 is_stmt 0 discriminator 2 view .LVU709
 2568 001c 2068     		ldr	r0, [r4]
 2569 001e FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 2570              	.LVL149:
2447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 2571              		.loc 2 2447 7 discriminator 2 view .LVU710
 2572 0022 0190     		str	r0, [sp, #4]
2447:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 2573              		.loc 2 2447 6 discriminator 2 view .LVU711
 2574 0024 0028     		cmp	r0, #0
 2575 0026 2ED1     		bne	.L222
2450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2576              		.loc 2 2450 5 is_stmt 1 view .LVU712
 2577 0028 8022     		movs	r2, #128
2450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2578              		.loc 2 2450 23 is_stmt 0 view .LVU713
 2579 002a 2968     		ldr	r1, [r5]
 2580 002c 6B68     		ldr	r3, [r5, #4]
 2581 002e 2068     		ldr	r0, [r4]
 2582 0030 1204     		lsls	r2, r2, #16
2450:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 2583              		.loc 2 2450 7 view .LVU714
 2584 0032 B942     		cmp	r1, r7
 2585 0034 4BD1     		bne	.L223
2455:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2586              		.loc 2 2455 7 is_stmt 1 view .LVU715
 2587 0036 9342     		cmp	r3, r2
 2588 0038 18D0     		beq	.L224
 2589 003a C022     		movs	r2, #192
 2590 003c 1204     		lsls	r2, r2, #16
ARM GAS  /tmp/ccjg7X18.s 			page 185


 2591 003e 9342     		cmp	r3, r2
 2592 0040 1AD1     		bne	.L225
2458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
 2593              		.loc 2 2458 11 view .LVU716
2458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
 2594              		.loc 2 2458 72 is_stmt 0 view .LVU717
 2595 0042 A968     		ldr	r1, [r5, #8]
 2596 0044 9A4A     		ldr	r2, .L283+4
 2597 0046 0A40     		ands	r2, r1
2458:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
 2598              		.loc 2 2458 11 view .LVU718
 2599 0048 1A43     		orrs	r2, r3
 2600 004a 3900     		movs	r1, r7
 2601 004c FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
 2602              	.LVL150:
2459:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 2603              		.loc 2 2459 11 is_stmt 1 view .LVU719
 2604              	.L226:
2471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 2605              		.loc 2 2471 7 view .LVU720
 2606 0050 A36D     		ldr	r3, [r4, #88]
 2607 0052 984A     		ldr	r2, .L283+8
 2608 0054 1340     		ands	r3, r2
 2609              	.LBB210:
 2610              	.LBB211:
4332:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4333:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4334:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
4335:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
4336:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4337:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
4338:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4339:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(ADC_TypeDef *ADCx)
4340:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4341:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
4342:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4343:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4344:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4345:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4346:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
4347:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         all oversampling increased data width (for devices
4348:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         with feature oversampling).
4349:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData32
4350:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4351:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
4352:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4353:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(ADC_TypeDef *ADCx)
4354:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4355:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4356:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4357:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4358:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4359:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4360:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC resolution 12 bits.
4361:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4362:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         can increase data width, function for extended range
4363:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
ARM GAS  /tmp/ccjg7X18.s 			page 186


4364:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData12
4365:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4366:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
4367:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4368:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef *ADCx)
4369:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4370:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4371:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4372:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4373:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4374:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4375:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC resolution 10 bits.
4376:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4377:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         can increase data width, function for extended range
4378:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4379:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData10
4380:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4381:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
4382:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4383:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(ADC_TypeDef *ADCx)
4384:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4385:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4386:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4387:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4388:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4389:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4390:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC resolution 8 bits.
4391:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4392:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         can increase data width, function for extended range
4393:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4394:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData8
4395:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4396:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
4397:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4398:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(ADC_TypeDef *ADCx)
4399:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4400:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4401:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4402:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4403:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4404:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
4405:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         ADC resolution 6 bits.
4406:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
4407:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         can increase data width, function for extended range
4408:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
4409:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll DR       DATA           LL_ADC_REG_ReadConversionData6
4410:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4411:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
4412:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4413:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(ADC_TypeDef *ADCx)
4414:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4415:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_DATA));
4416:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4417:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4418:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4419:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
4420:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
ARM GAS  /tmp/ccjg7X18.s 			page 187


4421:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4422:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_FLAG_Management ADC flag management
4423:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
4424:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4425:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4426:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4427:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC ready.
4428:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4429:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4430:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4431:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_IsActiveFlag_ADRDY
4432:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4433:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4434:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4435:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_ADRDY(ADC_TypeDef *ADCx)
4436:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4437:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_ADRDY) == (LL_ADC_FLAG_ADRDY)) ? 1UL : 0UL);
4438:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4439:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4440:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4441:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC channel configuration ready.
4442:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   Duration of ADC channel configuration ready: CCRDY handshake
4443:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         requires 1APB + 2 ADC + 3 APB cycles after the channel configuration
4444:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         has been changed.
4445:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      CCRDY          LL_ADC_IsActiveFlag_CCRDY
4446:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4447:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4448:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4449:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_CCRDY(ADC_TypeDef *ADCx)
4450:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4451:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_CCRDY) == (LL_ADC_FLAG_CCRDY)) ? 1UL : 0UL);
4452:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4453:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4454:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4455:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of unitary conversion.
4456:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_IsActiveFlag_EOC
4457:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4458:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4459:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4460:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOC(ADC_TypeDef *ADCx)
4461:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4462:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, ADC_ISR_EOC) == (ADC_ISR_EOC)) ? 1UL : 0UL);
4463:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4464:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4465:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4466:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sequence conversions.
4467:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_IsActiveFlag_EOS
4468:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4469:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4470:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4471:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOS(ADC_TypeDef *ADCx)
4472:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4473:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOS) == (LL_ADC_FLAG_EOS)) ? 1UL : 0UL);
4474:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4475:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4476:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4477:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC group regular overrun.
ARM GAS  /tmp/ccjg7X18.s 			page 188


4478:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_IsActiveFlag_OVR
4479:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4480:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4481:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4482:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_OVR(ADC_TypeDef *ADCx)
4483:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4484:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_OVR) == (LL_ADC_FLAG_OVR)) ? 1UL : 0UL);
4485:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4486:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4487:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4488:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC group regular end of sampling phase.
4489:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_IsActiveFlag_EOSMP
4490:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4491:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4492:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4493:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOSMP(ADC_TypeDef *ADCx)
4494:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4495:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOSMP) == (LL_ADC_FLAG_EOSMP)) ? 1UL : 0UL);
4496:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4497:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4498:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4499:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 1 flag
4500:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_IsActiveFlag_AWD1
4501:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4502:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4503:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4504:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD1(ADC_TypeDef *ADCx)
4505:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4506:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD1) == (LL_ADC_FLAG_AWD1)) ? 1UL : 0UL);
4507:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4508:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4509:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4510:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 2.
4511:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_IsActiveFlag_AWD2
4512:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4513:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4514:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4515:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD2(ADC_TypeDef *ADCx)
4516:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4517:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD2) == (LL_ADC_FLAG_AWD2)) ? 1UL : 0UL);
4518:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4519:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4520:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4521:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC analog watchdog 3.
4522:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_IsActiveFlag_AWD3
4523:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4524:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4525:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4526:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_AWD3(ADC_TypeDef *ADCx)
4527:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4528:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_AWD3) == (LL_ADC_FLAG_AWD3)) ? 1UL : 0UL);
4529:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4530:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4531:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4532:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Get flag ADC end of calibration.
4533:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      EOCAL          LL_ADC_IsActiveFlag_EOCAL
4534:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  /tmp/ccjg7X18.s 			page 189


4535:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4536:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4537:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsActiveFlag_EOCAL(ADC_TypeDef *ADCx)
4538:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4539:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   return ((READ_BIT(ADCx->ISR, LL_ADC_FLAG_EOCAL) == (LL_ADC_FLAG_EOCAL)) ? 1UL : 0UL);
4540:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4541:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4542:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4543:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC ready.
4544:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @note   On this STM32 serie, flag LL_ADC_FLAG_ADRDY is raised when the ADC
4545:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
4546:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
4547:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      ADRDY          LL_ADC_ClearFlag_ADRDY
4548:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4549:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4550:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4551:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_ADRDY(ADC_TypeDef *ADCx)
4552:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4553:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_ADRDY);
4554:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4555:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4556:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4557:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC channel configuration ready.
4558:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      CCRDY          LL_ADC_ClearFlag_CCRDY
4559:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4560:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4561:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4562:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_CCRDY(ADC_TypeDef *ADCx)
4563:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4564:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_CCRDY);
4565:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4566:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4567:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4568:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of unitary conversion.
4569:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      EOC            LL_ADC_ClearFlag_EOC
4570:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4571:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4572:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4573:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOC(ADC_TypeDef *ADCx)
4574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4575:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOC);
4576:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4577:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4578:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4579:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sequence conversions.
4580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      EOS            LL_ADC_ClearFlag_EOS
4581:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4583:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOS(ADC_TypeDef *ADCx)
4585:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4586:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOS);
4587:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4588:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4589:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4590:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular overrun.
4591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      OVR            LL_ADC_ClearFlag_OVR
ARM GAS  /tmp/ccjg7X18.s 			page 190


4592:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4593:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4595:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_OVR(ADC_TypeDef *ADCx)
4596:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4597:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_OVR);
4598:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4599:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4600:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4601:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC group regular end of sampling phase.
4602:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      EOSMP          LL_ADC_ClearFlag_EOSMP
4603:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4604:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4605:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4606:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOSMP(ADC_TypeDef *ADCx)
4607:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4608:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOSMP);
4609:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4610:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4611:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4612:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 1.
4613:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      AWD1           LL_ADC_ClearFlag_AWD1
4614:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4615:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4616:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD1(ADC_TypeDef *ADCx)
4618:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4619:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD1);
 2611              		.loc 1 4619 3 is_stmt 0 view .LVU721
 2612 0056 8022     		movs	r2, #128
 2613              	.LBE211:
 2614              	.LBE210:
2471:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 2615              		.loc 2 2471 7 view .LVU722
 2616 0058 A365     		str	r3, [r4, #88]
2477:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 2617              		.loc 2 2477 7 is_stmt 1 view .LVU723
 2618 005a 2368     		ldr	r3, [r4]
 2619              	.LVL151:
 2620              	.LBB213:
 2621              	.LBI210:
4617:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2622              		.loc 1 4617 22 view .LVU724
 2623              	.LBB212:
 2624              		.loc 1 4619 3 view .LVU725
 2625 005c 1A60     		str	r2, [r3]
 2626              	.LVL152:
 2627              		.loc 1 4619 3 is_stmt 0 view .LVU726
 2628              	.LBE212:
 2629              	.LBE213:
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2630              		.loc 2 2480 7 is_stmt 1 view .LVU727
2480:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2631              		.loc 2 2480 9 is_stmt 0 view .LVU728
 2632 005e 297B     		ldrb	r1, [r5, #12]
 2633 0060 0129     		cmp	r1, #1
 2634 0062 0DD1     		bne	.L227
ARM GAS  /tmp/ccjg7X18.s 			page 191


 2635              	.L282:
2552:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 2636              		.loc 2 2552 11 is_stmt 1 view .LVU729
 2637              	.LVL153:
 2638              	.LBB214:
 2639              	.LBI214:
4620:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4621:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4622:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4623:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 2.
4624:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      AWD2           LL_ADC_ClearFlag_AWD2
4625:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4626:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4627:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD2(ADC_TypeDef *ADCx)
4629:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD2);
4631:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4632:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4633:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4634:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC analog watchdog 3.
4635:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      AWD3           LL_ADC_ClearFlag_AWD3
4636:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4637:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4638:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_AWD3(ADC_TypeDef *ADCx)
4640:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_AWD3);
4642:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4643:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4644:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4645:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Clear flag ADC end of calibration.
4646:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll ISR      EOCAL          LL_ADC_ClearFlag_EOCAL
4647:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4648:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4649:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4650:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ClearFlag_EOCAL(ADC_TypeDef *ADCx)
4651:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4652:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   WRITE_REG(ADCx->ISR, LL_ADC_FLAG_EOCAL);
4653:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4654:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4655:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4656:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @}
4657:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4658:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4659:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /** @defgroup ADC_LL_EF_IT_Management ADC IT management
4660:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @{
4661:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4662:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4663:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4664:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable ADC ready.
4665:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_ADRDY
4666:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4667:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4668:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4669:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_ADRDY(ADC_TypeDef *ADCx)
4670:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
ARM GAS  /tmp/ccjg7X18.s 			page 192


4671:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
4672:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4673:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4674:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4675:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable interruption ADC channel configuration ready.
4676:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_EnableIT_CCRDY
4677:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4678:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4679:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4680:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_CCRDY(ADC_TypeDef *ADCx)
4681:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4682:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_FLAG_CCRDY);
4683:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4684:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4685:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4686:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of unitary conversion.
4687:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_EnableIT_EOC
4688:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4689:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4690:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4691:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOC(ADC_TypeDef *ADCx)
4692:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4693:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOC);
4694:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4695:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4696:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4697:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sequence conversions.
4698:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_EnableIT_EOS
4699:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4700:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4701:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4702:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOS(ADC_TypeDef *ADCx)
4703:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4704:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOS);
4705:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4706:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4707:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4708:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable ADC group regular interruption overrun.
4709:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_EnableIT_OVR
4710:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4711:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4712:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4713:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_OVR(ADC_TypeDef *ADCx)
4714:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4715:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_OVR);
4716:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4717:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4718:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4719:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable interruption ADC group regular end of sampling.
4720:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_EnableIT_EOSMP
4721:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4722:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4723:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4724:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOSMP(ADC_TypeDef *ADCx)
4725:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4726:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
4727:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
ARM GAS  /tmp/ccjg7X18.s 			page 193


4728:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4729:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4730:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 1.
4731:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_EnableIT_AWD1
4732:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4733:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4734:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4735:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD1(ADC_TypeDef *ADCx)
4736:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4737:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD1);
4738:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4739:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4740:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4741:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 2.
4742:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_EnableIT_AWD2
4743:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4744:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4745:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4746:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD2(ADC_TypeDef *ADCx)
4747:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4748:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD2);
4749:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4750:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4751:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4752:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable interruption ADC analog watchdog 3.
4753:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_EnableIT_AWD3
4754:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4755:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4756:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4757:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_AWD3(ADC_TypeDef *ADCx)
 2640              		.loc 1 4757 22 view .LVU730
 2641              	.LBB215:
4758:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4759:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_AWD3);
 2642              		.loc 1 4759 3 view .LVU731
 2643 0064 5968     		ldr	r1, [r3, #4]
 2644 0066 0A43     		orrs	r2, r1
 2645              	.LVL154:
 2646              	.L280:
 2647              		.loc 1 4759 3 is_stmt 0 view .LVU732
 2648              	.LBE215:
 2649              	.LBE214:
 2650              	.LBB216:
 2651              	.LBB217:
4760:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4761:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4762:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4763:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Enable interruption ADC end of calibration.
4764:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      EOCALIE        LL_ADC_EnableIT_EOCAL
4765:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4766:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4767:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4768:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableIT_EOCAL(ADC_TypeDef *ADCx)
4769:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4770:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   SET_BIT(ADCx->IER, LL_ADC_IT_EOCAL);
4771:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4772:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
ARM GAS  /tmp/ccjg7X18.s 			page 194


4773:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4774:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC ready.
4775:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_DisableIT_ADRDY
4776:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4777:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4778:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4779:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_ADRDY(ADC_TypeDef *ADCx)
4780:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4781:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_ADRDY);
4782:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4783:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4784:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4785:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC channel configuration ready.
4786:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      ADRDYIE        LL_ADC_DisableIT_CCRDY
4787:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4788:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval State of bit (1 or 0).
4789:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4790:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_CCRDY(ADC_TypeDef *ADCx)
4791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4792:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_FLAG_CCRDY);
4793:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4794:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4795:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4796:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of unitary conversion.
4797:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      EOCIE          LL_ADC_DisableIT_EOC
4798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4799:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4801:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOC(ADC_TypeDef *ADCx)
4802:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4803:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOC);
4804:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4805:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4806:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4807:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sequence conversions.
4808:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      EOSIE          LL_ADC_DisableIT_EOS
4809:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4810:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4811:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4812:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOS(ADC_TypeDef *ADCx)
4813:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4814:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOS);
4815:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4816:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4817:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4818:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular overrun.
4819:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      OVRIE          LL_ADC_DisableIT_OVR
4820:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4821:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4822:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4823:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_OVR(ADC_TypeDef *ADCx)
4824:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4825:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_OVR);
4826:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4827:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4828:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4829:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC group regular end of sampling.
ARM GAS  /tmp/ccjg7X18.s 			page 195


4830:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      EOSMPIE        LL_ADC_DisableIT_EOSMP
4831:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4832:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4833:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4834:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_EOSMP(ADC_TypeDef *ADCx)
4835:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4836:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_EOSMP);
4837:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4838:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4839:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4840:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 1.
4841:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      AWD1IE         LL_ADC_DisableIT_AWD1
4842:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4843:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4844:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD1(ADC_TypeDef *ADCx)
4846:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD1);
4848:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4849:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4850:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4851:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 2.
4852:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      AWD2IE         LL_ADC_DisableIT_AWD2
4853:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4854:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4855:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD2(ADC_TypeDef *ADCx)
4857:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD2);
4859:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
4860:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
4861:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** /**
4862:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @brief  Disable interruption ADC analog watchdog 3.
4863:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @rmtoll IER      AWD3IE         LL_ADC_DisableIT_AWD3
4864:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @param  ADCx ADC instance
4865:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   * @retval None
4866:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   */
4867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableIT_AWD3(ADC_TypeDef *ADCx)
4868:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
4869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   CLEAR_BIT(ADCx->IER, LL_ADC_IT_AWD3);
 2652              		.loc 1 4869 3 view .LVU733
 2653 0068 5A60     		str	r2, [r3, #4]
4870:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2654              		.loc 1 4870 1 view .LVU734
 2655 006a 0CE0     		b	.L222
 2656              	.L224:
 2657              	.LBE217:
 2658              	.LBE216:
2462:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
 2659              		.loc 2 2462 11 is_stmt 1 view .LVU735
 2660              	.LVL155:
 2661              	.LBB220:
 2662              	.LBI220:
3574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2663              		.loc 1 3574 22 view .LVU736
 2664              	.LBB221:
3580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   
ARM GAS  /tmp/ccjg7X18.s 			page 196


 2665              		.loc 1 3580 3 view .LVU737
3582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   {
 2666              		.loc 1 3582 3 view .LVU738
3584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
 2667              		.loc 1 3584 5 view .LVU739
3591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 2668              		.loc 1 3591 3 view .LVU740
 2669 006c C268     		ldr	r2, [r0, #12]
 2670 006e 9249     		ldr	r1, .L283+12
 2671 0070 0A40     		ands	r2, r1
 2672 0072 1343     		orrs	r3, r2
 2673              	.LVL156:
 2674              	.L278:
3591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 2675              		.loc 1 3591 3 is_stmt 0 view .LVU741
 2676              	.LBE221:
 2677              	.LBE220:
 2678              	.LBB222:
 2679              	.LBB223:
 2680 0074 C360     		str	r3, [r0, #12]
3594:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** 
 2681              		.loc 1 3594 1 view .LVU742
 2682 0076 EBE7     		b	.L226
 2683              	.L225:
 2684              	.LBE223:
 2685              	.LBE222:
2466:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
 2686              		.loc 2 2466 11 is_stmt 1 view .LVU743
 2687              	.LVL157:
 2688              	.LBB225:
 2689              	.LBI222:
3574:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2690              		.loc 1 3574 22 view .LVU744
 2691              	.LBB224:
3580:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   
 2692              		.loc 1 3580 3 view .LVU745
3582:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   {
 2693              		.loc 1 3582 3 view .LVU746
3584:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   }
 2694              		.loc 1 3584 5 view .LVU747
3591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 2695              		.loc 1 3591 3 view .LVU748
 2696 0078 C368     		ldr	r3, [r0, #12]
 2697 007a 8F4A     		ldr	r2, .L283+12
 2698 007c 1340     		ands	r3, r2
 2699 007e F9E7     		b	.L278
 2700              	.LVL158:
 2701              	.L227:
3591:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
 2702              		.loc 1 3591 3 is_stmt 0 view .LVU749
 2703              	.LBE224:
 2704              	.LBE225:
2486:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 2705              		.loc 2 2486 9 is_stmt 1 view .LVU750
 2706              	.LBB226:
 2707              	.LBI226:
4845:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
ARM GAS  /tmp/ccjg7X18.s 			page 197


 2708              		.loc 1 4845 22 view .LVU751
 2709              	.LBB227:
4847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2710              		.loc 1 4847 3 view .LVU752
 2711 0080 5968     		ldr	r1, [r3, #4]
 2712 0082 9143     		bics	r1, r2
 2713 0084 5960     		str	r1, [r3, #4]
 2714              	.LVL159:
 2715              	.L222:
4847:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2716              		.loc 1 4847 3 is_stmt 0 view .LVU753
 2717              	.LBE227:
 2718              	.LBE226:
2564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 2719              		.loc 2 2564 3 is_stmt 1 view .LVU754
2564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 2720              		.loc 2 2564 21 is_stmt 0 view .LVU755
 2721 0086 2E68     		ldr	r6, [r5]
 2722 0088 2268     		ldr	r2, [r4]
 2723 008a 2969     		ldr	r1, [r5, #16]
 2724 008c 6869     		ldr	r0, [r5, #20]
2564:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 2725              		.loc 2 2564 5 view .LVU756
 2726 008e BE42     		cmp	r6, r7
 2727 0090 0AD1     		bne	.L240
2569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
 2728              		.loc 2 2569 5 is_stmt 1 view .LVU757
2569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
 2729              		.loc 2 2569 34 is_stmt 0 view .LVU758
 2730 0092 0325     		movs	r5, #3
 2731              	.LVL160:
2569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
 2732              		.loc 2 2569 34 view .LVU759
 2733 0094 D468     		ldr	r4, [r2, #12]
 2734              	.LVL161:
2570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 2735              		.loc 2 2570 34 view .LVU760
 2736 0096 D368     		ldr	r3, [r2, #12]
2569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
 2737              		.loc 2 2569 34 view .LVU761
 2738 0098 E408     		lsrs	r4, r4, #3
2570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 2739              		.loc 2 2570 34 view .LVU762
 2740 009a EB40     		lsrs	r3, r3, r5
2569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
 2741              		.loc 2 2569 34 view .LVU763
 2742 009c 2C40     		ands	r4, r5
2570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 2743              		.loc 2 2570 34 view .LVU764
 2744 009e 2B40     		ands	r3, r5
2569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
 2745              		.loc 2 2569 34 view .LVU765
 2746 00a0 6400     		lsls	r4, r4, #1
2570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 2747              		.loc 2 2570 34 view .LVU766
 2748 00a2 5B00     		lsls	r3, r3, #1
2569:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     tmpAWDLowThresholdShifted  = ADC_AWD1THRESHOLD_SHIFT_RESOLUTION(hadc, AnalogWDGConfig->LowThres
ARM GAS  /tmp/ccjg7X18.s 			page 198


 2749              		.loc 2 2569 32 view .LVU767
 2750 00a4 A140     		lsls	r1, r1, r4
 2751              	.LVL162:
2570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 2752              		.loc 2 2570 5 is_stmt 1 view .LVU768
2570:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 2753              		.loc 2 2570 32 is_stmt 0 view .LVU769
 2754 00a6 9840     		lsls	r0, r0, r3
 2755              	.LVL163:
 2756              	.L240:
2583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 2757              		.loc 2 2583 3 is_stmt 1 view .LVU770
 2758              	.LBB228:
 2759              	.LBI228:
3791:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2760              		.loc 1 3791 22 view .LVU771
 2761              	.LBB229:
3798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   
 2762              		.loc 1 3798 3 view .LVU772
3798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   
 2763              		.loc 1 3798 34 is_stmt 0 view .LVU773
 2764 00a8 B302     		lsls	r3, r6, #10
 2765 00aa B602     		lsls	r6, r6, #10
 2766              	.LVL164:
3798:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****   
 2767              		.loc 1 3798 34 view .LVU774
 2768 00ac 9B0F     		lsrs	r3, r3, #30
 2769 00ae F60F     		lsrs	r6, r6, #31
 2770 00b0 9B19     		adds	r3, r3, r6
 2771 00b2 2032     		adds	r2, r2, #32
 2772 00b4 9B00     		lsls	r3, r3, #2
 2773 00b6 9B18     		adds	r3, r3, r2
 2774              	.LVL165:
3800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 2775              		.loc 1 3800 3 is_stmt 1 view .LVU775
 2776 00b8 1A68     		ldr	r2, [r3]
 2777 00ba 804C     		ldr	r4, .L283+16
 2778 00bc 0904     		lsls	r1, r1, #16
 2779              	.LVL166:
3800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 2780              		.loc 1 3800 3 is_stmt 0 view .LVU776
 2781 00be 2240     		ands	r2, r4
 2782 00c0 0243     		orrs	r2, r0
 2783              	.LBE229:
 2784              	.LBE228:
2586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 2785              		.loc 2 2586 3 view .LVU777
 2786 00c2 0020     		movs	r0, #0
 2787              	.LVL167:
 2788              	.LBB231:
 2789              	.LBB230:
3800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
 2790              		.loc 1 3800 3 view .LVU778
 2791 00c4 0A43     		orrs	r2, r1
 2792 00c6 1A60     		str	r2, [r3]
 2793              	.LVL168:
3800:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
ARM GAS  /tmp/ccjg7X18.s 			page 199


 2794              		.loc 1 3800 3 view .LVU779
 2795              	.LBE230:
 2796              	.LBE231:
2586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 2797              		.loc 2 2586 3 is_stmt 1 view .LVU780
2586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 2798              		.loc 2 2586 3 view .LVU781
 2799 00c8 009B     		ldr	r3, [sp]
 2800 00ca 1870     		strb	r0, [r3]
2586:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 2801              		.loc 2 2586 3 view .LVU782
2589:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 2802              		.loc 2 2589 3 view .LVU783
 2803              	.L221:
2590:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 2804              		.loc 2 2590 1 is_stmt 0 view .LVU784
 2805              		@ sp needed
 2806 00cc FEBD     		pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 2807              	.LVL169:
 2808              	.L223:
2492:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2809              		.loc 2 2492 7 is_stmt 1 view .LVU785
 2810 00ce 9342     		cmp	r3, r2
 2811 00d0 00D1     		bne	.LCB2624
 2812 00d2 DFE0     		b	.L228	@long jump
 2813              	.LCB2624:
 2814 00d4 C022     		movs	r2, #192
 2815 00d6 1204     		lsls	r2, r2, #16
 2816 00d8 9342     		cmp	r3, r2
 2817 00da 00D0     		beq	.LCB2628
 2818 00dc E3E0     		b	.L229	@long jump
 2819              	.LCB2628:
2497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
 2820              		.loc 2 2497 11 view .LVU786
 2821 00de AB68     		ldr	r3, [r5, #8]
 2822 00e0 5A03     		lsls	r2, r3, #13
 2823 00e2 520B     		lsrs	r2, r2, #13
 2824 00e4 9446     		mov	ip, r2
2497:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           {
 2825              		.loc 2 2497 14 is_stmt 0 view .LVU787
 2826 00e6 764A     		ldr	r2, .L283+20
 2827 00e8 9142     		cmp	r1, r2
 2828 00ea 69D1     		bne	.L230
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2829              		.loc 2 2499 13 is_stmt 1 view .LVU788
 2830 00ec 6246     		mov	r2, ip
 2831 00ee A030     		adds	r0, r0, #160
 2832 00f0 0168     		ldr	r1, [r0]
 2833 00f2 002A     		cmp	r2, #0
 2834 00f4 14D1     		bne	.L231
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2835              		.loc 2 2499 13 is_stmt 0 discriminator 1 view .LVU789
 2836 00f6 3200     		movs	r2, r6
 2837 00f8 5B00     		lsls	r3, r3, #1
 2838 00fa DB0E     		lsrs	r3, r3, #27
 2839 00fc 9A40     		lsls	r2, r2, r3
 2840              	.L232:
ARM GAS  /tmp/ccjg7X18.s 			page 200


2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2841              		.loc 2 2499 13 discriminator 80 view .LVU790
 2842 00fe 0A43     		orrs	r2, r1
 2843 0100 0260     		str	r2, [r0]
2516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 2844              		.loc 2 2516 7 is_stmt 1 discriminator 80 view .LVU791
 2845              	.L233:
2519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 2846              		.loc 2 2519 9 view .LVU792
 2847 0102 A36D     		ldr	r3, [r4, #88]
 2848 0104 6F4A     		ldr	r2, .L283+24
 2849 0106 1340     		ands	r3, r2
 2850              	.LBB232:
 2851              	.LBB233:
4630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2852              		.loc 1 4630 3 is_stmt 0 view .LVU793
 2853 0108 8022     		movs	r2, #128
 2854              	.LBE233:
 2855              	.LBE232:
2519:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 2856              		.loc 2 2519 9 view .LVU794
 2857 010a A365     		str	r3, [r4, #88]
2525:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 2858              		.loc 2 2525 9 is_stmt 1 view .LVU795
 2859 010c 2368     		ldr	r3, [r4]
 2860              	.LVL170:
 2861              	.LBB235:
 2862              	.LBI232:
4628:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2863              		.loc 1 4628 22 view .LVU796
 2864              	.LBB234:
4630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2865              		.loc 1 4630 3 view .LVU797
 2866 010e 5200     		lsls	r2, r2, #1
 2867 0110 1A60     		str	r2, [r3]
 2868              	.LVL171:
4630:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2869              		.loc 1 4630 3 is_stmt 0 view .LVU798
 2870              	.LBE234:
 2871              	.LBE235:
2528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2872              		.loc 2 2528 9 is_stmt 1 view .LVU799
2528:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 2873              		.loc 2 2528 11 is_stmt 0 view .LVU800
 2874 0112 297B     		ldrb	r1, [r5, #12]
 2875 0114 0129     		cmp	r1, #1
 2876 0116 A5D0     		beq	.L282
2534:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 2877              		.loc 2 2534 11 is_stmt 1 view .LVU801
 2878              	.LVL172:
 2879              	.LBB236:
 2880              	.LBI236:
4856:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 2881              		.loc 1 4856 22 view .LVU802
 2882              	.LBB237:
4858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2883              		.loc 1 4858 3 view .LVU803
ARM GAS  /tmp/ccjg7X18.s 			page 201


 2884 0118 5A68     		ldr	r2, [r3, #4]
 2885 011a 6B49     		ldr	r1, .L283+28
 2886              	.LVL173:
 2887              	.L281:
4858:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2888              		.loc 1 4858 3 is_stmt 0 view .LVU804
 2889              	.LBE237:
 2890              	.LBE236:
 2891              	.LBB238:
 2892              	.LBB218:
4869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2893              		.loc 1 4869 3 view .LVU805
 2894 011c 0A40     		ands	r2, r1
 2895 011e A3E7     		b	.L280
 2896              	.L231:
4869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 2897              		.loc 1 4869 3 view .LVU806
 2898              	.LBE218:
 2899              	.LBE238:
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2900              		.loc 2 2499 13 discriminator 2 view .LVU807
 2901 0120 1A00     		movs	r2, r3
 2902 0122 3240     		ands	r2, r6
 2903 0124 3342     		tst	r3, r6
 2904 0126 EAD1     		bne	.L232
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2905              		.loc 2 2499 13 discriminator 4 view .LVU808
 2906 0128 0222     		movs	r2, #2
 2907 012a 1342     		tst	r3, r2
 2908 012c E7D1     		bne	.L232
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2909              		.loc 2 2499 13 discriminator 6 view .LVU809
 2910 012e 9218     		adds	r2, r2, r2
 2911 0130 1342     		tst	r3, r2
 2912 0132 E4D1     		bne	.L232
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2913              		.loc 2 2499 13 discriminator 8 view .LVU810
 2914 0134 0432     		adds	r2, r2, #4
 2915 0136 1342     		tst	r3, r2
 2916 0138 E1D1     		bne	.L232
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2917              		.loc 2 2499 13 discriminator 10 view .LVU811
 2918 013a 0832     		adds	r2, r2, #8
 2919 013c 1342     		tst	r3, r2
 2920 013e DED1     		bne	.L232
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2921              		.loc 2 2499 13 discriminator 12 view .LVU812
 2922 0140 1032     		adds	r2, r2, #16
 2923 0142 1342     		tst	r3, r2
 2924 0144 DBD1     		bne	.L232
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2925              		.loc 2 2499 13 discriminator 14 view .LVU813
 2926 0146 2032     		adds	r2, r2, #32
 2927 0148 1342     		tst	r3, r2
 2928 014a D8D1     		bne	.L232
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2929              		.loc 2 2499 13 discriminator 16 view .LVU814
ARM GAS  /tmp/ccjg7X18.s 			page 202


 2930 014c 4032     		adds	r2, r2, #64
 2931 014e 1342     		tst	r3, r2
 2932 0150 D5D1     		bne	.L232
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2933              		.loc 2 2499 13 discriminator 18 view .LVU815
 2934 0152 8026     		movs	r6, #128
 2935 0154 7600     		lsls	r6, r6, #1
 2936 0156 3200     		movs	r2, r6
 2937 0158 3342     		tst	r3, r6
 2938 015a D0D1     		bne	.L232
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2939              		.loc 2 2499 13 discriminator 20 view .LVU816
 2940 015c B619     		adds	r6, r6, r6
 2941 015e 3200     		movs	r2, r6
 2942 0160 3342     		tst	r3, r6
 2943 0162 CCD1     		bne	.L232
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2944              		.loc 2 2499 13 discriminator 22 view .LVU817
 2945 0164 8026     		movs	r6, #128
 2946 0166 F600     		lsls	r6, r6, #3
 2947 0168 3200     		movs	r2, r6
 2948 016a 3342     		tst	r3, r6
 2949 016c C7D1     		bne	.L232
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2950              		.loc 2 2499 13 discriminator 24 view .LVU818
 2951 016e 8026     		movs	r6, #128
 2952 0170 3601     		lsls	r6, r6, #4
 2953 0172 3200     		movs	r2, r6
 2954 0174 3342     		tst	r3, r6
 2955 0176 C2D1     		bne	.L232
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2956              		.loc 2 2499 13 discriminator 26 view .LVU819
 2957 0178 DA04     		lsls	r2, r3, #19
 2958 017a 1ED4     		bmi	.L253
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2959              		.loc 2 2499 13 discriminator 28 view .LVU820
 2960 017c 8026     		movs	r6, #128
 2961 017e B601     		lsls	r6, r6, #6
 2962 0180 3200     		movs	r2, r6
 2963 0182 3342     		tst	r3, r6
 2964 0184 BBD1     		bne	.L232
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2965              		.loc 2 2499 13 discriminator 30 view .LVU821
 2966 0186 8026     		movs	r6, #128
 2967 0188 F601     		lsls	r6, r6, #7
 2968 018a 3200     		movs	r2, r6
 2969 018c 3342     		tst	r3, r6
 2970 018e B6D1     		bne	.L232
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2971              		.loc 2 2499 13 discriminator 32 view .LVU822
 2972 0190 8026     		movs	r6, #128
 2973 0192 3602     		lsls	r6, r6, #8
 2974 0194 3200     		movs	r2, r6
 2975 0196 3342     		tst	r3, r6
 2976 0198 B1D1     		bne	.L232
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2977              		.loc 2 2499 13 discriminator 34 view .LVU823
ARM GAS  /tmp/ccjg7X18.s 			page 203


 2978 019a 8026     		movs	r6, #128
 2979 019c 7602     		lsls	r6, r6, #9
 2980 019e 3200     		movs	r2, r6
 2981 01a0 3342     		tst	r3, r6
 2982 01a2 ACD1     		bne	.L232
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2983              		.loc 2 2499 13 discriminator 36 view .LVU824
 2984 01a4 8026     		movs	r6, #128
 2985 01a6 B602     		lsls	r6, r6, #10
 2986 01a8 3200     		movs	r2, r6
 2987 01aa 3342     		tst	r3, r6
 2988 01ac A7D1     		bne	.L232
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2989              		.loc 2 2499 13 discriminator 38 view .LVU825
 2990 01ae 5A03     		lsls	r2, r3, #13
 2991 01b0 D217     		asrs	r2, r2, #31
 2992 01b2 9203     		lsls	r2, r2, #14
 2993 01b4 920B     		lsrs	r2, r2, #14
 2994 01b6 0132     		adds	r2, r2, #1
 2995 01b8 A1E7     		b	.L232
 2996              	.L253:
2499:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 2997              		.loc 2 2499 13 view .LVU826
 2998 01ba 8022     		movs	r2, #128
 2999 01bc 5201     		lsls	r2, r2, #5
 3000 01be 9EE7     		b	.L232
 3001              	.L230:
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 3002              		.loc 2 2503 13 is_stmt 1 view .LVU827
 3003 01c0 6146     		mov	r1, ip
 3004 01c2 A430     		adds	r0, r0, #164
 3005 01c4 0268     		ldr	r2, [r0]
 3006 01c6 0029     		cmp	r1, #0
 3007 01c8 14D1     		bne	.L234
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 3008              		.loc 2 2503 13 is_stmt 0 discriminator 1 view .LVU828
 3009 01ca 3100     		movs	r1, r6
 3010 01cc 5B00     		lsls	r3, r3, #1
 3011 01ce DB0E     		lsrs	r3, r3, #27
 3012 01d0 9940     		lsls	r1, r1, r3
 3013              	.L235:
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 3014              		.loc 2 2503 13 discriminator 80 view .LVU829
 3015 01d2 0A43     		orrs	r2, r1
 3016 01d4 0260     		str	r2, [r0]
2516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3017              		.loc 2 2516 7 is_stmt 1 discriminator 80 view .LVU830
 3018              	.L236:
2541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 3019              		.loc 2 2541 9 view .LVU831
 3020 01d6 A36D     		ldr	r3, [r4, #88]
 3021 01d8 3C4A     		ldr	r2, .L283+32
 3022 01da 1340     		ands	r3, r2
 3023              	.LBB239:
 3024              	.LBB240:
4641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3025              		.loc 1 4641 3 is_stmt 0 view .LVU832
ARM GAS  /tmp/ccjg7X18.s 			page 204


 3026 01dc 8022     		movs	r2, #128
 3027              	.LBE240:
 3028              	.LBE239:
2541:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 3029              		.loc 2 2541 9 view .LVU833
 3030 01de A365     		str	r3, [r4, #88]
2547:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 3031              		.loc 2 2547 9 is_stmt 1 view .LVU834
 3032 01e0 2368     		ldr	r3, [r4]
 3033              	.LVL174:
 3034              	.LBB242:
 3035              	.LBI239:
4639:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3036              		.loc 1 4639 22 view .LVU835
 3037              	.LBB241:
4641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3038              		.loc 1 4641 3 view .LVU836
 3039 01e2 9200     		lsls	r2, r2, #2
 3040 01e4 1A60     		str	r2, [r3]
 3041              	.LVL175:
4641:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3042              		.loc 1 4641 3 is_stmt 0 view .LVU837
 3043              	.LBE241:
 3044              	.LBE242:
2550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 3045              		.loc 2 2550 9 is_stmt 1 view .LVU838
2550:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 3046              		.loc 2 2550 11 is_stmt 0 view .LVU839
 3047 01e6 297B     		ldrb	r1, [r5, #12]
 3048 01e8 0129     		cmp	r1, #1
 3049 01ea 00D1     		bne	.LCB2857
 3050 01ec 3AE7     		b	.L282	@long jump
 3051              	.LCB2857:
2556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 3052              		.loc 2 2556 11 is_stmt 1 view .LVU840
 3053              	.LVL176:
 3054              	.LBB243:
 3055              	.LBI216:
4867:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3056              		.loc 1 4867 22 view .LVU841
 3057              	.LBB219:
4869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3058              		.loc 1 4869 3 view .LVU842
 3059 01ee 5A68     		ldr	r2, [r3, #4]
 3060 01f0 3749     		ldr	r1, .L283+36
 3061 01f2 93E7     		b	.L281
 3062              	.LVL177:
 3063              	.L234:
4869:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3064              		.loc 1 4869 3 is_stmt 0 view .LVU843
 3065              	.LBE219:
 3066              	.LBE243:
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 3067              		.loc 2 2503 13 discriminator 2 view .LVU844
 3068 01f4 1900     		movs	r1, r3
 3069 01f6 3140     		ands	r1, r6
 3070 01f8 3342     		tst	r3, r6
ARM GAS  /tmp/ccjg7X18.s 			page 205


 3071 01fa EAD1     		bne	.L235
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 3072              		.loc 2 2503 13 discriminator 4 view .LVU845
 3073 01fc 0221     		movs	r1, #2
 3074 01fe 0B42     		tst	r3, r1
 3075 0200 E7D1     		bne	.L235
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 3076              		.loc 2 2503 13 discriminator 6 view .LVU846
 3077 0202 4918     		adds	r1, r1, r1
 3078 0204 0B42     		tst	r3, r1
 3079 0206 E4D1     		bne	.L235
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 3080              		.loc 2 2503 13 discriminator 8 view .LVU847
 3081 0208 0431     		adds	r1, r1, #4
 3082 020a 0B42     		tst	r3, r1
 3083 020c E1D1     		bne	.L235
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 3084              		.loc 2 2503 13 discriminator 10 view .LVU848
 3085 020e 0831     		adds	r1, r1, #8
 3086 0210 0B42     		tst	r3, r1
 3087 0212 DED1     		bne	.L235
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 3088              		.loc 2 2503 13 discriminator 12 view .LVU849
 3089 0214 1031     		adds	r1, r1, #16
 3090 0216 0B42     		tst	r3, r1
 3091 0218 DBD1     		bne	.L235
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 3092              		.loc 2 2503 13 discriminator 14 view .LVU850
 3093 021a 2031     		adds	r1, r1, #32
 3094 021c 0B42     		tst	r3, r1
 3095 021e D8D1     		bne	.L235
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 3096              		.loc 2 2503 13 discriminator 16 view .LVU851
 3097 0220 4031     		adds	r1, r1, #64
 3098 0222 0B42     		tst	r3, r1
 3099 0224 D5D1     		bne	.L235
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 3100              		.loc 2 2503 13 discriminator 18 view .LVU852
 3101 0226 8026     		movs	r6, #128
 3102 0228 7600     		lsls	r6, r6, #1
 3103 022a 3100     		movs	r1, r6
 3104 022c 3342     		tst	r3, r6
 3105 022e D0D1     		bne	.L235
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 3106              		.loc 2 2503 13 discriminator 20 view .LVU853
 3107 0230 B619     		adds	r6, r6, r6
 3108 0232 3100     		movs	r1, r6
 3109 0234 3342     		tst	r3, r6
 3110 0236 CCD1     		bne	.L235
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 3111              		.loc 2 2503 13 discriminator 22 view .LVU854
 3112 0238 8026     		movs	r6, #128
 3113 023a F600     		lsls	r6, r6, #3
 3114 023c 3100     		movs	r1, r6
 3115 023e 3342     		tst	r3, r6
 3116 0240 C7D1     		bne	.L235
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
ARM GAS  /tmp/ccjg7X18.s 			page 206


 3117              		.loc 2 2503 13 discriminator 24 view .LVU855
 3118 0242 8026     		movs	r6, #128
 3119 0244 3601     		lsls	r6, r6, #4
 3120 0246 3100     		movs	r1, r6
 3121 0248 3342     		tst	r3, r6
 3122 024a C2D1     		bne	.L235
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 3123              		.loc 2 2503 13 discriminator 26 view .LVU856
 3124 024c D904     		lsls	r1, r3, #19
 3125 024e 1ED4     		bmi	.L271
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 3126              		.loc 2 2503 13 discriminator 28 view .LVU857
 3127 0250 8026     		movs	r6, #128
 3128 0252 B601     		lsls	r6, r6, #6
 3129 0254 3100     		movs	r1, r6
 3130 0256 3342     		tst	r3, r6
 3131 0258 BBD1     		bne	.L235
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 3132              		.loc 2 2503 13 discriminator 30 view .LVU858
 3133 025a 8026     		movs	r6, #128
 3134 025c F601     		lsls	r6, r6, #7
 3135 025e 3100     		movs	r1, r6
 3136 0260 3342     		tst	r3, r6
 3137 0262 B6D1     		bne	.L235
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 3138              		.loc 2 2503 13 discriminator 32 view .LVU859
 3139 0264 8026     		movs	r6, #128
 3140 0266 3602     		lsls	r6, r6, #8
 3141 0268 3100     		movs	r1, r6
 3142 026a 3342     		tst	r3, r6
 3143 026c B1D1     		bne	.L235
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 3144              		.loc 2 2503 13 discriminator 34 view .LVU860
 3145 026e 8026     		movs	r6, #128
 3146 0270 7602     		lsls	r6, r6, #9
 3147 0272 3100     		movs	r1, r6
 3148 0274 3342     		tst	r3, r6
 3149 0276 ACD1     		bne	.L235
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 3150              		.loc 2 2503 13 discriminator 36 view .LVU861
 3151 0278 8026     		movs	r6, #128
 3152 027a B602     		lsls	r6, r6, #10
 3153 027c 3100     		movs	r1, r6
 3154 027e 3342     		tst	r3, r6
 3155 0280 A7D1     		bne	.L235
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 3156              		.loc 2 2503 13 discriminator 38 view .LVU862
 3157 0282 5B03     		lsls	r3, r3, #13
 3158 0284 DB17     		asrs	r3, r3, #31
 3159 0286 9B03     		lsls	r3, r3, #14
 3160 0288 990B     		lsrs	r1, r3, #14
 3161 028a 0131     		adds	r1, r1, #1
 3162 028c A1E7     		b	.L235
 3163              	.L271:
2503:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           }
 3164              		.loc 2 2503 13 view .LVU863
 3165 028e 8021     		movs	r1, #128
ARM GAS  /tmp/ccjg7X18.s 			page 207


 3166 0290 4901     		lsls	r1, r1, #5
 3167 0292 9EE7     		b	.L235
 3168              	.L228:
2508:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
 3169              		.loc 2 2508 11 is_stmt 1 view .LVU864
 3170 0294 0F4A     		ldr	r2, .L283+40
 3171              	.L279:
2512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
 3172              		.loc 2 2512 11 is_stmt 0 view .LVU865
 3173 0296 FFF7FEFF 		bl	LL_ADC_SetAnalogWDMonitChannels
 3174              	.LVL178:
2513:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 3175              		.loc 2 2513 11 is_stmt 1 view .LVU866
2516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3176              		.loc 2 2516 7 view .LVU867
2516:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3177              		.loc 2 2516 10 is_stmt 0 view .LVU868
 3178 029a 2B68     		ldr	r3, [r5]
 3179 029c 1A00     		movs	r2, r3
 3180 029e 084B     		ldr	r3, .L283+20
 3181 02a0 9A42     		cmp	r2, r3
 3182 02a2 98D1     		bne	.L236
 3183 02a4 2DE7     		b	.L233
 3184              	.L229:
2512:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
 3185              		.loc 2 2512 11 is_stmt 1 view .LVU869
 3186 02a6 019A     		ldr	r2, [sp, #4]
 3187 02a8 F5E7     		b	.L279
 3188              	.L284:
 3189 02aa C046     		.align	2
 3190              	.L283:
 3191 02ac 0000C07C 		.word	2092957696
 3192 02b0 FFFF07FC 		.word	-66584577
 3193 02b4 FFFFFEFF 		.word	-65537
 3194 02b8 FFFF3F83 		.word	-2092957697
 3195 02bc 00F000F0 		.word	-268374016
 3196 02c0 FFFF1700 		.word	1572863
 3197 02c4 FFFFFDFF 		.word	-131073
 3198 02c8 FFFEFFFF 		.word	-257
 3199 02cc FFFFFBFF 		.word	-262145
 3200 02d0 FFFDFFFF 		.word	-513
 3201 02d4 FFFF8700 		.word	8912895
 3202              		.cfi_endproc
 3203              	.LFE320:
 3205              		.section	.text.HAL_ADC_GetState,"ax",%progbits
 3206              		.align	1
 3207              		.global	HAL_ADC_GetState
 3208              		.syntax unified
 3209              		.code	16
 3210              		.thumb_func
 3211              		.fpu softvfp
 3213              	HAL_ADC_GetState:
 3214              	.LVL179:
 3215              	.LFB321:
2625:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
 3216              		.loc 2 2625 1 view -0
 3217              		.cfi_startproc
ARM GAS  /tmp/ccjg7X18.s 			page 208


 3218              		@ args = 0, pretend = 0, frame = 0
 3219              		@ frame_needed = 0, uses_anonymous_args = 0
 3220              		@ link register save eliminated.
2627:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 3221              		.loc 2 2627 3 view .LVU871
2630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 3222              		.loc 2 2630 3 view .LVU872
2630:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 3223              		.loc 2 2630 14 is_stmt 0 view .LVU873
 3224 0000 806D     		ldr	r0, [r0, #88]
 3225              	.LVL180:
2631:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3226              		.loc 2 2631 1 view .LVU874
 3227              		@ sp needed
 3228 0002 7047     		bx	lr
 3229              		.cfi_endproc
 3230              	.LFE321:
 3232              		.section	.text.HAL_ADC_GetError,"ax",%progbits
 3233              		.align	1
 3234              		.global	HAL_ADC_GetError
 3235              		.syntax unified
 3236              		.code	16
 3237              		.thumb_func
 3238              		.fpu softvfp
 3240              	HAL_ADC_GetError:
 3241              	.LVL181:
 3242              	.LFB322:
2639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   /* Check the parameters */
 3243              		.loc 2 2639 1 is_stmt 1 view -0
 3244              		.cfi_startproc
 3245              		@ args = 0, pretend = 0, frame = 0
 3246              		@ frame_needed = 0, uses_anonymous_args = 0
 3247              		@ link register save eliminated.
2641:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 3248              		.loc 2 2641 3 view .LVU876
2643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 3249              		.loc 2 2643 3 view .LVU877
2643:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 3250              		.loc 2 2643 14 is_stmt 0 view .LVU878
 3251 0000 C06D     		ldr	r0, [r0, #92]
 3252              	.LVL182:
2644:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3253              		.loc 2 2644 1 view .LVU879
 3254              		@ sp needed
 3255 0002 7047     		bx	lr
 3256              		.cfi_endproc
 3257              	.LFE322:
 3259              		.section	.text.ADC_ConversionStop,"ax",%progbits
 3260              		.align	1
 3261              		.global	ADC_ConversionStop
 3262              		.syntax unified
 3263              		.code	16
 3264              		.thumb_func
 3265              		.fpu softvfp
 3267              	ADC_ConversionStop:
 3268              	.LVL183:
 3269              	.LFB323:
ARM GAS  /tmp/ccjg7X18.s 			page 209


2666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 3270              		.loc 2 2666 1 is_stmt 1 view -0
 3271              		.cfi_startproc
 3272              		@ args = 0, pretend = 0, frame = 0
 3273              		@ frame_needed = 0, uses_anonymous_args = 0
2667:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 3274              		.loc 2 2667 3 view .LVU881
2670:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 3275              		.loc 2 2670 3 view .LVU882
2674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3276              		.loc 2 2674 3 view .LVU883
2666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 3277              		.loc 2 2666 1 is_stmt 0 view .LVU884
 3278 0000 70B5     		push	{r4, r5, r6, lr}
 3279              	.LCFI12:
 3280              		.cfi_def_cfa_offset 16
 3281              		.cfi_offset 4, -16
 3282              		.cfi_offset 5, -12
 3283              		.cfi_offset 6, -8
 3284              		.cfi_offset 14, -4
2666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 3285              		.loc 2 2666 1 view .LVU885
 3286 0002 0400     		movs	r4, r0
2674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3287              		.loc 2 2674 7 view .LVU886
 3288 0004 0068     		ldr	r0, [r0]
 3289              	.LVL184:
2674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3290              		.loc 2 2674 7 view .LVU887
 3291 0006 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 3292              	.LVL185:
2674:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3293              		.loc 2 2674 6 view .LVU888
 3294 000a 0028     		cmp	r0, #0
 3295 000c 01D1     		bne	.L288
 3296              	.L293:
2705:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 3297              		.loc 2 2705 10 view .LVU889
 3298 000e 0020     		movs	r0, #0
 3299              	.L289:
2706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3300              		.loc 2 2706 1 view .LVU890
 3301              		@ sp needed
 3302              	.LVL186:
2706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3303              		.loc 2 2706 1 view .LVU891
 3304 0010 70BD     		pop	{r4, r5, r6, pc}
 3305              	.LVL187:
 3306              	.L288:
2678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3307              		.loc 2 2678 5 is_stmt 1 view .LVU892
2678:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3308              		.loc 2 2678 9 is_stmt 0 view .LVU893
 3309 0012 2368     		ldr	r3, [r4]
 3310              	.LVL188:
 3311              	.LBB250:
 3312              	.LBI250:
ARM GAS  /tmp/ccjg7X18.s 			page 210


4215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3313              		.loc 1 4215 26 is_stmt 1 view .LVU894
 3314              	.LBB251:
4217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3315              		.loc 1 4217 3 view .LVU895
4217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3316              		.loc 1 4217 12 is_stmt 0 view .LVU896
 3317 0014 9A68     		ldr	r2, [r3, #8]
4217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3318              		.loc 1 4217 70 view .LVU897
 3319 0016 9207     		lsls	r2, r2, #30
 3320 0018 05D4     		bmi	.L290
 3321              	.LVL189:
4217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3322              		.loc 1 4217 70 view .LVU898
 3323              	.LBE251:
 3324              	.LBE250:
2681:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3325              		.loc 2 2681 7 is_stmt 1 view .LVU899
 3326              	.LBB252:
 3327              	.LBI252:
4312:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3328              		.loc 1 4312 22 view .LVU900
 3329              	.LBB253:
4317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3330              		.loc 1 4317 3 view .LVU901
 3331 001a 9A68     		ldr	r2, [r3, #8]
 3332 001c 0D49     		ldr	r1, .L295
 3333 001e 1140     		ands	r1, r2
 3334 0020 1022     		movs	r2, #16
 3335 0022 0A43     		orrs	r2, r1
 3336 0024 9A60     		str	r2, [r3, #8]
 3337              	.LVL190:
 3338              	.L290:
4317:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3339              		.loc 1 4317 3 is_stmt 0 view .LVU902
 3340              	.LBE253:
 3341              	.LBE252:
2686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 3342              		.loc 2 2686 5 is_stmt 1 view .LVU903
2686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 3343              		.loc 2 2686 17 is_stmt 0 view .LVU904
 3344 0026 FFF7FEFF 		bl	HAL_GetTick
 3345              	.LVL191:
2688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3346              		.loc 2 2688 31 view .LVU905
 3347 002a 0426     		movs	r6, #4
2686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 3348              		.loc 2 2686 17 view .LVU906
 3349 002c 0500     		movs	r5, r0
 3350              	.LVL192:
2688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3351              		.loc 2 2688 5 is_stmt 1 view .LVU907
 3352              	.L291:
2688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3353              		.loc 2 2688 10 view .LVU908
2688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
ARM GAS  /tmp/ccjg7X18.s 			page 211


 3354              		.loc 2 2688 16 is_stmt 0 view .LVU909
 3355 002e 2368     		ldr	r3, [r4]
2688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3356              		.loc 2 2688 26 view .LVU910
 3357 0030 9B68     		ldr	r3, [r3, #8]
2688:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3358              		.loc 2 2688 10 view .LVU911
 3359 0032 3342     		tst	r3, r6
 3360 0034 EBD0     		beq	.L293
2690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3361              		.loc 2 2690 7 is_stmt 1 view .LVU912
2690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3362              		.loc 2 2690 11 is_stmt 0 view .LVU913
 3363 0036 FFF7FEFF 		bl	HAL_GetTick
 3364              	.LVL193:
2690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3365              		.loc 2 2690 25 view .LVU914
 3366 003a 401B     		subs	r0, r0, r5
2690:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3367              		.loc 2 2690 9 view .LVU915
 3368 003c 0228     		cmp	r0, #2
 3369 003e F6D9     		bls	.L291
 3370              	.LVL194:
 3371              	.LBB254:
 3372              	.LBI254:
2665:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 3373              		.loc 2 2665 19 is_stmt 1 view .LVU916
 3374              	.LBB255:
2693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 3375              		.loc 2 2693 9 view .LVU917
 3376 0040 1023     		movs	r3, #16
2696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 3377              		.loc 2 2696 9 is_stmt 0 view .LVU918
 3378 0042 0120     		movs	r0, #1
2693:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 3379              		.loc 2 2693 9 view .LVU919
 3380 0044 A26D     		ldr	r2, [r4, #88]
 3381 0046 1343     		orrs	r3, r2
 3382 0048 A365     		str	r3, [r4, #88]
2696:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 3383              		.loc 2 2696 9 is_stmt 1 view .LVU920
 3384 004a E36D     		ldr	r3, [r4, #92]
 3385 004c 0343     		orrs	r3, r0
 3386 004e E365     		str	r3, [r4, #92]
2698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 3387              		.loc 2 2698 9 view .LVU921
 3388              	.LVL195:
2698:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 3389              		.loc 2 2698 9 is_stmt 0 view .LVU922
 3390 0050 DEE7     		b	.L289
 3391              	.L296:
 3392 0052 C046     		.align	2
 3393              	.L295:
 3394 0054 E8FFFF7F 		.word	2147483624
 3395              	.LBE255:
 3396              	.LBE254:
 3397              		.cfi_endproc
ARM GAS  /tmp/ccjg7X18.s 			page 212


 3398              	.LFE323:
 3400              		.section	.text.ADC_Enable,"ax",%progbits
 3401              		.align	1
 3402              		.global	ADC_Enable
 3403              		.syntax unified
 3404              		.code	16
 3405              		.thumb_func
 3406              		.fpu softvfp
 3408              	ADC_Enable:
 3409              	.LVL196:
 3410              	.LFB324:
2716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 3411              		.loc 2 2716 1 is_stmt 1 view -0
 3412              		.cfi_startproc
 3413              		@ args = 0, pretend = 0, frame = 0
 3414              		@ frame_needed = 0, uses_anonymous_args = 0
2717:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 3415              		.loc 2 2717 3 view .LVU924
2723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3416              		.loc 2 2723 3 view .LVU925
2716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 3417              		.loc 2 2716 1 is_stmt 0 view .LVU926
 3418 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3419              	.LCFI13:
 3420              		.cfi_def_cfa_offset 24
 3421              		.cfi_offset 3, -24
 3422              		.cfi_offset 4, -20
 3423              		.cfi_offset 5, -16
 3424              		.cfi_offset 6, -12
 3425              		.cfi_offset 7, -8
 3426              		.cfi_offset 14, -4
 3427              	.LBB268:
 3428              	.LBB269:
4206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3429              		.loc 1 4206 12 view .LVU927
 3430 0002 0124     		movs	r4, #1
 3431              	.LBE269:
 3432              	.LBE268:
2723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3433              		.loc 2 2723 7 view .LVU928
 3434 0004 0268     		ldr	r2, [r0]
 3435              	.LVL197:
 3436              	.LBB272:
 3437              	.LBI268:
4204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3438              		.loc 1 4204 26 is_stmt 1 view .LVU929
 3439              	.LBB270:
4206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3440              		.loc 1 4206 3 view .LVU930
 3441              	.LBE270:
 3442              	.LBE272:
2716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 3443              		.loc 2 2716 1 is_stmt 0 view .LVU931
 3444 0006 0500     		movs	r5, r0
 3445              	.LBB273:
 3446              	.LBB271:
4206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
ARM GAS  /tmp/ccjg7X18.s 			page 213


 3447              		.loc 1 4206 12 view .LVU932
 3448 0008 9368     		ldr	r3, [r2, #8]
 3449              	.LVL198:
4206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3450              		.loc 1 4206 12 view .LVU933
 3451              	.LBE271:
 3452              	.LBE273:
2723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3453              		.loc 2 2723 6 view .LVU934
 3454 000a 2342     		tst	r3, r4
 3455 000c 01D0     		beq	.L298
 3456              	.LVL199:
 3457              	.L301:
2777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 3458              		.loc 2 2777 10 view .LVU935
 3459 000e 0020     		movs	r0, #0
 3460              	.L299:
2778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3461              		.loc 2 2778 1 view .LVU936
 3462              		@ sp needed
 3463              	.LVL200:
2778:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3464              		.loc 2 2778 1 view .LVU937
 3465 0010 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3466              	.LVL201:
 3467              	.L298:
2726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3468              		.loc 2 2726 5 is_stmt 1 view .LVU938
2726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3469              		.loc 2 2726 24 is_stmt 0 view .LVU939
 3470 0012 9168     		ldr	r1, [r2, #8]
2726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3471              		.loc 2 2726 29 view .LVU940
 3472 0014 174B     		ldr	r3, .L309
2726:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3473              		.loc 2 2726 8 view .LVU941
 3474 0016 1942     		tst	r1, r3
 3475 0018 08D0     		beq	.L300
2729:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 3476              		.loc 2 2729 7 is_stmt 1 view .LVU942
 3477 001a 1023     		movs	r3, #16
 3478 001c 826D     		ldr	r2, [r0, #88]
 3479 001e 1343     		orrs	r3, r2
 3480 0020 8365     		str	r3, [r0, #88]
2732:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 3481              		.loc 2 2732 7 view .LVU943
 3482 0022 C36D     		ldr	r3, [r0, #92]
 3483 0024 2343     		orrs	r3, r4
 3484 0026 C365     		str	r3, [r0, #92]
2734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3485              		.loc 2 2734 7 view .LVU944
2734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3486              		.loc 2 2734 14 is_stmt 0 view .LVU945
 3487 0028 2000     		movs	r0, r4
 3488              	.LVL202:
2734:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3489              		.loc 2 2734 14 view .LVU946
ARM GAS  /tmp/ccjg7X18.s 			page 214


 3490 002a F1E7     		b	.L299
 3491              	.LVL203:
 3492              	.L300:
2738:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 3493              		.loc 2 2738 5 is_stmt 1 view .LVU947
 3494              	.LBB274:
 3495              	.LBI274:
4165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3496              		.loc 1 4165 22 view .LVU948
 3497              	.LBB275:
4170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3498              		.loc 1 4170 3 view .LVU949
 3499 002c 9368     		ldr	r3, [r2, #8]
 3500 002e 124E     		ldr	r6, .L309+4
 3501 0030 3340     		ands	r3, r6
 3502 0032 2343     		orrs	r3, r4
 3503 0034 9360     		str	r3, [r2, #8]
 3504              	.LVL204:
4170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3505              		.loc 1 4170 3 is_stmt 0 view .LVU950
 3506              	.LBE275:
 3507              	.LBE274:
2742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3508              		.loc 2 2742 5 is_stmt 1 view .LVU951
2742:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3509              		.loc 2 2742 8 is_stmt 0 view .LVU952
 3510 0036 437E     		ldrb	r3, [r0, #25]
 3511 0038 012B     		cmp	r3, #1
 3512 003a E8D0     		beq	.L301
 3513              	.LVL205:
 3514              	.LBB276:
 3515              	.LBI276:
2715:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** {
 3516              		.loc 2 2715 19 is_stmt 1 view .LVU953
 3517              	.LBB277:
2745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 3518              		.loc 2 2745 7 view .LVU954
2745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 3519              		.loc 2 2745 19 is_stmt 0 view .LVU955
 3520 003c FFF7FEFF 		bl	HAL_GetTick
 3521              	.LVL206:
2745:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 3522              		.loc 2 2745 19 view .LVU956
 3523 0040 0700     		movs	r7, r0
 3524              	.LVL207:
2747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3525              		.loc 2 2747 7 is_stmt 1 view .LVU957
 3526              	.L302:
2747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3527              		.loc 2 2747 12 view .LVU958
2747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3528              		.loc 2 2747 13 is_stmt 0 view .LVU959
 3529 0042 2A68     		ldr	r2, [r5]
 3530 0044 1368     		ldr	r3, [r2]
2747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3531              		.loc 2 2747 12 view .LVU960
 3532 0046 2342     		tst	r3, r4
ARM GAS  /tmp/ccjg7X18.s 			page 215


 3533 0048 E1D1     		bne	.L301
2757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 3534              		.loc 2 2757 9 is_stmt 1 view .LVU961
 3535              	.LVL208:
 3536              	.LBB278:
 3537              	.LBI278:
4204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3538              		.loc 1 4204 26 view .LVU962
 3539              	.LBB279:
4206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3540              		.loc 1 4206 3 view .LVU963
4206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3541              		.loc 1 4206 12 is_stmt 0 view .LVU964
 3542 004a 9368     		ldr	r3, [r2, #8]
 3543              	.LVL209:
4206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3544              		.loc 1 4206 12 view .LVU965
 3545              	.LBE279:
 3546              	.LBE278:
2757:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 3547              		.loc 2 2757 11 view .LVU966
 3548 004c 2342     		tst	r3, r4
 3549 004e 03D1     		bne	.L303
2759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 3550              		.loc 2 2759 11 is_stmt 1 view .LVU967
 3551              	.LVL210:
 3552              	.LBB280:
 3553              	.LBI280:
4165:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3554              		.loc 1 4165 22 view .LVU968
 3555              	.LBB281:
4170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3556              		.loc 1 4170 3 view .LVU969
 3557 0050 9368     		ldr	r3, [r2, #8]
 3558 0052 3340     		ands	r3, r6
 3559 0054 2343     		orrs	r3, r4
 3560 0056 9360     		str	r3, [r2, #8]
 3561              	.LVL211:
 3562              	.L303:
4170:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3563              		.loc 1 4170 3 is_stmt 0 view .LVU970
 3564              	.LBE281:
 3565              	.LBE280:
2762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 3566              		.loc 2 2762 9 is_stmt 1 view .LVU971
2762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 3567              		.loc 2 2762 13 is_stmt 0 view .LVU972
 3568 0058 FFF7FEFF 		bl	HAL_GetTick
 3569              	.LVL212:
2762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 3570              		.loc 2 2762 27 view .LVU973
 3571 005c C01B     		subs	r0, r0, r7
2762:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         {
 3572              		.loc 2 2762 11 view .LVU974
 3573 005e 0228     		cmp	r0, #2
 3574 0060 EFD9     		bls	.L302
2765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           
ARM GAS  /tmp/ccjg7X18.s 			page 216


 3575              		.loc 2 2765 11 is_stmt 1 view .LVU975
 3576 0062 1023     		movs	r3, #16
2768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           
 3577              		.loc 2 2768 11 is_stmt 0 view .LVU976
 3578 0064 0120     		movs	r0, #1
2765:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           
 3579              		.loc 2 2765 11 view .LVU977
 3580 0066 AA6D     		ldr	r2, [r5, #88]
 3581 0068 1343     		orrs	r3, r2
 3582 006a AB65     		str	r3, [r5, #88]
2768:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           
 3583              		.loc 2 2768 11 is_stmt 1 view .LVU978
 3584 006c EB6D     		ldr	r3, [r5, #92]
 3585 006e 0343     		orrs	r3, r0
 3586 0070 EB65     		str	r3, [r5, #92]
2770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 3587              		.loc 2 2770 11 view .LVU979
2770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         }
 3588              		.loc 2 2770 18 is_stmt 0 view .LVU980
 3589 0072 CDE7     		b	.L299
 3590              	.L310:
 3591              		.align	2
 3592              	.L309:
 3593 0074 17000080 		.word	-2147483625
 3594 0078 E8FFFF7F 		.word	2147483624
 3595              	.LBE277:
 3596              	.LBE276:
 3597              		.cfi_endproc
 3598              	.LFE324:
 3600              		.section	.text.HAL_ADC_Start,"ax",%progbits
 3601              		.align	1
 3602              		.global	HAL_ADC_Start
 3603              		.syntax unified
 3604              		.code	16
 3605              		.thumb_func
 3606              		.fpu softvfp
 3608              	HAL_ADC_Start:
 3609              	.LVL213:
 3610              	.LFB305:
1177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3611              		.loc 2 1177 1 is_stmt 1 view -0
 3612              		.cfi_startproc
 3613              		@ args = 0, pretend = 0, frame = 0
 3614              		@ frame_needed = 0, uses_anonymous_args = 0
1178:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 3615              		.loc 2 1178 3 view .LVU982
1181:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 3616              		.loc 2 1181 3 view .LVU983
1184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3617              		.loc 2 1184 3 view .LVU984
1177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3618              		.loc 2 1177 1 is_stmt 0 view .LVU985
 3619 0000 70B5     		push	{r4, r5, r6, lr}
 3620              	.LCFI14:
 3621              		.cfi_def_cfa_offset 16
 3622              		.cfi_offset 4, -16
 3623              		.cfi_offset 5, -12
ARM GAS  /tmp/ccjg7X18.s 			page 217


 3624              		.cfi_offset 6, -8
 3625              		.cfi_offset 14, -4
1177:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3626              		.loc 2 1177 1 view .LVU986
 3627 0002 0400     		movs	r4, r0
1184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3628              		.loc 2 1184 7 view .LVU987
 3629 0004 0068     		ldr	r0, [r0]
 3630              	.LVL214:
1184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3631              		.loc 2 1184 7 view .LVU988
 3632 0006 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 3633              	.LVL215:
 3634 000a 0600     		movs	r6, r0
1230:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 3635              		.loc 2 1230 20 view .LVU989
 3636 000c 0220     		movs	r0, #2
1184:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3637              		.loc 2 1184 6 view .LVU990
 3638 000e 002E     		cmp	r6, #0
 3639 0010 1DD1     		bne	.L312
1187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 3640              		.loc 2 1187 5 is_stmt 1 view .LVU991
1187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 3641              		.loc 2 1187 5 view .LVU992
 3642 0012 2500     		movs	r5, r4
 3643 0014 5435     		adds	r5, r5, #84
 3644 0016 2B78     		ldrb	r3, [r5]
 3645 0018 012B     		cmp	r3, #1
 3646 001a 18D0     		beq	.L312
1187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 3647              		.loc 2 1187 5 discriminator 2 view .LVU993
 3648 001c 0123     		movs	r3, #1
1190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 3649              		.loc 2 1190 22 is_stmt 0 discriminator 2 view .LVU994
 3650 001e 2000     		movs	r0, r4
1187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 3651              		.loc 2 1187 5 discriminator 2 view .LVU995
 3652 0020 2B70     		strb	r3, [r5]
1187:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 3653              		.loc 2 1187 5 is_stmt 1 discriminator 2 view .LVU996
1190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 3654              		.loc 2 1190 5 discriminator 2 view .LVU997
1190:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 3655              		.loc 2 1190 22 is_stmt 0 discriminator 2 view .LVU998
 3656 0022 FFF7FEFF 		bl	ADC_Enable
 3657              	.LVL216:
1193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3658              		.loc 2 1193 5 is_stmt 1 discriminator 2 view .LVU999
1193:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3659              		.loc 2 1193 8 is_stmt 0 discriminator 2 view .LVU1000
 3660 0026 0028     		cmp	r0, #0
 3661 0028 12D1     		bne	.L313
1198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 3662              		.loc 2 1198 7 is_stmt 1 view .LVU1001
 3663 002a A36D     		ldr	r3, [r4, #88]
 3664 002c 094A     		ldr	r2, .L316
ARM GAS  /tmp/ccjg7X18.s 			page 218


 3665              	.LBB284:
 3666              	.LBB285:
4297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3667              		.loc 1 4297 3 is_stmt 0 view .LVU1002
 3668 002e 0A49     		ldr	r1, .L316+4
 3669              	.LBE285:
 3670              	.LBE284:
1198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 3671              		.loc 2 1198 7 view .LVU1003
 3672 0030 1A40     		ands	r2, r3
 3673 0032 8023     		movs	r3, #128
 3674 0034 5B00     		lsls	r3, r3, #1
 3675 0036 1343     		orrs	r3, r2
1208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 3676              		.loc 2 1208 7 view .LVU1004
 3677 0038 1C22     		movs	r2, #28
1198:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 3678              		.loc 2 1198 7 view .LVU1005
 3679 003a A365     		str	r3, [r4, #88]
1204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 3680              		.loc 2 1204 7 is_stmt 1 view .LVU1006
1208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 3681              		.loc 2 1208 7 is_stmt 0 view .LVU1007
 3682 003c 2368     		ldr	r3, [r4]
1204:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 3683              		.loc 2 1204 7 view .LVU1008
 3684 003e E065     		str	r0, [r4, #92]
1208:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 3685              		.loc 2 1208 7 is_stmt 1 view .LVU1009
 3686 0040 1A60     		str	r2, [r3]
1213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 3687              		.loc 2 1213 7 view .LVU1010
1213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 3688              		.loc 2 1213 7 view .LVU1011
 3689 0042 2870     		strb	r0, [r5]
1213:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 3690              		.loc 2 1213 7 view .LVU1012
1220:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3691              		.loc 2 1220 7 view .LVU1013
 3692              	.LVL217:
 3693              	.LBB287:
 3694              	.LBI284:
4292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3695              		.loc 1 4292 22 view .LVU1014
 3696              	.LBB286:
4297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3697              		.loc 1 4297 3 view .LVU1015
 3698 0044 9A68     		ldr	r2, [r3, #8]
 3699 0046 1140     		ands	r1, r2
 3700 0048 0422     		movs	r2, #4
 3701 004a 0A43     		orrs	r2, r1
 3702 004c 9A60     		str	r2, [r3, #8]
 3703              	.LVL218:
 3704              	.L312:
4297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3705              		.loc 1 4297 3 is_stmt 0 view .LVU1016
 3706              	.LBE286:
ARM GAS  /tmp/ccjg7X18.s 			page 219


 3707              	.LBE287:
1235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3708              		.loc 2 1235 1 view .LVU1017
 3709              		@ sp needed
 3710              	.LVL219:
1235:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3711              		.loc 2 1235 1 view .LVU1018
 3712 004e 70BD     		pop	{r4, r5, r6, pc}
 3713              	.LVL220:
 3714              	.L313:
1225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3715              		.loc 2 1225 7 is_stmt 1 view .LVU1019
1225:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3716              		.loc 2 1225 7 view .LVU1020
 3717 0050 2E70     		strb	r6, [r5]
 3718 0052 FCE7     		b	.L312
 3719              	.L317:
 3720              		.align	2
 3721              	.L316:
 3722 0054 FEF0FFFF 		.word	-3842
 3723 0058 E8FFFF7F 		.word	2147483624
 3724              		.cfi_endproc
 3725              	.LFE305:
 3727              		.section	.text.HAL_ADC_Start_IT,"ax",%progbits
 3728              		.align	1
 3729              		.global	HAL_ADC_Start_IT
 3730              		.syntax unified
 3731              		.code	16
 3732              		.thumb_func
 3733              		.fpu softvfp
 3735              	HAL_ADC_Start_IT:
 3736              	.LVL221:
 3737              	.LFB309:
1555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3738              		.loc 2 1555 1 view -0
 3739              		.cfi_startproc
 3740              		@ args = 0, pretend = 0, frame = 0
 3741              		@ frame_needed = 0, uses_anonymous_args = 0
1556:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 3742              		.loc 2 1556 3 view .LVU1022
1559:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 3743              		.loc 2 1559 3 view .LVU1023
1562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3744              		.loc 2 1562 3 view .LVU1024
1555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3745              		.loc 2 1555 1 is_stmt 0 view .LVU1025
 3746 0000 70B5     		push	{r4, r5, r6, lr}
 3747              	.LCFI15:
 3748              		.cfi_def_cfa_offset 16
 3749              		.cfi_offset 4, -16
 3750              		.cfi_offset 5, -12
 3751              		.cfi_offset 6, -8
 3752              		.cfi_offset 14, -4
1555:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3753              		.loc 2 1555 1 view .LVU1026
 3754 0002 0400     		movs	r4, r0
1562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
ARM GAS  /tmp/ccjg7X18.s 			page 220


 3755              		.loc 2 1562 7 view .LVU1027
 3756 0004 0068     		ldr	r0, [r0]
 3757              	.LVL222:
1562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3758              		.loc 2 1562 7 view .LVU1028
 3759 0006 FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 3760              	.LVL223:
 3761 000a 0600     		movs	r6, r0
1634:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 3762              		.loc 2 1634 20 view .LVU1029
 3763 000c 0220     		movs	r0, #2
1562:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3764              		.loc 2 1562 6 view .LVU1030
 3765 000e 002E     		cmp	r6, #0
 3766 0010 2DD1     		bne	.L319
1565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 3767              		.loc 2 1565 5 is_stmt 1 view .LVU1031
1565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 3768              		.loc 2 1565 5 view .LVU1032
 3769 0012 2500     		movs	r5, r4
 3770 0014 5435     		adds	r5, r5, #84
 3771 0016 2B78     		ldrb	r3, [r5]
 3772 0018 012B     		cmp	r3, #1
 3773 001a 28D0     		beq	.L319
1565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 3774              		.loc 2 1565 5 discriminator 2 view .LVU1033
 3775 001c 0123     		movs	r3, #1
1568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 3776              		.loc 2 1568 22 is_stmt 0 discriminator 2 view .LVU1034
 3777 001e 2000     		movs	r0, r4
1565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 3778              		.loc 2 1565 5 discriminator 2 view .LVU1035
 3779 0020 2B70     		strb	r3, [r5]
1565:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 3780              		.loc 2 1565 5 is_stmt 1 discriminator 2 view .LVU1036
1568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 3781              		.loc 2 1568 5 discriminator 2 view .LVU1037
1568:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 3782              		.loc 2 1568 22 is_stmt 0 discriminator 2 view .LVU1038
 3783 0022 FFF7FEFF 		bl	ADC_Enable
 3784              	.LVL224:
1571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3785              		.loc 2 1571 5 is_stmt 1 discriminator 2 view .LVU1039
1571:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3786              		.loc 2 1571 8 is_stmt 0 discriminator 2 view .LVU1040
 3787 0026 0028     		cmp	r0, #0
 3788 0028 24D1     		bne	.L320
1576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 3789              		.loc 2 1576 7 is_stmt 1 view .LVU1041
 3790 002a A36D     		ldr	r3, [r4, #88]
 3791 002c 124A     		ldr	r2, .L327
1587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 3792              		.loc 2 1587 7 is_stmt 0 view .LVU1042
 3793 002e 1C21     		movs	r1, #28
1576:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 3794              		.loc 2 1576 7 view .LVU1043
 3795 0030 1A40     		ands	r2, r3
ARM GAS  /tmp/ccjg7X18.s 			page 221


 3796 0032 8023     		movs	r3, #128
 3797 0034 5B00     		lsls	r3, r3, #1
 3798 0036 1343     		orrs	r3, r2
 3799 0038 A365     		str	r3, [r4, #88]
1583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 3800              		.loc 2 1583 7 is_stmt 1 view .LVU1044
1587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 3801              		.loc 2 1587 7 is_stmt 0 view .LVU1045
 3802 003a 2368     		ldr	r3, [r4]
1583:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 3803              		.loc 2 1583 7 view .LVU1046
 3804 003c E065     		str	r0, [r4, #92]
1587:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 3805              		.loc 2 1587 7 is_stmt 1 view .LVU1047
 3806 003e 1960     		str	r1, [r3]
1592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 3807              		.loc 2 1592 7 view .LVU1048
1592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 3808              		.loc 2 1592 7 view .LVU1049
 3809 0040 2870     		strb	r0, [r5]
1592:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 3810              		.loc 2 1592 7 view .LVU1050
1595:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 3811              		.loc 2 1595 7 view .LVU1051
 3812 0042 5A68     		ldr	r2, [r3, #4]
 3813 0044 8A43     		bics	r2, r1
 3814 0046 5A60     		str	r2, [r3, #4]
1598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3815              		.loc 2 1598 7 view .LVU1052
 3816 0048 6269     		ldr	r2, [r4, #20]
1605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
 3817              		.loc 2 1605 11 is_stmt 0 view .LVU1053
 3818 004a 5968     		ldr	r1, [r3, #4]
1598:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3819              		.loc 2 1598 7 view .LVU1054
 3820 004c 082A     		cmp	r2, #8
 3821 004e 0FD1     		bne	.L321
 3822              	.L326:
1605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
 3823              		.loc 2 1605 11 view .LVU1055
 3824 0050 0A43     		orrs	r2, r1
 3825 0052 5A60     		str	r2, [r3, #4]
1606:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 3826              		.loc 2 1606 11 is_stmt 1 view .LVU1056
1613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3827              		.loc 2 1613 7 view .LVU1057
1613:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3828              		.loc 2 1613 10 is_stmt 0 view .LVU1058
 3829 0054 226B     		ldr	r2, [r4, #48]
 3830 0056 002A     		cmp	r2, #0
 3831 0058 03D1     		bne	.L323
1615:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 3832              		.loc 2 1615 9 is_stmt 1 view .LVU1059
 3833 005a 5968     		ldr	r1, [r3, #4]
 3834 005c 1032     		adds	r2, r2, #16
 3835 005e 0A43     		orrs	r2, r1
 3836 0060 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/ccjg7X18.s 			page 222


 3837              	.L323:
1623:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3838              		.loc 2 1623 7 view .LVU1060
 3839              	.LVL225:
 3840              	.LBB290:
 3841              	.LBI290:
4292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3842              		.loc 1 4292 22 view .LVU1061
 3843              	.LBB291:
4297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3844              		.loc 1 4297 3 view .LVU1062
 3845 0062 9A68     		ldr	r2, [r3, #8]
 3846 0064 0549     		ldr	r1, .L327+4
 3847 0066 1140     		ands	r1, r2
 3848 0068 0422     		movs	r2, #4
 3849 006a 0A43     		orrs	r2, r1
 3850 006c 9A60     		str	r2, [r3, #8]
 3851              	.LVL226:
 3852              	.L319:
4297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3853              		.loc 1 4297 3 is_stmt 0 view .LVU1063
 3854              	.LBE291:
 3855              	.LBE290:
1639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3856              		.loc 2 1639 1 view .LVU1064
 3857              		@ sp needed
 3858              	.LVL227:
1639:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 3859              		.loc 2 1639 1 view .LVU1065
 3860 006e 70BD     		pop	{r4, r5, r6, pc}
 3861              	.LVL228:
 3862              	.L321:
1605:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****           break;
 3863              		.loc 2 1605 11 is_stmt 1 view .LVU1066
 3864 0070 0422     		movs	r2, #4
 3865 0072 EDE7     		b	.L326
 3866              	.L320:
1628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3867              		.loc 2 1628 7 view .LVU1067
1628:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3868              		.loc 2 1628 7 view .LVU1068
 3869 0074 2E70     		strb	r6, [r5]
 3870 0076 FAE7     		b	.L319
 3871              	.L328:
 3872              		.align	2
 3873              	.L327:
 3874 0078 FEF0FFFF 		.word	-3842
 3875 007c E8FFFF7F 		.word	2147483624
 3876              		.cfi_endproc
 3877              	.LFE309:
 3879              		.section	.text.HAL_ADC_Start_DMA,"ax",%progbits
 3880              		.align	1
 3881              		.global	HAL_ADC_Start_DMA
 3882              		.syntax unified
 3883              		.code	16
 3884              		.thumb_func
 3885              		.fpu softvfp
ARM GAS  /tmp/ccjg7X18.s 			page 223


 3887              	HAL_ADC_Start_DMA:
 3888              	.LVL229:
 3889              	.LFB311:
1699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3890              		.loc 2 1699 1 view -0
 3891              		.cfi_startproc
 3892              		@ args = 0, pretend = 0, frame = 0
 3893              		@ frame_needed = 0, uses_anonymous_args = 0
1700:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 3894              		.loc 2 1700 3 view .LVU1070
1703:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 3895              		.loc 2 1703 3 view .LVU1071
1706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3896              		.loc 2 1706 3 view .LVU1072
1699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3897              		.loc 2 1699 1 is_stmt 0 view .LVU1073
 3898 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3899              	.LCFI16:
 3900              		.cfi_def_cfa_offset 24
 3901              		.cfi_offset 3, -24
 3902              		.cfi_offset 4, -20
 3903              		.cfi_offset 5, -16
 3904              		.cfi_offset 6, -12
 3905              		.cfi_offset 7, -8
 3906              		.cfi_offset 14, -4
1699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3907              		.loc 2 1699 1 view .LVU1074
 3908 0002 0400     		movs	r4, r0
1706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3909              		.loc 2 1706 7 view .LVU1075
 3910 0004 0068     		ldr	r0, [r0]
 3911              	.LVL230:
1699:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 3912              		.loc 2 1699 1 view .LVU1076
 3913 0006 0D00     		movs	r5, r1
 3914 0008 1600     		movs	r6, r2
1706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3915              		.loc 2 1706 7 view .LVU1077
 3916 000a FFF7FEFF 		bl	LL_ADC_REG_IsConversionOngoing
 3917              	.LVL231:
1782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 3918              		.loc 2 1782 20 view .LVU1078
 3919 000e 0223     		movs	r3, #2
1706:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 3920              		.loc 2 1706 6 view .LVU1079
 3921 0010 0028     		cmp	r0, #0
 3922 0012 40D1     		bne	.L330
1709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 3923              		.loc 2 1709 5 is_stmt 1 view .LVU1080
1709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 3924              		.loc 2 1709 5 view .LVU1081
 3925 0014 2700     		movs	r7, r4
 3926 0016 5437     		adds	r7, r7, #84
 3927 0018 3A78     		ldrb	r2, [r7]
 3928 001a 012A     		cmp	r2, #1
 3929 001c 3BD0     		beq	.L330
1709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
ARM GAS  /tmp/ccjg7X18.s 			page 224


 3930              		.loc 2 1709 5 discriminator 2 view .LVU1082
 3931 001e 0122     		movs	r2, #1
 3932 0020 3A70     		strb	r2, [r7]
1709:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 3933              		.loc 2 1709 5 discriminator 2 view .LVU1083
1714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3934              		.loc 2 1714 5 discriminator 2 view .LVU1084
1714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3935              		.loc 2 1714 14 is_stmt 0 discriminator 2 view .LVU1085
 3936 0022 2368     		ldr	r3, [r4]
1714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3937              		.loc 2 1714 24 discriminator 2 view .LVU1086
 3938 0024 D968     		ldr	r1, [r3, #12]
1714:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3939              		.loc 2 1714 8 discriminator 2 view .LVU1087
 3940 0026 1142     		tst	r1, r2
 3941 0028 0CD1     		bne	.L331
1716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3942              		.loc 2 1716 7 is_stmt 1 view .LVU1088
 3943              	.LVL232:
 3944              	.LBB298:
 3945              	.LBI298:
4204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3946              		.loc 1 4204 26 view .LVU1089
 3947              	.LBB299:
4206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3948              		.loc 1 4206 3 view .LVU1090
4206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3949              		.loc 1 4206 12 is_stmt 0 view .LVU1091
 3950 002a 9968     		ldr	r1, [r3, #8]
 3951              	.LVL233:
4206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 3952              		.loc 1 4206 12 view .LVU1092
 3953              	.LBE299:
 3954              	.LBE298:
1716:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 3955              		.loc 2 1716 10 view .LVU1093
 3956 002c 1142     		tst	r1, r2
 3957 002e 05D0     		beq	.L332
1719:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 3958              		.loc 2 1719 9 is_stmt 1 view .LVU1094
 3959              	.LVL234:
 3960              	.LBB300:
 3961              	.LBI300:
4185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 3962              		.loc 1 4185 22 view .LVU1095
 3963              	.LBB301:
4190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3964              		.loc 1 4190 3 view .LVU1096
 3965 0030 9A68     		ldr	r2, [r3, #8]
 3966 0032 1A49     		ldr	r1, .L338
 3967 0034 1140     		ands	r1, r2
 3968 0036 0222     		movs	r2, #2
 3969 0038 0A43     		orrs	r2, r1
 3970 003a 9A60     		str	r2, [r3, #8]
 3971              	.LVL235:
 3972              	.L332:
ARM GAS  /tmp/ccjg7X18.s 			page 225


4190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3973              		.loc 1 4190 3 is_stmt 0 view .LVU1097
 3974              	.LBE301:
 3975              	.LBE300:
1723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3976              		.loc 2 1723 7 is_stmt 1 view .LVU1098
1723:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 3977              		.loc 2 1723 29 is_stmt 0 view .LVU1099
 3978 003c 0122     		movs	r2, #1
 3979 003e D968     		ldr	r1, [r3, #12]
 3980 0040 0A43     		orrs	r2, r1
 3981 0042 DA60     		str	r2, [r3, #12]
 3982              	.L331:
1727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 3983              		.loc 2 1727 5 is_stmt 1 view .LVU1100
1727:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 3984              		.loc 2 1727 22 is_stmt 0 view .LVU1101
 3985 0044 2000     		movs	r0, r4
 3986 0046 FFF7FEFF 		bl	ADC_Enable
 3987              	.LVL236:
 3988 004a 031E     		subs	r3, r0, #0
 3989              	.LVL237:
1730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3990              		.loc 2 1730 5 is_stmt 1 view .LVU1102
1730:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 3991              		.loc 2 1730 8 is_stmt 0 view .LVU1103
 3992 004c 23D1     		bne	.L330
1735:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_A
 3993              		.loc 2 1735 7 is_stmt 1 view .LVU1104
 3994 004e A26D     		ldr	r2, [r4, #88]
 3995 0050 1349     		ldr	r1, .L338+4
 3996 0052 1140     		ands	r1, r2
 3997 0054 8022     		movs	r2, #128
 3998 0056 5200     		lsls	r2, r2, #1
 3999 0058 0A43     		orrs	r2, r1
 4000 005a A265     		str	r2, [r4, #88]
1741:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 4001              		.loc 2 1741 7 view .LVU1105
 4002 005c E065     		str	r0, [r4, #92]
1744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 4003              		.loc 2 1744 7 view .LVU1106
1744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 4004              		.loc 2 1744 42 is_stmt 0 view .LVU1107
 4005 005e 114A     		ldr	r2, .L338+8
1744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 4006              		.loc 2 1744 11 view .LVU1108
 4007 0060 206D     		ldr	r0, [r4, #80]
 4008              	.LVL238:
1759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 4009              		.loc 2 1759 7 view .LVU1109
 4010 0062 2168     		ldr	r1, [r4]
1744:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 4011              		.loc 2 1744 42 view .LVU1110
 4012 0064 C262     		str	r2, [r0, #44]
1747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 4013              		.loc 2 1747 7 is_stmt 1 view .LVU1111
1747:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
ARM GAS  /tmp/ccjg7X18.s 			page 226


 4014              		.loc 2 1747 46 is_stmt 0 view .LVU1112
 4015 0066 104A     		ldr	r2, .L338+12
 4016 0068 0263     		str	r2, [r0, #48]
1750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 4017              		.loc 2 1750 7 is_stmt 1 view .LVU1113
1750:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 4018              		.loc 2 1750 43 is_stmt 0 view .LVU1114
 4019 006a 104A     		ldr	r2, .L338+16
 4020 006c 4263     		str	r2, [r0, #52]
1759:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 4021              		.loc 2 1759 7 is_stmt 1 view .LVU1115
 4022 006e 1C22     		movs	r2, #28
 4023 0070 0A60     		str	r2, [r1]
1764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 4024              		.loc 2 1764 7 view .LVU1116
1764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 4025              		.loc 2 1764 7 view .LVU1117
 4026 0072 3B70     		strb	r3, [r7]
1764:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 4027              		.loc 2 1764 7 view .LVU1118
1767:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 4028              		.loc 2 1767 7 view .LVU1119
 4029 0074 4A68     		ldr	r2, [r1, #4]
 4030 0076 1033     		adds	r3, r3, #16
 4031 0078 1343     		orrs	r3, r2
 4032 007a 4B60     		str	r3, [r1, #4]
1770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 4033              		.loc 2 1770 7 view .LVU1120
1770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 4034              		.loc 2 1770 24 is_stmt 0 view .LVU1121
 4035 007c 2A00     		movs	r2, r5
 4036 007e 3300     		movs	r3, r6
1770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 4037              		.loc 2 1770 69 view .LVU1122
 4038 0080 4031     		adds	r1, r1, #64
1770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 4039              		.loc 2 1770 24 view .LVU1123
 4040 0082 FFF7FEFF 		bl	HAL_DMA_Start_IT
 4041              	.LVL239:
 4042 0086 0300     		movs	r3, r0
 4043              	.LVL240:
1777:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 4044              		.loc 2 1777 7 is_stmt 1 view .LVU1124
 4045 0088 2068     		ldr	r0, [r4]
 4046              	.LVL241:
 4047              	.LBB302:
 4048              	.LBI302:
4292:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 4049              		.loc 1 4292 22 view .LVU1125
 4050              	.LBB303:
4297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4051              		.loc 1 4297 3 view .LVU1126
 4052 008a 0449     		ldr	r1, .L338
 4053 008c 8268     		ldr	r2, [r0, #8]
 4054 008e 1140     		ands	r1, r2
 4055 0090 0422     		movs	r2, #4
 4056 0092 0A43     		orrs	r2, r1
ARM GAS  /tmp/ccjg7X18.s 			page 227


 4057 0094 8260     		str	r2, [r0, #8]
 4058              	.LVL242:
 4059              	.L330:
4297:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4060              		.loc 1 4297 3 is_stmt 0 view .LVU1127
 4061              	.LBE303:
 4062              	.LBE302:
1787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4063              		.loc 2 1787 1 view .LVU1128
 4064 0096 1800     		movs	r0, r3
 4065              		@ sp needed
 4066              	.LVL243:
 4067              	.LVL244:
 4068              	.LVL245:
1787:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4069              		.loc 2 1787 1 view .LVU1129
 4070 0098 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4071              	.L339:
 4072 009a C046     		.align	2
 4073              	.L338:
 4074 009c E8FFFF7F 		.word	2147483624
 4075 00a0 FEF0FFFF 		.word	-3842
 4076 00a4 00000000 		.word	ADC_DMAConvCplt
 4077 00a8 00000000 		.word	ADC_DMAHalfConvCplt
 4078 00ac 00000000 		.word	ADC_DMAError
 4079              		.cfi_endproc
 4080              	.LFE311:
 4082              		.section	.text.ADC_Disable,"ax",%progbits
 4083              		.align	1
 4084              		.global	ADC_Disable
 4085              		.syntax unified
 4086              		.code	16
 4087              		.thumb_func
 4088              		.fpu softvfp
 4090              	ADC_Disable:
 4091              	.LVL246:
 4092              	.LFB325:
2788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 4093              		.loc 2 2788 1 is_stmt 1 view -0
 4094              		.cfi_startproc
 4095              		@ args = 0, pretend = 0, frame = 0
 4096              		@ frame_needed = 0, uses_anonymous_args = 0
2789:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   const uint32_t tmp_adc_is_disable_on_going = LL_ADC_IsDisableOngoing(hadc->Instance);
 4097              		.loc 2 2789 3 view .LVU1131
2790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4098              		.loc 2 2790 3 view .LVU1132
2790:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4099              		.loc 2 2790 48 is_stmt 0 view .LVU1133
 4100 0000 0368     		ldr	r3, [r0]
 4101              	.LVL247:
 4102              	.LBB310:
 4103              	.LBI310:
4215:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 4104              		.loc 1 4215 26 is_stmt 1 view .LVU1134
 4105              	.LBB311:
4217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4106              		.loc 1 4217 3 view .LVU1135
ARM GAS  /tmp/ccjg7X18.s 			page 228


 4107              	.LBE311:
 4108              	.LBE310:
2788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 4109              		.loc 2 2788 1 is_stmt 0 view .LVU1136
 4110 0002 70B5     		push	{r4, r5, r6, lr}
 4111              	.LCFI17:
 4112              		.cfi_def_cfa_offset 16
 4113              		.cfi_offset 4, -16
 4114              		.cfi_offset 5, -12
 4115              		.cfi_offset 6, -8
 4116              		.cfi_offset 14, -4
2788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   uint32_t tickstart;
 4117              		.loc 2 2788 1 view .LVU1137
 4118 0004 0400     		movs	r4, r0
 4119              	.LBB314:
 4120              	.LBB315:
4206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4121              		.loc 1 4206 12 view .LVU1138
 4122 0006 0120     		movs	r0, #1
 4123              	.LVL248:
4206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4124              		.loc 1 4206 12 view .LVU1139
 4125              	.LBE315:
 4126              	.LBE314:
 4127              	.LBB317:
 4128              	.LBB312:
4217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4129              		.loc 1 4217 12 view .LVU1140
 4130 0008 9968     		ldr	r1, [r3, #8]
 4131              	.LVL249:
4217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4132              		.loc 1 4217 12 view .LVU1141
 4133              	.LBE312:
 4134              	.LBE317:
2795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
 4135              		.loc 2 2795 3 is_stmt 1 view .LVU1142
 4136              	.LBB318:
 4137              	.LBI314:
4204:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 4138              		.loc 1 4204 26 view .LVU1143
 4139              	.LBB316:
4206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4140              		.loc 1 4206 3 view .LVU1144
4206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4141              		.loc 1 4206 12 is_stmt 0 view .LVU1145
 4142 000a 9A68     		ldr	r2, [r3, #8]
 4143              	.LVL250:
4206:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4144              		.loc 1 4206 12 view .LVU1146
 4145              	.LBE316:
 4146              	.LBE318:
2795:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       && (tmp_adc_is_disable_on_going == 0UL)
 4147              		.loc 2 2795 6 view .LVU1147
 4148 000c 0242     		tst	r2, r0
 4149 000e 01D1     		bne	.L341
 4150              	.LVL251:
 4151              	.L343:
ARM GAS  /tmp/ccjg7X18.s 			page 229


2837:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 4152              		.loc 2 2837 10 view .LVU1148
 4153 0010 0020     		movs	r0, #0
 4154              	.L342:
2838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4155              		.loc 2 2838 1 view .LVU1149
 4156              		@ sp needed
 4157              	.LVL252:
2838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4158              		.loc 2 2838 1 view .LVU1150
 4159 0012 70BD     		pop	{r4, r5, r6, pc}
 4160              	.LVL253:
 4161              	.L341:
 4162              	.LBB319:
 4163              	.LBB313:
4217:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** }
 4164              		.loc 1 4217 12 view .LVU1151
 4165 0014 0222     		movs	r2, #2
 4166              	.LBE313:
 4167              	.LBE319:
2796:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****      )
 4168              		.loc 2 2796 7 view .LVU1152
 4169 0016 1142     		tst	r1, r2
 4170 0018 FAD1     		bne	.L343
2800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4171              		.loc 2 2800 5 is_stmt 1 view .LVU1153
2800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4172              		.loc 2 2800 28 is_stmt 0 view .LVU1154
 4173 001a 0521     		movs	r1, #5
 4174              	.LVL254:
2800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4175              		.loc 2 2800 23 view .LVU1155
 4176 001c 9D68     		ldr	r5, [r3, #8]
2800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4177              		.loc 2 2800 28 view .LVU1156
 4178 001e 0D40     		ands	r5, r1
2800:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4179              		.loc 2 2800 7 view .LVU1157
 4180 0020 012D     		cmp	r5, #1
 4181 0022 1BD1     		bne	.L344
2803:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOSMP | ADC_FLAG_RDY));
 4182              		.loc 2 2803 7 is_stmt 1 view .LVU1158
 4183              	.LVL255:
 4184              	.LBB320:
 4185              	.LBI320:
4185:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h **** {
 4186              		.loc 1 4185 22 view .LVU1159
 4187              	.LBB321:
4190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 4188              		.loc 1 4190 3 view .LVU1160
 4189 0024 9968     		ldr	r1, [r3, #8]
 4190 0026 1148     		ldr	r0, .L348
 4191 0028 0140     		ands	r1, r0
 4192 002a 0A43     		orrs	r2, r1
 4193 002c 9A60     		str	r2, [r3, #8]
 4194              	.LVL256:
4190:Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
ARM GAS  /tmp/ccjg7X18.s 			page 230


 4195              		.loc 1 4190 3 is_stmt 0 view .LVU1161
 4196              	.LBE321:
 4197              	.LBE320:
2804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 4198              		.loc 2 2804 7 is_stmt 1 view .LVU1162
 4199 002e 0322     		movs	r2, #3
 4200 0030 1A60     		str	r2, [r3]
2819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 4201              		.loc 2 2819 5 view .LVU1163
2819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 4202              		.loc 2 2819 17 is_stmt 0 view .LVU1164
 4203 0032 FFF7FEFF 		bl	HAL_GetTick
 4204              	.LVL257:
 4205 0036 0600     		movs	r6, r0
 4206              	.LVL258:
2821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4207              		.loc 2 2821 5 is_stmt 1 view .LVU1165
 4208              	.L345:
2821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4209              		.loc 2 2821 10 view .LVU1166
2821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4210              		.loc 2 2821 16 is_stmt 0 view .LVU1167
 4211 0038 2368     		ldr	r3, [r4]
2821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4212              		.loc 2 2821 26 view .LVU1168
 4213 003a 9B68     		ldr	r3, [r3, #8]
2821:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4214              		.loc 2 2821 10 view .LVU1169
 4215 003c 2B42     		tst	r3, r5
 4216 003e E7D0     		beq	.L343
2823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4217              		.loc 2 2823 7 is_stmt 1 view .LVU1170
2823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4218              		.loc 2 2823 11 is_stmt 0 view .LVU1171
 4219 0040 FFF7FEFF 		bl	HAL_GetTick
 4220              	.LVL259:
2823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4221              		.loc 2 2823 25 view .LVU1172
 4222 0044 801B     		subs	r0, r0, r6
2823:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4223              		.loc 2 2823 9 view .LVU1173
 4224 0046 0228     		cmp	r0, #2
 4225 0048 F6D9     		bls	.L345
2826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 4226              		.loc 2 2826 9 is_stmt 1 view .LVU1174
 4227 004a 1023     		movs	r3, #16
 4228 004c A26D     		ldr	r2, [r4, #88]
2831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 4229              		.loc 2 2831 16 is_stmt 0 view .LVU1175
 4230 004e 0120     		movs	r0, #1
2826:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 4231              		.loc 2 2826 9 view .LVU1176
 4232 0050 1343     		orrs	r3, r2
 4233 0052 A365     		str	r3, [r4, #88]
2829:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****         
 4234              		.loc 2 2829 9 is_stmt 1 view .LVU1177
 4235 0054 E36D     		ldr	r3, [r4, #92]
ARM GAS  /tmp/ccjg7X18.s 			page 231


 4236 0056 1D43     		orrs	r5, r3
 4237 0058 E565     		str	r5, [r4, #92]
2831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 4238              		.loc 2 2831 9 view .LVU1178
2831:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 4239              		.loc 2 2831 16 is_stmt 0 view .LVU1179
 4240 005a DAE7     		b	.L342
 4241              	.LVL260:
 4242              	.L344:
2809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 4243              		.loc 2 2809 7 is_stmt 1 view .LVU1180
 4244 005c 1023     		movs	r3, #16
 4245 005e A26D     		ldr	r2, [r4, #88]
 4246 0060 1343     		orrs	r3, r2
 4247 0062 A365     		str	r3, [r4, #88]
2812:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 4248              		.loc 2 2812 7 view .LVU1181
 4249 0064 E36D     		ldr	r3, [r4, #92]
 4250 0066 0343     		orrs	r3, r0
 4251 0068 E365     		str	r3, [r4, #92]
2814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 4252              		.loc 2 2814 7 view .LVU1182
2814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 4253              		.loc 2 2814 14 is_stmt 0 view .LVU1183
 4254 006a D2E7     		b	.L342
 4255              	.L349:
 4256              		.align	2
 4257              	.L348:
 4258 006c E8FFFF7F 		.word	2147483624
 4259              		.cfi_endproc
 4260              	.LFE325:
 4262              		.section	.text.HAL_ADC_DeInit,"ax",%progbits
 4263              		.align	1
 4264              		.global	HAL_ADC_DeInit
 4265              		.syntax unified
 4266              		.code	16
 4267              		.thumb_func
 4268              		.fpu softvfp
 4270              	HAL_ADC_DeInit:
 4271              	.LVL261:
 4272              	.LFB302:
 769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4273              		.loc 2 769 1 is_stmt 1 view -0
 4274              		.cfi_startproc
 4275              		@ args = 0, pretend = 0, frame = 0
 4276              		@ frame_needed = 0, uses_anonymous_args = 0
 770:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4277              		.loc 2 770 3 view .LVU1185
 773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4278              		.loc 2 773 3 view .LVU1186
 769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4279              		.loc 2 769 1 is_stmt 0 view .LVU1187
 4280 0000 70B5     		push	{r4, r5, r6, lr}
 4281              	.LCFI18:
 4282              		.cfi_def_cfa_offset 16
 4283              		.cfi_offset 4, -16
 4284              		.cfi_offset 5, -12
ARM GAS  /tmp/ccjg7X18.s 			page 232


 4285              		.cfi_offset 6, -8
 4286              		.cfi_offset 14, -4
 769:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4287              		.loc 2 769 1 view .LVU1188
 4288 0002 0400     		movs	r4, r0
 775:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 4289              		.loc 2 775 12 view .LVU1189
 4290 0004 0125     		movs	r5, #1
 773:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4291              		.loc 2 773 5 view .LVU1190
 4292 0006 0028     		cmp	r0, #0
 4293 0008 35D0     		beq	.L351
 779:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4294              		.loc 2 779 3 is_stmt 1 view .LVU1191
 782:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4295              		.loc 2 782 3 view .LVU1192
 4296 000a 0223     		movs	r3, #2
 4297 000c 826D     		ldr	r2, [r0, #88]
 4298 000e 1343     		orrs	r3, r2
 4299 0010 8365     		str	r3, [r0, #88]
 785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4300              		.loc 2 785 3 view .LVU1193
 785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4301              		.loc 2 785 20 is_stmt 0 view .LVU1194
 4302 0012 FFF7FEFF 		bl	ADC_ConversionStop
 4303              	.LVL262:
 785:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4304              		.loc 2 785 20 view .LVU1195
 4305 0016 051E     		subs	r5, r0, #0
 4306              	.LVL263:
 788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4307              		.loc 2 788 3 is_stmt 1 view .LVU1196
 788:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4308              		.loc 2 788 6 is_stmt 0 view .LVU1197
 4309 0018 06D1     		bne	.L352
 791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 4310              		.loc 2 791 5 is_stmt 1 view .LVU1198
 791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 4311              		.loc 2 791 22 is_stmt 0 view .LVU1199
 4312 001a 2000     		movs	r0, r4
 4313              	.LVL264:
 791:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 4314              		.loc 2 791 22 view .LVU1200
 4315 001c FFF7FEFF 		bl	ADC_Disable
 4316              	.LVL265:
 4317 0020 051E     		subs	r5, r0, #0
 4318              	.LVL266:
 794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4319              		.loc 2 794 5 is_stmt 1 view .LVU1201
 794:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4320              		.loc 2 794 8 is_stmt 0 view .LVU1202
 4321 0022 01D1     		bne	.L352
 797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 4322              		.loc 2 797 7 is_stmt 1 view .LVU1203
 797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 4323              		.loc 2 797 19 is_stmt 0 view .LVU1204
 4324 0024 0123     		movs	r3, #1
ARM GAS  /tmp/ccjg7X18.s 			page 233


 4325 0026 A365     		str	r3, [r4, #88]
 4326              	.LVL267:
 4327              	.L352:
 809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_IT_AWD1  | ADC_IT_OVR  |
 4328              		.loc 2 809 3 is_stmt 1 view .LVU1205
 4329 0028 2368     		ldr	r3, [r4]
 4330 002a 1449     		ldr	r1, .L354
 4331 002c 5A68     		ldr	r2, [r3, #4]
 842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4332              		.loc 2 842 26 is_stmt 0 view .LVU1206
 4333 002e 0026     		movs	r6, #0
 809:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_IT_AWD1  | ADC_IT_OVR  |
 4334              		.loc 2 809 3 view .LVU1207
 4335 0030 0A40     		ands	r2, r1
 4336 0032 5A60     		str	r2, [r3, #4]
 815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_FLAG_AWD1  | ADC_FLAG_OVR  |
 4337              		.loc 2 815 3 is_stmt 1 view .LVU1208
 4338 0034 124A     		ldr	r2, .L354+4
 825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                              ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT   | ADC_CFGR1_OV
 4339              		.loc 2 825 25 is_stmt 0 view .LVU1209
 4340 0036 1349     		ldr	r1, .L354+8
 815:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                               ADC_FLAG_AWD1  | ADC_FLAG_OVR  |
 4341              		.loc 2 815 3 view .LVU1210
 4342 0038 1A60     		str	r2, [r3]
 825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                              ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT   | ADC_CFGR1_OV
 4343              		.loc 2 825 3 is_stmt 1 view .LVU1211
 825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                              ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT   | ADC_CFGR1_OV
 4344              		.loc 2 825 25 is_stmt 0 view .LVU1212
 4345 003a DA68     		ldr	r2, [r3, #12]
 869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 4346              		.loc 2 869 3 view .LVU1213
 4347 003c 2000     		movs	r0, r4
 825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                              ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT   | ADC_CFGR1_OV
 4348              		.loc 2 825 25 view .LVU1214
 4349 003e 0A40     		ands	r2, r1
 836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4350              		.loc 2 836 24 view .LVU1215
 4351 0040 0721     		movs	r1, #7
 825:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                              ADC_CFGR1_AUTOFF  | ADC_CFGR1_WAIT   | ADC_CFGR1_CONT   | ADC_CFGR1_OV
 4352              		.loc 2 825 25 view .LVU1216
 4353 0042 DA60     		str	r2, [r3, #12]
 833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4354              		.loc 2 833 3 is_stmt 1 view .LVU1217
 833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4355              		.loc 2 833 25 is_stmt 0 view .LVU1218
 4356 0044 1A69     		ldr	r2, [r3, #16]
 882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4357              		.loc 2 882 3 view .LVU1219
 4358 0046 5434     		adds	r4, r4, #84
 4359              	.LVL268:
 833:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4360              		.loc 2 833 25 view .LVU1220
 4361 0048 9200     		lsls	r2, r2, #2
 4362 004a 9208     		lsrs	r2, r2, #2
 4363 004c 1A61     		str	r2, [r3, #16]
 836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4364              		.loc 2 836 3 is_stmt 1 view .LVU1221
ARM GAS  /tmp/ccjg7X18.s 			page 234


 836:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4365              		.loc 2 836 24 is_stmt 0 view .LVU1222
 4366 004e 5A69     		ldr	r2, [r3, #20]
 4367 0050 8A43     		bics	r2, r1
 4368 0052 5A61     		str	r2, [r3, #20]
 839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4369              		.loc 2 839 3 is_stmt 1 view .LVU1223
 839:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4370              		.loc 2 839 23 is_stmt 0 view .LVU1224
 4371 0054 1A6A     		ldr	r2, [r3, #32]
 4372 0056 0C49     		ldr	r1, .L354+12
 4373 0058 0A40     		ands	r2, r1
 4374 005a 1A62     		str	r2, [r3, #32]
 842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4375              		.loc 2 842 3 is_stmt 1 view .LVU1225
 842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4376              		.loc 2 842 26 is_stmt 0 view .LVU1226
 4377 005c 9A6A     		ldr	r2, [r3, #40]
 848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4378              		.loc 2 848 20 view .LVU1227
 4379 005e 0B4A     		ldr	r2, .L354+16
 842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4380              		.loc 2 842 26 view .LVU1228
 4381 0060 9E62     		str	r6, [r3, #40]
 848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4382              		.loc 2 848 3 is_stmt 1 view .LVU1229
 848:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4383              		.loc 2 848 20 is_stmt 0 view .LVU1230
 4384 0062 1368     		ldr	r3, [r2]
 4385 0064 0A49     		ldr	r1, .L354+20
 4386 0066 0B40     		ands	r3, r1
 4387 0068 1360     		str	r3, [r2]
 869:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** #endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
 4388              		.loc 2 869 3 is_stmt 1 view .LVU1231
 4389 006a FFF7FEFF 		bl	HAL_ADC_MspDeInit
 4390              	.LVL269:
 873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4391              		.loc 2 873 3 view .LVU1232
 876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4392              		.loc 2 876 3 is_stmt 0 view .LVU1233
 4393 006e A660     		str	r6, [r4, #8]
 873:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4394              		.loc 2 873 39 view .LVU1234
 4395 0070 E660     		str	r6, [r4, #12]
 876:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4396              		.loc 2 876 3 is_stmt 1 view .LVU1235
 879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4397              		.loc 2 879 3 view .LVU1236
 879:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4398              		.loc 2 879 15 is_stmt 0 view .LVU1237
 4399 0072 6660     		str	r6, [r4, #4]
 882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4400              		.loc 2 882 3 is_stmt 1 view .LVU1238
 882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4401              		.loc 2 882 3 view .LVU1239
 4402 0074 2670     		strb	r6, [r4]
 882:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
ARM GAS  /tmp/ccjg7X18.s 			page 235


 4403              		.loc 2 882 3 view .LVU1240
 885:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 4404              		.loc 2 885 3 view .LVU1241
 4405              	.LVL270:
 4406              	.L351:
 886:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4407              		.loc 2 886 1 is_stmt 0 view .LVU1242
 4408 0076 2800     		movs	r0, r5
 4409              		@ sp needed
 4410 0078 70BD     		pop	{r4, r5, r6, pc}
 4411              	.L355:
 4412 007a C046     		.align	2
 4413              	.L354:
 4414 007c 60FCFFFF 		.word	-928
 4415 0080 9F030000 		.word	927
 4416 0084 00023E83 		.word	-2093088256
 4417 0088 00F000F0 		.word	-268374016
 4418 008c 08270140 		.word	1073817352
 4419 0090 FFFF03FE 		.word	-33292289
 4420              		.cfi_endproc
 4421              	.LFE302:
 4423              		.section	.text.HAL_ADC_Stop,"ax",%progbits
 4424              		.align	1
 4425              		.global	HAL_ADC_Stop
 4426              		.syntax unified
 4427              		.code	16
 4428              		.thumb_func
 4429              		.fpu softvfp
 4431              	HAL_ADC_Stop:
 4432              	.LVL271:
 4433              	.LFB306:
1247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4434              		.loc 2 1247 1 is_stmt 1 view -0
 4435              		.cfi_startproc
 4436              		@ args = 0, pretend = 0, frame = 0
 4437              		@ frame_needed = 0, uses_anonymous_args = 0
1248:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4438              		.loc 2 1248 3 view .LVU1244
1251:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4439              		.loc 2 1251 3 view .LVU1245
1254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4440              		.loc 2 1254 3 view .LVU1246
1254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4441              		.loc 2 1254 3 view .LVU1247
1247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4442              		.loc 2 1247 1 is_stmt 0 view .LVU1248
 4443 0000 70B5     		push	{r4, r5, r6, lr}
 4444              	.LCFI19:
 4445              		.cfi_def_cfa_offset 16
 4446              		.cfi_offset 4, -16
 4447              		.cfi_offset 5, -12
 4448              		.cfi_offset 6, -8
 4449              		.cfi_offset 14, -4
1254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4450              		.loc 2 1254 3 view .LVU1249
 4451 0002 0600     		movs	r6, r0
 4452 0004 5436     		adds	r6, r6, #84
ARM GAS  /tmp/ccjg7X18.s 			page 236


 4453 0006 3378     		ldrb	r3, [r6]
1247:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4454              		.loc 2 1247 1 view .LVU1250
 4455 0008 0400     		movs	r4, r0
1254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4456              		.loc 2 1254 3 view .LVU1251
 4457 000a 0220     		movs	r0, #2
 4458              	.LVL272:
1254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4459              		.loc 2 1254 3 view .LVU1252
 4460 000c 012B     		cmp	r3, #1
 4461 000e 12D0     		beq	.L357
1254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4462              		.loc 2 1254 3 is_stmt 1 discriminator 2 view .LVU1253
 4463 0010 0125     		movs	r5, #1
1257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4464              		.loc 2 1257 20 is_stmt 0 discriminator 2 view .LVU1254
 4465 0012 2000     		movs	r0, r4
1254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4466              		.loc 2 1254 3 discriminator 2 view .LVU1255
 4467 0014 3570     		strb	r5, [r6]
1254:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4468              		.loc 2 1254 3 is_stmt 1 discriminator 2 view .LVU1256
1257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4469              		.loc 2 1257 3 discriminator 2 view .LVU1257
1257:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4470              		.loc 2 1257 20 is_stmt 0 discriminator 2 view .LVU1258
 4471 0016 FFF7FEFF 		bl	ADC_ConversionStop
 4472              	.LVL273:
1260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4473              		.loc 2 1260 3 is_stmt 1 discriminator 2 view .LVU1259
1260:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4474              		.loc 2 1260 6 is_stmt 0 discriminator 2 view .LVU1260
 4475 001a 0028     		cmp	r0, #0
 4476 001c 09D1     		bne	.L358
1263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 4477              		.loc 2 1263 5 is_stmt 1 view .LVU1261
1263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 4478              		.loc 2 1263 22 is_stmt 0 view .LVU1262
 4479 001e 2000     		movs	r0, r4
 4480              	.LVL274:
1263:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 4481              		.loc 2 1263 22 view .LVU1263
 4482 0020 FFF7FEFF 		bl	ADC_Disable
 4483              	.LVL275:
1266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4484              		.loc 2 1266 5 is_stmt 1 view .LVU1264
1266:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4485              		.loc 2 1266 8 is_stmt 0 view .LVU1265
 4486 0024 0028     		cmp	r0, #0
 4487 0026 04D1     		bne	.L358
1269:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
 4488              		.loc 2 1269 7 is_stmt 1 view .LVU1266
 4489 0028 A36D     		ldr	r3, [r4, #88]
 4490 002a 034A     		ldr	r2, .L360
 4491 002c 1340     		ands	r3, r2
 4492 002e 1D43     		orrs	r5, r3
ARM GAS  /tmp/ccjg7X18.s 			page 237


 4493 0030 A565     		str	r5, [r4, #88]
 4494              	.LVL276:
 4495              	.L358:
1276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4496              		.loc 2 1276 3 view .LVU1267
1276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4497              		.loc 2 1276 3 view .LVU1268
 4498 0032 0023     		movs	r3, #0
 4499 0034 3370     		strb	r3, [r6]
1276:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4500              		.loc 2 1276 3 view .LVU1269
1279:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 4501              		.loc 2 1279 3 view .LVU1270
 4502              	.LVL277:
 4503              	.L357:
1280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4504              		.loc 2 1280 1 is_stmt 0 view .LVU1271
 4505              		@ sp needed
 4506              	.LVL278:
 4507              	.LVL279:
1280:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4508              		.loc 2 1280 1 view .LVU1272
 4509 0036 70BD     		pop	{r4, r5, r6, pc}
 4510              	.L361:
 4511              		.align	2
 4512              	.L360:
 4513 0038 FEFEFFFF 		.word	-258
 4514              		.cfi_endproc
 4515              	.LFE306:
 4517              		.section	.text.HAL_ADC_Stop_IT,"ax",%progbits
 4518              		.align	1
 4519              		.global	HAL_ADC_Stop_IT
 4520              		.syntax unified
 4521              		.code	16
 4522              		.thumb_func
 4523              		.fpu softvfp
 4525              	HAL_ADC_Stop_IT:
 4526              	.LVL280:
 4527              	.LFB310:
1649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4528              		.loc 2 1649 1 is_stmt 1 view -0
 4529              		.cfi_startproc
 4530              		@ args = 0, pretend = 0, frame = 0
 4531              		@ frame_needed = 0, uses_anonymous_args = 0
1650:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4532              		.loc 2 1650 3 view .LVU1274
1653:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4533              		.loc 2 1653 3 view .LVU1275
1656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4534              		.loc 2 1656 3 view .LVU1276
1656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4535              		.loc 2 1656 3 view .LVU1277
1649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4536              		.loc 2 1649 1 is_stmt 0 view .LVU1278
 4537 0000 70B5     		push	{r4, r5, r6, lr}
 4538              	.LCFI20:
 4539              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccjg7X18.s 			page 238


 4540              		.cfi_offset 4, -16
 4541              		.cfi_offset 5, -12
 4542              		.cfi_offset 6, -8
 4543              		.cfi_offset 14, -4
1656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4544              		.loc 2 1656 3 view .LVU1279
 4545 0002 0600     		movs	r6, r0
 4546 0004 5436     		adds	r6, r6, #84
 4547 0006 3378     		ldrb	r3, [r6]
1649:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4548              		.loc 2 1649 1 view .LVU1280
 4549 0008 0400     		movs	r4, r0
1656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4550              		.loc 2 1656 3 view .LVU1281
 4551 000a 0220     		movs	r0, #2
 4552              	.LVL281:
1656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4553              		.loc 2 1656 3 view .LVU1282
 4554 000c 012B     		cmp	r3, #1
 4555 000e 17D0     		beq	.L363
1656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4556              		.loc 2 1656 3 is_stmt 1 discriminator 2 view .LVU1283
 4557 0010 0125     		movs	r5, #1
1659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4558              		.loc 2 1659 20 is_stmt 0 discriminator 2 view .LVU1284
 4559 0012 2000     		movs	r0, r4
1656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4560              		.loc 2 1656 3 discriminator 2 view .LVU1285
 4561 0014 3570     		strb	r5, [r6]
1656:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4562              		.loc 2 1656 3 is_stmt 1 discriminator 2 view .LVU1286
1659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4563              		.loc 2 1659 3 discriminator 2 view .LVU1287
1659:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4564              		.loc 2 1659 20 is_stmt 0 discriminator 2 view .LVU1288
 4565 0016 FFF7FEFF 		bl	ADC_ConversionStop
 4566              	.LVL282:
1662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4567              		.loc 2 1662 3 is_stmt 1 discriminator 2 view .LVU1289
1662:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4568              		.loc 2 1662 6 is_stmt 0 discriminator 2 view .LVU1290
 4569 001a 0028     		cmp	r0, #0
 4570 001c 0ED1     		bne	.L364
1666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 4571              		.loc 2 1666 5 is_stmt 1 view .LVU1291
 4572 001e 1C21     		movs	r1, #28
 4573 0020 2268     		ldr	r2, [r4]
1669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 4574              		.loc 2 1669 22 is_stmt 0 view .LVU1292
 4575 0022 2000     		movs	r0, r4
 4576              	.LVL283:
1666:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 4577              		.loc 2 1666 5 view .LVU1293
 4578 0024 5368     		ldr	r3, [r2, #4]
 4579 0026 8B43     		bics	r3, r1
 4580 0028 5360     		str	r3, [r2, #4]
1669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
ARM GAS  /tmp/ccjg7X18.s 			page 239


 4581              		.loc 2 1669 5 is_stmt 1 view .LVU1294
1669:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 4582              		.loc 2 1669 22 is_stmt 0 view .LVU1295
 4583 002a FFF7FEFF 		bl	ADC_Disable
 4584              	.LVL284:
1672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4585              		.loc 2 1672 5 is_stmt 1 view .LVU1296
1672:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4586              		.loc 2 1672 8 is_stmt 0 view .LVU1297
 4587 002e 0028     		cmp	r0, #0
 4588 0030 04D1     		bne	.L364
1675:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
 4589              		.loc 2 1675 7 is_stmt 1 view .LVU1298
 4590 0032 A36D     		ldr	r3, [r4, #88]
 4591 0034 034A     		ldr	r2, .L366
 4592 0036 1340     		ands	r3, r2
 4593 0038 1D43     		orrs	r5, r3
 4594 003a A565     		str	r5, [r4, #88]
 4595              	.LVL285:
 4596              	.L364:
1682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4597              		.loc 2 1682 3 view .LVU1299
1682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4598              		.loc 2 1682 3 view .LVU1300
 4599 003c 0023     		movs	r3, #0
 4600 003e 3370     		strb	r3, [r6]
1682:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4601              		.loc 2 1682 3 view .LVU1301
1685:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 4602              		.loc 2 1685 3 view .LVU1302
 4603              	.LVL286:
 4604              	.L363:
1686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4605              		.loc 2 1686 1 is_stmt 0 view .LVU1303
 4606              		@ sp needed
 4607              	.LVL287:
 4608              	.LVL288:
1686:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4609              		.loc 2 1686 1 view .LVU1304
 4610 0040 70BD     		pop	{r4, r5, r6, pc}
 4611              	.L367:
 4612 0042 C046     		.align	2
 4613              	.L366:
 4614 0044 FEFEFFFF 		.word	-258
 4615              		.cfi_endproc
 4616              	.LFE310:
 4618              		.section	.text.HAL_ADC_Stop_DMA,"ax",%progbits
 4619              		.align	1
 4620              		.global	HAL_ADC_Stop_DMA
 4621              		.syntax unified
 4622              		.code	16
 4623              		.thumb_func
 4624              		.fpu softvfp
 4626              	HAL_ADC_Stop_DMA:
 4627              	.LVL289:
 4628              	.LFB312:
1797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
ARM GAS  /tmp/ccjg7X18.s 			page 240


 4629              		.loc 2 1797 1 is_stmt 1 view -0
 4630              		.cfi_startproc
 4631              		@ args = 0, pretend = 0, frame = 0
 4632              		@ frame_needed = 0, uses_anonymous_args = 0
1798:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4633              		.loc 2 1798 3 view .LVU1306
1801:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4634              		.loc 2 1801 3 view .LVU1307
1804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4635              		.loc 2 1804 3 view .LVU1308
1804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4636              		.loc 2 1804 3 view .LVU1309
1797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4637              		.loc 2 1797 1 is_stmt 0 view .LVU1310
 4638 0000 70B5     		push	{r4, r5, r6, lr}
 4639              	.LCFI21:
 4640              		.cfi_def_cfa_offset 16
 4641              		.cfi_offset 4, -16
 4642              		.cfi_offset 5, -12
 4643              		.cfi_offset 6, -8
 4644              		.cfi_offset 14, -4
1804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4645              		.loc 2 1804 3 view .LVU1311
 4646 0002 0600     		movs	r6, r0
 4647 0004 5436     		adds	r6, r6, #84
 4648 0006 3378     		ldrb	r3, [r6]
1797:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   HAL_StatusTypeDef tmp_hal_status;
 4649              		.loc 2 1797 1 view .LVU1312
 4650 0008 0500     		movs	r5, r0
1804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4651              		.loc 2 1804 3 view .LVU1313
 4652 000a 0224     		movs	r4, #2
 4653 000c 012B     		cmp	r3, #1
 4654 000e 25D0     		beq	.L369
1804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4655              		.loc 2 1804 3 is_stmt 1 discriminator 2 view .LVU1314
 4656 0010 0123     		movs	r3, #1
 4657 0012 3370     		strb	r3, [r6]
1804:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4658              		.loc 2 1804 3 discriminator 2 view .LVU1315
1807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4659              		.loc 2 1807 3 discriminator 2 view .LVU1316
1807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4660              		.loc 2 1807 20 is_stmt 0 discriminator 2 view .LVU1317
 4661 0014 FFF7FEFF 		bl	ADC_ConversionStop
 4662              	.LVL290:
1807:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4663              		.loc 2 1807 20 discriminator 2 view .LVU1318
 4664 0018 041E     		subs	r4, r0, #0
 4665              	.LVL291:
1810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4666              		.loc 2 1810 3 is_stmt 1 discriminator 2 view .LVU1319
1810:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   {
 4667              		.loc 2 1810 6 is_stmt 0 discriminator 2 view .LVU1320
 4668 001a 1DD1     		bne	.L370
1814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4669              		.loc 2 1814 5 is_stmt 1 view .LVU1321
ARM GAS  /tmp/ccjg7X18.s 			page 241


1814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4670              		.loc 2 1814 12 is_stmt 0 view .LVU1322
 4671 001c 286D     		ldr	r0, [r5, #80]
 4672              	.LVL292:
1814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4673              		.loc 2 1814 24 view .LVU1323
 4674 001e 831D     		adds	r3, r0, #6
 4675 0020 DB7F     		ldrb	r3, [r3, #31]
1814:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4676              		.loc 2 1814 7 view .LVU1324
 4677 0022 022B     		cmp	r3, #2
 4678 0024 07D1     		bne	.L371
1816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 4679              		.loc 2 1816 7 is_stmt 1 view .LVU1325
1816:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       
 4680              		.loc 2 1816 24 is_stmt 0 view .LVU1326
 4681 0026 FFF7FEFF 		bl	HAL_DMA_Abort
 4682              	.LVL293:
 4683 002a 041E     		subs	r4, r0, #0
 4684              	.LVL294:
1819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4685              		.loc 2 1819 7 is_stmt 1 view .LVU1327
1819:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       {
 4686              		.loc 2 1819 10 is_stmt 0 view .LVU1328
 4687 002c 03D0     		beq	.L371
1822:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****       }
 4688              		.loc 2 1822 9 is_stmt 1 view .LVU1329
 4689 002e 4023     		movs	r3, #64
 4690 0030 AA6D     		ldr	r2, [r5, #88]
 4691 0032 1343     		orrs	r3, r2
 4692 0034 AB65     		str	r3, [r5, #88]
 4693              	.LVL295:
 4694              	.L371:
1827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 4695              		.loc 2 1827 5 view .LVU1330
 4696 0036 1021     		movs	r1, #16
 4697 0038 2A68     		ldr	r2, [r5]
1834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 4698              		.loc 2 1834 24 is_stmt 0 view .LVU1331
 4699 003a 2800     		movs	r0, r5
1827:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     
 4700              		.loc 2 1827 5 view .LVU1332
 4701 003c 5368     		ldr	r3, [r2, #4]
 4702 003e 8B43     		bics	r3, r1
 4703 0040 5360     		str	r3, [r2, #4]
1832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4704              		.loc 2 1832 5 is_stmt 1 view .LVU1333
1832:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4705              		.loc 2 1832 8 is_stmt 0 view .LVU1334
 4706 0042 002C     		cmp	r4, #0
 4707 0044 0CD1     		bne	.L372
 4708              	.LVL296:
1834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 4709              		.loc 2 1834 7 is_stmt 1 view .LVU1335
1834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 4710              		.loc 2 1834 24 is_stmt 0 view .LVU1336
 4711 0046 FFF7FEFF 		bl	ADC_Disable
ARM GAS  /tmp/ccjg7X18.s 			page 242


 4712              	.LVL297:
1834:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 4713              		.loc 2 1834 24 view .LVU1337
 4714 004a 041E     		subs	r4, r0, #0
 4715              	.LVL298:
1842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4716              		.loc 2 1842 5 is_stmt 1 view .LVU1338
1842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4717              		.loc 2 1842 8 is_stmt 0 view .LVU1339
 4718 004c 0BD0     		beq	.L373
 4719              	.LVL299:
 4720              	.L374:
1851:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   }
 4721              		.loc 2 1851 5 is_stmt 1 view .LVU1340
 4722 004e 0121     		movs	r1, #1
 4723 0050 2A68     		ldr	r2, [r5]
 4724 0052 D368     		ldr	r3, [r2, #12]
 4725 0054 8B43     		bics	r3, r1
 4726 0056 D360     		str	r3, [r2, #12]
 4727              	.L370:
 4728              	.LVL300:
1855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4729              		.loc 2 1855 3 view .LVU1341
1855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4730              		.loc 2 1855 3 view .LVU1342
 4731 0058 0023     		movs	r3, #0
 4732 005a 3370     		strb	r3, [r6]
1855:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****   
 4733              		.loc 2 1855 3 view .LVU1343
1858:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** }
 4734              		.loc 2 1858 3 view .LVU1344
 4735              	.LVL301:
 4736              	.L369:
1859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4737              		.loc 2 1859 1 is_stmt 0 view .LVU1345
 4738 005c 2000     		movs	r0, r4
 4739              		@ sp needed
 4740              	.LVL302:
 4741              	.LVL303:
1859:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c **** 
 4742              		.loc 2 1859 1 view .LVU1346
 4743 005e 70BD     		pop	{r4, r5, r6, pc}
 4744              	.LVL304:
 4745              	.L372:
1838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 4746              		.loc 2 1838 7 is_stmt 1 view .LVU1347
1838:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     }
 4747              		.loc 2 1838 13 is_stmt 0 view .LVU1348
 4748 0060 FFF7FEFF 		bl	ADC_Disable
 4749              	.LVL305:
1842:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****     {
 4750              		.loc 2 1842 5 is_stmt 1 view .LVU1349
 4751 0064 F3E7     		b	.L374
 4752              	.LVL306:
 4753              	.L373:
1845:Drivers/STM32G0xx_HAL_Driver/Src/stm32g0xx_hal_adc.c ****                         HAL_ADC_STATE_REG_BUSY,
 4754              		.loc 2 1845 7 view .LVU1350
ARM GAS  /tmp/ccjg7X18.s 			page 243


 4755 0066 AB6D     		ldr	r3, [r5, #88]
 4756 0068 024A     		ldr	r2, .L379
 4757 006a 1A40     		ands	r2, r3
 4758 006c 0123     		movs	r3, #1
 4759 006e 1343     		orrs	r3, r2
 4760 0070 AB65     		str	r3, [r5, #88]
 4761 0072 ECE7     		b	.L374
 4762              	.L380:
 4763              		.align	2
 4764              	.L379:
 4765 0074 FEFEFFFF 		.word	-258
 4766              		.cfi_endproc
 4767              	.LFE312:
 4769              		.text
 4770              	.Letext0:
 4771              		.file 3 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 4772              		.file 4 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g071xx.h"
 4773              		.file 5 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 4774              		.file 6 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g0xx.h"
 4775              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 4776              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 4777              		.file 9 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_adc.h"
 4778              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash.h"
 4779              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 4780              		.file 12 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_adc_ex.h"
ARM GAS  /tmp/ccjg7X18.s 			page 244


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32g0xx_hal_adc.c
     /tmp/ccjg7X18.s:16     .text.LL_ADC_SetAnalogWDMonitChannels:0000000000000000 $t
     /tmp/ccjg7X18.s:23     .text.LL_ADC_SetAnalogWDMonitChannels:0000000000000000 LL_ADC_SetAnalogWDMonitChannels
     /tmp/ccjg7X18.s:80     .text.LL_ADC_SetAnalogWDMonitChannels:0000000000000028 $d
     /tmp/ccjg7X18.s:86     .text.LL_ADC_REG_IsConversionOngoing:0000000000000000 $t
     /tmp/ccjg7X18.s:92     .text.LL_ADC_REG_IsConversionOngoing:0000000000000000 LL_ADC_REG_IsConversionOngoing
     /tmp/ccjg7X18.s:115    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccjg7X18.s:122    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccjg7X18.s:140    .text.HAL_ADC_Init:0000000000000000 $t
     /tmp/ccjg7X18.s:147    .text.HAL_ADC_Init:0000000000000000 HAL_ADC_Init
     /tmp/ccjg7X18.s:762    .text.HAL_ADC_Init:0000000000000234 $d
     /tmp/ccjg7X18.s:775    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccjg7X18.s:782    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccjg7X18.s:794    .text.HAL_ADC_PollForConversion:0000000000000000 $t
     /tmp/ccjg7X18.s:801    .text.HAL_ADC_PollForConversion:0000000000000000 HAL_ADC_PollForConversion
     /tmp/ccjg7X18.s:1000   .text.HAL_ADC_PollForConversion:00000000000000b8 $d
     /tmp/ccjg7X18.s:1005   .text.HAL_ADC_PollForEvent:0000000000000000 $t
     /tmp/ccjg7X18.s:1012   .text.HAL_ADC_PollForEvent:0000000000000000 HAL_ADC_PollForEvent
     /tmp/ccjg7X18.s:1176   .text.HAL_ADC_GetValue:0000000000000000 $t
     /tmp/ccjg7X18.s:1183   .text.HAL_ADC_GetValue:0000000000000000 HAL_ADC_GetValue
     /tmp/ccjg7X18.s:1206   .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
     /tmp/ccjg7X18.s:1213   .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
     /tmp/ccjg7X18.s:1225   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 $t
     /tmp/ccjg7X18.s:1232   .text.HAL_ADC_ConvHalfCpltCallback:0000000000000000 HAL_ADC_ConvHalfCpltCallback
     /tmp/ccjg7X18.s:1244   .text.ADC_DMAHalfConvCplt:0000000000000000 $t
     /tmp/ccjg7X18.s:1250   .text.ADC_DMAHalfConvCplt:0000000000000000 ADC_DMAHalfConvCplt
     /tmp/ccjg7X18.s:1278   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 $t
     /tmp/ccjg7X18.s:1285   .text.HAL_ADC_LevelOutOfWindowCallback:0000000000000000 HAL_ADC_LevelOutOfWindowCallback
     /tmp/ccjg7X18.s:1297   .text.HAL_ADC_ErrorCallback:0000000000000000 $t
     /tmp/ccjg7X18.s:1304   .text.HAL_ADC_ErrorCallback:0000000000000000 HAL_ADC_ErrorCallback
     /tmp/ccjg7X18.s:1316   .text.ADC_DMAError:0000000000000000 $t
     /tmp/ccjg7X18.s:1322   .text.ADC_DMAError:0000000000000000 ADC_DMAError
     /tmp/ccjg7X18.s:1363   .text.ADC_DMAConvCplt:0000000000000000 $t
     /tmp/ccjg7X18.s:1369   .text.ADC_DMAConvCplt:0000000000000000 ADC_DMAConvCplt
     /tmp/ccjg7X18.s:1508   .text.ADC_DMAConvCplt:000000000000007c $d
     /tmp/ccjg7X18.s:1513   .text.HAL_ADC_IRQHandler:0000000000000000 $t
     /tmp/ccjg7X18.s:1520   .text.HAL_ADC_IRQHandler:0000000000000000 HAL_ADC_IRQHandler
     /tmp/ccjg7X18.s:1851   .text.HAL_ADC_IRQHandler:0000000000000154 $d
     /tmp/ccjg7X18.s:1856   .text.HAL_ADC_ConfigChannel:0000000000000000 $t
     /tmp/ccjg7X18.s:1863   .text.HAL_ADC_ConfigChannel:0000000000000000 HAL_ADC_ConfigChannel
     /tmp/ccjg7X18.s:2494   .text.HAL_ADC_ConfigChannel:0000000000000224 $d
     /tmp/ccjg7X18.s:2506   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 $t
     /tmp/ccjg7X18.s:2513   .text.HAL_ADC_AnalogWDGConfig:0000000000000000 HAL_ADC_AnalogWDGConfig
     /tmp/ccjg7X18.s:3191   .text.HAL_ADC_AnalogWDGConfig:00000000000002ac $d
     /tmp/ccjg7X18.s:3206   .text.HAL_ADC_GetState:0000000000000000 $t
     /tmp/ccjg7X18.s:3213   .text.HAL_ADC_GetState:0000000000000000 HAL_ADC_GetState
     /tmp/ccjg7X18.s:3233   .text.HAL_ADC_GetError:0000000000000000 $t
     /tmp/ccjg7X18.s:3240   .text.HAL_ADC_GetError:0000000000000000 HAL_ADC_GetError
     /tmp/ccjg7X18.s:3260   .text.ADC_ConversionStop:0000000000000000 $t
     /tmp/ccjg7X18.s:3267   .text.ADC_ConversionStop:0000000000000000 ADC_ConversionStop
     /tmp/ccjg7X18.s:3394   .text.ADC_ConversionStop:0000000000000054 $d
     /tmp/ccjg7X18.s:3401   .text.ADC_Enable:0000000000000000 $t
     /tmp/ccjg7X18.s:3408   .text.ADC_Enable:0000000000000000 ADC_Enable
     /tmp/ccjg7X18.s:3593   .text.ADC_Enable:0000000000000074 $d
     /tmp/ccjg7X18.s:3601   .text.HAL_ADC_Start:0000000000000000 $t
     /tmp/ccjg7X18.s:3608   .text.HAL_ADC_Start:0000000000000000 HAL_ADC_Start
ARM GAS  /tmp/ccjg7X18.s 			page 245


     /tmp/ccjg7X18.s:3722   .text.HAL_ADC_Start:0000000000000054 $d
     /tmp/ccjg7X18.s:3728   .text.HAL_ADC_Start_IT:0000000000000000 $t
     /tmp/ccjg7X18.s:3735   .text.HAL_ADC_Start_IT:0000000000000000 HAL_ADC_Start_IT
     /tmp/ccjg7X18.s:3874   .text.HAL_ADC_Start_IT:0000000000000078 $d
     /tmp/ccjg7X18.s:3880   .text.HAL_ADC_Start_DMA:0000000000000000 $t
     /tmp/ccjg7X18.s:3887   .text.HAL_ADC_Start_DMA:0000000000000000 HAL_ADC_Start_DMA
     /tmp/ccjg7X18.s:4074   .text.HAL_ADC_Start_DMA:000000000000009c $d
     /tmp/ccjg7X18.s:4083   .text.ADC_Disable:0000000000000000 $t
     /tmp/ccjg7X18.s:4090   .text.ADC_Disable:0000000000000000 ADC_Disable
     /tmp/ccjg7X18.s:4258   .text.ADC_Disable:000000000000006c $d
     /tmp/ccjg7X18.s:4263   .text.HAL_ADC_DeInit:0000000000000000 $t
     /tmp/ccjg7X18.s:4270   .text.HAL_ADC_DeInit:0000000000000000 HAL_ADC_DeInit
     /tmp/ccjg7X18.s:4414   .text.HAL_ADC_DeInit:000000000000007c $d
     /tmp/ccjg7X18.s:4424   .text.HAL_ADC_Stop:0000000000000000 $t
     /tmp/ccjg7X18.s:4431   .text.HAL_ADC_Stop:0000000000000000 HAL_ADC_Stop
     /tmp/ccjg7X18.s:4513   .text.HAL_ADC_Stop:0000000000000038 $d
     /tmp/ccjg7X18.s:4518   .text.HAL_ADC_Stop_IT:0000000000000000 $t
     /tmp/ccjg7X18.s:4525   .text.HAL_ADC_Stop_IT:0000000000000000 HAL_ADC_Stop_IT
     /tmp/ccjg7X18.s:4614   .text.HAL_ADC_Stop_IT:0000000000000044 $d
     /tmp/ccjg7X18.s:4619   .text.HAL_ADC_Stop_DMA:0000000000000000 $t
     /tmp/ccjg7X18.s:4626   .text.HAL_ADC_Stop_DMA:0000000000000000 HAL_ADC_Stop_DMA
     /tmp/ccjg7X18.s:4765   .text.HAL_ADC_Stop_DMA:0000000000000074 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
SystemCoreClock
HAL_GetTick
HAL_ADCEx_EndOfSamplingCallback
HAL_ADCEx_LevelOutOfWindow2Callback
HAL_ADCEx_LevelOutOfWindow3Callback
HAL_ADCEx_ChannelConfigReadyCallback
HAL_DMA_Start_IT
HAL_DMA_Abort
